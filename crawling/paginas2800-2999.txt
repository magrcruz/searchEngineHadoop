{"url":"Cerebro","titulo":"Cerebro","contenido":"El cerebro (del latin cerebrum, con su raiz indoeuropea ker, cabeza, en lo alto de la cabeza y brum, \u2018llevar\u2019; teniendo el significado arcaico de \u00ablo que lleva la cabeza\u00bb) es un organo que centraliza la actividad del sistema nervioso y existe en la mayor parte de los animales.\u200b  En animales, como los invertebrados bilaterales, se entiende como cerebro a una serie de ganglios alrededor del esofago en la parte mas anterior del cuerpo, (protostomos) comprendidos por el protocerebro, deutocerebro y tritocerebro en artropodos, ganglios cerebral, pleural y pedial en moluscos gasteropodos y masas supraesofagica y subesofagica en moluscos cefalopodos. Tambien poseen cerebros muy arcaicos o simples bilaterales como platelmintos, nematodos o hemicordados. Sin embargo, hay bilaterales que muestran muy pocos rasgos distintivos de cefalizacion como los bivalvos o briozoos. En algunas especies de invertebrados no existe un cerebro por carecer completamente de sistema nervioso, como los poriferos, los placozoos, los mesozoos, y otros, aunque poseen un sistema nervioso, carecen de rasgos definidos de centralizacion o cefalizacion al mostrar simetrias no bilaterales como los cnidarios, ctenoforos o equinodermos.\u200b En los vertebrados el cerebro se encuentra situado en la cabeza; en relacion estrecha con los organos de los sentidos como la vision, la audicion, el equilibrio, el gusto y el olfato.\u200b El cerebro de los mamiferos es el organo mas complejo del cuerpo. El telencefalo adquiere su maximo desarrollo y esta formado por los hemisferios cerebrales. El cerebro humano contiene en la corteza cerebral, un numero estimado de 20 000 000 000 (20 mil millones, \u00a02\u00a0\u00d7\u00a01010) de neuronas.\u200b\u200b\u200b  La funcion del cerebro como organo, desde un punto de vista evolutivo y biologico, es ejercer un control centralizado sobre los demas organos del cuerpo. El cerebro actua sobre el resto del organismo por la generacion de patrones de actividad muscular o por la produccion y secrecion de sustancias quimicas llamadas hormonas. Este control centralizado permite respuestas rapidas y coordinadas ante los cambios que se presenten en el medio ambiente. Algunos tipos basicos de respuesta tales como los reflejos pueden estar mediados por la medula espinal o los ganglios perifericos, pero el control de la conducta que se basa en la informacion sensorial, necesita la capacidad de integrar la informacion de un cerebro centralizado.  Desde una perspectiva filosofica idealista, lo que hace al cerebro especial en comparacion con los otros organos, es que forma la estructura fisica en donde se presenta el correlato material de las distintas actividades de la mente. Sin embargo, multiples corrientes filosoficas contemporaneas descartan la idea de que exista una entidad no-material que ejerza causalidad sobre lo fisico (si bien por otro lado esta demostrado que la psicoterapia y evidentemente el ambiente influyen en nuestra conducta, cognicion, etc. parece que no tiene ninguna posibilidad de ser demostrada la existencia de dicho tipo de entidad).  Durante las primeras etapas de la psicologia, se creyo que la mente debia separarse del cerebro. Sin embargo, posteriormente, los cientificos realizaron experimentos que llegaron a determinar que la mente era un componente en el funcionamiento cerebral, por la expresion de ciertos comportamientos basados en su medio ambiente externo y el desarrollo de su organismo.\u200b Los mecanismos por los cuales la actividad cerebral da lugar a la conciencia y al pensamiento son muy dificiles de comprender: a pesar de los multiples y rapidos avances cientificos, mucho acerca de como funciona el cerebro sigue siendo un misterio. En la actualidad, las operaciones de las celulas cerebrales individuales son comprendidas con mas detalle, pero la forma en que cooperan entre los conjuntos de millones ha sido muy dificil de descifrar. Asimismo, los enfoques mas prometedores tratan el cerebro como una \u00abcomputadora biologica\u00bb, totalmente diferente en el mecanismo de las computadoras electronicas, pero similar en el sentido que adquieren la informacion del mundo circundante, la almacenan y la procesan de multiples formas.  En este articulo se comparan las propiedades de los cerebros de toda la gama de especies animales. Existe un articulo especifico para el cerebro humano.  El cerebro es el mayor organo del sistema nervioso central y forma parte del centro de control de todo el cuerpo. En humanos, tambien es responsable del pensamiento, la memoria, las emociones, el habla y el lenguaje.\u200b\u200b  En los vertebrados el cerebro se encuentra ubicado en la cabeza, protegido por el craneo y en cercanias de los aparatos sensoriales primarios de la vision, el oido, el olfato, el gusto y el sentido del equilibrio.  En los vertebrados el encefalo se divide en tres partes: cerebro, cerebelo y tronco cerebral. En ocasiones se utiliza de manera equivocada el termino \u00abcerebro\u00bb como sinonimo de encefalo. En realidad, el cerebro es la parte anterior y mas voluminosa de todo el encefalo.  Nuestro cerebro representa solo el 2\u00a0% de nuestro peso corporal y consume el 20\u00a0% de energia, es el organo mas grasoso del cuerpo. [cita\u00a0requerida]  Los cerebros son sumamente complejos. La complejidad de este organo emerge por la naturaleza de la unidad que nutre su funcionamiento: la neurona. Estas se comunican entre si por medio de largas fibras protoplasmaticas llamadas axones, que transmiten trenes de pulsos de se\u00f1ales denominados potenciales de accion a partes distantes del cerebro o del cuerpo depositandolas en celulas receptoras especificas.  Los cerebros controlan el comportamiento provocando la contraccion de los musculos, o estimulando la secrecion de sustancias quimicas como algunas hormonas.\u200b  Las esponjas que no poseen un sistema nervioso central, son capaces de coordinar las contracciones de sus cuerpos y hasta su locomocion.\u200b  Si se observa a simple vista un corte del cerebro pueden apreciarse dos zonas de aspecto diferente. Una de ellas de color mas oscuro se llama sustancia gris y esta formada por los cuerpos neuronales, la otra mas clara se llama sustancia blanca y esta constituida por los axones cubiertos de mielina que parten de las neuronas para transmitir el impulso nervioso. La sustancia blanca esta formada por las vias por la que se transmite la informacion a distancia dentro del sistema nervioso, mientras que la sustancia gris se constituye por los cuerpos de las neuronas que es donde se generan los impulsos.\u200b  En la superficie del cerebro de los vertebrados se encuentra la corteza cerebral que esta formada por sustancia gris, por debajo se situa una masa central de sustancia blanca que envuelve un conjunto de nucleos de sustancia gris situados en el centro del cerebro, entre los que se incluye el talamo y los llamados ganglios basales o nucleos basales.\u200b  La neurona es la unidad basica sobre la que esta construido el cerebro. Segun estimaciones recientes, un encefalo humano promedio dispone de alrededor de \u00a086\u00a0\u00d7\u00a0109 o 86 000 000 000 (86 mil millones) de neuronas.\u200b\u200b Una neurona es una celula que se ha especializado en la transmision de los impulsos nerviosos que consta de un cuerpo celular o soma, un gran numero de peque\u00f1as prolongaciones llamadas dendritas y una prolongacion principal que puede ser muy larga y recibe el nombre de axon, el cual a su vez puede ramificarse en muchas ramas al final de su recorrido. El axon se forma en un engrosamiento del cuerpo celular y se extiende a distancias variables que oscilan entre algunos micrometro (\u03bcm) y mas de un metro (m) en algunas neuronas de ciertas localizaciones. Las conexiones que se establecen entre dos neuronas reciben el nombre de sinapsis. Segun el principio de conectividad especifica establecido por Ramon y Cajal, las neuronas no se conectan entre si aleatoriamente, sino que establecen conexiones especificas en determinados lugares con otras celulas nerviosas, por lo que la aparente mara\u00f1a de ramificaciones que se observa cuando se mira a traves del microscopio una muestra de tejido cerebral no es un conjunto de conexiones al azar, sino una red de contactos entre celulas perfectamente organizado que es la que hace posible el funcionamiento del sistema nervioso y todas las actividades cerebrales.\u200b  Cada neurona integra continuamente numerosos impulsos electricos que recibe a traves de sus dendritas y emite una respuesta unica a traves de su axon. Existen neuronas sensitivas que captan la informacion procedente de los diferentes sentidos y neuronas motoras que emiten impulsos que generan los movimientos musculares voluntarios, pero la mayor parte de las que existen en el cerebro son interneuronas que forman parte de circuitos anatomicos muy precisos.\u200b  Un neurotransmisor es una sustancia quimica producida por las neuronas que se libera al espacio sinaptico de una sinapsis quimica por la accion de un impulso nervioso o potencial de accion. Interacciona con un receptor especifico en la neurona postsinaptica donde produce una determinada respuesta que puede ser excitatoria o inhibitoria. Los neurotransmisores son un aspecto fundamental en la funcion del cerebro.\u200b  Existen diferentes sustancias que actuan como neurotransmisores, algunas de las mas importantes son las siguientes: GABA, acronimo de acido g-aminobutirico, serotonina, acetilcolina, dopamina, noradrenalina y endorfina. Las vias dopaminergicas, por ejemplo, son rutas de neuronas que funcionan con la dopamina como neurotransmisor. Estas vias son de gran interes en la funcion del cerebro y se ha comprobado que su alteracion puede provocar diferentes enfermedades, entre ellas la enfermedad de Parkinson.\u200b\u200b  El cerebro forma parte del encefalo. El encefalo humano se divide en tres partes: cerebro, cerebelo y tronco cerebral. De ellas el cerebro es la de mayor peso y volumen de neuronas.\u200b  El cerebro de los vertebrados esta dividido en dos hemisferios, comunicados mediante el cuerpo calloso. La superficie se denomina corteza cerebral esta constituida por la sustancia gris. Cada hemisferio cerebral posee varias cisuras que dividen la corteza cerebral en lobulos. La superficie de los lobulos se encuentra marcada por surcos cerebrales que delimitan circunvoluciones.\u200b Subyacente a la corteza se encuentra la sustancia blanca.  En un humano adulto se estima que la neocorteza cerebral contiene ~20 000 000 000 (veinte mil millones, \u00a01,6-2\u00a0\u00d7\u00a01010) de neuronas.  El cerebro humano posee en su interior 4 ventriculos cerebrales intercomunicados que estan llenos de un liquido claro llamado liquido cefalorraquideo.\u200b  Cada hemisferio posee varias cisuras que subdividen, mas o menos claramente, la corteza cerebral en lobulos:  El talamo esta situado por encima del tronco del encefalo, casi en el centro del cerebro. Mide alrededor de 3\u00a0cm de largo y esta formado por materia gris es decir el soma de celulas neuronales. Cumple la funcion de estacion de relevo de las se\u00f1ales nerviosas y centro de integracion donde se procesan los impulsos sensoriales antes de continuar su recorrido hasta la corteza cerebral. Tambien recibe se\u00f1ales que siguen la direccion opuesta y llegan al talamo procedente de la corteza cerebral.\u200b  El hipotalamo es una peque\u00f1a region del cerebro formada por sustancia gris. Esta situado inmediatamente debajo del talamo. Tiene el tama\u00f1o aproximado de una almendra y desempe\u00f1a importantes funciones, entre ellas enlazar el sistema nervioso con el sistema endocrino a traves de la hipofisis.\u200b  Los ganglios basales en realidad deberian llamarse nucleos basales pues no son verdaderos ganglios. Son un conjunto de estructuras cerebrales formadas por sustancia gris que estan situados debajo de la corteza y desempe\u00f1an importantes funciones, una de las principales es el control de los movimientos voluntarios, pero tambien intervienen en el procesamiento de la informacion sensorial y en aspectos relacionados con la memoria y las emociones. Estan conectados con la corteza cerebral y funcionan con un alto grado de integracion. Pueden diferenciarse los siguientes:\u200b  El hipocampo es una estructura cerebral que desempe\u00f1a importantes funciones en la memoria y la orientacion espacial. Esta formado por materia gris y procede del lobulo temporal, aunque se ubica por debajo de la corteza cerebral. Debe su nombre a que su forma recuerda en cierto modo a la de un caballito de mar. El hipocampo forma parte del sistema limbico y es una de las pocas regiones del cerebro en la que se produce el fenomeno de la neurogenesis (formacion de nuevas neuronas).\u200b  El cuerpo calloso es una importante estructura del cerebro que esta formada por fibras que actuan como via de comunicacion entre el hemisferio cerebral derecho y el izquierdo, con la finalidad de que ambos funcionen de forma conjunta y complementaria.\u200b  La capsula interna es un grueso conjunto de fibras nerviosas tanto ascendentes como descendentes que comunican la corteza con las regiones inferiores del sistema nervioso central, las fibras son de origen diverso, pero muchas de ellas transportan informacion motora o sensitiva. En su trayecto pasan cerca de la region del talamo y los ganglios basales. La capsula interna es una region muy sensible, cualquier lesion en esta zona da\u00f1a numerosas fibras nerviosas y provoca en consecuencia deficits neurologicos graves.\u200b  Hipocampo  Nucleo caudado  Cuerpo calloso  Diencefalo (talamo e hipotalamo)  El cerebro procesa la informacion sensorial, tanto la visual como la tactil, auditiva y olfatoria. Las areas motoras controlan y coordinan el movimiento, mientras que las areas de asociacion son las responsables de funciones complejas como la memoria y el razonamiento. Los ganglios basales actuan en la coordinacion del movimiento, mientras que el sistema limbico es responsable de las respuestas emocionales. Aunque ciertas zonas del cerebro se encargan de determinadas funciones, se trata de un sistema con alto grado de integracion que se relaciona ademas con otras partes del encefalo como el cerebelo encargado de coordinar secuencias complejas de movimientos iniciados por las areas motoras y el tronco del encefalo.\u200b  La funcion motora del cerebro se lleva a cabo principalmente a traves de la via piramidal o corticoespinal, un grupo de fibras nerviosas que parten de neuronas situadas en la corteza motora primaria situada en la parte posterior del lobulo frontal y terminan en el asta anterior de la medula espinal, donde enlazan con una segunda neurona de la que parten axones que confluyen en los diferentes nervios motores que hacen posible el control voluntario de la musculatura de todo el cuerpo. La via piramidal se cruza en la base del tronco del cerebro, en la llamada decusacion de las piramides, de tal forma que las fibras provenientes del hemisferio cerebral derecho controlan los musculos de la mitad izquierda y las del hemisferio cerebral izquierdo la mitad derecha. Esta via es de gran importancia pues es la que permite realizar los movimientos necesarios para la mayor parte de las funciones vitales, entre ellas desplazarse, hablar, masticar, etc. Si se lesiona la via piramidal se produce paralisis de los musculos correspondientes.\u200b  El dolor se define como una experiencia sensorial y emocional desagradable relacionada con un da\u00f1o tisular real o potencial. Tiene la funcion de aviso o advertencia para informar de un peligro que se debe evitar, previniendo de esta forma lesiones mas graves.  La sensacion de dolor se inicia en determinados receptores situados en los tejidos que reciben el nombre de nociceptores y son sensibles al da\u00f1o tisular. Los impulsos nerviosos generados por estos receptores llegan a traves de los nervios sensitivos hasta el asta posterior de la medula espinal, desde donde suben a traves de un haz de fibras nerviosas llamado espino talamico hasta alcanzar el encefalo. Llegan primero a la region del talamo, desde donde alcanzan la corteza sensitiva del lobulo temporal que es donde la se\u00f1al se procesa y la sensacion de dolor se hace consciente.\u200b  Existen diferentes enfermedades de origen congenito en las que las personas afectadas son incapaces de percibir el dolor. Este grupo de trastornos se conoce genericamente como insensibilidad congenita al dolor, suele acompa\u00f1arse de falta de sensibilidad a la temperatura y provoca importantes problemas de salud, entre ellos lesiones osea o en la piel que pasan desapercibidas pues la persona no siente dolor alguno tras traumatismos graves y continua su actividad habitual sin percatarse de que ha sufrido una fractura osea o una herida.\u200b\u200b  En los lobulos parietales se desarrolla el sistema emocional y el sistema valorativo. El sistema emocional \u2014aunque compromete a todo el cerebro, y en retroalimentacion, a todo el cuerpo del individuo\u2014 se ubica principalmente en el area bastante arcaica llamada sistema limbico, dentro del sistema limbico las dos amigdalas cerebrales, se focalizan las emociones basicas (temor, agresion, placer) que tenemos y que damos cuando algo o alguien interfiere en la actividad que este haciendo en el exterior. Por otra parte esta el sistema valorativo, este es la relacion que existe entre los lobulos prefrontales (que como su nombre lo indica esta atras de la frente) y las amigdalas cerebrales, esa \u00abrelacion fisica\u00bb se llama hipocampo.[cita\u00a0requerida]  La gran mayoria de los procesos que permiten el lenguaje se llevan a cabo en diferentes areas de asociacion. Existen dos areas bien identificadas, las cuales son consideradas vitales para la comunicacion humana: el area de Wernicke y el area de Broca. Estas areas estan localizadas en el hemisferio dominante (que es el izquierdo en el 97\u00a0% de las personas) y son consideradas las mas importantes en cuanto a procesamiento de lenguaje. Esta es la razon por la cual el lenguaje es considerado como una funcion lateralizada.\u200b Sin embargo, el hemisferio no dominante tambien participa en el lenguaje, aunque existen cuestionamientos acerca del nivel de participacion de las areas localizadas en dicho hemisferio.\u200b  El area de Wernicke, se conoce asi en honor al neurologo que la describio por primera vez. Esta especialmente desarrollada en el hemisferio dominante para el lenguaje, que, generalmente suele ser el lado izquierdo. El desarrollo de esta area permite alcanzar niveles altos de comprension y procesar la mayor parte de las funciones intelectuales del cerebro. Se encarga de la decodificacion de lo oido y de la preparacion de posibles respuestas. Es importante para la comprension de palabras y en los discursos significativos.  Da paso despues al area de Broca, tambien conocida como el area motora de las palabras, que se conecta con el area de Wernicke mediante el fasciculo longitudinal superior. Se ubica en la corteza prefrontal, en la parte anterior de la porcion inferior de la corteza motora primaria, cercana a la fisura lateral (FL). En la mayoria de los casos, es dominante en el lado izquierdo del cerebro. Su funcion es permitir la realizacion de los patrones motores para la expresion de las palabras, articulando el lenguaje hablado y tambien el escrito. Es la responsable de la formacion de las palabras en la que se activa el accionamiento de los musculos fonadores, es decir laringeos, respiratorios y de la boca, para asegurar la produccion de sonidos articulados, lo que tiene lugar en el area motora primaria, de donde parten las ordenes a los musculos fonadores. Ademas se conecta con el area motora suplementaria, que tiene relacion con la iniciacion del habla.  Aun cuando ambos hemisferios humanos son opuestos, no son la imagen geometrica invertida uno del otro. Desde un punto de vista puramente morfologico son asimetricos. Esta asimetria depende de una pauta de expresion genica tambien asimetrica durante el desarrollo embrionario del individuo y se ha comprobado que no es exclusiva de la especia humana, pues esta presente, aunque en menor grado, en parientes cercanos en la filogenia al humano como puede ser el chimpance.\u200b  El estudio de impresiones craneales de antepasados del genero Homo tiene entre sus objetivos determinar la presencia o no de asimetria en el telencefalo, puesto que es un rasgo de aumento de la especializacion, de una capacidad cognitiva mas compleja.\u200b  Las diferencias funcionales entre hemisferios son minimas y solo en algunas pocas areas se han podido encontrar diferencias en cuanto a funcionamiento, existiendo excepciones en personas que no se observaron diferencias. Las areas actualmente mas conocidas especializadas en el lenguaje son la de Broca y la de Wernicke, aunque al hacer un proceso linguistico es probable que todo el cerebro este involucrado \u2014casi indudablemente las areas de la memoria participan en el proceso del lenguaje\u2014. Las areas de Broca y de Wernicke se encuentran, en la mayoria de los individuos, en el hemisferio izquierdo. Por su parte, las areas mas involucradas en la logica y actividades intelectuales se ubican principalmente en la corteza prefrontal, teniendo quizas las areas temporales izquierdas gran importancia para procesos de analisis y sintesis como los que permiten hacer calculos (matematicos); estas areas dotan al individuo de mayor capacidad de adaptacion al medio, pero con procesos de aprendizaje mucho mas dilatados, y como tal mas dependientes de sus progenitores durante la etapa de cria.  Se llama neurogenesis a la produccion, diferenciacion y migracion de nuevas neuronas en el sistema nervioso. Hasta los a\u00f1os\u00a060 del siglo\u00a0XX se creia que era imposible que esto ocurriera en la vida adulta y se consideraba que las mismas neuronas que existian en el momento del nacimiento perduraban hasta la muerte sin incorporacion de nuevas unidades. En la segunda mitad del siglo\u00a0XX se publicaron varios estudios que contradecian este antiguo dogma de la biologia. Actualmente esta comprobado que en el cerebro humano y de los mamiferos existen dos areas de neurogenesis adulta, el hipocampo y la zona ubicada por debajo de los ventriculos laterales del cerebro. Se ha observado que determinados procesos de aprendizaje dependientes del hipocampo como el aprendizaje espacial en un laberinto actuan como estimulantes del proceso de neurogenesis.\u200b  Las celulas madre son las que dan origen a las nuevas neuronas, no obstante, la capacidad regenerativa del cerebro es muy escasa en comparacion con otros tejidos del organismo.  La neuroplasticidad, es el proceso de modificacion de la organizacion neuronal del encefalo a resultas de la experiencia. El concepto se sustenta en la capacidad de modificacion de la actividad de las neuronas, y como tal fue descrita por el neurocientifico polaco Jerzy Konorski.\u200b La capacidad de modificar el numero de sinapsis, de conexiones neurona-neurona, o incluso del numero de celulas, da lugar a la neuroplasticidad. Historicamente, la neurociencia concebia durante el siglo XX un esquema estatico de las estructuras mas antiguas del encefalo asi como de la neocorteza. No obstante, hoy dia se sabe que las conexiones encefalicas varian a lo largo de la vida del adulto, asi como es tambien posible la generacion de nuevas neuronas en areas relacionadas con la gestion de la memoria (hipocampo, giro dentado).\u200b Este dinamismo en algunas areas del encefalo del adulto responde a estimulos externos, e incluso alcanza a otras partes del encefalo como el cerebelo.\u200b  Tres grupos de animales, con algunas excepciones, tienen cerebros notablemente complejos: los artropodos (por ejemplo, los insectos y los crustaceos), los cefalopodos (pulpos, calamares y moluscos similares) y los craniados (vertebrados principalmente). El cerebro de los artropodos y los cefalopodos surge desde un par de nervios paralelos que se extienden a lo largo del cuerpo del animal. El cerebro de los artropodos tiene grandes lobulos opticos por detras de cada ojo para el procesado visual y un cerebro central con tres divisiones.  En los insectos, el cerebro se puede dividir en cuatro partes: los lobulos opticos, que localizados tras los ojos, procesan los estimulos visuales; el protocerebro, que responde al olfato; el deutocerebro, que recibe la informacion de los receptores tactiles de la cabeza y las antenas; y el tritocerebro.  En los cefalopodos, el cerebro se divide en dos regiones separadas por el esofago del animal y conectadas por un par de lobulos. Reciben el nombre de masa supraesofagica y masa subesofagica.  El cerebro de los craniados se desarrolla desde la seccion anterior de un unico tubo nervioso dorsal, que mas tarde se convierte en la medula espinal, luego la medula espinal (siempre evolutiva y filogenetiamente) habria veccionado (usando la terminologia de Piaget o evolucionado complejificandose y transformandose sucesivamente en el puente de Varolio y el tronco encefalico; ya en los peces y, principalmente, en los tetrapodos primitivos (anfibios, reptiles) habria surgido el \u00abcerebro limbico\u00bb (sistema limbico). Los craniados tienen el cerebro protegido por los huesos del neurocraneo. Los vertebrados se caracterizan por el aumento de la complejidad de la corteza cerebral a medida que se sube por los arboles filogenetico y evolutivo. El gran numero de circunvoluciones que aparecen en el cerebro de los mamiferos es caracteristico de animales con cerebros avanzados. Estas convoluciones surgieron de la evolucion para proporcionar mas area superficial (con mas materia gris) al cerebro: el volumen se mantiene constante a la vez que aumenta el numero de neuronas. Por ello, es la superficie, y no el volumen (absoluto ni relativo), lo que condiciona el nivel de inteligencia de una especie. Este es un error muy comun que debe ser tenido en cuenta. No obstante, si comparasemos dos cerebros de la misma especie, podriamos aproximar que hay mas posibilidades que el cerebro mas grande de los dos tenga una mayor superficie, aunque tampoco esto es definitorio de la cualidad intelectiva cognitiva, sino que se considera como factor clave para mayores capacidades intelectivas y cognitivas a la arquitectura del cerebro: por ejemplo los Homo neanderthalensis podian tener cerebros tan voluminosos o mas que los del Homo\u00a0sapiens actual, pero la arquitectura cortical de sus cerebros estaba mas dedicada a controlar sus fuertes musculaturas, mientras que en los Homo\u00a0sapiens las areas corticales mas desarrolladas se ubican en las zonas dedicadas al lenguaje simbolico, y las areas prefrontales y frontales \u2014en especial del hemisferio izquierdo\u2014 en donde se realizan las sintesis que dan por resultado procesos elaborados de reflexion, cognicion e inteleccion. ","snippet":"El cerebro (del latin cerebrum, con su raiz indoeuropea ker, cabeza, en lo alto de la cabeza y brum, \u2018llevar\u2019; teniendo el significado arcaico de \u00ablo que lleva la cabeza\u00bb) es un organo que centraliza ","enlaces_salientes":["Cerebro","Cerebro","Cerebro","Cerebro_humano","Pan_(animal)","Lat%C3%ADn","Terminologia_Anatomica","Terminologia_Anatomica","Embriolog%C3%ADa","Lat%C3%ADn","Sistema_nervioso","Invertebrado","Bilateria","Es%C3%B3fago","Protostomia","Arthropoda","Gastropoda","Cephalopoda","Platyhelminthes","Nematoda","Hemichordata","Bivalvia","Bryozoa","Porifera","Placozoa","Mesozoa","Cnidaria","Ctenophora","Echinodermata","Vertebrados","Cabeza","Sentido_(percepci%C3%B3n)","Visi%C3%B3n","Audici%C3%B3n","Equilibriocepci%C3%B3n","Gusto","Olfato","Mam%C3%ADferos","Telenc%C3%A9falo","Hemisferios_cerebrales","Corteza_cerebral","Hormona","Reflejo","M%C3%A9dula_espinal","Ganglio_nervioso","Mente","Psicolog%C3%ADa","Cerebro_humano","Cr%C3%A1neo","Visi%C3%B3n","O%C3%ADdo","Olfato","Gusto","Equilibriocepci%C3%B3n","Enc%C3%A9falo","Cerebelo","Tronco_del_enc%C3%A9falo","%C3%93rgano_(biolog%C3%ADa)","Neurona","Ax%C3%B3n","Potencial_de_acci%C3%B3n","M%C3%BAsculo","Hormona","Porifera","Sustancia_gris","Sustancia_blanca","Sustancia_gris","Sustancia_blanca","Ax%C3%B3n","Neurona","Corteza_cerebral","T%C3%A1lamo_(sistema_nervioso)","Ganglios_basales","Neurona","Impulsos_nerviosos","Dendrita","Ax%C3%B3n","Micr%C3%B3metro_(unidad_de_longitud)","Metro","Sinapsis","Santiago_Ram%C3%B3n_y_Cajal","Interneurona","Neurotransmisor","Sinapsis","Potencial_de_acci%C3%B3n","%C3%81cido_%CE%B3-aminobut%C3%ADrico","Serotonina","Acetilcolina","Dopamina","Noradrenalina","Endorfina","V%C3%ADa_dopamin%C3%A9rgica","Cerebro_humano","Enc%C3%A9falo","Cerebelo","Tronco_del_enc%C3%A9falo","Cuerpo_calloso","Corteza_cerebral","Sustancia_gris","Surco_(neuroanatom%C3%ADa)","Circunvoluciones","Sustancia_blanca","Corteza_cerebral#Neocorteza","Neurona","Cerebro_humano","Ventr%C3%ADculo_cerebral","L%C3%ADquido_cefalorraqu%C3%ADdeo","Corteza_cerebral","L%C3%B3bulo_frontal","Surco_lateral_del_cerebro","Surco_central_del_cerebro","L%C3%B3bulo_parietal","L%C3%B3bulo_occipital","L%C3%B3bulo_temporal","%C3%8Dnsula","T%C3%A1lamo_(sistema_nervioso)","Tronco_del_enc%C3%A9falo","Cent%C3%ADmetro","Hipot%C3%A1lamo","Hipot%C3%A1lamo","Sistema_endocrino","Hip%C3%B3fisis","Ganglios_basales","Memoria_(proceso)","Cuerpo_estriado","N%C3%BAcleo_caudado","Putamen","N%C3%BAcleo_accumbens","Globo_p%C3%A1lido","Sustancia_negra","Hipocampo_(anatom%C3%ADa)","Sistema_l%C3%ADmbico","Neurona","Cuerpo_calloso","Hemisferio_cerebral","C%C3%A1psula_interna","Ganglios_basales","Motricidad","Sistema_l%C3%ADmbico","Cerebelo","Tronco_del_enc%C3%A9falo","Sistema_piramidal","Corteza_motora_primaria","M%C3%A9dula_espinal","Dolor","Nociceptor","L%C3%B3bulo_temporal","Insensibilidad_cong%C3%A9nita_al_dolor","Sistema_l%C3%ADmbico","Cuerpo_amigdalino","L%C3%B3bulo_frontal","Hipocampo_(anatom%C3%ADa)","Lenguaje","%C3%81rea_de_Wernicke","%C3%81rea_de_Broca","Hemisferio_cerebral","%C3%81rea_de_Broca","Morfolog%C3%ADa_(biolog%C3%ADa)","Asimetr%C3%ADa","Expresi%C3%B3n_g%C3%A9nica","Embriog%C3%A9nesis","Filogenia","Pan_troglodytes","Homo","Conocimiento","Lenguaje","%C3%81rea_de_Broca","%C3%81rea_de_Wernicke","Memoria_(proceso)","L%C3%B3gica","Corteza_prefrontal","Neurog%C3%A9nesis","Neurog%C3%A9nesis_adulta","Hipocampo_(anatom%C3%ADa)","Ventr%C3%ADculos_laterales","C%C3%A9lula_madre","Sinapsis","Siglo_XX","Memoria_(proceso)","Hipocampo_(anatom%C3%ADa)","Giro_dentado","Cerebelo","Arthropoda","Insecta","Crustacea","Cephalopoda","Octopoda","Teuthida","Mollusca","Craniata","Vertebrata","Nervio","Ojo","Visi%C3%B3n","Insecta","Olfato","Tacto","Cephalopoda","Es%C3%B3fago","M%C3%A9dula_espinal","Jean_Piaget","Puente_troncoencef%C3%A1lico","Tronco_del_enc%C3%A9falo","Tetrapoda","Amphibia","Reptilia","Sistema_l%C3%ADmbico","Corteza_cerebral","Filogenia","Evoluci%C3%B3n_biol%C3%B3gica","Mammalia","Sustancia_gris","Neurona","Homo_neanderthalensis","Lenguaje","Enc%C3%A9falo","Neurodegeneraci%C3%B3n","Cerebro_artificial","Mente","Mito_del_10_%25_del_cerebro","Neurobiolog%C3%ADa","Neurolog%C3%ADa","Neuroeconom%C3%ADa","ISBN","PubMed_Central","PubMed_Identifier","Digital_object_identifier","PubMed_Identifier","Digital_object_identifier","Wayback_Machine","ISBN","ISBN","Wayback_Machine","PubMed_Identifier","Digital_object_identifier","PubMed_Identifier","Digital_object_identifier","ISSN","PubMed_Identifier","ISBN","ISBN","MedlinePlus","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Art_%26_Architecture_Thesaurus","Enciclopedia_Brit%C3%A1nica","CIE-11","Medical_Subject_Headings","Terminolog%C3%ADa_Anat%C3%B3mica"]}
{"url":"Neuronas","titulo":"Neurona","contenido":"Una neurona (del griego \u03bd\u03b5\u03c5\u03c1\u03bf\u03bd neuron, \u2018cuerda\u2019, \u2018nervio\u2019),\u200b es una celula componente principal del sistema nervioso, cuya principal funcion  es recibir, procesar y transmitir informacion a traves de se\u00f1ales quimicas y electricas gracias a la excitabilidad electrica de su membrana plasmatica. Estan especializadas en la recepcion de estimulos y conduccion del impulso nervioso (en forma de potencial de accion) entre ellas mediante conexiones llamadas sinapsis, o con otros tipos de celulas como, por ejemplo, las fibras musculares de la placa motora. Altamente diferenciadas, la mayoria de las neuronas no se dividen una vez alcanzada su madurez; no obstante, una minoria si lo hace.\u200b  Las neuronas presentan unas caracteristicas morfologicas tipicas que sustentan sus funciones: un cuerpo celular, llamado soma o \u00abpericarion\u00bb central; una o varias prolongaciones cortas que generalmente transmiten impulsos hacia el soma celular, denominadas dendritas; y una prolongacion larga, denominada axon o \u00abcilindroeje\u00bb, que conduce los impulsos desde el soma hacia otra neurona o celula objetivo.\u200b  La neurogenesis en seres adultos fue descubierta apenas en el ultimo tercio del siglo\u00a0XX. Hasta hace pocas decadas se creia que, a diferencia de la mayoria de las otras celulas del organismo, las neuronas normales en el individuo maduro no se regeneraban, excepto las celulas olfatorias. Los nervios mielinizados del sistema nervioso periferico tambien tienen la posibilidad de regenerarse a traves de la utilizacion del neurolema,[cita\u00a0requerida] una capa formada de los nucleos de las celulas de Schwann.  Wilhelm Waldeyer fue uno de los fundadores de la teoria de la neurona, acu\u00f1ando el termino \u201cneurona\u201d para describir la unidad celular de la funcion del sistema nervioso y declarando y clarificando ese concepto en 1891.\u200b A fines del siglo\u00a0XIX, Santiago Ramon y Cajal situo por primera vez las neuronas como elementos funcionales del sistema nervioso.\u200b Cajal propuso que actuaban como entidades discretas que, intercomunicandose, establecian una especie de red mediante conexiones especializadas o espacios.\u200b Esta idea es reconocida como la doctrina de la neurona, uno de los elementos centrales de la neurociencia moderna. Se opone a la defendida por Camillo Golgi, que propugnaba la continuidad de la red neuronal y negaba que fueran entes discretos interconectados. A fin de observar al microscopio la histologia del sistema nervioso, Cajal empleo tinciones de plata (con sales de plata) de cortes histologicos para microscopia optica, desarrollados por Golgi y mejorados por el mismo. Dicha tecnica permitia un analisis celular muy preciso, incluso de un tejido tan denso como el cerebral.\u200b La neurona es la unidad estructural y funcional del sistema nervioso. Recibe los estimulos provenientes del medio ambiente, los convierte en impulsos nerviosos y los transmite a otra neurona, a una celula muscular o glandular donde produciran una respuesta.  La doctrina de la neurona, establecida por Santiago Ramon y Cajal a finales del siglo\u00a0XIX, es el modelo aceptado hoy en neurofisiologia. Consiste en aceptar que la base de la funcion neurologica radica en las neuronas como entidades discretas, cuya interaccion, mediada por sinapsis, conduce a la aparicion de respuestas complejas. Cajal no solo postulo este principio, sino que lo extendio hacia una \u00abley de la polarizacion dinamica\u00bb, que propugna la transmision unidireccional de informacion (esto es, en un solo sentido, de las dendritas hacia los axones).\u200b No obstante, esta ley no siempre se cumple. Por ejemplo, las celulas gliales pueden intervenir en el procesamiento de informacion,\u200b e, incluso, las efapsis o sinapsis electricas, mucho mas abundantes de lo que se creia,\u200b presentan una transmision de informacion directa de citoplasma a citoplasma. Mas aun: las dendritas pueden dirigir una se\u00f1al sinaptica de forma centrifuga al soma neuronal, lo que representa una transmision en el sentido opuesto al postulado,\u200b de modo que sean los axones los que reciban de informacion (aferencia).  Una neurona tipica consta de: un nucleo voluminoso central, situado en el soma; un pericarion que alberga los organulos celulares tipicos de cualquier celula eucariota; y neuritas (esto es, generalmente un axon y varias dendritas) que emergen del pericarion.\u200b  Situado en el cuerpo celular de la neurona, suele ocupar una posicion central y es muy visible, especialmente en las neuronas peque\u00f1as. Contiene uno o dos nucleolos prominentes, asi como una cromatina dispersa, lo que da idea de la relativamente alta actividad transcripcional de este tipo celular. La envoltura nuclear, con multitud de poros nucleares, posee una lamina nuclear muy desarrollada. Entre ambos puede aparecer el cuerpo accesorio de Cajal, una estructura esferica de en torno a 1 \u03bcm de diametro que corresponde a una acumulacion de proteinas ricas en los aminoacidos arginina y tirosina.  Diversos organulos llenan el citoplasma que rodea al nucleo. El organulo mas notable, por estar el pericarion lleno de ribosomas libres y adheridos al reticulo rugoso, es la llamada sustancia de Nissl, al microscopio optico, se observan como grumos basofilos, y, al electronico, como apilamientos de cisternas del reticulo endoplasmatico. Tal abundancia de los organulos relacionados en la sintesis proteica se debe a la alta tasa biosintetica del pericarion.  Estos son particularmente notables en neuronas motoras somaticas, como las del cuerno anterior de la medula espinal o en ciertos nucleos de nervios craneales motores. Los cuerpos de Nissl no solamente se hallan en el pericarion sino tambien en las dendritas, aunque no en el axon, y es lo que permite diferenciar de dendritas y axones en el neuropilo.  El aparato de Golgi, que se descubrio originalmente en las neuronas, es un sistema muy desarrollado de vesiculas aplanadas y agranulares peque\u00f1as. Es la region donde los productos de la sustancia de Nissl posibilitan una sintesis adicional. Hay lisosomas primarios y secundarios (estos ultimos, ricos en lipofuscina, pueden marginar al nucleo en individuos de edad avanzada debido a su gran aumento).\u200b Las mitocondrias, peque\u00f1as y redondeadas, poseen habitualmente crestas longitudinales.  En cuanto al citoesqueleto, el pericarion es rico en microtubulos (clasicamente, de hecho, denominados neurotubulos, si bien son identicos a los microtubulos de celulas no neuronales) y filamentos intermedios (denominados neurofilamentos por la razon antes mencionada).\u200b Los neurotubulos se relacionan con el transporte rapido de las moleculas de proteinas que se sintetizan en el cuerpo celular y que se llevan a traves de las dendritas y el axon.\u200b  Las dendritas son ramificaciones que proceden de la soma neuronal que consiste en proyecciones citoplasmaticas envueltas por una membrana plasmatica sin envoltura de mielina. En ocasiones, poseen un contorno irregular, desarrollando espinas. Sus organulos y componentes caracteristicos son: muchos microtubulos y pocos neurofilamentos, ambos dispuestos en haces paralelos; ademas muchas mitocondrias; grumos de Nissl, mas abundantes en la zona adyacente al soma; reticulo endoplasmatico liso, especialmente en forma de vesiculas relacionadas con la sinapsis.  El axon es una delgada y extensa prolongacion del soma neuronal, que esta rodeado por su membrana el axolema. El axolema puede estar recubierto por celulas de Schwann en el sistema nervioso periferico de vertebrados, con produccion o no de mielina. Puede dividirse, de forma centrifuga al pericarion, en tres sectores: el cono axonico, el segmento inicial y el resto del axon.\u200b  Las neuronas tienen la capacidad de comunicarse con precision, rapidez y a larga distancia con otras celulas, ya sean nerviosas, musculares o glandulares. A traves de las neuronas se transmiten se\u00f1ales electricas denominadas impulsos nerviosos.  Estos impulsos nerviosos viajan por toda la neurona comenzando por las dendritas hasta llegar a los botones terminales, que se pueden conectar con otra neurona, fibras musculares o glandulas. La conexion entre una neurona y otra se denomina sinapsis.  Las neuronas conforman e interconectan los tres componentes del sistema nervioso: sensitivo, motor e integrador o mixto; de esta manera, un estimulo que es captado en alguna region sensorial entrega cierta informacion que es conducida a traves de las neuronas y es analizada por el componente integrador, el cual puede elaborar una respuesta, cuya se\u00f1al es conducida a traves de las neuronas. Dicha respuesta es ejecutada mediante una accion motora, como la contraccion muscular o secrecion glandular.  Las neuronas transmiten ondas de naturaleza electrica originadas como consecuencia de un cambio transitorio de la permeabilidad en la membrana plasmatica. Su propagacion se debe a la existencia de una diferencia de potencial o potencial de membrana (que surge gracias a las concentraciones distintas de iones a ambos lados de la membrana, segun describe el potencial de Nernst\u200b) entre la parte interna y externa de la celula (por lo general, de \u221270\u00a0mV). La carga de una celula inactiva se mantiene en valores negativos (el interior respecto al exterior) y varia dentro de unos estrechos margenes. Cuando el potencial de membrana de una celula excitable se despolariza mas alla de un cierto umbral (de 65\u00a0mV a 55\u00a0mV app) la celula genera (o dispara) un potencial de accion. Un potencial de accion es un cambio muy rapido en la polaridad de la membrana de negativo a positivo y vuelta a negativo, en un ciclo que dura unos milisegundos.\u200b  El primer registro detallado de un potencial de accion lo realizaron dos investigadores llamados Alan Lloyd Hodgkin y Andrew Fielding Huxley, midieron las corrientes ionicas que suceden durante el potencial de accion. Este registro historico lo realizaron en el axon de un calamar en 1939.\u200b  El potencial de accion comprende tres fases:  Se observan cambios de conductancia para el Na y el K durante el potencial de accion. Durante la despolarizacion y repolarizacion midieron la conductancia.  Se determina la diferencia de potencial por la diferencia absoluta entre las cargas positivas y negativas entre el interior y el exterior con relacion a la membrana. Esta diferencia se computa por la carga anionica y cationica entre ambos lados de esta membrana de todos los iones existentes, potasio (K+), magnesio (Mg2+), calcio (Ca2+), sodio (Na+) y cloro (Cl-), principalmente. Sin embargo, cuando un canal ionico se abre, el transito ionico es a favor de su gradiente electroquimico, esto es, pretende equilibrar el numero de iones, independientemente del potencial trasmembrana actual. Este mecanismo circunstancial de movimiento ionico permite el transito entre estados de polarizacion y despolarizacion. Un ejemplo de este comportamiento paradojico reside en el mecanismo de los canales anionicos de cloro abiertos por estimulacion gabaergica: Si en un estado de reposo el interior de la celula postsinaptica se encuentra con carga negativa con respecto al exterior, al abrirse este canal, los iones de cloro pasan al interior haciendo mas negativa la celula, esto pese a que el interior es ya negativo. Esto sucede, ya que en un estado de reposo el numero de iones de cloro es superior en el exterior que en el interior, de modo que la tendencia natural es equilibrar el numero introduciendo alla donde hay menos, o sea, en el interior, esto aunque el interior ya sea negativo, y no precisamente por el numero de aniones, sino por la carga negativa de todos los elementos celulares.  Este comportamiento es selectivo para los canales ionicos simples. Las bombas ionicas, como la ATPasa de sodio-potasio, intercambian iones entre el interior y el exterior, y viceversa, pero en contra de su gradiente electroquimico por lo que induce a la despolarizacion. Este mecanismo permite que una celula dada, tiempo despues de transmitir una determinada se\u00f1al electrica, entre en estado de reposo manteniendo el interior negativo con respecto al exterior; esto sucede porque extrae mas cationes de los que introduce (3 cationes de sodio por cada 2 de potasio).  La transmision electrica en los axones de la neurona se realiza mediante la apertura sincronica de ciertos canales de sodio y potasio. Para que la transmision entre las celulas del axon sea efectiva es imprescindible que la carga absoluta de todas sus celulas en reposo sea negativa. Esto permite que una carga concreta (positiva) tienda a descargar hacia la celula negativa haciendo que esta sea positiva, de modo que tienda a su vez a descargar hacia la celula adyacente, la cual tambien es negativa; esto, mientras que las celulas ya descargadas vuelven a su estado natural haciendose negativas nuevamente.  Hasta finales de la decada de 1980, el dogma de la neurociencia dictaba que solo las conexiones y los neurotransmisores liberados por las neuronas determinaban la funcion de una neurona. Las investigaciones realizadas por Rodolfo Llinas con sus colaboradores durante los a\u00f1os 80 sobre vertebrados pusieron de manifiesto que el dogma mantenido hasta entonces era erroneo. En 1988, Rodolfo Llinas presento el nuevo punto de vista funcional sobre la neurona en su articulo \u00abThe Intrinsic Electrophysiological Properties of Mammalian Neurons: Insights into Central Nervous System Function\u00bb\u200b y que es considerado un manifiesto que marca el cambio de mentalidad en neurociencia respecto al aspecto funcional de las neuronas con mas de 1250 citas en la bibliografia cientifica. El nuevo punto de vista funcional sobre la neurona quedo resumido en lo que hoy es conocido por la ley de Llinas.  Las neurosecretoras son neuronas especializadas en la secrecion de sustancias que, en vez de ser vertidas en la hendidura sinaptica, lo hacen en un capilar sanguineo, por lo que sus productos son transportados por la sangre hacia los tejidos diana; esto es, actuan a traves de una via endocrina.\u200b Esta actividad esta representada a lo largo de la diversidad zoologica: se encuentra en crustaceos,\u200b insectos,\u200b equinodermos,\u200b vertebrados,\u200b etc.  Durante la maduracion se produce un proceso que implica la degeneracion progresiva y/o la muerte de las neuronas. Este proceso, que puede ser normal y natural durante el envejecimiento normal, involucra a las celulas fundamentales del tejido nervioso y a sus componentes internos, que son los que impiden efectividad en la conduccion de informacion en el cerebro humano, con la consecuente disminucion de las funciones cognitivas. Asi, durante el envejecimiento normal se limitan funciones cerebrales en la zona afectada, pero tambien pueden aparecer distintas patologias neurologicas en el ser humano, llamadas enfermedades neurodegenerativas.\u200b\u200b\u200b  El sistema nervioso procesa la informacion siguiendo un circuito mas o menos estandar. La se\u00f1al se inicia cuando una neurona sensorial recibe un estimulo externo. Su axon se denomina fibra aferente. Esta neurona sensorial transmite una se\u00f1al a otra aleda\u00f1a, de modo que acceda un centro de integracion del sistema nervioso del animal. Las interneuronas, situadas en dicho sistema, transportan la se\u00f1al a traves de sinapsis. Finalmente, si debe existir respuesta, se excitan neuronas eferentes que controlan musculos, glandulas u otras estructuras anatomicas. Las neuronas aferentes y eferentes, junto con las interneuronas, constituyen el circuito neuronal.\u200b Las se\u00f1ales electricas no constituyen en si mismas informacion, la neurociencia actual ha descartado que las neuronas basicamente sean algo asi como lineas telefonicas de transmision. Esas se\u00f1ales electricas en cambio caracterizan el estado de activacion de una neurona. Las neuronas se agrupan dentro de circuitos neuronales, y la se\u00f1al electrica, que propiamente es un potencial electrico, de una neurona se ve afectada por las neuronas del circuito a las que esta conectada. El estado de una neurona dentro de un circuito neuronal cambia con el tiempo, y se ve afectada por tres tipos de influencias, las neuronas excitadoras del circuito neuronal, las neuronas inhibidores del circuito neuronal y los potenciales externos que tienen su origen en neuronas sensoriales.  La funcion de un determinado grupo de neuronas es alcanzar un determinado estado final en funcion de los estimulos externos. Por ejemplo, en la percepcion del color, un grupo de neuronas puede encargarse de acabar en un determinado estado si el estimulo es \"rojo\" y otro determinado estado si el estimulo es \"verde\". El numero de \"estados estables\" posibles del circuito neuronal se corresponde con el numero de patrones (en este caso colores diferentes) que puede reconocer el circuito neuronal. Los trabajos de Freeman en los a\u00f1os 1990 aclararon que un determinado grupo de neuronas sigue un patron de evolucion temporal caotico hasta alcanzar un determinado estado.\u200b Un estado estable se corresponde con el reconocimiento de un patron, a nivel microscopico el estado estable es un patron de activacion neuronal dentro de determinado circuito, en el que el potencial de activacion esta cerca de un atractor extra\u00f1o de la neurodinamica del grupo. El numero de patrones p reconocibles por un numero de neuronas se puede relacionar con el numero de neuronas que forman el grupo y la probabilidad de error en el reconocimiento de dicho patron. Las personas mas habiles o mas entrenadas en una tarea ejecutan la misma tarea con mucha mayor precision porque tienen un mayor numero de neuronas encargadas de dicha tarea (la repeticion espaciada de una actividad refuerza las sinapsis y el numero de neuronas potencialmente involucradas en esa tarea). La teoria de Hopfiled y la regla de Hebb estiman la relacion entre el numero de neuronas N que intervienen en reconocer p patrones y la probabilidad de error Pe en el reconocimiento de patrones:\u200b   P e \u2248 1 2 ( 1 \u2212 e r f ( 2 p / N ) ) \\approx {2}}(1-\\mathrm {erf} (}))}  donde e r f ( ) ()} es la llamada funcion error asociada a la curva de Gauss. Esta ecuacion refleja que un pianista profesional o un deportista de elite ejecuta con una probabilidad de error muy peque\u00f1a determinada tarea porque su entrenamiento hace que un mayor numero de neuronas N este involucrada en dicha tarea y eso minimiza mucho la probabilidad de error.  El aprendizaje se da cuando por efecto de los patrones de activacion reiterados, las conexiones neuronales sufren una reestructuracion: ciertas conexiones sinapticas se refuerzan mientras otras conexiones sinapticas se debilitan. El conocimiento que un individuo tiene del mundo se refleja en la estructura de estas conexiones. A su vez el numero y el tipo de conexion determina el numero de atractores disponibles de la neurodinamica de un circuito y por tanto el numero de patrones diferentes que dicho circuito puede identificar. Igualmente el olvido y la perdida de capacidad tienen igualmente una base fisiologica en el debilitamiento de sinapsis raramente usadas. Cuando un determinado circuito neuronal se activa poco sus sinapsis decaen y pueden llegar a perderse por lo cual el reconocimiento de cierto patron puede llegar a perderse.  El impulso nervioso se transmite a traves de las dendritas y el axon.  La velocidad de transmision del impulso nervioso depende fundamentalmente de la velocidad de conduccion del axon, la cual depende a su vez del diametro del axon y de la mielinizacion de este. El axon lleva el impulso a una sola direccion y el impulso es transmitido de un espacio a otro. Las dendritas son las fibras nerviosas de una neurona, que reciben los impulsos provenientes desde otras neuronas. Los espacios entre un axon y una dendrita se denominan \u00abespacio sinaptico\u00bb o hendidura sinaptica. En las grandes neuronas alfa de las astas anteriores de la medula espinal, las velocidades de conduccion axonal pueden alcanzar hasta 120\u00a0m/s. Si consideramos que una persona normal puede llegar a medir hasta 2,25\u00a0m de altura, al impulso electrico le tomaria unicamente 18,75\u00a0ms en recorrer desde la punta del pie hasta el cerebro.  Una red neuronal se define como una poblacion de neuronas fisicamente interconectadas o un grupo de neuronas aisladas que reciben se\u00f1ales que procesan a la manera de un circuito reconocible. La comunicacion entre neuronas implica un proceso electroquimico,\u200b mediante el cual una vez que una neurona es excitada a partir de cierto umbral, esta se despolariza transmitiendo a traves de su axon una se\u00f1al que excita a neuronas aleda\u00f1as, y asi sucesivamente. El sustento de la capacidad del sistema nervioso, por tanto, radica en dichas conexiones. En oposicion a la red neuronal, se habla de circuito neuronal cuando se hace mencion a neuronas que se controlan dando lugar a una retroalimentacion (feedback), como define la cibernetica.  El numero de neuronas en el cerebro varia drasticamente segun la especie estudiada.\u200b Se ha estimado en 2016 que el cerebro humano posee en torno a 85\u00a0000\u00a0000\u00a0000 (ochenta y cinco mil millones; \u00a08,5\u00a0\u00d7\u00a01010) de neuronas,\u200b un numero menor a la estimacion clasica historica de cien mil millones.\u200b  El tama\u00f1o del cuerpo celular o soma, oscila entre 5-135 micrometros (\u03bcm).  Segun el tama\u00f1o del soma, las neuronas de un nucleo nervioso se pueden clasificar como parvocelulares y magnocelulares.  Segun la forma, las neuronas se pueden clasificar en:\u200b  Segun el numero y anatomia de sus prolongaciones, las neuronas se clasifican en:\u200b  De acuerdo a la naturaleza del axon y de las dendritas, se clasifica a las neuronas en:\u200b  Las neuronas pueden clasificarse, segun el mediador quimico, en:\u200b  Las neuronas forman parte de circuitos neuronales en los que cumplen diferentes funciones, que de modo simplificado se pueden resumir en:  Las neuronas de proyeccion y las interneuronas son las mas abundantes del sistema nervioso central.\u200b  Existen dos hipotesis acerca del origen filogenetico de las neuronas. La primera, denominada hipotesis monofiletica, postula que las neuronas se originaron en un phylum y a partir de ahi fueron evolucionando hacia formas mas complejas. La segunda o hipotesis polifiletica, propone que las neuronas se originaron de forma independiente en mas de un phylum, en concreto en dos de ellos: los cnidarios y los ctenoforos, por lo que el desarrollo posterior seria un ejemplo de evolucion convergente.\u200b  En los cnidarios mas primitivos, los hidrozoos, se ha descrito una actividad similar a la neural no originada por neuronas, sino por cierto tipo de comunicacion entre celulas epiteliales. En los poriferos, las membranas externas poseen celulas capaces de contraerse como respuesta a cambios de presion o de composicion del agua. Estas celulas responden a estimulos especificos y son contractiles, por lo que se puede considerar que desempe\u00f1an funciones sensitivas y motoras. A este tipo de celulas se les ha denominado neuroides.  De igual manera, actos motores de ciertos polipos como lo son cerrar y mover sus tentaculos y ventosas provienen de potenciales electricos que se propagan de una celula a otra en la capa epitelial de rostral a caudal.  En este sentido, hay que recordar que en los embriones de los vertebrados las celulas neurales proceden de celulas epiteliales a traves del proceso denominado neurulacion.  Todo esto hace pensar que las celulas nerviosas se diferenciaron en los primeros metazoos por una transformacion gradual de celulas epiteliales (que en los sistemas primitivos desempe\u00f1aron una funcion de iniciadoras de actividad transmisible a celulas adyacentes) hacia celulas neuroepiteliales sensibles a estimulos mecanicos, electromagneticos y quimicos, que trasducirian en se\u00f1ales electricas y quimicas capaces te desarrollar una respuesta agil y autonoma ante determinados estimulos del medio.\u200b  Tras la aparicion de la neurona, el siguiente paso evolutivo consiste en la aparicion del tejido nervioso. En los primeros animales consistia en una red nerviosa difusa similar a la que presentan las hidras o los corales, en la que la informacion viaja en todas direcciones sin un patron reconocible.  Mas adelante aparecera el sistema nervioso ganglionar en los anelidos. La agrupacion de neuronas en ganglios hace posible un intercambio mas rapido entre neuronas y un mayor grado de integracion de la informacion, y sobre todo a la direccionalidad de los impulsos nerviosos, lo que da lugar conductas mas eficientes.  Estos ganglios se distribuyen en los metameros, alcanzando un mayor protagonismo aquellos que procesan informacion del exterior y la envian a los musculos y las glandulas.  El tama\u00f1o de los ganglios que desarrollan una mayor actividad va aumentando. Se trata de los situados en la zona cercana a la boca, ya que esta es la que durante la locomocion entra antes en contacto con el mundo exterior. Surge la recepcion a distancia de los estimulos ambientales, y paralelamente empiezan a aparecer las interneuronas, celulas que reciben y envian informacion exclusivamente a otras celulas nerviosas.  La importancia que para la supervivencia tiene la funcion de los ganglios rostrales hace que se conviertan en organizadores de la actividad de los demas ganglios. Este proceso recibe el nombre de encefalizacion, y alcanzara su mayor grado de desarrollo por primera vez en los artropodos y moluscos, junto con un desarrollo notable de los organos de los sentidos y de apendices articulados que hacen posible la locomocion. Con este cerebro elemental, surge junto a las capacidades de aprendizaje, memoria y comportamiento social, una caracteristica fundamental que es la prediccion de eventos futuro  Distintos animales tienen diferente numero de neuronas. No obstante, Caenorhabditis elegans, un gusano nematodo de 1\u00a0milimetros (mm) de longitud, posee solo 302\u00a0neuronas;\u200b y la mosca de la fruta (Drosophila melanogaster), unas 300\u00a0000 neuronas, que bastan para permitirle exhibir conductas complejas.\u200b Una facil manipulacion de estas especies, con un ciclo de vida muy corto y un cultivo poco exigente, permiten emplearlas para dilucidar el funcionamiento neuronal.  El conocimiento de las redes neuronales biologicas ha dado lugar a un dise\u00f1o empleado en inteligencia artificial. Estas redes funcionan porque cada neurona recibe una serie de entradas a traves de interconexiones y emite una salida. Esta salida viene dada por tres funciones: una funcion de propagacion que por lo general consiste en el sumatorio de cada entrada multiplicada por el peso de su interconexion; una funcion de activacion, que modifica a la anterior y que puede no existir, siendo en este caso la salida la misma funcion de propagacion; y una funcion de transferencia, que se aplica al valor devuelto por la funcion de activacion. Se utiliza para acotar la salida de la neurona y generalmente viene dada por la interpretacion que queramos darle a dichas salidas.\u200b ","snippet":"Una neurona (del griego \u03bd\u03b5\u03c5\u03c1\u03bf\u03bd neuron, \u2018cuerda\u2019, \u2018nervio\u2019),\u200b es una celula componente principal del sistema nervioso, cuya principal funcion  es recibir, procesar y transmitir informacion a traves de ","enlaces_salientes":["Neurona","Neurona","Neurona","Motoneurona","Lat%C3%ADn","Terminologia_Anatomica","Terminologia_Anatomica","Terminolog%C3%ADa_Histol%C3%B3gica","Terminolog%C3%ADa_Histol%C3%B3gica","Anatom%C3%ADa","Sistema_org%C3%A1nico","Sistema_nervioso","C%C3%A9lula","Sistema_nervioso","Excitabilidad_neuronal","Membrana_plasm%C3%A1tica_eucariota","Est%C3%ADmulo","Potencial_de_acci%C3%B3n","Potencial_de_acci%C3%B3n","Sinapsis","Fibra_muscular","Uni%C3%B3n_neuromuscular","Morfolog%C3%ADa_(biolog%C3%ADa)","Fisiolog%C3%ADa","Soma_(neurolog%C3%ADa)","Dendrita","Ax%C3%B3n","C%C3%A9lula_diana","Neurog%C3%A9nesis_adulta","Sistema_nervioso_perif%C3%A9rico","Regeneraci%C3%B3n_(biolog%C3%ADa)","C%C3%A9lula_de_Schwann","Santiago_Ram%C3%B3n_y_Cajal","C%C3%A9lula_de_Purkinje","Heinrich_Wilhelm_Gottfried_Waldeyer","Siglo_XIX","Santiago_Ram%C3%B3n_y_Cajal","Sistema_nervioso","Doctrina_de_la_neurona","Neurociencia","Camillo_Golgi","Histolog%C3%ADa","Sistema_nervioso","Tinci%C3%B3n_arg%C3%A9ntica","Corte_histol%C3%B3gico","Microscopio_%C3%B3ptico","Doctrina_de_la_neurona","Giro_dentado","Epilepsia","Santiago_Ram%C3%B3n_y_Cajal","Neurofisiolog%C3%ADa","Sinapsis","C%C3%A9lula_glial","Sinapsis_el%C3%A9ctrica","Citoplasma","Soma_(neurolog%C3%ADa)","Org%C3%A1nulo","C%C3%A9lula_eucariota","Neurita","Infograf%C3%ADa","Neurita","N%C3%BAcleo_celular","Nucl%C3%A9olo","Cromatina","Transcripci%C3%B3n_gen%C3%A9tica","Envoltura_nuclear","Poro_nuclear","L%C3%A1mina_nuclear","Cuerpo_de_Cajal","Di%C3%A1metro","Prote%C3%ADna","Amino%C3%A1cido","Arginina","Tirosina","Pericarion","Org%C3%A1nulo","Ribosoma","Ret%C3%ADculo_endoplasm%C3%A1tico_rugoso","Cromatolisis#Sustancia_de_Nissl","Microscopio_%C3%B3ptico","Bas%C3%B3filo","Microscopio_electr%C3%B3nico_de_transmisi%C3%B3n","Anabolismo","Aparato_de_Golgi","Lisosoma","Lipofuscina","Mitocondria","Cresta_mitocondrial","Citoesqueleto","Microt%C3%BAbulo","Filamento_intermedio","Neurofilamento","Dendrita","Membrana_plasm%C3%A1tica","Mielina","Microt%C3%BAbulo","Neurofilamento","Mitocondria","Ves%C3%ADcula_(biolog%C3%ADa_celular)","Sinapsis","Ax%C3%B3n","Axolema","C%C3%A9lula_de_Schwann","Sistema_nervioso_perif%C3%A9rico","Vertebrata","Mielina","Axolema","Potencial_de_acci%C3%B3n","Nodo_de_Ranvier","Potencial_de_acci%C3%B3n","Potencial_de_acci%C3%B3n","Dendrita","Bot%C3%B3n_terminal","Sinapsis","Contracci%C3%B3n_muscular","Secreci%C3%B3n","Potencial_de_acci%C3%B3n","Electrofisiolog%C3%ADa","Electricidad","Membrana_plasm%C3%A1tica","Tensi%C3%B3n_(electricidad)","Potencial_de_membrana","Concentraci%C3%B3n","Potencial_de_membrana","Excitabilidad_neuronal","Despolarizaci%C3%B3n","Potencial_de_acci%C3%B3n","Milisegundo","Ani%C3%B3n","Cati%C3%B3n","Potasio","Magnesio","Calcio","Sodio","Cloro","%C3%81cido_%CE%B3-aminobut%C3%ADrico","Bomba_sodio-potasio","Neurotransmisor","Rodolfo_Llin%C3%A1s","Ley_de_Llin%C3%A1s","C%C3%A9lula_neuroendocrina","C%C3%A9lula_neuroendocrina","Capilar_sangu%C3%ADneo","Sistema_endocrino","Biodiversidad","Crustacea","Insecta","Echinodermata","Vertebrata","Neurodegeneraci%C3%B3n","Envejecimiento_humano","Tejido_nervioso","Trastorno_cognitivo","Enfermedad_neurodegenerativa","Sistema_nervioso","Neurona_sensorial","Interneurona","Neurona_eferente","M%C3%BAsculo","Gl%C3%A1ndula","Circuito_neuronal","Potencial_el%C3%A9ctrico","Est%C3%ADmulo","Percepci%C3%B3n_del_color","Circuito_neuronal","A%C3%B1os_1990","Teor%C3%ADa_del_caos","Atractor","Hopfield_(RNA)","Teor%C3%ADa_hebbiana","Funci%C3%B3n_error","Funci%C3%B3n_gaussiana","Aprendizaje","Olvido#Bases_neurofisiol\u00f3gicas","Excitabilidad_neuronal","Sinapsis","Metro_por_segundo","Metro","Milisegundo","Red_neuronal_biol%C3%B3gica","Circuito","Electroqu%C3%ADmica","Umbral_(percepci%C3%B3n)","Ax%C3%B3n","Circuito_neuronal","Realimentaci%C3%B3n","Cibern%C3%A9tica","Cerebro","Cerebro_humano","Micr%C3%B3metro_(unidad_de_longitud)","Soma_(neurolog%C3%ADa)","Motoneurona","M%C3%A9dula_espinal#Anatom\u00eda_transversal","M%C3%A9dula_espinal","Corteza_cerebral","Cerebelo","Ganglio_espinal","Ganglio_simp%C3%A1tico","Ganglio_parasimp%C3%A1tico","Ganglio_nervioso","Invertebrado","Retina","Neurona_bipolar","Cono_(c%C3%A9lula)","Bast%C3%B3n_(c%C3%A9lula)","GFP","Interneurona","Dendrita","Dendrita","Dendrita","Ganglio_nervioso","C%C3%A9lula_de_Purkinje","Neurotransmisor","Parasimpaticomim%C3%A9tico","Acetilcolina","Noradrenalina","Dopamin%C3%A9rgico","Dopamina","Serotonina","%C3%81cido_%CE%B3-aminobut%C3%ADrico","Motoneurona","M%C3%BAsculo","Neurona_sensorial","Neurona_de_proyecci%C3%B3n","Interneurona","Hip%C3%B3tesis_monofil%C3%A9tica_de_la_neurona","Filo","Hip%C3%B3tesis_polifil%C3%A9tica_de_la_neurona","Cnidaria","Ctenophora","Evoluci%C3%B3n_convergente","Hydrozoa","Epitelio","Porifera","P%C3%B3lipo","Vertebrata","Neurulaci%C3%B3n","Metazoo","Neuroepitelio","Hydra_(animal)","Coral","Annelida","Ganglio_nervioso","Met%C3%A1mero","Interneurona","Encefalizaci%C3%B3n","Arthropoda","Mollusca","Cerebro","Caenorhabditis_elegans","Nematoda","Mil%C3%ADmetro","Drosophila_melanogaster","Etolog%C3%ADa","Alternancia_de_generaciones","Red_neuronal_artificial","Inteligencia_artificial","Sumatorio","Funci%C3%B3n_de_activaci%C3%B3n","Funci%C3%B3n_de_transferencia","C%C3%A9lula_glial","Circuito_neuronal","Neurobiolog%C3%ADa","Neurociencia","Neurog%C3%A9nesis","Trastornos_neurol%C3%B3gicos_relacionados_con_el_gluten","Plasticidad_neuronal","Principio_de_Dale","Sinapsis","Wayback_Machine","ISBN","PubMed_Identifier","Digital_object_identifier","PubMed_Identifier","Digital_object_identifier","PubMed_Identifier","Digital_object_identifier","PubMed_Identifier","Digital_object_identifier","PubMed_Identifier","Digital_object_identifier","Wayback_Machine","ISBN","Bibcode","Digital_object_identifier","ISBN","Wayback_Machine","ISBN","ISBN","PubMed_Central","PubMed_Identifier","Digital_object_identifier","Wayback_Machine","Wikcionario","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica","CIE-11","Medical_Subject_Headings","Terminolog%C3%ADa_Anat%C3%B3mica","Foundational_Model_of_Anatomy"]}
{"url":"Datos_digitales","titulo":"Sistema digital","contenido":"Un sistema digital binario  es un conjunto de dispositivos que son destinados\u200b a la generacion, transmision, manejo, procesamiento y almacenamiento de se\u00f1ales digitales. Tambien, y a diferencia de un sistema analogico, un sistema digital es una combinacion de dispositivos dise\u00f1ados para manipular cantidades fisicas o informacion que se encuentre representada en forma digital; es decir, que solamente pueda tomar valores discretos.  Para el analisis y la sintesis de sistemas digitales binarios se utiliza como herramienta el algebra de Boole.  Para la implementacion de los circuitos digitales, se utilizan puertas logicas (AND, OR y NOT), construidas generalmente a partir de transistores. Estas puertas siguen el comportamiento de funciones basicas booleanas.  Segun el proposito de los sistemas digitales, se clasifican en:  Z = F(X)  Z= valor se\u00f1ales de las salidas; X= valor se\u00f1ales de las entradas; F= circuito transformador de se\u00f1ales (compuertas electronicas)  Z = F(X,Q)  Z= valor se\u00f1ales de las salidas; X= valor se\u00f1ales de las entradas; Q= elementos de memoria (Flip Flops); F= circuito transformador de se\u00f1ales (compuertas electronicas)  Paso 1. Enunciado del problema  Paso 2. Analisis: Especificacion de variables de entrada y de salida  Paso 3. Modelado: Definicion de las funciones de Boole que especifican el comportamiento del sistema  Paso 4. Simplificacion de las funciones de Boole (opcionalmente)  Paso 5. Diagrama logico  Paso 6. Seleccion circuitos integrados  Paso 7. Ensamble del sistema digital (tablero de pruebas o circuito preimpreso)  Paso 8. Pruebas ","snippet":"Un sistema digital binario  es un conjunto de dispositivos que son destinados\u200b a la generacion, transmision, manejo, procesamiento y almacenamiento de se\u00f1ales digitales. Tambien, y a diferencia de un ","enlaces_salientes":["Sistema_digital","Sistema_digital","Sistema_digital","Digital_(se%C3%B1al)","Electr%C3%B3nica_anal%C3%B3gica","Variable_discreta_y_variable_continua","Binario","%C3%81lgebra_de_Boole","Sistema_combinacional","Sistema_secuencial","Memoria_de_computadora","Puerta_l%C3%B3gica","Transistor","%C3%81lgebra_de_Boole","Computadoras","Electr%C3%B3nica_digital","Sistema_anal%C3%B3gico","Ant%C3%B3nimo","Remasterizar","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Manuscrito_Voynich","titulo":"Manuscrito Voynich","contenido":"El manuscrito Voynich es un libro ilustrado, de contenidos desconocidos, escrito por un autor anonimo en un alfabeto no identificado y un idioma incomprensible. Su nombre proviene del comerciante de libros antiguos Wilfrid M. Voynich (1865-1930), quien lo adquirio en 1912. Actualmente se conserva en la Biblioteca Beinecke de libros raros y manuscritos de la Universidad de Yale como MS 408.  La datacion por carbono 14 ha determinado que el pergamino en el cual esta escrito fue fabricado entre 1404 y 1438. El analisis estilistico, tanto de la escritura como de las ilustraciones, ha corroborado su origen en el siglo\u00a0XV y la procedencia de algun pais de Europa Central, posiblemente Alemania o el norte de Italia. Se cree que el emperador Rodolfo II del Sacro Imperio (1555-1612) pago 600 ducados de oro por el, aunque no existe registro de tal operacion, y es seguro que el manuscrito paso a uno de sus consejeros, el medico y farmaceutico Jacobus de Tepenec, cuya firma es debilmente visible en el primer folio. Desde entonces estuvo en varias manos hasta acabar en la biblioteca del Colegio Romano. Alli permanecio mas de dos siglos, cuando en 1912 la coleccion que lo incluia fue adquirida por Wilfrid Voynich.  El manuscrito consta actualmente de unas 240 paginas, algunas de ellas hojas plegables de distintos tama\u00f1os. Las ilustraciones que pueblan la mayoria de las paginas incluyen plantas y hierbas, contenedores farmaceuticos, diagramas astronomicos y zodiacales y extra\u00f1os sistemas de tuberias y ba\u00f1eras poblados por figuras femeninas desnudas. El \u00abidioma\u00bb en que esta escrito, llamado voyniches, obedece la Ley de Zipf al igual que otros lenguajes humanos, pero se distingue de la mayoria de ellos por una entropia anormalmente baja, efecto de un conjunto de regularidades que hacen que la combinacion entre los caracteres sea muy predecible.  El manuscrito Voynich ha sido estudiado por muchos criptografos profesionales, linguistas y aficionados, incluidos descifradores de codigos estadounidenses y britanicos de la Primera y la Segunda Guerra Mundial. Las hipotesis sugeridas abarcan desde un idioma o dialecto desconocido, algun cifrado sofisticado o un enga\u00f1o sin sentido. Ninguna de las muchas soluciones reclamadas han sido verificadas de forma independiente y el manuscrito continua sin descifrarse. El misterio de su significado y origen ha excitado el imaginario popular, convirtiendolo en objeto de estudio y especulacion.  El manuscrito Voynich es un codice de vitela de 225 x 160 mm y 5 cm de grosor.\u200b Tiene una portada hecha de pergamino de piel de cabra que data de los siglos XVIII-XIX, muy probablemente colocada por los jesuitas del Colegio Romano de Roma en reemplazo de una cubierta anterior.\u200b\u200b Ciertos indicios, como los agujeros de gusano, hacen creer que la encuadernacion original estaba hecha de madera y cubierta con un cuero curtido.\u200b Las correas de cuero se agregaron en la decada de 1960 para estabilizar la union y se pegaron encima de las viejas, tal vez originales, fabricadas con algun tipo de fibra.\u200b  El amanuense escribio sobre una vitela preparada cuidosamente, aunque ciertos defectos como contornos concavos, agujeros (algunos de ellos cosidos) y marcas de estiramiento son visibles.\u200b Los analisis realizados bajo microscopio en 2009 y las imagenes multiespectrales tomadas en 2014 concluyeron que no hay signos de borrado de escritura anterior, por lo que el manuscrito no puede ser un palimpsesto.\u200b  El manuscrito actualmente consta de 102 folios organizados en 18 cuadernillos.\u200b Varios bifolios son mas grandes de lo habitual, con pliegues adicionales y, por tanto, mas de las cuatro paginas usuales, y se los conoce como \u00abdesplegables\u00bb. Estos desplegables tienen diferentes dimensiones, con anchos de los bifolios correspondientes que van de tres a cinco paginas (en lugar de dos). Ademas, hay un bifolio de cerca de 45 x 45 cm que tiene un pliegue horizontal adicional.  Cada folio tiene un numero de folio en la esquina superior derecha, con la numeracion del 1 al 116, mientras que las marcas de quire estan numeradas siempre en la esquina inferior derecha del reverso del ultimo folio de cada cuadernillo, excepto en los quires 9 y 20, y se indican con un numero arabigo seguido de un 9 para el latin -us y, a veces, una 'm' entre ellos.\u200b\u200b Es seguro que los numeros de folio y los numeros de quire fueron agregados por diferentes personas, entre los siglos XV y XVI-XVII, y antes de que varios folios y quires se extraviasen.  Detalle de la numeracion de folio (f53r)  Detalle de la numeracion del primer quire (f8v)  Amplie la imagen para ver las marcas de estiramiento en la parte superior del f44r  Faltan un total de 14 folios en el manuscrito: tres bifolios (ff. 59-64) que deberian haber estado en el centro del quire 8, dos (ff. 109-110) que estaban en el centro del quire 20, dos mas (ff. 91-92 y 97-98) que constituian, respectivamente, los quires 16 y 18 y, por ultimos, dos folios individuales que fueron arrancados despues de la encuadernacion (ff. 12 y 74).\u200b\u200b Los huecos en la numeracion de los folios y cuadernillos indican que la misma se agrego cuando los folios faltantes aun estaban disponibles.  Hay razones fuertes para creer que el orden actual de folios y quires es diferente al orden original, entre ellas:\u200b\u200b  Rene Zandbergen ha sugerido una reconstruccion tentativa de la historia codicologica del manuscrito:\u200b  En 2009, el analisis de datacion por radiocarbono de cuatro muestras del manuscrito (de los folios 8, 26, 47 y 68) revelo que el pergamino en que fue escrito data de entre 1404 y 1438 con un 95% de probabilidad.\u200b Esto invalida definitivamente la teoria, sostenida por los primeros investigadores de Voynich y luego desechada, de que su autor fuera el cientifico ingles Roger Bacon, muerto en 1294. Su procedencia de la primera mitad del siglo\u00a0XV ya habia sido se\u00f1alada por el reconocido historiador del arte Erwin Panofsky basandose en un analisis de las ilustraciones.\u200b Panofsky, de acuerdo a una carta escrita por Ethel Voynich hacia 1932, pensaba tambien que habia sido escrito en la \u00abesquina suroeste de Europa: Espa\u00f1a, Portugal, Catalu\u00f1a o Provenza; pero muy probablemente en Espa\u00f1a\u00bb y detecto ciertas influencias judeo-arabes y holandesas.\u200b Sin embargo, cuando en 1954 se le volvio a preguntar sobre la cuestion, su respuesta fue que el manuscrito se produjo en Alemania.\u200b A favor de la teoria de procedencia alemana esta la representacion del ciclo del zodiaco, con ilustraciones similares que pueden rastrearse en manuscritos alemanes del siglo\u00a0XV, y la denominada \u00abescritura extra\u00f1a\u00bb (anotaciones realizadas con caracteres latinos, aunque es muy probable que pertenezcan a un propietario posterior).\u200b Por otro lado, un historiador moderno de la botanica, Sergio Toresella, reconoce un estilo italiano en la caligrafia y los dibujos de hierbas, opinion tambien compartida por el historiador Alain Touwaide. A favor de la influencia italiana se esgrime el castillo de almenas de golondrina, o gibelinas, dibujado en la llamada \u00abpagina de rosetas\u00bb del manuscrito. Este estilo arquitectonico domina el norte de Italia y esta asociado con la familia Scaliger, en la region alrededor de Verona, desde el siglo\u00a0XIV en adelante. Ambas teorias de procedencia no son necesariamente excluyentes. Para Rene Zandbergen, el origen del manuscrito bien podria ser calificado de \u00abalpino\u00bb, con una mezcla de influencias italianas y alemanas.\u200b El catalogo de Beinecke se limita a se\u00f1alar que fue escrito en Europa Central.\u200b  El cientifico Johannes Marcus Marci, en una carta fechada en 1665 y de la que luego se hablara, indica que el emperador Rodolfo II de Habsburgo compro el manuscrito por una suma de 600 ducados.\u200b Esta informacion la habia obtenido de Raphael Mnisovsky, un personaje interesado en la alquimia y en la escritura secreta que fue maestro del futuro emperador Fernando de Habsburgo. No se ha encontrado registro de esta transaccion en los libros de contabilidad resumidos de las cuentas de la corte de Rodolfo II. Las afirmaciones que hacen a John Dee o a su socio Edward Kelley los vendedores del manuscrito deben descartarse como una ocurrencia imaginativa de Wilfrid Voynich, sin ningun fundamento real.\u200b En cualquier caso, es posible que la suma monetaria mencionada por Marci se haya pagado por un conjunto mas grande de libros, entre los que el manuscrito Voynich pudo estar incluido.  El primer propietario seguro del manuscrito es el quimico y farmaceutico Jacobus Horcicky de Tepenec.\u200b En 1608 Jacobus curo de una grave enfermedad a Rodolfo II y este, en recompensa, lo elevo a la nobleza menor y le permitio llamarse a si mismo \u00abde Tepenec\u00bb. Su firma en el margen inferior del primer folio se ha desvanecido y solo es visible bajo luz ultravioleta, pero debe ser posterior a su ennoblecimiento. Quizas el manuscrito le fue concedido con la esperanza de que pudiera descifrarlo o bien decidio tomarlo por su cuenta en concepto de pago de la sustanciosa deuda que el emperador tenia con el. A su muerte, en 1622, Jacobus dejo todas sus pertenencias a los jesuitas en Praga y Melnik, pero para entonces parece que el manuscrito ya no estaba en sus manos.  Una carta de George Barschius, del 21 de abril de 1639, revela que el era de hecho el propietario del manuscrito.\u200b\u200b A\u00f1o y medio antes le habia enviado al jesuita Athanasius Kircher una transcripcion parcial del mismo, confiando en que el podria traducirlo.\u200b Su descripcion del manuscrito es muy breve:  Barschius trabajo como relator de la corte hasta 1646 y, a su muerte, dejo a su amigo Marci toda su coleccion alquimica y biblioteca, incluyendo el manuscrito.  Johannes Marci Marci (1595-1667) estuvo interesado por el manuscrito muchos a\u00f1os antes de que cayese en sus manos, cuando Mnisovsky todavia estaba vivo y Barschius era su propietario.\u200b El 19 de agosto de 1665 lo envio a su amigo Athanasius Kircher para que lo descifrara, junto con un carta para el y las notas de sus propios intentos de traduccion (que no se han conservado).\u200b Murio en abril de 1667.  Athanasius Kircher nacio en 1601 o 1602 en Alemania y, despues de algunos viajes aventureros, llego a Roma en 1635, donde permaneceria hasta su muerte en el Colegio Romano.\u200b Se conserva una carta suya del 12 de marzo de 1639 dirigida a Theodor Moretus, agente de quien por entonces era propietario del manuscrito, George Barschius.\u200b Kircher comenta que no tuvo exito en descifrar el \u00ablibro lleno de esteganografia misteriosa\u00bb que habia recibido, pero tal vez podria hacerlo mas adelante. Esta es la referencia del manuscrito Voynich mas antigua que se conoce:\u200b  En 1651 se dono a los jesuitas del Colegio Romano una coleccion de articulos varios y Kircher fue elegido para regentarla.\u200b\u200b Despues de 1702 el nuevo custodio de la coleccion, Filippo Buonannise, se referia a una de las habitaciones del museo como \u00abuna sala llena de manuscritos, en parte antiguos y en pergamino, libros en varios idiomas, [etc.]\u00bb. Todo indica que el manuscrito Voynich debio estar entre los libros de Kircher que se trasladaron a este incipiente museo y que, algun momento entre 1824 y 1870, los jesuitas reemplazaron su cubierta de madera por estar infestada con gusanos, tal como se hizo con un gran numero de manuscritos de la biblioteca.\u200b  Al menos tres colecciones de la parte principal de la biblioteca del Colegio Romano se salvaron de la confiscacion de Victor Manuel II de Italia, el 20 de octubre de 1873, y es casi seguro que el manuscrito Voynich estuvo entre la segunda coleccion, mas peque\u00f1a, de manuscritos clasicos y humanistas bastante antiguos.\u200b\u200b Muchos ejemplares de esta y otra coleccion llevaban etiquetas mecanografiadas que las identificaban como parte de la biblioteca privada de Petrus Beckx, quien como superior general de la Compa\u00f1ia de Jesus habia obtenido autorizacion del rey para conservar una gran cantidad de libros del Colegio Romano. En 1903 los jesuitas decidieron vender esta coleccion al Vaticano, pero la transaccion no se completo hasta 1912, cuando Wilfrid Voynich entro en escena.  Wilfrid Michael Voynich, nacido el 31 de octubre de 1865 en la actual Lituania, se habia convertido en un anticuario comerciante de libros despues de dejar atras su pasado revolucionario en el circulo de exiliados rusos.\u200b Publico su primer catalogo en 1898 y dos a\u00f1os despues abrio una libreria en Londres. A partir de entonces se desperto su interes por los libros \u00abdesconocidos, perdidos o no descritos\u00bb. En 1908 adquirio una importante libreria de anticuario en Florencia, ciudad donde tambien estuvo trabajando el padre jesuita Joseph Strickland, exalumno del Colegio Mondragone. Gracias a la recomendacion de Strickland, en 1911 o 1912 Voynich tuvo la oportunidad de adquirir una valiosa coleccion de alrededor de 30 libros impresos y 380 manuscritos, almacenados muy probablemente en la villa Mondragone de Frascati (Italia), pero con la unica condicion de mantener absoluto secreto sobre este acuerdo.\u200b\u200b Ello obligo a Wilfrid Voynich a inventar otra historia sobre la fuente de los manuscritos y afirmar, en repetidas ocasiones, que el mismo los habia descubierto en unos cofres de un \u00abantiguo castillo del sur de Europa\u00bb o en Austria. La historia verdadera de la adquisicion de esta importante coleccion, en la cual estaba incluido el manuscrito Voynich, salio a la luz despues de la muerte de Voynich.  Despues de vender algunos ejemplares, Voynich se llevo toda la coleccion a Londres para mostrarla a potenciales compradores interesados. Se mudo a Estados Unidos despues de la Primera Guerra Mundial y organizo varias exposiciones mostrando unos 280 de sus libros y manuscritos mas valiosos. El \u00abmanuscrito cifrado de Roger Bacon\u00bb, como se lo conocia, fue presentado en 1921 en el Colegio de Medicos de Filadelfia.  Voynich murio en 1930 y, aproximadamente un a\u00f1o despues, su esposa Ethel llevo fotografias del manuscrito a Henri Hyvernat, profesor de la Universidad Catolica de Washington.\u200b Tanto el como su asistente Theodore Petersen se sintieron intrigados por el. Petersen guardo la copia durante un tiempo e hizo una transcripcion completa a mano. El manuscrito fue heredado por la amiga de Ethel y secretaria de Voynich, Anne M. Nill, quien el 12 de julio de 1961 lo vendio al librero neoyorquino Hans Peter Kraus por una suma de 24\u00a0500 dolares. Sus intentos para revenderlo por 160\u00a0000 dolares no prosperaron y, en 1969, Kraus dono el manuscrito a la Biblioteca Beinecke de libros raros y manuscritos de la Universidad de Yale. En 1976 se realizo una primera copia en microfilm a pedido de Stephen Skinner. El manuscrito fue digitalizado en color en 2004 y 2014 y las imagenes puestas a disposicion de forma gratuita en el sitio web de la Biblioteca Beinecke. Estuvo en exhibicion publica por primera vez desde la vida de Voynich entre el 10 de noviembre de 2014 hasta el 26 de febrero de 2015, en la Biblioteca Folger Shakespeare de Washington\u00a0D.\u00a0C.  En diciembre de 2015, la editorial espa\u00f1ola Siloe, con sede en Burgos, fue elegida por la Universidad de Yale para hacer una edicion facsimilar del manuscrito.\u200b El 3 de noviembre de 2017 Siloe anuncio la culminacion de la unica replica integra del codice, del que se pusieron en circulacion 898 ejemplares.\u200b  A lo largo de la historia se han propuesto algunas hipotesis tentativas sobre el posible autor del manuscrito. Pero la reciente datacion del manuscrito, que situa su origen en el primer tercio del siglo\u00a0XV, ha echado por tierra todas ellas. Segun Rene Zandbergen, \u00abtratar de identificar a la persona que escribio el manuscrito no es probable que conduzca al exito\u00bb y \u00abesta lejos de ser seguro que el autor sea alguien conocido\u00bb.\u200b Tambien se ha debatido acerca de si en su produccion participaron varias personas o si las ilustraciones fueron hechas por la misma persona que escribio el texto. A este respecto, los estudios de Prescott Currier y otros mas recientes han detectado distintas manos involucradas en la escritura, por lo que la autoria podria ser compartida (sobre esta cuestion, vease: Descripcion general). Alternativamente, existe la posibilidad de que el manuscrito actual fuese una copia en limpio de un borrador hecho por otra persona.\u200b  Segun la carta que escribio Marcus Marci a Athanasius Kircher en 1665, el emperador Rodolfo adquirio el manuscrito creyendo que era obra del fraile Roger Bacon, filosofo y cientifico que vivio en Inglaterra durante el siglo\u00a0XIII.\u200b Aunque Marci prefirio no opinar sobre la cuestion, diciendo que \u00absobre este punto suspendo el juicio\u00bb, Wilfrid Voynich defendio con ahinco que el manuscrito habia sido escrito por Bacon a mediados del siglo\u00a0XIII como registro de sus descubrimientos secretos de la ciencia o la magia.\u200b Ciertamente, el fraile ingles estaba muy interesado en la escritura encubierta o cifrada, que consideraba necesaria para ocultar grandes secretos y evitar que fuesen abusados por la humanidad.\u200b  William Newbold, al publicar su propuesta de solucion del texto, respaldo la hipotesis de la autoria de Bacon y aseguro que el manuscrito contenia investigaciones cientificas novedosas e inaceptables para la iglesia.\u200b Asi, la hipotesis baconiana se volvio popular, y aun cuando no tuviese evidencia documental para sostenerse, tanto John Manfred Manly como John Tiltman consideraron que tampoco existian pruebas en contra de ella.\u200b Fue principalmente tras la refutacion del desciframiento de Newbold, en 1931, cuando comenzo a cambiar el estado de la cuestion. En 1954 Panofsky afirmaba que \u00abla teoria de Roger Bacon esta, en mi opinion, en desacuerdo con todos los hechos disponibles y ha sido refutada de manera convincente por el Sr. Manly\u00bb, mientras que tres a\u00f1os despues el historiador de la ciencia Charles Singer califico de \u00abtonteria\u00bb toda sugerencia de un conocimiento del microscopio por parte del autor del manuscrito (segun Newbold, Bacon habia utilizado uno para cifrar el texto escondiendo diminutos caracteres taquigraficos en cada glifo).\u200b  Como se explico anteriormente (vease: Historia y propietarios del manuscrito), Voynich concluyo que el vendedor del manuscrito fue John Dee, conocido por ser propietario de una gran coleccion de manuscritos de Bacon.\u200b En 1582 Dee se habia asociado con Edward Kelley, que afirmaba ser capaz de invocar a los angeles con un cristal y mantener largas conversaciones con ellos en un lenguaje especial angelico, llamado enoquiano, que Dee se encargaba de registrar escrupulosamente.\u200b En la decada de 1970 Robert Brumbaugh, profesor de filosofia medieval en la Universidad de Yale, propuso que el manuscrito databa del siglo\u00a0XVI y habia sido producido, muy probablemente, por Dee o su socio Kelley con el objetivo de venderlo a Rodolfo II a cambio de una sustanciosa suma de dinero.\u200b\u200b Brumbaugh sostuvo que el nombre de Roger Bacon, que dice haber descifrado en el ultimo folio del manuscrito, fue \u00abplantado\u00bb de tal manera que fuese descubierto facilmente por los eruditos del emperador y encubriese la falsificacion.\u200b  Una variante de la hipotesis de Dee y Kelley es defendida por Tim Mervyn. Segun Mervyn, en 1563 Dee habia visitado al emperador Maximiliano II, padre de Rodolfo, y le propuso presentarle un compendio de temas que, penso, le divertirian al emperador, como un herbario fantastico o dibujos de ninfas desnudas.\u200b Aunque el emperador murio en 1575 y la obra quedo inacabada, en 1589 Dee traspaso estos dibujos a Kelley, junto con ciertos libros arcanos de su autoria.\u200b Esto constituyo la \u00abmateria prima\u00bb con la que Kelley elaboro el manuscrito, ayudado por el filosofo y humanista italiano Francesco Pucci, a quien habia conocido en Praga en el verano de 1585.\u200b Luego ambos agregaron paginas adicionales para producir un volumen digno de un posible patrocinador, concretamente nuevo material ilustrado (identificado por Mervyn como los dibujos menos pulidos de una seccion astrologica) y las ultimas partes no ilustradas de un manuscrito.\u200b  En 1945 Leonell Strong propuso que el manuscrito estaba cifrado desde un ingles medieval y su autor era un medico y astrologo del siglo\u00a0XVI llamado Anthony Ascham, que habia publicado varios almanaques, obras astrologicas y un herbario y cuyo nombre, aseguraba, estaba oculto en el f93 del manuscrito.\u200b Sin embargo, su solucion fue rechazada enfaticamente por los investigadores.  El manuscrito fue escrito de arriba abajo y de izquierda a derecha, generalmente linea por linea, sin el uso de ninguna tecnica para crear renglones rectos, aunque los margenes izquierdos tienden a estar bastante alineados.\u200b El texto esta estructurado en parrafos cortos formados por grupos de caracteres separados mediante espacios y rara vez presenta enmiendas o correcciones. El sistema de escritura, que se analiza en el proximo apartado, no tiene precedentes en ningun otro documento sobreviviente de la epoca.  Adicionalmente, los investigadores han llamado la atencion sobre los siguientes elementos:\u200b  Estrellas con sus respectivas etiquetas en el f68r2  Titulo en el f19v  Segun Betty McKaig, el manuscrito esta escrito en \u00abuna escritura bellamente simetrica que se asemeja ligeramente a la escritura usada en Italia en el 1500\u00bb.\u200b El herbolario Sergio Toresella tambien opina que la caligrafia es de una mano humanista italiana del siglo\u00a0XV y que todo el texto, aparentemente, fue escrito por una misma persona.\u200b Aunque con reservas, la suposicion de una sola autoria tambien era sostenida por Panofsky en 1954.\u200b La ruptura llego en la decada de 1970, cuando Prescott Currier identifico al menos dos manos distintas, que llamo 1 y 2, escribiendo en dos dialectos diferenciados, A y B respectivamente.\u200b\u200b En abril de 2020 la medievalista Lisa Fagin Davis realizo un estudio mas riguroso sobre todas las paginas del manuscrito y encontro tres manos adicionales, llamadas 3, 4 y 5.\u200b\u200b Salvo unas pocas excepciones, la division entre las diferentes manos es esencialmente a lo largo de los bifolios.  Si bien el sistema de escritura del manuscrito Voynich es esencialmente unico, muchos de los glifos guardan similitudes con formas escritas conocidas. Una parte de ellos se asemejan a caracteres latinos (a, c, i, m, n, o), otros recuerdan a numeros arabigos (2, 4, 8, 9) \u2014cuyo uso se constata en una amplia variedad de codigos y cifrados\u2014 o a ciertas abreviaturas de amanuense en uso durante la Edad Media.\u200b\u200b Unos pocos caracteres tambien se han asociado a simbolos alquimicos,\u200b aunque no es seguro que estos simbolos estuviesen en uso durante la epoca en que se escribio el manuscrito.\u200b Existe un conjunto particular de cuatro glifos (transcriptos como f, k, p y t) que ascienden por encima de la altura habitual y, por analogia, han recibido el nombre de \u00abcaracteres de horca\u00bb. Estos glifos predominan como iniciales de parrafos y a veces estan adornados con bucles adicionales.\u200b Tambien se detectan formas compuestas y ligaduras.\u200b Mas intrigantes son las dos iniciales resaltadas en rojo en la primera pagina del manuscrito (f1r), que no vuelven a aparecer en el texto. Uno de ellas es muy similar al antiguo simbolo de Aries, omnipresente en los textos latinos sobre astrologia y astronomia y a veces utilizado como marcador de enfasis al inicio de un parrafo.\u200b  La tarea de transcripcion es particularmente problematica.\u200b No siempre es facil decidir si dos glifos de aspecto muy similar son diferentes o simples variaciones producidas por la escritura a mano o si ciertas \u00abligaduras\u00bb estan destinadas a ser caracteres individuales. Tampoco los espacios entre las palabras estan claros en todos los casos. Esta incertidumbre sobre lo que constituye un solo caracter en el texto voyniches ha sido enfocada de distintas maneras por los alfabeto de transcripcion. El mas difundido actualmente, el EVA o Alfabeto Europeo de Voynich, distingue entre veintiseis caracteres basicos y casi una centena de glifos extra\u00f1os de aparicion muy infrecuente o \u00abbichos raros\u00bb, generalmente resultado de adornos y errores de trazado en glifos conocidos o de ligaduras entre ellos. En linea con las limitaciones descritas, cabe aclarar que EVA fue dise\u00f1ado para representar de manera electronica las formas que se ven en el manuscrito y permitir que el texto transcripto sea pronunciable en gran medida, no para \u00abhablar voyniches\u00bb ni para identificar unidades semanticas o foneticas.  Las palabras tienen un promedio de cuatro o cinco caracteres de longitud.\u200b Son bastante raras las palabras de un solo caracter (ocurren principalmente con s e y) y excepcionales las que tienen mas de siete u ocho. La distribucion de frecuencia de un solo caracter en los alfabetos de transliteracion mas importantes no difiere sustantivamente de la que exhiben idiomas europeos corrientes, aunque la caida en la frecuencia parece ser un poco mas pronunciada.\u200b\u200b El texto tambien cumple con la Ley de Zipf, que determina que si las palabras que se encuentran en un texto se enumeran en funcion de su frecuencia y se clasifican en orden de frecuencia decreciente, entonces el producto del rango y la frecuencia debe ser el mismo para todas las palabras.\u200b Esto acerca al voyniches a un lenguaje humano, pero no garantiza necesariamente que el texto tenga significado.\u200b  Una de las singularidades del voyniches es que la forma en que los glifos se concatenan para formar palabras sigue un rigido conjunto de regularidades. Algunos glifos aparecen de forma caracteristica al principio, en la mitad o al final de las palabras, y en ciertas secuencias preferidas.\u200b\u200b Esto se refleja en los valores fantasticamente bajos de entropia por glifo que exhibe el texto del manuscrito, unicamente comparables a los de ciertas lenguas asiaticas, como el hawaiano y el filipino.\u200b\u200b Asi, segun explican Luke Lindemann y Claire Bowen en un trabajo publicado en 2020, los caracteres del voyniches se combinan de manera extremadamente predecible:  La siguiente lista recoge varios de los patrones de preferencia aludidos:\u200b\u200b  El investigador Jorge Stolfi descubrio una estructura subyacente a la forma en que se combinan los glifos.\u200b\u200b En efecto, la mayoria de las palabras del texto constan de tres capas, \u00abcorteza\u00bb (prefijo), \u00abmanto\u00bb (raiz) y \u00abnucleo\u00bb (sufijo), de las cuales la primera y la tercera estan formadas por lo que el llama \u00abcaracteres suaves\u00bb y el manto por \u00abcaracteres duros\u00bb. Bajo este modelo, las palabras pueden descomponerse, con escasas excepciones, como prefijo + sufijo, prefijo + raiz, raiz + sufijo o prefijo + raiz + sufijo.  Ciertas regularidades del voyniches caen bajo el paradigma de la \u00ablinea como entidad funcional\u00bb. Este concepto fue acu\u00f1ado por Currier con base en las siguientes observaciones:\u200b  Otra caracteristica del voyniches es la repetibilidad. Una misma palabra puede repetirse dos, tres o mas veces consecutivas en una misma linea o en lineas adyacentes, a veces con peque\u00f1os cambios de uno o dos caracteres.\u200b\u200b  Detalle de una de las palabras repetidas en el f78r. En rojo, la palabra qokedy. En amarillo, algunas de sus variantes como qokeedy, qoteedy o qotedy.  Prescott Currier noto diferencias estadisticas significativas entre las secciones escritas por la mano 1 y por la mano 2 en la seccion herbaria y llamo a estas diferentes formas de voyniches como \u00abLengua A\u00bb y \u00abLengua B\u00bb, respectivamente.\u200b Analisis mas recientes han confirmado las diferencias se\u00f1aladas por Currier.\u200b Por ejemplo, las palabras de A tienden a ser mas cortas que las de B; si en B el sufijo  dy abunda en las palabras mas frecuentes, en A es casi inexistente. Sin embargo, los dialectos A y B no son necesariamente homogeneos internamente.\u200b Palabras como cheol o terminadas -eol son mucho mas comunes en el A de la seccion farmaceutica que en el A del herbario, donde cth es frecuente como inicial de una palabra. Del mismo modo, la seccion de recetas (lengua B) parece estar compuesta por dos partes diferenciadas, principalmente, por la frecuencia de aparicion de la palabra qokeey.  En ciertas paginas del manuscrito se encuentran caracteres y cadenas de texto aisladas \u2014marginalia\u2014 cuyo analisis pormenorizado puede aportar datos importantes sobre la procedencia del mismo:\u200b  La palabra rot en el tallo de una planta (f4r).  El mes correspondiente a Geminis esta escrito como jong (f72r2). Es la evidencia mas solida de que el idioma es frances del norte.\u200b  Marginalia en f66r. La persona dibujada parece alguien que esta al borde de la muerte o muy enfermo.  La ultima escritura adicional, en el f116v, es uno de los textos mas debatidos y controvertidos de todo el manuscrito.\u200b Hay una primera secuencia de texto en el margen superior de solo tres palabras y mas abajo un parrafo de tres lineas; en la primera y la segunda linea las palabras se separan por una cruz '+', mientras que en la tercera las dos primeras palabras estan en voyniches y se vuelven a usar espacios como separador.\u200b En la esquina superior izquierda del folio tambien aparecen algunos bocetos peque\u00f1os: un objeto alargado que podria ser un frasco, un animal cuadrupedo similar a una cabra y una figura femenina desnuda. Existen muchas lecturas y transcripciones divergentes de esta marginalia, pero en ningun caso el texto se ha logrado traducir integramente.\u200b Zandebergen describe el idioma como una \u00abmezcla de pseudo-latin y aleman\u00bb.\u200b Se acostumbra a llamarlo \u00abmichitones\u00bb en referencia a sus primeras palabras: michiton oladabas.  Detalle de la escritura adicional en el f116v (contraste mejorado).  Con excepcion de los folios 1r, 76r, 85r1, 86v6 y 86v5, todas las paginas del manuscrito estan ilustradas.\u200b Aunque ciertos autores han especulado con la posibilidad de que las ilustraciones se hayan introducido para despistar al posible descifrador y no guarden relacion con el texto adjunto, generalmente se admite que ambos elementos deben formar un todo relacionado, habilitando la division del manuscrito en seis secciones tematicas:\u200b\u200b  No hay duda de que el contorno de cada ilustracion se dibujo antes de la fase de escritura, ya que el texto evita cuidadosamente los dibujos,\u200b y para investigadores como Albert Howard Carter, William Friedman o John Tiltman es muy probable que ambas tareas hayan recaido en la misma persona.\u200b Respecto a la pintura, Stolfi sugiere que se realizo en varias etapas e involucro a un \u00abpintor claro\u00bb, mas prolijo, y un \u00abpintor pesado\u00bb, mas descuidado.\u200b Si en esta etapa no participaron los compositores originales del manuscrito, entonces los colores pudieron agregarse mas o menos arbitrariamente y dificultar o enga\u00f1ar a quienes buscan identificar las plantas de la seccion herbaria.\u200b  Muchos autores han calificado las ilustraciones como \u00abtorpes\u00bb, \u00abtoscas\u00bb e \u00abinfantiles\u00bb, hechas por una persona carente de habilidad artistica, en cualquier caso de baja calidad si se las compara con otras producciones medievales.\u200b Wilfrid Voynich admitio que esta caracteristica lo hacia un \u00abpatito feo\u00bb entre los demas manuscritos, lo cual aumento su interes por el, y en 1957 el historiador britanico Charles Singer sentenciaba que \u00ablas figuras de las plantas no son botanicas en absoluto, sino del tipo que uno hace al garabatear o cuando los ni\u00f1os dibujan plantas\u00bb.\u200b Por el contrario, para Carter las ilustraciones \u00abestan hechas con gran cuidado, no con la atencion de proporcionar una imagen agradable, sino mas bien con atencion a la precision de los detalles\u00bb.\u200b  El analisis quimico realizado en 2009 por el laboratorio de investigacion McCrone Associates, contratado por la Universidad de Yale, revelo que la tinta utilizada en el cuerpo principal y los dibujos estaba hecha a base de oxido de hierro, el pigmento azul se componia principalmente de azurita molida, con peque\u00f1as trazas de cuprita, el verde era un complejo organico de cobre con compuestos de esta\u00f1o y hierro, ademas de sulfato y carbonato de calcio y pigmento azul, y para el marron rojizo se utilizo oxido de plomo con compuestos de potasio, sulfuro de hierro y palmierita.\u200b  Las paginas de la seccion herbaria contienen una, excepcionalmente dos, ilustraciones de plantas y hierbas junto a parrafos de texto que las evitan cuidadosamente.\u200b\u200b En este sentido, la composicion texto-imagen no difiere mucho a la de otros manuscritos de hierbas producidos entre la Antiguedad tardia y el Renacimiento temprano.\u200b  Los botanicos O'Neill y Holm llevaron a cabo las primeras identificaciones tentativas de las hierbas en la decada de 1940.\u200b\u200b Numerosos especialistas y aficionados se han sumado a esta tarea comparando las ilustraciones con ejemplares de la naturaleza o bien con dibujos de herbarios medievales.\u200b  Planta del f6v, identificada como Ricinus communis  Planta del f9v, identificada como Viola tricolor  Planta del f16r, identificada como Cannabis sativa  Planta del f55r  Planta del f14v  Dos ilustraciones dibujadas en el f43v  Cabe destacar que algunas plantas exhiben estructuras que son imposibles en la naturaleza, como tallos que se bifurcan y luevo vuelven a unirse o que nacen directamente de raices cortadas transversalmente, a similitud del tocon de un arbol. Otras estan adornadas por elementos que podrian ser mnemotecnicos o simbolicos (asociados al nombre o uso medicinal de la hierba en cuestion): un peque\u00f1o animal similar a un dragon acompa\u00f1ando a la ilustracion del f25v, dos serpientes debajo de la planta del f49v o raices que recuerdan a unas garras (f1v), unas alas desplegadas (f46v) o un leon (f90v), a veces con rostros humanos adjuntos a ellas (f33r, 89r1).\u200b Existen paralelismos conocidos de esta practica en varios herbarios antiguos. D' Imperio tambien detecta un interes por la simetria en la disposicion de los tallos, hojas y raices.\u200b  Detalle de un raiz \u00abimposible\u00bb (f9r)  Dragon comiendo de una hoja (f25v)  Raiz similar a unas alas desplegadas (f46v)  Raiz similar a un leon (f90v)  Raiz con dos rostros humanos adjuntos a ella (f33r)  Una parte de la seccion astronomica se compone por dibujos circulares cargados de estrellas dispersas o agrupadas en patrones radiales, generalmente con sus respectivas etiquetas.\u200b\u200b En el centro de estos diagramas se han incluido los rostros del sol o la luna, o bien alguna figura parecida a una flor, una estrella o un espiral. El texto fluye concentricamente alrededor de la circunferencia exterior y, dentro del circulo, de manera radial, aunque varios folios tambien presentan algun parrafo por fuera del dibujo.  Detalle del f68v1  Detalle del f68r2  Detalle de las Pleyades en el diagrama del f68r3\u200b  La otra parte de esta seccion contiene diagramas circulares con un emblema de un signo del zodiaco en el centro y dos o tres secciones concentricas cargadas con peque\u00f1as figuras de ninfas o mujeres, casi siempre desnudas o bien con ropa visible que incluye velos, sombreros, coronas y vestidos de considerable elaboracion, sosteniendo una estrella y a veces saliendo de unos objetos que parecen ser latas o canastos.\u200b\u200b El zodiaco no comienza con Aries, sino con Piscis, lo cual es muy inusual.\u200b Ademas, faltan las ilustraciones de Capricornio y Acuario, pero al parecer el folio donde deberian haber aparecido esta perdido. El nombre del mes correspondiente a cada signo esta escrito en una letra diferente al voyniches y probablemente posterior.\u200b  Vista del f70v2, 'Piscis'  Vista del f71r, 'Aries'  Detalle del emblema de Tauro comiendo de un pesebre (f72r1).  La seccion cosmologica comprende un conjunto de diagramas geometricos, en su mayoria circulares, que no pueden clasificarse facilmente como ilustraciones astronomicas o zodiacales.\u200b\u200b El uso del termino \u00abcosmologico\u00bb para calificar estas paginas proviene de William Newbold, en su obra postuma The Cipher of Roger Bacon (1928).\u200b La mas imponente de ellas se conoce como la \u00abpagina de rosetas\u00bb (f85v-86r), un desplegable de seis paginas con un gran e intrincado dibujo circular en el centro, que incluye seis estructuras en forma de torre sosteniendo un plano lleno de estrellas, rodeado de ocho dibujos circulares algo mas peque\u00f1os, todos conectados entre si por lo que parecen caminos, tubos y columnas parciales.\u200b\u200b Cabe destacar que el circulo superior derecho y algunos de los caminos de conexion tienen dibujos de peque\u00f1os edificios y murallas, incluido un castillo con almenas gibelinas que ha servido para ubicar el origen geografico del manuscrito al norte de Italia y Europa Central.\u200b Otros diagramas de esta seccion (f68v3, f86v3 y f85v-86r) tambien parecen contener mapas de T en O.\u200b  Algunos de estos diagramas han despertado especulaciones. Apoyado por la sugerencia que le hiciera el profesor Eric Doolittle, William Newbold identifico la ilustracion del f68v3 con la galaxia de Andromeda y produjo un descifrado del texto que corroboro esta apreciacion.\u200b Asi se intentaba demostrar que Roger Bacon, el supuesto autor del manuscrito, habia podido fabricar un telescopio y observar la estructura espiral de la galaxia.\u200b Lo cierto, sin embargo, es que la galaxia de Andromeda es visible desde el planeta con forma eliptica y sus brazos espirales fueron descubiertos recien en el siglo\u00a0XX, con el uso de telescopios potentes y astrofotografia.\u200b  La \u00abpagina de rosetas\u00bb desplegada  Diagrama cosmologico en f69v  Posible mapa T-O en f68v3  La seccion biologica contiene secuencias de figuras femeninas desnudas, de abdomen distendido y caderas abultadas, con el pelo suelto o recogido con un tocado, ejecutando diversas poses dentro de lo que parece ser un complejo de tuberias, vasijas y ba\u00f1eras que transportan liquidos.\u200b\u200b En ocasiones estas mujeres sostienen algun objeto, como una cruz, una flor, un anillo o un artefacto circular.  La investigadora Mary D' Imperio ha calificado a los dibujos de esta seccion como de \u00ablos mas misteriosos y extra\u00f1os de todos los grandes enigmas con los que nos enfrenta el manuscrito Voynich\u00bb.\u200b Se han relacionado con las doctrinas de la medicina humoral galenica, las propiedades curativas de ciertas plantas, los ba\u00f1os terapeuticos e incluso con organos de la anatomia humana.\u200b  Vista del f83v  Detalle del f78r  Detalle del f77v  La seccion farmaceutica se compone por un total de cincuenta y siete filas de peque\u00f1as partes de hierbas, como raices y hojas u ocasionalmente plantas completas, alineadas respectivamente a unos objetos que recuerdan a contenedores o recipientes farmaceuticos, dibujados en el margen izquierdo del folio.\u200b\u200b Estos envases presentan un dise\u00f1o geometrico y ornamentado, con varias secciones cilindricas que se estrechan hacia arriba o en una forma mas complicada, a veces con soportes o pies. Mientras algunos de ellos parecen vacios o tienen una tapa, otros almacenan algun liquido que se ha pintado de verde o azul. Los recipientes mas simples tambien han sido comparados con los primeros microscopios.  Varias raices junto a un recipiente farmaceutico (detalle del f88r)  Recipiente en f89v1  Recipiente en f89v2  Recipiente en f99r  La ultima seccion del manuscrito consta unicamente de texto con estrellas dibujadas al margen.\u200b La mayoria de ellas tiene una cola y de siete a ocho puntas, estan pintadas enteramente de rojo o bien llevan un centro rojo, amarillo deste\u00f1ido o un punto de tinta negra. Casi siempre hay una acompa\u00f1ando el inicio de un nuevo parrafo, a modo de vi\u00f1eta.  Vista del f106r  Detalle del f107r  El profesor estadounidense William Newbold fue uno de los primeros eruditos en recibir copias del manuscrito por parte de su descubridor.\u200b\u200b Trabajo en el y en otros textos alquimicos atribuidos a Roger Bacon durante varios a\u00f1os mas antes de su repentina muerte, en 1926. El proceso de descifrado que ideo consistia en examinar cada glifo individual bajo una lupa potente e identificar unos supuestos caracteres taquigraficos, aparentemente basados en un sistema griego de abreviaturas.\u200b Este arreglo se transformaba en subsiguientes etapas hasta llegar a un anagrama que, resuelto, devolvia el texto plano en latin.  Newbold concluyo que el manuscrito habia sido escrito por Roger Bacon utilizando un microscopio de extraordinaria potencia. Su contenido incluia descubrimientos tan sensacionales como la descripcion de un eclipse solar anular, el descubrimiento de los gametos humanos o la forma espiral de la galaxia de Andromeda, que vio representada en el diagrama circular del f68r.  A pesar del exito inicial de su teoria, que encontro la aceptacion de Wilfrid Voynich y un abanico de especialistas en Bacon y filosofia medieval, en 1931 John Manfred Manly publico una refutacion completa en la revista Speculum.\u200b Alli explico que los diminutos trazos que Newbold habia interpretado como signos taquigraficos griegos eran simples grietas de la tinta en la superficie rugosa del pergamino y rechazo su procedimiento para generar anagramas por ser demasiado libre y permitir varias decodificaciones para un mismo bloque de texto, entre otras observaciones criticas. Segun D'Imperio, la desacreditacion de un trabajo que habia sido aclamado y publicitado por especialistas de renombre ahuyento a nuevos investigadores durante algunos a\u00f1os, renuentes en arriesgar su propia reputacion en el problema del manuscrito.\u200b  En 1943, un abogado de Rochester llamado Joseph Martin Feely propuso que el texto del manuscrito habia sido cifrado mediante sustitucion simple de un latin muy abreviado.\u200b\u200b Segun el, su descifrado favorecia y confirmaba la autoria de Roger Bacon. Nadie, sin embargo, acepto esta solucion como valida. John Tiltman se refirio a ella en 1967 como un \u00abmetodo poco metodico [que] produjo texto en un latin medieval inaceptable, en formas abreviadas no autenticas\u00bb. Feely nunca tuvo en sus manos una copia del manuscrito, por lo que debio trabajar con las ilustraciones de la obra postuma de Newbold.  Una nueva hipotesis al respecto surgio en 2017 de la mano de un articulo publicado por Nicholas Gibbs en la revista The Times Literary Supplement, segun el cual el manuscrito es un tratado medico sobre la salud de las mujeres escrito en una version abreviada de latin medieval.\u200b Pero no ha sido aceptada por miembros de la comunidad academica. Asi, el experto en latin medieval Juan Francisco Mesa-Sanz ha se\u00f1alado que la propuesta no es congruente y el latin resultante del descifrado (unicamente dos lineas de texto del manuscrito) es \u00abpracticamente incomprensible\u00bb.\u200b Tambien se ha se\u00f1alado que \u00ab\"no se puede tomar en serio\" una teoria que solo presenta dos lineas supuestamente traducidas\u00bb y que Gibbs \u00abpresenta como descubrimientos propios (relacion con tratados medicos, herbarios, etc) lo que la bibliografia cientifica y aficionada ya habia afirmado\u00bb.\u200b  El reconocido criptoanalista William Friedman comenzo a estudiar el manuscrito en 1920 y propuso que el voyniches podria ser una lengua sintetica universal construida sobre la base de categorias o clases de palabras con terminaciones codificadas u otros afijos.\u200b\u200b Tiltman investigo esta hipotesis en detalle, concluyendo que los ejemplos de lenguajes construidos se\u00f1alados por Friedman eran demasiado sistematicos para explicar las singulares caracteristicas del texto voyniches.\u200b\u200b Postulo, en cambio, un lenguaje que emplea una \u00abmezcla muy ilogica de diferentes tipos de sustitucion\u00bb, similar al dise\u00f1ado y expuesto por Cave Beck en su obra The Universal Character, de 1657. El problema radica en que todas estas lenguas sinteticas se remontan a la segunda mitad del siglo\u00a0XVII, una fecha demasiado tardia para la composicion del manuscrito.\u200b  Se ha propuesto la posibilidad de que las palabras del texto sin formato se hayan escrito en un diccionario, o mas bien en un libro de codigos, y convertido a voyniches de manera arbitraria o a traves de un sistema numerico.\u200b\u200b De esta manera no existiria una relacion identificable entre el texto plano y el texto cifrado. El problema obvio con este sistema es que, en la practica, habria requerido que el autor buscara casi cada palabra antes de escribirla, lo cual es demasiado engorroso y lento.\u200b  El profesor Leonell C. Strong creyo encontrar la solucion al manuscrito en un complejo cifrado de sustitucion polialfabetico cuyos detalles, sin embargo, nunca revelo del todo, y propuso como autor al medico y astrologo Anthony Ascham, que publico varios almanaques, un tratado de astronomia y un herbario.\u200b\u200b El texto plano estaria escrito en alguna forma de ingles medieval y, en palabras de Strong, trataria de \u00abuna discusion extremadamente sincera sobre las dolencias de la mujer y los asuntos practicos del lecho conyugal\u00bb. Esta solucion nunca fue tomada en cuenta por los estudiosos. En 1962 Elizabeth Friedman, esposa del ya mencionado William Friedman, afirmaria al respecto:  En la decada de 1970 el profesor Robert Brumbaugh reclamo haber descifrado algunas etiquetas de plantas de la seccion farmaceutica asi como de los mapas estelares.\u200b Su metodo consistia en reemplazar cada glifo del texto por numeros del 1 al 9 (o del 0 al 9, no esta claro), agrupar el resultado en bloques de nueve casillas y asignarle a cada uno de estos digitos distintas letras segun arreglos alfabeticos diferentes.\u200b De las palabras formadas por esta sustitucion se debia elegir entre las que fuesen pronunciables. La hipotesis de Brumbaugh es que el manuscrito habia sido escrito por Dee o Kelley para venderlo al emperador Rodolfo II a cambio de una sustanciosa suma de dinero, pero de todos modos podia contener texto significativo.  En 1976, en su articulo The Voynich Manuscript Revisited, el linguista James R. Child afirmo que el manuscrito fue escrito en un \u00abdialecto germanico del norte hasta ahora desconocido\u00bb.\u200b\u200b Child continuo estudiando el manuscrito y tiene un sitio web donde expone su propuesta:\u200b  En su libro de 1978, Letters to God's Eye: The Voynich Manuscript for the first time deciphered and translated into English, John Stojko propuso que el manuscrito es una copia de una serie de cartas en ucraniano cuyo contenido se cifro eliminando las vocales y escribiendo  las consonantes en un alfabeto secreto.\u200b Pero la arbitrariedad con que Stojko reintrodujo las vocales y altero los espacios de palabra para forzar el descifrado, el hecho de que el texto plano no guarde ninguna relacion con las ilustraciones y que la historia de fondo tampoco coincida con la historia generalmente aceptada de Ucrania contribuyeron a que su teoria no haya tenido una acepcion positiva entre los especialistas.  En 1987, Leo Levitov aseguro en su libro Solution Of The Voynich Manuscript: A Liturgical Manual For The Endura Rite Of The Cathari Heresy, The Cult Of Isis que el manuscrito es \u00abun manual liturgico cataro\u00bb escrito en una lengua pidgin que seria una \u00abadaptacion del poliglota oral de los dialectos alemanes occidentales del siglo XII de Flandes, el Rin y el rio Maas\u00bb y revelo que su contenido trataria sobre un culto cataro de seguidores de Isis y ritos ligados con la eutanasia.\u200b\u200b La faceta linguistica de esta solucion fue atacada en 1991 por Jacques Guy; siete a\u00f1os despues, en 1998, el especialista Dennis Stallings concluyo que \u00abla evidencia historica disponible sobre el catarismo contradice su reclamo de desciframiento del manuscrito Voynich\u00bb.\u200b  En 2001 James Finn sostuvo que el manuscrito se escribio en hebreo codificado visualmente y fue entregado por seres extraterrestres para advertir del fin de los tiempos.\u200b A traves de la transcripcion ofrecida por el alfabeto EVA, Finn ha podido leer palabras en hebreo que se repiten con diversas deformaciones para confundir al descifrador (lo que el llama \u00abcodificacion visual\u00bb), como ain (\u00abojo\u00bb) y sus variantes aiin y aiiin, y traducido algunas paginas.  A comienzos de 2018 Greg Kondrak y Bradley Hauer, cientificos computacionales de la Universidad de Alberta, sugirieron a partir una inteligencia artificial entrenada para reconocer idiomas que el texto del manuscrito esta escrito en alfagramas hebreos, es decir, \u00abdefiniendo una frase con otra, un ejemplo de las ambiguedades del lenguaje humano\u00bb.\u200b\u200b Sin embargo, la propuesta ha sido rechazada debido a que los investigadores se tomaron un alto grado de libertad en la traduccion para que el texto tuviese algun tipo de sentido.\u200b  La doctora en quimica Edith Sherwood sostiene que el manuscrito fue escrito por Leonardo da Vinci cuando era ni\u00f1o utilizando un idioma italiano medieval y codificacion por anagramas.\u200b\u200b Ha elaborado su propio alfabeto de transcripcion, basado en el EVA, con el que asegura haber \u00abdescifrado\u00bb exitosamente los nombres de las plantas de la seccion herbaria. Sin embargo, esta teoria se contradice al observar las fechas de produccion del libro, dado que, segun los analisis, este fue realizado como muy tarde en 1438, y Leonardo da Vinci nacio en 1450.  En enero de 2014 el profesor de linguistica aplicada Stephen Bax propuso una decodificacion provisional de un conjunto de diez nombres propios del texto, junto con los valores de sonido de catorce glifos y grupos de glifos voynicheses, sobre la base de la comparacion con herbarios medievales y nomenclatura vegetal de varios idiomas.\u200b\u200b Su conclusion es que el manuscrito no se trata de un enga\u00f1o ni un cifrado elaborado, pero podria estar escrito en algun idioma no europeo del Cercano Oriente, el Caucaso o Asia.  El linguista Jacques Guy propuso, como posibilidad remota, que el manuscrito puede estar escrito en algun idioma tonal como el chino, donde la unidad basica es la silaba y esta, a su vez, esta compuesta por una consonante inicial y una parte final de vocales y nasales, pudiendo variar en cuatro formas el tono de la parte final.\u200b Jorge Stolfi encuentra que esta posibilidad es relativamente consistente con la estructura de las palabras del voyniches en prefijo-raiz-sufijo.\u200b Los prefijos podrian denotar tonos, las raices ser las 24 consonantes iniciales y los sufijos las partes finales. Existen ciertas dificultades, no obstante, con este planteo, como el hecho de que \u00abla \"estructura fina\" de los raices sugiere que una fraccion no trivial de ellos consta de dos o tres consonantes, mientras que en chino cada silaba comienza con una sola consonante\u00bb, de que una gran cantidad de sufijos aparecen solo unas pocas veces en el manuscrito o la misma existencia de palabras \u00absuaves\u00bb en el manuscrito, es decir, sin raiz, cuando en el chino cada silaba comienza con una consonante y no puede existir sin ella.\u200b  Existen otras caracteristicas del chino que tambien parecen coincidir con el voyniches: la mayoria de las palabras comunes consisten en una sola silaba, el texto estandar no tiene puntuacion, los espacios delimitan las silabas, no las palabras compuestas, los saltos de linea pueden ocurrir entre dos silabas, las silabas tienen un rango acotado de longitudes y constan de una estructura interna rigida, con tres componentes foneticos principales, palabras muy similares generalmente tienen significados no relacionados, las palabras repetidas son relativamente comunes, no hay inflexiones etc.\u200b La teoria china tambien podria explicar la falta de simbolos distintivos o palabras que puedan ser numeros en el manuscrito. En cuanto a su plausibilidad historica, los contactos entre China y Occidente durante la Baja Edad Media no fueron para nada infrecuentes. Asi, el autor del manuscrito podria ser un viajero chino que llego a Europa o un misionero europeo en China que decidio inventar un alfabeto fonetico para representar los sonidos de una lengua extranjera (en este caso, el chino).\u200b  Existen otros idiomas tonales que podrian ser compatibles con las caracteristicas del voyniches. Stolfi ha descubierto que tanto el vietnamita como tibetano, ademas del chino, exhiben distribuciones de longitud de palabra simetricas y binomiales, mostrando asi una semejanza cuantitativa muy destacable con el voyniches.\u200b En octubre de 2003 el polaco Zbigniew Banasik propuso que el manuscrito esta escrito en lengua manchu con un alfabeto original y tradujo el texto del f1r.\u200b  En 2001 James Comegys concluyo que el manuscrito es un libro medico escrito en nahuatl y tiene su origen en el Mexico del siglo\u00a0XVI. La teoria fue retomada en 2013 por los investigadores Arthur O. Tucker, Rexford H. Talbert y Jules Janick sobre la base de los siguientes argumentos:\u200b\u200b  Esta hipotesis ha sido fuertemente criticada por la comunidad de estudio del manuscrito. No solo las supuestas traducciones no respetan la fonologia del nahuatl,\u200b sino que las ligaduras tl, de o dl eran parte del repertorio habitual de los escribas europeos mucho antes del descubrimiento de America; no sirven, por tanto, para probar una procedencia del manuscrito postcolombina.\u200b  La planta del f23v, identificada por Tucker y Talbert como Passiflora morifolia.\u200b  El \u00abgirasol voyniches\u00bb del f93r, identificado como Helianthus annuus por el botanico Hugh O'Neill (1944).\u200b  La etiqueta de esta planta (f100r) podria leerse como nashtli, una variante de nochtli, el nombre nahuatl para el fruto del nopal.\u200b  El parecido del animal dibujado en el f80v con el armadillo americano ha alimentado especulaciones sobre la procedencia postcolombina del manuscrito.  Segun un articulo publicado en abril de 2019 por el doctor Gerard Cheshire de la Universidad de Bristol, el manuscrito estaria escrito en protorromance.\u200b Dicho investigador explica en terminos linguisticos lo que hace que el manuscrito sea tan inusual:\u200b  Este articulo no fue bien recibido por los especialistas en estudios medievales.\u200b\u200b  Las extra\u00f1as propiedades del texto voyniches han llevado a pensar en la posibilidad de que haya sido generado mediante algun procedimiento estocastico y, por ende, no tenga sentido.  En 2003 el especialista en computacion Gordon Rugg mostro que se podia reproducir texto con caracteristicas cualitativas similares a las del manuscrito mediante el uso de una tabla con prefijos, raices y sufijos combinados por medio de una plantilla de papel perforado.\u200b Gordon calculo que con este metodo, conocido como rejilla de Cardano, un estafador inteligente tardaria una o dos horas en escribir una pagina completa y en unas pocas semanas podria terminar el manuscrito para, luego, venderlo por una suma importante de dinero.  En 2016 Rugg y Gavin Taylor volvieron a publicar un articulo en la revista Cryptologia donde aseguran demostrar que el metodo de la rejilla puede reproducir las principales caracteristicas estadisticas cuantitativas del texto voyniches, como una distribucion de frecuencias de palabras que imita la distribucion de Zipf, una distribucion simetrica de frecuencias de longitud de palabras y una distribucion no homogenea de palabras y silabas en un corpus de texto producido con este metodo.\u200b  En 2014 Torsten Timm descubrio que conjuntos de glifos identicos o muy similares tienden a aparecer muy cerca uno del otro y propuso que el texto voyniches se genero por un metodo de autocopia.\u200b ","snippet":"El manuscrito Voynich es un libro ilustrado, de contenidos desconocidos, escrito por un autor anonimo en un alfabeto no identificado y un idioma incomprensible. Su nombre proviene del comerciante de l","enlaces_salientes":["Manuscrito_Voynich","Manuscrito_Voynich","Manuscrito_Voynich","Voynich%C3%A9s","Wilfrid_M._Voynich","Biblioteca_Beinecke_de_libros_raros_y_manuscritos","Dataci%C3%B3n_por_radiocarbono","Rodolfo_II_del_Sacro_Imperio_Romano_Germ%C3%A1nico","Jacobus_Sinapius","Voynich%C3%A9s","Ley_de_Zipf","Vitela","Palimpsesto","Dataci%C3%B3n_por_radiocarbono","Roger_Bacon","Erwin_Panofsky","Johannes_Marcus_Marci","Rodolfo_II_del_Sacro_Imperio_Romano_Germ%C3%A1nico","Rafael_Missowsky","Fernando_III_de_Habsburgo","John_Dee","Edward_Kelly","Jacobus_Sinapius","Atanasio_Kircher","Cornelis_Bloemaert","V%C3%ADctor_Manuel_II_de_Italia","Hans_Peter_Kraus","Editorial_Silo%C3%A9","Facs%C3%ADmil","Roger_Bacon","Idioma_enoquiano","Maximiliano_II_de_Habsburgo","Prescott_Currier","Alfabeto_europeo_de_Voynich","Ley_de_Zipf","Marginalia","William_F._Friedman","John_Tiltman","%C3%93xidos_de_hierro","Azurita","Cuprita","Ricinus_communis","Viola_tricolor","Cannabis_sativa","Toc%C3%B3n_(bot%C3%A1nica)","Mapa_de_T_en_O","Galaxia_de_Andr%C3%B3meda","Astrofotograf%C3%ADa","Mary_D%27_Imperio","Anagrama","Cifrado_por_sustituci%C3%B3n","The_Times_Literary_Supplement","Lengua_construida","Pidgin","Escatolog%C3%ADa","Universidad_de_Alberta","Leonardo_da_Vinci","Leonardo_da_Vinci","Ling%C3%BC%C3%ADstica_aplicada","Lengua_tonal","Idioma_chino","Idioma_vietnamita","Idioma_tibetano","Idioma_manch%C3%BA","Atacamita","Passiflora_morifolia","Helianthus_annuus","Opuntia_ficus-indica","Dasypodidae","Gordon_Rugg","Rejilla_de_Cardano","Voynich%C3%A9s","Alfabeto_europeo_de_Voynich","Gibberish","Grimorio","Codex_Rohonczi","C%C3%B3digo_de_Copiale","Digital_object_identifier","ISSN","ISBN","ISSN","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","ISBN","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","Open_Library","Enciclopedia_Brit%C3%A1nica"]}
{"url":"V%C3%ADctor_Hugo","titulo":"Victor Hugo","contenido":"Adele Foucher  Victor Marie Hugo /vikt\u0254\u0281 ma\u0281i y\u0261o/ \u2014inscripcion completa en su acta de nacimiento: Victor, Marie Hugo\u2014[N 1]\u200b (Besanzon, 26 de febrero de 1802-Paris, 22 de mayo de 1885) fue un poeta, dramaturgo y novelista romantico frances, considerado como uno de los mas importantes en lengua francesa. Tambien fue un politico e intelectual comprometido e influyente en la historia de su pais y de la literatura del siglo\u00a0XIX.\u200b Era hermano de los tambien escritores Eugene Hugo y Abel Hugo.  Ocupa un puesto notable en la historia de las letras francesas del siglo\u00a0XIX en una gran variedad de generos y ambitos.\u200b\u200b Fue un poeta lirico, con obras como Odas y baladas (1826), Las hojas de oto\u00f1o (1832) o Las contemplaciones (1856), poeta comprometido contra Napoleon\u00a0III en Los castigos (1853) y poeta epico en La leyenda de los siglos (1859 y 1877). Fue tambien un novelista popular y de gran exito con obras como Nuestra Se\u00f1ora de Paris (1831) o Los miserables (1862). En teatro expuso su teoria del drama romantico en la introduccion de Cromwell (1827),\u200b y la ilustra principalmente con Hernani (1830) y Ruy Blas (1838).  Su extensa obra incluye tambien discursos politicos en la Camara de los Pares, en la Asamblea Constituyente y la Asamblea Legislativa \u2014especialmente sobre temas como la pena de muerte, la educacion, los derechos de las mujeres o Europa\u2014, cronicas de viajes \u2014El Rin (1842) o Cosas vistas, (postuma 1887 y 1890)\u2014, asi como una abundante correspondencia.  Contribuyo de forma notable a la renovacion lirica y teatral de la epoca; fue admirado por sus contemporaneos y aun lo es en la actualidad, aunque ciertos autores modernos le consideren un escritor controvertido.\u200b Su implicacion politica, que le supuso una condena al exilio durante los veinte a\u00f1os del Segundo Imperio frances (1852-1870), permitio a posteriores generaciones de escritores una reflexion sobre la implicacion y el compromiso de los escritores en la vida politica y social.  Sus opiniones, a la vez morales y politicas,\u200b y su obra excepcional, le convirtieron en un personaje emblematico a quien la Tercera Republica honro a su muerte con un funeral de Estado, celebrado el 1 de junio de 1885 y al que asistieron mas de dos millones de personas, y con la inhumacion de sus restos en el Panteon de Paris.  Victor Hugo nacio el 26 de febrero de 1802, hijo del general del Imperio Joseph Leopold Sigisbert Hugo (1773\u20111828) \u2014nombrado conde, segun la tradicion familiar, por Jose I Bonaparte,\u2014 jefe de batallon destinado en la guarnicion de Doubs en el momento del nacimiento de su hijo, y de Sophie Trebuchet (1772\u20111821), de origen breton. Fue el menor de una familia de tres hijos varones, tras Abel (1798\u20111855) y Eugene (1800\u20111837), paso su infancia en Paris. Las frecuentes estancias en Napoles y Espa\u00f1a, consecuencia de los destinos militares de su padre, marcaran sus primeros a\u00f1os. Asi, en 1811 se trasladan a Madrid e ingresa como internado, junto con su hermano Eugene, en una residencia religiosa que los Escolapios tenian en el colegio de San Anton y que los ocupantes franceses habian convertido en un \u00abseminario de nobles\u00bb.\u200b\u200b En 1813 Victor y sus hermanos se instalaron en Paris con su madre, que se habia separado de su marido por su romance con el general Victor Lahorie, padrino y preceptor de Victor Hugo del que recibe su nombre.\u200b En septiembre de 1815, Victor y Eugene, a los que separaron de su madre, son internados en la pension Cordier (hasta 1818). Segun Adele Foucher, su esposa, que tambien fue su amiga de la infancia, fue en esta epoca cuando Victor empieza a componer versos y comienza sus Cahiers de vers francais (Cuaderno de versos frances).\u200b Autodidacta, mediante tanteos aprende a utilizar la rima y la medida.\u200b Recibe el animo y apoyo de su madre a la que, al igual que a su hermano Eugene, lee sus obras. Sus escritos son revisados y corregidos por un joven maestro de la pension Cordier que hizo amistad con los dos hermanos.\u200b Su vocacion es precoz y su ambicion inmensa; en julio de 1816, con apenas 14\u00a0a\u00f1os de edad, Victor anota en un diario: \u00abQuiero ser Chateaubriand o nada\u00bb.\u200b  En 1817 participa en un concurso de poesia organizado por la Academia francesa sobre el tema \u00abFelicidad que proporciona el estudio de todas las situaciones de la vida\u00bb. El jurado esta cerca de concederle el premio, pero el titulo de su poema \u2014Trois lustres a peine (Apenas tres lustros)\u2014 sugiere demasiado su joven edad y la Academia cree que puede ser una farsa, y recibe solamente una mencion.\u200b Concurre sin exito los a\u00f1os siguientes, pero en 1819 gana, en uno de los concursos organizados por la Academia de los Juegos Florales de Toulouse, una \u00abLis de oro\u00bb por Le retablissement de la statue de Henry IV y un \u00abAmaranto de oro\u00bb por Les Vierges de Verdun,\u200b y un premio en 1820 por Moise sur le Nil.\u200b  Animado por sus exitos, Hugo abandona las matematicas, materia que cursaba en el Liceo Louis le Grand y para la que tenia aptitudes (seguia los cursos de las clases preparatorias), y se embarca en la carrera literaria. Con sus hermanos Abel y Eugene, funda en 1819 una revista, Le Conservateur litteraire, que ya atrae la atencion sobre su talento. En 1821 fallece prematuramente su madre y sus primeros poemarios, Odas y Poesias diversas, aparecen en 1822: el autor tiene por entonces veinte a\u00f1os. La tirada de 1500\u00a0ejemplares se agota en cuatro meses. El rey Luis\u00a0XVIII, que posee un ejemplar, le otorga una pension anual de mil francos,\u200b lo que le permite hacer planes de matrimonio con su amiga Adele Foucher.\u200b  Los a\u00f1os de separacion de su padre lo habian acercado a su madre, y la muerte de ella, el 27 de junio de 1821, le afecto profundamente.\u200b  Contrajo matrimonio el 12 de octubre de 1822 con una amiga de la infancia, Adele Foucher, nacida en 1803, con la que tuvo cinco hijos:  Este matrimonio llevo a su hermano Eugene, que pretendia tambien a esa misma dama, a la locura, una esquizofrenia que tuvo como consecuencia su reclusion hasta su muerte en 1837.\u200b  Ese a\u00f1o comenzo la redaccion de Han de Islandia (publicado en 1823) que recibio una tibia acogida. Una bien argumentada critica de Charles Nodier, es el motivo de un encuentro entre ambos escritores y del nacimiento de su amistad,\u200b y participa con el en las reuniones del cenaculo de la Bibliotheque de l'Arsenal (parte de la Biblioteca Nacional de Francia), cuna del Romanticismo. Esta amistad dura hasta 1827-1830, cuando Nodier comienza a ser muy critico con las obras de Hugo.\u200b Durante este periodo, Victor se reconcilia con su padre,\u200b que le inspirara los poemas Odas a mi padre[N 3]\u200b y Apres la bataille.\u200b Su padre fallece en 1828.  Cromwell, obra que publica en 1827, arma un escandalo. En el prefacio de este drama, Hugo se opone a las convenciones clasicas, en particular a las unidades aristotelicas de tiempo y lugar,[N 4]\u200b y establece los primeros fundamentos de su drama romantico. En los tres a\u00f1os siguientes, Hugo se asegurara la direccion del movimiento romantico en Francia y la supremacia en todos los generos literarios. En la lirica, con la edicion definitiva de Odas y baladas (1828) y, sobre todo, las Orientales (1829); en teatro, con el drama romantico Hernani (febrero de 1830), seguido de Marion de Lorme (1831); en narrativa, con la novela historica Nuestra Se\u00f1ora de Paris (marzo de 1831).  La pareja recibe a menudo y traba amistad con el critico Sainte-Beuve, con el poeta Lamartine, con el maestro de la novela corta Merimee, con el poeta Musset o con el pintor Delacroix.\u200b Su esposa Adele mantiene una relacion amorosa con Sainte-Beuve que tiene lugar durante el a\u00f1o 1831.\u200b Entre 1826 a 1837, la familia pasa temporadas con frecuencia en el Chateau des Roches en Bievres, propiedad de Louis-Francois Bertin, director del periodico Journal des debats. Durante estas estancias, Hugo se encuentra con personajes como el compositor Berlioz, el prosista Chateaubriand, y los pianistas y compositores Liszt y Giacomo Meyerbeer, y escribe colecciones de poesia entre las que se encuentra Las hojas de oto\u00f1o.  En 1829 publica la coleccion de poemas Los orientales. El ultimo dia de un condenado a muerte aparece el mismo a\u00f1o y es seguida por Claude Gueux en 1834; en estas dos novelas cortas, Hugo muestra su rechazo hacia la pena de muerte. La novela Nuestra Se\u00f1ora de Paris se publica en 1831.  Ya en 1828, habia montado una obra de juventud, Amy Robsart y, aunque tambien publica colecciones de poesias, como Las hojas de oto\u00f1o (1831), Los cantos del crepusculo (1835), Las voces interiores (1837), Los rayos y las sombras (1840), entre 1830 y 1843, Hugo se dedica casi exclusivamente al teatro.  1830 es el a\u00f1o de estreno de Hernani, obra que fue motivo de una larga serie de conflictos y enfrentamientos en torno a la estetica teatral entre los \u00abclasicos\u00bb, partidarios de una jerarquizacion estricta de los generos teatrales, y los \u00abmodernos\u00bb, la nueva generacion de romanticos que, encabezados por Theophile Gautier, aspiraban a una revolucion del arte dramatico y se agrupaban en torno a Victor Hugo; el triunfo de la Revolucion de 1830 facilitara las cosas. Estos conflictos pasaron a la historia de la literatura bajo el nombre de \u00abLa batalla de Hernani\u00bb.  Marion de Lorme, prohibida inicialmente en 1829, se estreno en 1831 en el Teatro de la Porte Saint-Martin y El rey se divierte en 1832 en el Theatre-Francais, pieza que fue prohibida inmediatamente despues de su estreno, lo que servira a Hugo para indicar en el prefacio de su edicion original de 1832:\u200b  En 1833 conoce a la actriz Juliette Drouet, que se convierte en su amante y le consagrara su vida. Drouet lo salvara del encarcelamiento durante el golpe de Estado de Napoleon\u00a0III. Hugo escribira para ella numerosos poemas. Ambos pasan juntos cada aniversario de su encuentro y completan, a\u00f1o tras a\u00f1o, un cuaderno comun que titulan cari\u00f1osamente Libro del aniversario.\u200b\u200b[N 5]\u200b Ademas de Juliette, Hugo conto con numerosas amantes.\u200b  Lucrecia Borgia y Maria Tudor se estrenaron en el Teatro de la Porte Saint-Martin en 1833, y Angelo, tirano de Padua en el Theatre-Francais en 1835. Ante la falta de escenarios para representar los nuevos dramas, cuya puesta en escena es compleja y costosa por la cantidad de escenografia y tramoya que exige la ruptura de las unidades, Hugo decide, junto con Alejandro Dumas, tambien hijo de un general napoleonico, crear una sala dedicada al drama romantico. Atenor Joly recibe, por orden ministerial, el privilegio que autoriza la creacion del Theatre de la Renaissance en 1836,\u200b donde se representara, en 1838, Ruy Blas.  Hugo accede a la Academia francesa en 1841, despues de tres tentativas que resultaron infructuosas, esencialmente a causa de un grupo de academicos entre los que se encontraba el escritor costumbrista Etienne de Jouy,[N 6]\u200b que se oponian al romanticismo y lo combatian ferozmente.\u200b  Para Hugo 1843 fue un a\u00f1o funesto; en marzo se estreno Los burgraves, obra que no recibe el exito esperado. Durante la creacion de todas sus obras, Hugo se enfrenta contra todo tipo de dificultades materiales y humanas, como teatros poco propicios a los espectaculos de envergadura o reticencias de los actores franceses ante la audacia de sus dramas, y sus piezas reciben silbidos a menudo por parte de un publico poco sensible al drama romantico, aunque tambien reciben por parte de sus admiradores vigorosos aplausos.\u200b El 4 de septiembre de 1843, Leopoldine muere tragicamente en Villequier, en el rio Sena, ahogada junto con su marido Charles Vacquerie tras el naufragio de su barco. Hugo se encontraba entonces en los Pirineos con Juliette Drouet, y se entera por la prensa de la muerte de su hija. El escritor se ve afectado terriblemente por esta muerte, que le inspirara varios poemas de Las contemplaciones \u2014particularmente, \u00abMa\u00f1ana, desde el alba\u00bb\u2014. Desde esta fecha y hasta su exilio en 1851, Hugo no publicara nada, aunque seguira escribiendo furiosamente; no estrena teatro, no imprime novelas ni colecciones de poemas. Algunos autores ven en la muerte de Leopoldine y el fracaso de Los burgraves una posible razon de este desafecto del autor hacia la creacion literaria,\u200b mientras que otros ven mas bien una posible atraccion hacia la politica, actividad que le ofreceria otra tribuna a sus actividades. Es verdad que en 1845 fue nombrado Par de Francia y en 1848 no es todavia el furibundo republicano que llegara a ser.\u200b  Educado por su madre bretona en el espiritu del monarquismo, paulatinamente muestra interes y convencimiento hacia la democracia \u2014\u00abJ'ai grandi\u00bb (creci), escribe en el poema Ecrit en 1846\u200b en respuesta a un reproche de un amigo de su madre\u2014.  Segun Pascal Melka, Hugo tiene la voluntad de conquistar el regimen para tener influencia y poder asi llevar a cabo sus ideas.\u200b Se hace entonces confidente de Luis Felipe I en 1844 y posteriormente par de Francia en 1845. Su primer discurso, realizado en 1846, es para defender la suerte de Polonia, descuartizada entre varios paises,\u200b y en 1847 defiende el derecho de regreso de los desterrados, como Jerome Napoleon Bonaparte.\u200b  Al inicio de la Revolucion francesa de 1848, es nombrado alcalde del 8.\u00ba distrito de Paris, y posteriormente diputado de la Segunda Republica con esca\u00f1o entre los conservadores. Durante los motines obreros de junio de 1848, Hugo participara personalmente en la matanza, comandando tropas frente a las barricadas en el distrito parisino para el que fue nombrado alcalde;\u200b mas tarde desaprobara la sangrienta represion desarrollada tras la revuelta.\u200b En agosto de 1848 funda el periodico L'Evenement.\u200b Apoya la candidatura de Carlos Luis Napoleon Bonaparte, elegido presidente de la Republica en diciembre de 1848.[N 7]\u200b Tras la disolucion de la Asamblea nacional, en 1849 es elegido para la Asamblea legislativa y pronuncia su Discurso sobre la miseria. Rompe con Luis Napoleon Bonaparte por su apoyo al envio de una expedicion francesa contra la Republica Romana instaurada en 1849, que termina con el restablecimiento del papa en sus funciones,\u200b y progresivamente se enfrenta contra sus antiguos amigos politicos y reprueba su politica reaccionaria.  Cuando se produce el golpe de Estado del 2 de diciembre de 1851, Hugo intenta huir pero es retenido; sin embargo un comisario frances se niega a detenerlo diciendole \u00ab\u00a1Sr. Hugo, no le arresto porque solamente detengo a la gente peligrosa!\u00bb.\u200b  Hugo se exilia voluntariamente en Bruselas,\u200b y condena con fuerza el golpe de Estado, sus razones morales,\u200b[N 8]\u200b y a su autor, Napoleon III, en un panfleto publicado en 1852, Napoleon, el Peque\u00f1o, asi como en Historia de un crimen, escrito al dia siguiente del golpe de Estado y publicado 25 a\u00f1os mas tarde,\u200b y en Los castigos.\u200b El doloroso recuerdo de su hija Leopoldine \u2014asi como su curiosidad\u2014 le impulsan a iniciar experiencias relacionadas con el espiritismo y consignadas en Les tables tournantes de Jersey, editado por Gustave Simon en 1923\u200b (traducido en espa\u00f1ol en 2016 como Lo que dicen las mesas parlantes).\u200b  Al publicarse Napoleon el Peque\u00f1o, por orden del gobierno belga se vio obligado a salir del pais y se traslada a la dependencia britanica de Jersey.\u200b  Expulsado de Jersey en 1855 por haber criticado la visita de la reina Victoria a Francia, se instala en la Hauteville House en Guernsey.\u200b Hugo forma parte de un grupo de proscritos que niegan a volver a Francia tras el decreto de amnistia que permite el regreso de todos los expulsados tras el golpe de diciembre; Victor Hugo manifiesta: \u00abEt s'il n'en reste qu'un, je serai celui-la\u00bb \u2014Y si queda alli solo uno, sere yo\u2014.\u200b\u200b Estos a\u00f1os dificiles son muy fecundos desde el punto de vista literario; publica Los castigos (1853), obra en verso que tiene en su punto de mira el Segundo Imperio; Las contemplaciones, poesias (1856); La leyenda de los siglos (1859), asi como una de sus obras mas significativas, la novela Los miserables (1862). Rinde homenaje al pueblo de Guernsey en su novela Los trabajadores del mar (1866).  Recibe algunas visitas del continente, como la de Judith Gautier o la de Boucher de Perthes en 1860;\u200b este ultimo lo describe como \u00abun republicano gentilhombre, (...) muy bien establecido, viviendo como padre de familia (...) querido por sus vecinos y considerado por los habitantes.\u00bb  Cuando Napoleon\u00a0III firmo el decreto de 1859 de amnistia general de los presos politicos, Hugo se habia negado a sacar provecho de esta gracia del \u00abusurpador\u00bb (\u00abQuand la liberte rentrera, je rentrerai\u00bb \u2014Cuando vuelva la libertad, volvere\u2014)\u200b y tampoco lo hace en la de 1869.\u200b Finalmente regresa a Francia en septiembre de 1870, despues de la derrota del ejercito frances en la Batalla de Sedan y recibe una acogida triunfal por parte de los parisinos. Participa activamente en la defensa de Paris durante el Sitio de Paris de 1870. Es elegido para la Asamblea nacional \u2014ocupando un esca\u00f1o por Burdeos\u2014 el 8 de febrero de 1871, pero dimite el mes siguiente como protesta contra la invalidacion de Garibaldi. En marzo de 1871 se encontraba en Bruselas para arreglar la sucesion de su hijo Charles, cuando estalla la insurreccion de la Comuna. Asiste a la rebelion y a su represion desde Belgica y la desaprueba tan vivamente que es expulsado del pais.\u200b Encuentra refugio durante tres meses y medio en el Gran Ducado \u2014del 1 de junio al 23 de septiembre\u2014. Permanece sucesivamente en Luxemburgo, en Vianden \u2014dos meses y medio\u2014, en Diekirch y en Mondorf-les-Bains, donde se somete a una cura termal; finaliza alli la coleccion de poemas El a\u00f1o terrible. Regresa a Francia a finales de 1871. Lo solicitan varios comites republicanos, y acepta presentarse candidato para la eleccion complementaria del 7 de enero de 1872. Visto como \u00abradical\u00bb debido a su voluntad de amnistiar a los comuneros, es golpeado por el republicano moderado Joseph Vautrain.\u200b El mismo a\u00f1o, Hugo se traslada de nuevo a Guernesey, donde escribe la novela Noventa y tres.  En 1873 reside en Paris y se consagra a la educacion de sus dos nietos, Georges y Jeanne, que le inspiran la coleccion El arte de ser abuelo. Recibe a muchos personajes, politicos y literarios, como los hermanos Goncourt, Lockroy, Clemenceau, Gambetta y otros.\u200b El 30 de enero de 1876 es elegido senador y milita en favor de la amnistia. Se opone al presidente Mac-Mahon cuando este disuelve la camara baja.\u200b En su discurso de apertura del Congreso Literario Internacional de 1878, Hugo se posiciona por el respeto de la propiedad literaria pero tambien por el fundamento del dominio publico. En junio de 1878 se siente indispuesto \u2014tal vez aquejado de un evento cerebrovascular\u2014;\u200b se traslada a reposar cuatro meses a Guernesey en su residencia de Hauteville House, atendido por su \u00absecretario benevolo\u00bb, Richard Lesclide.\u200b Este mal estado de salud pone fin practicamente a toda su actividad como escritor. No obstante continuan apareciendo regularmente numerosas selecciones, que recopilan poemas que datan de sus a\u00f1os de excepcional inspiracion (1850-1870), como La Piedad suprema (1879), El asno (1880), Los cuatro vientos del espiritu (1881), la ultima serie de La leyenda de los siglos (septiembre de 1883) y otras, contribuyendo a la leyenda del viejo hombre inagotable hasta la muerte.[N 9]\u200b Durante este periodo, muchas de sus obras son representadas de nuevo, como Ruy Blas en 1872, Marion de Lorme y Maria Tudor en 1873 o El rey se divierte en 1882.\u200b\u200b  Bajo la Tercera Republica, el gobierno de Jules Ferry promulgo la ley del 30 de julio de 1881, conocida como \u00abLey de reparacion nacional\u00bb, que concedia una pension o renta vitalicia a los ciudadanos franceses victimas del golpe de Estado de 1851 y de la ley de seguridad general. La Comision general encargada examinar los expedientes, presidida por el Ministro del Interior, estaba formada por representantes del ministerio, de consejeros de Estado, e incluia a ocho parlamentarios, todos antiguas victimas: cuatro senadores \u2014Victor Hugo, Jean-Baptiste Masse, Elzear Pin y Victor Sch\u0153lcher\u2014 y cuatro diputados \u2014Louis Greppo, Noel Madier de Montjau, Martin Nadaud y Alexandre Dethou\u2014.\u200b  Hasta su muerte, Hugo fue una de las figuras tutelares de la recuperada republica, asi como una indiscutible referencia literaria.\u200b Fallece el 22 de mayo de 1885, en su residencia particular \u00abLa Princesse de Lusignan\u00bb, que se encontraba situada en el lugar del actual n.\u00ba 124 de la avenida Victor-Hugo de Paris.\u200b\u200b Segun la leyenda, sus ultimas palabras fueron: \u00abCeci est le combat du jour et de la nuit... Je vois de la lumiere noire.\u00bb \u2014Es el combate del dia y de la noche... Veo la luz negra\u2014.\u200b Conforme a sus ultimas voluntades, la ceremonia se efectua en el llamado \u00abcoche funebre de los pobres\u00bb.[N 10]\u200b Inicialmente se piensa en el cementerio del Pere-Lachaise, pero el 1 de junio, en respuesta al decreto del 26 de mayo de 1885, es finalmente conducido al Panteon de Paris (la joven Tercera Republica aprovecha este acontecimiento para transformar la iglesia de Sainte-Genevieve en Panteon). Antes del traslado de sus restos, su ataud es expuesto una noche bajo el Arco de Triunfo, sobre el que se coloca un crespon negro; coraceros a caballo velan toda la noche el catafalco coronado con las iniciales VH, segun la programacion establecida por Charles Garnier.\u200b Un gran numero de personas y delegaciones se desplazaron para ofrecerle su ultimo homenaje; la comitiva hacia el Panteon se extiende a lo largo de varios kilometros y es seguida por unos dos millones de personas.\u200b\u200b Actualmente sus restos reposan junto a los de Emile Zola y Alejandro Dumas, trasladados desde otras necropolis en 1908 y 2002 respectivamente.  Fue uno de los escritores mas populares de su tiempo y aun hoy en dia es uno de los mas conocidos, y esta considerado como uno de los pilares de la literatura francesa.\u200b\u200b  Hugo fue un escritor prolifico. El conjunto de su extensa obra (seleccionada y organizada por sus ejecutores testamentarios Paul Meurice y Auguste Vacquerie) fue publicada por el editor y escritor Jean-Jacques Pauvert y representa casi cuarenta millones de caracteres reunidos en 53 volumenes.\u200b  Practico casi todos los generos: novela, poesia, teatro, ensayo... con una pasion por la palabra, un sentido de lo epico y una imaginacion fecunda.\u200b Escritor y politico, Hugo nunca intento marcar una distincion entre su actividad como escritor y su compromiso social, y efectuaba una mezcla de sus obras de ficcion, el desarrollo novelesco y la reflexion politica.\u200b\u200b  Hugo publico nueve novelas. La primera, Bug-Jargal, la escribio a los dieciseis a\u00f1os y la ultima, Noventa y tres, a los setenta y dos a\u00f1os de edad. Su narrativa novelistica abarco todas las edades del escritor, todas las modas y todas las corrientes literarias de su tiempo sin confundirse nunca totalmente con ninguna; en efecto, yendo mas alla de la parodia, Hugo utiliza las tecnicas de la novela popular ampliandolas y subvirtiendo los generos y sobrepasandolos:\u200b si bien Han de Islandia (1823), Bug-Jargal (1826) o Nuestra Se\u00f1ora de Paris (1831) se asemejan a las novelas historicas en boga a principios del siglo\u00a0XIX, sobrepasan este ambito; Hugo no es Walter Scott y sus novelas se desarrollan hacia la epopeya y lo grandioso.[N 11]\u200b  El ultimo dia de un condenado a muerte en 1829 y Claude Gueux en 1834 invitan a una reflexion social, pero no son faciles de definir.\u200b El propio Hugo las califica como \u00abnovelas de hechos y novelas de analisis\u00bb, a la vez historicas y sociales, pero sobre todo comprometidas en una lucha \u2014la abolicion de la pena de muerte\u2014 que sobrepasa de lejos el marco de la ficcion. Podemos decir lo mismo de Los miserables, que aparece en 1862, en pleno periodo del realismo literario, pero del que toma pocas caracteristicas.\u200b Este enorme exito popular se mueve constantemente entre el melodrama popular, el encuadre realista y el ensayo didactico.\u200b  En Los trabajadores del mar (1866) y en El hombre que rie (1869), Hugo se acerca mas a la estetica romantica de principios del siglo, con sus personajes deformes, sus monstruos y su Naturaleza extraordinaria.\u200b  En 1874, Noventa y tres marca la materializacion novelesca de un viejo tema hugoniano: el papel fundador de la Revolucion francesa en la conciencia literaria, politica, social y moral del siglo\u00a0XIX. Mezcla la ficcion y la historia, sin que la escritura marque la frontera entre las narraciones.\u200b  Sus novelas no son simplemente un divertimento: para Hugo el arte debe al mismo tiempo instruir y gustar,[N 12]\u200b y la novela casi siempre esta al servicio del debate de ideas. Esta constante marca las novelas abolicionistas de su juventud y prosigue, en su madurez, a lo largo de sus numerosas digresiones sobre la miseria material y moral en Los miserables.[N 13]\u200b  Poeta o novelista, Hugo es un dramaturgo de la fatalidad,\u200b y sus heroes estan, como los heroes de la tragedia, ligados a las obligaciones externas y a la implacable fatalidad; unas veces imputable a la sociedad \u2014Jean Valjean, Claude Gueux, el heroe de El ultimo dia de un condenado a muerte\u2014, otras a la Historia \u2014Noventa y tres\u2014, o bien a su nacimiento \u2014Quasimodo\u2014. Su inclinacion a la epopeya, hombres influenciados por las fuerzas de la Naturaleza, por la Sociedad, por la fatalidad, nunca dejo al autor;\u200b Hugo siempre se encontro con su publico sin ceder nunca a los caprichos de la moda y nadie se asombra de que haya podido convertirse en un clasico en vida.\u200b  El teatro de Victor Hugo se situa en una renovacion del genero teatral iniciado por Madame de Stael, Benjamin Constant, Francois Guizot, Stendhal y Chateaubriand.\u200b En Cromwell, obra de la que el mismo es consciente de que es irrepresentable en su epoca (pieza de 6414 versos e innumerables personajes),\u200b da rienda suelta a su idea del nuevo teatro. Publica al mismo tiempo un prefacio destinado a defender su obra y donde expone sus ideas sobre el drama romantico: un teatro \u00abtodo en uno\u00bb,\u200b a la vez drama historico, comedia, melodrama y tragedia. Se reivindica revalorizando el teatro de Shakespeare,\u200b levantando un puente entre Moliere y Corneille.\u200b Expone su teoria de lo grotesco que se manifiesta bajo varias formas:\u200b del ridiculo a lo fantastico pasando por lo monstruoso o lo horrible. Victor Hugo escribio \u00abLo bello solo tiene una forma, lo feo tiene mil\u00bb.\u200b Anne Ubersfeld habla sobre este tema del aspecto carnavalesco del teatro de Hugo,\u200b y del abandono del ideal de lo bello.\u200b Segun Hugo, lo grotesco debe ir junto a lo sublime porque ambos son aspectos de la vida.\u200b  En el momento de la creacion de sus demas obras, Hugo realiza numerosas concesiones para \u00abeducar\u00bb al publico y llevarlo hacia su idea del teatro.\u200b[N 14]\u200b Para el, el romanticismo es el liberalismo en la literatura.\u200b Sus ultimas obras, escritas durante el exilio y nunca estrenadas durante su vida, fueron compiladas en una coleccion con el evocador titulo de Teatro en libertad. El teatro debe dirigirse a todos: el amante de la pasion, el de la accion o el de la moral.\u200b\u200b Para el autor el teatro tiene la mision de instruir, de ofrecer una tribuna para el debate de ideas y de presentar \u00ablas heridas de la humanidad con una idea consoladora\u00bb.\u200b  Hugo situa sus obras principalmente en los siglos XVI y XVII, y se documenta mucho antes de comenzar a escribir,\u200b a menudo presenta una obra a tres bandas: el se\u00f1or, la sirvienta y el malvado,\u200b donde confrontan y se mezclan dos mundos: el del poder y el de los servidores,\u200b donde los papeles se invierten (Ruy Blas, sirviente, desempe\u00f1a el papel de un grande de Espa\u00f1a) y donde el heroe se muestra debil y el malvado tiene una faceta atractiva.[N 15]\u200b  Como recurso estilistico utiliza el alejandrino, al que sin embargo da, cuando lo desea, una forma mas libre,\u200b y son raras sus obras en prosa (Lucrecia Borgia, Maria Tudor).  Hugo cuenta con grandes defensores de su teatro, como Theophile Gautier, Gerard de Nerval, Hector Berlioz o Petrus Borel,\u200b pero tambien tuvo que enfrentarse a numerosas dificultades para la representacion de sus obras. La primera dificultad es una oposicion politica; su cuestionamiento de los representantes del poder no gusta y Marion de Lorme es prohibida; tambien se prohibe El rey se divierte tras la primera representacion y los ultramonarquicos arremeten contra su Ruy Blas.\u200b  Tambien esta la coaccion economica: en Paris solamente hay teatros susceptibles de representar dramas, el Theatre Francais y el Teatro de la Porte Saint-Martin. Estos dos teatros subvencionados no nadan en la abundancia y son tributarios de los subsidios del Estado y sus directores vacilan a la hora de asumir riesgos.\u200b Hugo se quejaba de la falta de libertad que ofrecian.\u200b Esta es una de las razones que le llevan a emprender la aventura del Teatro del Renacimiento.  La tercera, y mas importante, es la oposicion del propio mundo artistico. Muchos de los artistas y los criticos de su epoca son hostiles hacia la transgresion de los codigos culturales establecidos que representa el teatro de Hugo. Aprueban los grandes pensamientos que educan el alma, pero se rebelan contra todo lo relativo a lo grotesco, vulgar, popular o trivial.\u200b No apoyan todo que consideran excesivo, le reprochan su materialismo y su ausencia de moral.\u200b Critican con fuerza cada obra representada y a menudo se encuentran tras su prematura suspension. El rey se divierte solo se represento una unica vez,[N 16]\u200b Hernani fue representada unas cincuenta veces con gran exito, pero no se reestreno en 1833; Maria Tudor se representa solo cuarenta y dos veces,\u200b Los burgraves son un fracaso, Ruy Blas es un exito financiero, pero es destrozada por la critica.\u200b Tan solo Lucrecia Borgia puede considerarse como un exito total.  Florence Naugrette se\u00f1ala que el teatro de Hugo ha sido poco representado en la primera mitad del siglo\u00a0XX.\u200b\u200b Es restablecido al interes contemporaneo por Jean Vilar en 1954, que representa sucesivamente Ruy Blas y Maria Tudor. Otros escenografos posteriores que hacen revivir Lucrecia Borgia (Bernard Jenny), Los burgraves y Hernani (Antoine Vitez), Marie Tudor (Daniel Mesguich), las obras del Teatro en libertad (L'Intervention, Mangeront-ils?, Mil francos de recompensa...) se representan de nuevo en los a\u00f1os 1960 y continuan siendolo. En la actualidad se puede leer el conjunto de este Teatro en libertad en la edicion realizada por Arnaud Laster.\u200b Naugrette subraya tambien las dificultades de interpretacion del teatro de Hugo, y como hacerlo sin ser ni grandilocuente ni prosaico, sin falso pudor, como presentar lo grotesco sin deslizarse hacia la caricatura y como administrar la inmensidad del espacio escenico; tambien recuerda el consejo de Jean Vilar: \u00abRepresentar sin pudor confiando en el texto de Victor Hugo\u00bb.  A los veinte a\u00f1os de edad, Hugo publica las Odas, coleccion que ya deja entrever, en el joven escritor, los temas recurrentes en su obra: el mundo contemporaneo, la historia, la religion y el papel del poeta, en particular. Posteriormente se vuelve cada vez menos clasico, cada vez mas romantico, y Hugo seduce al joven lector de su tiempo a lo largo de las ediciones sucesivas de las Odas (cuatro ediciones entre 1822 y 1828). En los diversos prologos que antepone a esta coleccion, muestra una doble concepcion de la poesia; por un lado es \"todo lo que hay de intimo en todo\" (1822), y por otro, \"el poeta debe marchar por delante de los pueblos como una luz y mostrarles el camino\" (1824).  En 1828, reune bajo el titulo Odas y baladas toda su produccion poetica anterior. Frescos historicos, evocacion de la infancia; la forma es todavia convencional, sin duda, pero el joven romantico ya se toma libertades con la metrica y la tradicion poetica. Este compendio permite percibir las primicias de una evolucion que durara toda su vida: el cristiano convencido se muestra poco a poco mas tolerante, su monarquismo que se vuelve menos rigido y concede un lugar importante a la muy reciente epopeya napoleonica; ademas, lejos de esquivar su doble herencia paternal (monarquica) (napoleonica) y maternal, el poeta se enfrenta a ella, y se esfuerza en poner en escena lo contrario (la llamada antitesis hugoniana) para sobrepasarla:  Posteriormente se alejara en su obra de las preocupaciones politicas inmediatas, en lugar de las cuales prefiere \u2014un tiempo\u2014 el arte por el arte. Inicia Los orientales (Oriente era un tema en boga) en 1829, (el a\u00f1o de El ultimo dia de un condenado tiene muerte).  El exito es importante, su fama de poeta romantico se afianza y sobre todo, su estilo se confirma al poner en escena la guerra de independencia de Grecia (la eleccion de mostrar el ejemplo de estos pueblos que se desembarazan de sus reyes no es inocente en el contexto politico frances del momento), tema que tambien inspiro a Lord Byron o Delacroix.  Desde Las hojas de oto\u00f1o (1832), Los cantos del crepusculo (1835) y Las voces interiores (1837), hasta la coleccion Los rayos y las sombras (1840), se resaltan los temas principales de una poesia todavia lirica, el poeta es un \u00abalma en las mil voces\u00bb que se dirige a la mujer, a Dios, a los amigos, a la naturaleza y finalmente \u2014con Los cantos del crepusculo\u2014 a los poderosos, que son responsables de las injusticias de este mundo.  Estas poesias emocionan al publico porque abordan con una aparente simplicidad los temas familiares; sin embargo, el autor no puede resistirse a su gusto por lo epico y lo grandioso.  A partir del exilio comienza un periodo de creacion literaria que esta considerada como la mas rica, original y poderosa de su obra. Es por entonces cuando veran la luz algunos de sus poemas mas importantes.[N 17]\u200b  Los castigos son unos \u00abversos de combate\u00bb que tienen como mision, en 1853, hacer publico el \u00abcrimen\u00bb del \u00abmiserable\u00bb Napoleon III: el golpe de Estado del 2 de diciembre. Profeta de las desgracias que esperan a Napoleon III, Hugo se muestra cruel, satirico, incluso grosero (\u00abpuerco en la cloaca\u00bb\u200b) para castigar a \u00abel criminal\u00bb.\u200b Pero Hugo tambien se convierte en poeta de los tiempos mejores como en Stella; el poeta adquiere entonces tonos casi religiosos. En cuanto a la forma literaria de Los castigos, es de una riqueza extrema, y el autor recurre a multiples recursos como la fabula, la epopeya, la cancion o la elegia.  Unos a\u00f1os mas tarde, Hugo declara, a proposito de Las contemplaciones que aparecen en 1856: \u00ab\u00bfQue son Las contemplaciones?: Las memorias de un alma\u00bb.\u200b Apoteosis lirica, marcada por el exilio en Guernesey y la muerte (cf. Pauca Meae) de la hija adorada: el exilio afectivo, el exilio politico: Hugo se dirige al descubrimiento solitario del yo y del universo. El poeta, al igual que en Los castigos, se convierte el mismo en profeta, voz del mas alla, viendo secretos de la vida despues de la muerte y quien intenta perforar los secretos de las intenciones divinas. Pero, al mismo tiempo, Las contemplaciones, con lirismo amoroso y sensual, contiene algunos de los poemas mas celebres inspirados por Juliette Drouet. Las contemplaciones son una obra multiforme, como el mismo indica, de las \u00abmemorias de un alma\u00bb.[N 18]\u200b  Finalmente, La leyenda de los siglos, su obra maestra de poesia, sintetiza la historia del mundo en una gran epopeya aparecida en 1859; \u00abL'homme montant des tenebres a l'Ideal\u00bb (\u00abEl hombre asciende de las tinieblas al ideal\u00bb),\u200b\u200b esto es, la ascension lenta y dolorosa de la humanidad hacia el progreso y la luz.\u200b  Unas veces lirico, otras epico, Hugo esta presente en todos los frentes y en todos los generos: emociono profundamente a sus contemporaneos, exaspero los poderosos e inspiro a los mas grandes poetas. Asi lo recuerda Simone de Beauvoir: '\u00abSu 79.\u00ba aniversario fue celebrado como una fiesta nacional: 600\u00a0000 personas desfilaron bajo sus ventanas, le habiamos levantado un arco de triunfo. La avenida de Eylau fue bautizada poco despues como avenida Victor-Hugo y hubo un nuevo desfile en su honor el 14 de julio. Hasta la burguesia se habia reunido, [...]\u00bb.\u200b   Demain, des l'aube, a l'heure ou blanchit la campagne, Je partirai. Vois-tu, je sais que tu m'attends. J'irai par la foret, j'irai par la montagne. Je ne puis demeurer loin de toi plus longtemps. Je marcherai les yeux fixes sur mes pensees, Sans rien voir au dehors, sans entendre aucun bruit, Seul, inconnu, le dos courbe, les mains croisees, Triste, et le jour pour moi sera comme la nuit. Je ne regarderai ni l'or du soir qui tombe, Ni les voiles au loin descendant vers Harfleur, Et quand j'arriverai, je mettrai sur ta tombe   Ma\u00f1ana, al alba, cuando blanquea el campo, Yo partire. Mira, se que me esperas. Ire por el bosque, ire por la monta\u00f1a. No puedo permanecer lejos de ti mas tiempo. Caminare, los ojos fijos en mis pensamientos, Sin ver nada alrededor, sin escuchar ningun ruido, Solo, desconocido, la espalda encorvada, las manos cruzadas, Triste, y el dia para mi sera como la noche. No mirare ni el oro de la tarde que cae, Ni las velas lejanas descendiendo hacia Harfleur, Y al llegar, pondre sobre tu tumba,  Hugo realizo muchos viajes hasta 1871. Durante sus viajes, utiliza cuadernos de apuntes de dibujos y notas.\u200b\u200b Asi, se puede citar el relato de un viaje realizado a Ginebra y a los Alpes con Charles Nodier.\u200b Tambien realiza cada a\u00f1o un viaje de un mes de duracion con Juliette Drouet, visitando una region de Francia o de Europa y vuelve con notas y dibujos.\u200b De tres viajes por el Rin (1838, 1839, 1840), acumula una coleccion de cartas, notas y dibujos publicada en 1842 y completada en 1845.\u200b Durante los a\u00f1os 1860, atraviesa muchas veces el Gran Ducado de Luxemburgo como turista, mientras viaja sobre el Rin aleman (1862, 1863, 1864, 1865). Cuando regresa a Paris, en 1871, deja de viajar.\u200b  A su talento como escritor, tambien hay que a\u00f1adir el dibujo. Aunque si bien es cierto que el artista no eclipso al poeta, no se debe olvidar el trabajo pictorico de Hugo, al que se consagraron numerosas y prestigiosas exposiciones durante los ultimos a\u00f1os (en el momento del centenario de su muerte, en 1985, \u00abSoleil d'Encre\u00bb en el Museo del Petit Palais y \u00abDessins de Victor Hugo\u00bb en la casa en la que vivio bajo la Monarquia de Julio en la Plaza de los Vosgos; pero tambien, mas recientemente, en Nueva York, Venecia, Bruselas o Madrid).\u200b\u200b  Fue un artista autodidacta y obras son, en general, de peque\u00f1o tama\u00f1o; en ocasiones le sirven para ilustrar sus escritos (Los trabajadores del mar), y en otras para enviarselas a sus amigos el dia de a\u00f1o nuevo y otras celebraciones. Su faceta artistica, que desarrollara toda su vida, le divierte. Al principio, sus trabajos son de factura mas bien realista; pero con el exilio y la confrontacion mistica del poeta con el mar, adquiriran una dimension casi fantastica.\u200b  Esta faceta del talento de Hugo no pasa desapercibida a sus contemporaneos y le valdra las alabanzas de, particularmente, Charles Baudelaire: \u00abNo encontre en las exposiciones de Salon la magnifica imaginacion que fluye en los dibujos de Victor Hugo como el misterio en el cielo. Hablo de sus dibujos a tinta china, porque es demasiado evidente que en poesia, nuestro poeta es el rey de los paisajistas.\u00bb.\u200b  Durante el exilio en Jersey, Hugo se interesa por la fotografia. Colabora con sus hijos Francois\u2013Victor y, sobre todo, Charles, asi como con el poeta, dramaturgo, periodista y fotografo Auguste Vacquerie. Hugo les delega la parte tecnica, pero es el quien pone en escena la composicion de las vistas. Producen primero daguerrotipos, luego fotografias con negativos sobre papel, retratando esencialmente al poeta o su entorno familiar y amistoso. Toman tambien vistas de Jersey, de Marine Terrace y de algunos dibujos de Hugo.  Estas imagenes (cerca de 350 obras), que tenian un valor de recuerdo o de comunicacion mediatica, fueron difundidas fundamentalmente en el circulos intimos, reunidas en albumes, insertadas en algunos ejemplares de las ediciones originales del escritor, pero nunca conocieron una difusion comercial.\u200b  A partir de 1849, Hugo consagra un tercio de su obra a la politica, un tercio a la religion y el ultimo a la filosofia humana y social. El pensamiento de Hugo es complejo y a veces desconcertante. Niega toda condena de las personas y todo maniqueismo, pero no es menos severo con la sociedad de su tiempo. Al mismo tiempo, su pensamiento politico va a evolucionar, abandonando el conservadurismo y acercandose al reformismo.[N 19]\u200b\u200b  En su juventud, Hugo esta proximo al partido conservador. Durante la Restauracion borbonica en Francia, apoya a Carlos X, y se adscribe en la linea politica de Chateaubriand.  Al inicio de la Revolucion francesa de 1848, Hugo, par de Francia, inicialmente toma partido por la monarquia (el presidente del Consejo, Odilon Barrot, le encarga defender la idea de una regencia de la duquesa de Orleans). Una vez proclamada la republica, Lamartine le propone un puesto de ministro (Ense\u00f1anza publica) en el gobierno provisional de 1848, pero se niega. En las elecciones de abril de 1848, aunque no era candidato, obtiene cerca de 55\u00a0500 votos en Paris pero no es elegido. En cambio, en las elecciones complementarias del 24 de mayo, resulta elegido en Paris con cerca de 87\u00a0000 votos. Ocupa un esca\u00f1o con la derecha conservadora. Durante la revuelta conocida como Los dias de junio de 1848, dirige grupos de fuerzas gubernamentales al asalto de las barricadas en la calle Saint-Louis. Vota a favor de la ley del 9 de agosto de 1848, que suspende algunos periodicos republicanos en virtud del estado de sitio. Sus hijos fundan el periodico L'Evenement que lleva a cabo una campa\u00f1a contra el presidente del Consejo, el republicano Cavaignac, y apoya la candidatura de Luis Napoleon Bonaparte en la eleccion presidencial de 1848. Al estar en contra del principio de una asamblea legislativa unica, no vota la Constitucion francesa de 1848. Al inicio de la presidencia de Luis Napoleon Bonaparte, Hugo frecuenta al nuevo presidente. En mayo de 1849, es elegido para la Asamblea nacional legislativa. Durante el verano de 1849, progresivamente se aleja de la mayoria conservadora de la Asamblea legislativa y desaprueba su politica reaccionaria. En enero de 1850, combate la llamada ley Falloux que reorganiza la ense\u00f1anza en favor de la Iglesia catolica; en mayo, lucha contra la ley que restringe el sufragio universal y, en julio, interviene contra la ley Rouher que limita la libertad de prensa.\u200b En julio de 1851, toma posicion contra la ley que propone la revision de la Constitucion con el fin de permitir la reeleccion de Bonaparte. En junio de 1851, en el Palacio de Justicia de Paris, Hugo defiende a su hijo que es perseguido por haber publicado un articulo contra la pena de muerte en su periodico, L'Evenement.\u200b En la tarde del golpe de Estado del 2 de diciembre de 1851, junto a sesenta representantes, redacta una llamada a la resistencia armada.\u200b Perseguido, llega a Belgica el 14 de diciembre. Es el principio de su largo exilio.  Reformista desde entonces, desea cambiar la sociedad. Si bien justifica el enriquecimiento, denuncia con fuerza el sistema de desigualdad social. Esta contra los ricos que capitalizan sus ganancias sin reincorporarlas a la produccion. Tambien se opone a la violencia si esta se ejercita contra un poder democratico, pero la justifica contra un poder ilegitimo. Asi es como en 1851, lanza una llamada a las armas \u2014\u00abCargue su arma y este preparado\u00bb\u2014\u200b que no es oida. Mantiene esta posicion hasta 1870. Cuando estalla la Guerra franco-prusiana, Hugo la condena; para el se trata de una guerra por \u00abcapricho\u00bb y no de libertad.\u200b Luego, el Imperio es derrocado y la guerra continua, contra la Republica; el alegato de Hugo en favor de la fraternizacion se queda sin respuesta. Entonces, el 17 de septiembre, el patriota gana por la mano al pacifista: esta vez publica una llamada al reclutamiento en masa y a la resistencia. Las elecciones del 8 de febrero de 1871 llevan al poder a los monarquicos partidarios de la paz con Bismarck. El pueblo de Paris niega la derrota y se inicia la insurreccion de la Comuna el 18 de marzo.  Segun el mismo, Hugo no podia ser comunero.\u200b Tampoco apoya la reaccion de Adolphe Thiers. Ante la represion que cae sobre los insurrectos, el poeta manifiesta su repulsa:  Asi, Hugo defiende el indulto de Louis Rossel, el unico oficial de grado superior que se unio a la Comuna \u2014del que era delegado a la Guerra\u2014, y que fue ejecutado el 28 de noviembre de 1871. Desde su cargo de senador, lucho para que se consiguiera la amnistia de los presos comuneros sobrevivientes.\u200b  Tuvo posiciones muy determinadas sobre la lucha social. Su obra maestra, Los Miserables es un himno contra la miseria y en favor de los mas desprovistos.  Denunciando hasta el fin la segregacion social, Hugo declara durante la ultima reunion publica que preside: \u00abLa cuestion social sigue en pie. Es terrible, pero simple, \u00a1es la cuestion de los que tienen y los que no tienen!\u00bb; trataba de recaudar fondos para permitirles a 126 delegados obreros poder ir al primer Congreso socialista de Francia, en Marsella.  Hugo lucho ferozmente contra la pena de muerte. En su infancia, asistio a ejecuciones de penas capitales y toda su vida, luchara contra ellas. El ultimo dia de un condenado a muerte (1829) y Claude Gueux (1834), dos novelas de su juventud, subrayan a la vez la crueldad, la injusticia y la ineficacia de la pena capital. Pero la literatura no basta, y lo sabe; la Camara de los Pares, la Asamblea, el Senado: Hugo utilizara todas las tribunas a su alcance para defender su abolicion, como en su discurso del 15 de septiembre de 1848 ante de la Asamblea nacional constituyente:  En su trayectoria politica y humanista Victor Hugo tambien destaco por ser uno de los pocos hombres de su siglo que alzaron su voz contra las injusticias que sufrian las mujeres. \u00abEs dificil lograr la felicidad del hombre con el sufrimiento de la mujer\u00bb  escribio en una carta a Leon Richer, creador de la Asociacion por los derechos de las mujeres (1869) en la que Hugo se posiciona a favor de la lucha feminista que desarrollaban los librepensadores de la epoca. Por este compromiso Victor Hugo fue nombrado Presidente de Honor de la Liga Francesa de Derechos de las Mujeres fundada por Richer en 1882.\u200b  Victor Hugo pronuncio durante su carrera politica varios grandes discursos; la mayoria de ellos estan reagrupados en Actos y palabras:  Hugo defendio con frecuencia la idea de la creacion de los Estados Unidos de Europa.\u200b Asi, en 1849, durante el Congreso de la paz proclama:  Llegara un dia en que no haya mas campos de batalla que los mercados que se abran al comercio y los espiritus que se abran a las ideas'.  Hugo concibe una Europa orientada sobre el Rin, lugar de intercambios culturales y comerciales entre Francia y Alemania que seria el nucleo central de estos Estados Unidos de Europa.[N 20]\u200b  Presenta una Europa de los pueblos en oposicion a la Europa de los reyes, en forma de una confederacion de Estados con pueblos unidos por el sufragio universal y la abolicion de la pena de muerte.\u200b  La idea no era nueva, ya habia sido defendida con anterioridad por Saint-Simon, Guizot y Auguste Comte,\u200b\u200b pero Hugo fue uno de sus defensores mas ardientes en una epoca en que la historia no se presta a ello. Considerado como visionario o loco,\u200b Hugo reconoce los obstaculos que entorpecen esta gran idea y hasta precisa que hara falta tal vez una guerra o una revolucion para alcanzarla.\u200b  No se expreso mucho respecto al tema de la colonizacion francesa de Argelia, a pesar de que constituyo la principal aventura colonial de la Francia de su epoca. Este silencio relativo en principio no tiene por que asimilarse a un consentimiento por parte del autor. En efecto, si Hugo fue sensible ante los discursos que legitimaban la colonizacion en nombre de la \u00abcivilizacion\u00bb,\u200b un analisis atento de sus escritos \u2014y su silencio\u2014 muestran que a proposito de la \u00abcuestion argelina\u00bb sus posiciones estaban lejos de ambiguedades: esceptico con respecto a las virtudes civilizadoras de la \u00abpacificacion\u00bb militar, sobre todo debia ver en la Argelia colonizada el lugar donde el ejercito frances \u00abse hizo tigre\u00bb, y donde los miembros de la resistencia al golpe de Estado de Luis-Napoleon Bonaparte fueron deportados.\u200b  Sobre la esclavitud, cuestion respecto a la que, en los a\u00f1os 1820, a traves de su obra Bug-Jargal mostraba que compartia con su vision de los pueblos negros los mismos prejuicios que sus contemporaneos, y que guardo un sorprendente silencio en el momento de la abolicion de la esclavitud en Francia en 1848,\u200b sin embargo intervino para pedir la gracia del abolicionista estadounidense John Brown.\u200b  Al principios del siglo\u00a0XX, Hugo continuaba siendo una gloria nacional en Francia y la celebracion del bicentenario de su nacimiento da lugar a numerosas actos oficiales.\u200b Sin embargo el mundo artistico se mantuvo algo distante. El movimiento parnasiano y el simbolista, volviendo a poner en tela de juicio la elocuencia en la poesia, se convirtieron en adversarios de la escuela de Hugo,\u200b y la moda de principios de siglo es la de una poesia menos apasionada.\u200b La respuesta del escritor Andre Gide \u00abHugo, \u00a1por desgracia!\u00bb, en respuesta a la pregunta \u00ab\u00bfQuien es su poeta?\u00bb en una encuesta realizada por el Hermitage titulada \u00abLos poetas y su poeta\u00bb,\u200b muestra la doble actitud de los poetas del siglo\u00a0XX, reconociendole a Hugo un lugar preeminente entre los poetas, pero tambien exasperados a veces por sus excesos.\u200b Charles Peguy, en Notre patrie (1905), no es muy suave al referirse a el y lo acusa de ser un \u00abhipocrita pacifista\u00bb,\u200b\u200b Saint-John Perse le reprocha haber pervertido el romanticismo por su compromiso politico.\u200b Se reconoce su influencia tanto entre admiradores como Dostoyevski,\u200b como entre grandes detractores como Jean Cocteau.\u200b Hacia 1930, Eugene Ionesco escribe el panfleto Hugoliade y le reprocha a Hugo una elocuencia que enmascara la poesia asi como su megalomania.\u200b  Entre las dos guerras mundiales, en su calidad de revolucionario es apreciado por las gentes de izquierda (Romain Rolland, Alain) y detestado por la extrema derecha (Charles Maurras),\u200b y en su calidad de visionario es apreciado por los surrealistas (Aragon, Desnos).\u200b\u200b\u200b Durante la guerra, su imagen sirve como abanderado para la resistencia.\u200b\u200b  Tras la guerra, las pasiones se sosiegan, y se descubre al hombre. Francois Mauriac declara en 1952: \u00abComienza apenas a ser conocido. Estamos a las puertas de su verdadera gloria. Su purgatorio ha terminado.\u00bb\u200b El historiador Henri Guillemin publica una biografia muy matizada del escritor.\u200b Jean Vilar populariza su teatro. A partir de entonces Victor Hugo es adaptado al cine, al teatro y para la juventud. El centenario de su muerte es celebrado con gran pompa.\u200b  Sus obras dieron lugar a numerosas adaptaciones al cine, a la television o al teatro.\u200b\u200b  Muchas adaptaciones, de las que la mayoria corresponden a Los miserables, seguida de cerca por Nuestra Se\u00f1ora de Paris, se llevaron al cine. Se puede apreciar el caracter universal de la obra de Hugo en el hecho de que los cines mas diversos adaptaron sus obras, como por ejemplo: estadounidense (1915, Don Caesar de Bazan, basada en Ruy Blas), (El hombre que rie, 1928, adaptacion de El hombre que rie); britanico (1998, Los miserables. La leyenda nunca muere); hindu (Badshah Dampati, en 1953, adaptacion de Nuestra Se\u00f1ora de Paris); japones (en 1950 Re Mizeraburu: Kami To Akuma, adaptacion en un ambiente japones bajo la era Meiji); egipcio (1978, Al Bo'asa, basada en Los miserables); italiano (1966, L'Uomo che ride, adaptacion de El hombre que rie), etc.  Diario intimo de Adele H. de Francois Truffaut es una de las escasas peliculas biograficas que evoca indirectamente el exilio de Hugo (que no aparece en el filme) a traves del destino de su hija Adele. El escritor, interpretado por Emile Drain, si aparece en la pelicula de Sacha Guitry Si Paris nous etait conte.  Un importante numero de sus obras se han adaptado para la television. Entre otras, la produccion alemana Rigoletto (2010) y la neerlandesa del mismo titulo del 2003, basada en El rey se divierte; el telefilme espa\u00f1ol La Gioconda (1988), adaptacion de Angelo, tirano de Padua; la estadounidense Ernani (1983), basada en Hernani; la brasile\u00f1a Os Miseraveis (1967), basada en Los miserables; o la adaptacion para la television francesa realizada por Josee Dayan en el 2000 de Los miserables, con Gerard Depardieu y John Malkovich.  Un centenar de operas se inspiraron en las obras de Hugo; entre las mas conocidas:  Contrariamente a lo que se afirmo a menudo, Hugo no era contrario a la musicalizacion de sus poemas ni a las operas inspiradas en sus obras, excepto cuando no se se\u00f1alaba que era el autor de la obra adaptada.[N 21]\u200b\u200b Sin embargo, en el momento de las primeras representaciones de Ernani, Hugo insistio en que el titulo y el nombre de los personajes fueran cambiados.\u200b  Numerosos compositores pusieron musica a los poemas de Hugo,\u200b de Bizet a Wagner pasando por Camille Saint-Saens o Faure.  Su amigo Franz Liszt compuso varias piezas sinfonicas inspiradas en sus poemas: Ce qu'on entend sur la montagne, basada en Las hojas de oto\u00f1o, y Mazeppa, basada en Los orientales.  La adaptacion de 1980 de Los miserables realizada por Alain Boublil y Claude-Michel Schonberg se convirtio en uno de los musicales mas populares a partir de 1985 cuando se monto en Londres la version en ingles, producida por Cameron Mackintosh, montaje que se viene representando desde entonces y en 2012 todavia permanecia en cartel;\u200b ha sido representada en 40 paises, traducida a 21 idiomas y vista por mas de 55 millones de espectadores.  En 1999 se estreno Notre Dame de Paris, adaptacion de la obra homonima, realizada por Luc Plamondon y Riccardo Cocciante. En 2012 se estreno la pelicula musical Les Miserables, dirigida por Tom Hooper y protagonizada por Hugh Jackman y Russell Crowe en los papeles de Jean Valjean y del inspector Javert, respectivamente, y con Anne Hathaway como Fantine y Amanda Seyfried como Cosette.\u200b  Entre las obras de Hugo adaptadas al cine de animacion, se encuentra la popular version de los estudios Disney del a\u00f1o 1996 El jorobado de Notre Dame. En 1977 se estreno la serie de anime japones Los miserables como parte del contenedor infantil World Masterpiece Theater o Meisaku de Nippon Animation.  Selecciones postumas:  Seleccion de poemas entre los manuscritos del autor, realizada por Paul Maurice:  Crepuscule (Jersey 1853-1855)  Ville avec le pont de Tumbledown (1847)  Le Rocher de l'Ermitage en un paisaje imaginario  Pulpo con las iniciales V. H. (1866)  Valle del Our, cerca de Bivels, Luxemburgo (1871)  Le phare  Estatua de V. Hugo. En Vedado, Cuba.  Placa de estatua, Parque Victor Hugo  Busto de V. Hugo, en Antibes.  Para una bibliografia exhaustiva en frances, ver la de la Biblioteca Nacional de Francia o la del \u00abGroupe Hugo\u00bb, Universidad de Paris ","snippet":"Adele Foucher  Victor Marie Hugo /vikt\u0254\u0281 ma\u0281i y\u0261o/ \u2014inscripcion completa en su acta de nacimiento: Victor, Marie Hugo\u2014[N 1]\u200b (Besanzon, 26 de febrero de 1802-Paris, 22 de mayo de 1885) fue un poeta, d","enlaces_salientes":["Victor_Hugo","Victor_Hugo","Victor_Hugo","Victor_Hugo_(desambiguaci%C3%B3n)","Woodburytipia","%C3%89tienne_Carjat","Besanz%C3%B3n","Francia","Par%C3%ADs","Francia","Neumon%C3%ADa","Pante%C3%B3n_de_Par%C3%ADs","Avenida_Victor-Hugo","Calle_de_la_Reina","Plaza_de_los_Vosgos","Franceses","Joseph_L%C3%A9opold_Sigisbert_Hugo","Ad%C3%A8le_Foucher","Juliette_Drouet","L%C3%A9opoldine_Hugo","Ad%C3%A8le_Hugo","Universidad_de_Par%C3%ADs","Liceo_Louis-le-Grand","Liceo_Michelet","Escritor","Poeta","Dramaturgo","Pol%C3%ADtico","Dibujo","Literatura_del_Romanticismo_en_Francia","Idioma_franc%C3%A9s","Poes%C3%ADa","Novela","Teatro","Nuestra_Se%C3%B1ora_de_Par%C3%ADs","Los_miserables","Guerra_franco-prusiana","Soci%C3%A9t%C3%A9_des_gens_de_lettres","Academia_Francesa","Besanz%C3%B3n","Par%C3%ADs","Poeta","Dramaturgo","Novelista","Romanticismo","Francia","Idioma_franc%C3%A9s","Pol%C3%ADtico","Intelectual","Eug%C3%A8ne_Hugo","Abel_Hugo","Poes%C3%ADa_l%C3%ADrica","Literatura_comprometida","Napole%C3%B3n_III","Epopeya","Novela","Nuestra_Se%C3%B1ora_de_Par%C3%ADs","Los_miserables","Teatro","Drama_rom%C3%A1ntico","Cromwell_(Victor_Hugo)","Hernani_(obra_de_teatro)","Ruy_Blas","Pol%C3%ADtica","Par_de_Francia","Convenci%C3%B3n_constitucional","Pena_de_muerte","Educaci%C3%B3n","Emancipaci%C3%B3n_de_la_mujer","Europa","Carta","Exilio","Segundo_Imperio_franc%C3%A9s","Tercera_Rep%C3%BAblica_Francesa","Funeral_de_Estado","Pante%C3%B3n_de_Par%C3%ADs","Besanz%C3%B3n","General","Primer_Imperio_franc%C3%A9s","Joseph_L%C3%A9opold_Sigisbert_Hugo","Conde","Jos%C3%A9_I_Bonaparte","Breta%C3%B1a","Abel_Hugo","Eug%C3%A8ne_Hugo","Reino_de_N%C3%A1poles","Espa%C3%B1a","Escuelas_P%C3%ADas_de_San_Ant%C3%B3n","Ad%C3%A8le_Foucher","Verso","Fran%C3%A7ois-Ren%C3%A9_de_Chateaubriand","Academia_francesa","Lustro","Toulouse","Luis_XVIII_de_Francia","Ad%C3%A8le_Foucher","Ad%C3%A8le_Foucher","Ad%C3%A8le_Hugo","Esquizofrenia","Han_de_Islandia","Charles_Nodier","Biblioteca_Nacional_de_Francia","Romanticismo","Cromwell_(Victor_Hugo)","Drama_rom%C3%A1ntico","Drama_rom%C3%A1ntico","Novela_hist%C3%B3rica","Charles_Augustin_Sainte-Beuve","Alphonse_de_Lamartine","Prosper_M%C3%A9rim%C3%A9e","Alfred_de_Musset","Eug%C3%A8ne_Delacroix","Bi%C3%A8vres_(Essonne)","Louis-Fran%C3%A7ois_Bertin","Hector_Berlioz","Fran%C3%A7ois-Ren%C3%A9_de_Chateaubriand","Franz_Liszt","Giacomo_Meyerbeer","El_%C3%BAltimo_d%C3%ADa_de_un_condenado_a_muerte","Claude_Gueux","Pena_de_muerte","Nuestra_Se%C3%B1ora_de_Par%C3%ADs","1830","1843","Teatro","J._J._Grandville","1830","Hernani_(obra_de_teatro)","Th%C3%A9ophile_Gautier","Revoluci%C3%B3n_de_1830","1831","Teatro_de_la_Porte_Saint-Martin","El_rey_se_divierte","1832","Com%C3%A9die-Fran%C3%A7aise","1833","Juliette_Drouet","Golpe_de_Estado_en_Francia_de_1851","Charles-%C3%89mile-Callande_de_Champmartin","1833","1835","Alexandre_Dumas","Th%C3%A9%C3%A2tre_de_la_Renaissance","Ruy_Blas","Academia_francesa","1841","%C3%89tienne_de_Jouy","1843","Teatro_(arquitectura)","Villequier","R%C3%ADo_Sena","Monarquismo","Democracia","Luis_Felipe_I_de_Francia","Par_de_Francia","Polonia","Revoluci%C3%B3n_francesa_de_1848","Diputado","Segunda_Rep%C3%BAblica_Francesa","1848","Napole%C3%B3n_III","1849","Rep%C3%BAblica_Romana_(1849)","Papa","Grand_Place_(Bruselas)","Exilio","Bruselas","1852","Golpe_de_Estado_en_Francia_de_1851","Bruselas","Napole%C3%B3n_III","Espiritismo","Dependencia_de_la_Corona_brit%C3%A1nica","Jersey","Guernsey","1855","Victoria_del_Reino_Unido","Guernsey","Los_miserables","Judith_Gautier","Jacques_Boucher_de_Perthes","1870","Batalla_de_Sed%C3%A1n","Sitio_de_Par%C3%ADs_(1870)","Burdeos","Giuseppe_Garibaldi","Comuna_de_Par%C3%ADs","Luxemburgo_(ciudad)","Vianden","Diekirch","Noventa_y_tres_(Victor_Hugo)","Tercera_Rep%C3%BAblica_Francesa","Funeral_de_Estado","Pante%C3%B3n_de_Par%C3%ADs","1873","Hermanos_Goncourt","%C3%89douard_Lockroy","Georges_Clemenceau","L%C3%A9on_Gambetta","1876","Patrice_de_Mac-Mahon","1878","Accidente_cerebrovascular","Tercera_Rep%C3%BAblica_Francesa","Jules_Ferry","Golpe_de_Estado_en_Francia_de_1851","Ministerio_del_Interior_de_Francia","Pante%C3%B3n_de_Par%C3%ADs","1885","Avenida_Victor-Hugo","Cementerio_del_P%C3%A8re-Lachaise","Pante%C3%B3n_de_Par%C3%ADs","Arco_de_Triunfo_de_Par%C3%ADs","Charles_Garnier","%C3%89mile_Zola","Alexandre_Dumas","Necr%C3%B3polis","1908","2002","Literatura_francesa","Novela","Poes%C3%ADa","Teatro","Ensayo","Novela","Bug-Jargal","Noventa_y_tres_(Victor_Hugo)","Han_de_Islandia","Nuestra_Se%C3%B1ora_de_Par%C3%ADs","Walter_Scott","Los_miserables","El_%C3%BAltimo_d%C3%ADa_de_un_condenado_a_muerte","Claude_Gueux","Pena_de_muerte","Los_miserables","Realismo_literario","El_hombre_que_r%C3%ADe","Romanticismo","Noventa_y_tres_(Victor_Hugo)","Revoluci%C3%B3n_francesa","Los_miserables","Jean_Valjean","Claude_Gueux","Quasimodo","Prosper_M%C3%A9rim%C3%A9e","Anne-Louise_Germaine_Necker","Benjamin_Constant_de_Rebecque","Fran%C3%A7ois_Guizot","Stendhal","Fran%C3%A7ois-Ren%C3%A9_de_Chateaubriand","Cromwell_(Victor_Hugo)","William_Shakespeare","Moli%C3%A8re","Pierre_Corneille","Siglo_XIV","Siglo_XVII","Grande_de_Espa%C3%B1a","Alejandrino","Th%C3%A9ophile_Gautier","G%C3%A9rard_de_Nerval","Hector_Berlioz","Petrus_Borel","Ultra-realista_(Restauraci%C3%B3n_francesa)","Com%C3%A9die-Fran%C3%A7aise","Teatro_de_la_Porte_Saint-Martin","Teatro_del_Renacimiento","Mar%C3%ADa_Tudor","Lucrecia_Borgia","Jean_Vilar","Antoine_Vitez","Grotesco","Caricatura","Jean_Vilar","M%C3%A9trica","1829","Grecia","Lord_Byron","Eug%C3%A8ne_Delacroix","1853","Napole%C3%B3n_III","Golpe_de_Estado_en_Francia_de_1851","F%C3%A1bula","Epopeya","Canci%C3%B3n","Eleg%C3%ADa","Juliette_Drouet","Simone_de_Beauvoir","Demain_d%C3%A8s_l%27aube","Waterloo_(B%C3%A9lgica)","Ginebra","Alpes","Charles_Nodier","Juliette_Drouet","Rin","Luxemburgo","Dibujo","Exhibici%C3%B3n_de_arte","Museo_del_Petit_Palais","Monarqu%C3%ADa_de_Julio","Plaza_de_los_Vosgos","Nueva_York","Venecia","Bruselas","Madrid","Autoaprendizaje","Charles_Baudelaire","Tinta_china","Museo_de_Orsay","Fotograf%C3%ADa","Auguste_Vacquerie","Daguerrotipo","1849","Pol%C3%ADtica","Religi%C3%B3n","Filosof%C3%ADa","Manique%C3%ADsmo","Honor%C3%A9_Daumier","Restauraci%C3%B3n_borb%C3%B3nica_en_Francia","Carlos_X_de_Francia","Fran%C3%A7ois-Ren%C3%A9_de_Chateaubriand","Revoluci%C3%B3n_francesa_de_1848","Par_de_Francia","Ducado_de_Orleans","Alphonse_de_Lamartine","Louis-Eug%C3%A8ne_Cavaignac","Napole%C3%B3n_III","Iglesia_cat%C3%B3lica","Golpe_de_Estado_en_Francia_de_1851","Guerra_franco-prusiana","Otto_von_Bismarck","Comuna_de_Par%C3%ADs","Comuna_de_Par%C3%ADs","Adolphe_Thiers","Los_Miserables","Marsella","Pena_de_muerte","El_%C3%BAltimo_d%C3%ADa_de_un_condenado_a_muerte","Claude_Gueux","L%C3%A9on_Richer","Librepensador","Liga_Francesa_de_Derechos_de_las_Mujeres","L%C3%A9on_Bonnat","Serbia","George_Sand","Antiguo_Palacio_de_Verano","Segunda_Guerra_del_Opio","Giuseppe_Garibaldi","Estados_Unidos_de_Europa","Dieta_(asamblea)","Rin","Henri_de_Saint-Simon","Fran%C3%A7ois_Guizot","Auguste_Comte","Argelia_francesa","Colonizaci%C3%B3n","Esclavitud","Bug-Jargal","Abolicionismo","John_Brown_(abolicionista)","Laurent_Marqueste","La_Sorbona","Parnasianismo","Simbolismo","Andr%C3%A9_Gide","Charles_P%C3%A9guy","Saint-John_Perse","Fi%C3%B3dor_Dostoyevski","Jean_Cocteau","Eug%C3%A8ne_Ionesco","Izquierda_pol%C3%ADtica","Romain_Rolland","Alain","Extrema_derecha","Charles_Maurras","Surrealismo","Louis_Aragon","Robert_Desnos","Fran%C3%A7ois_Mauriac","Henri_Guillemin","Jean_Vilar","Los_miserables","Nuestra_Se%C3%B1ora_de_Par%C3%ADs","Cine","El_hombre_que_r%C3%ADe_(1928)","El_hombre_que_r%C3%ADe","Era_Meiji","Diario_%C3%ADntimo_de_Ad%C3%A8le_H.","Fran%C3%A7ois_Truffaut","Sacha_Guitry","Televisi%C3%B3n","G%C3%A9rard_Depardieu","John_Malkovich","%C3%93pera","Lucrezia_Borgia_(%C3%B3pera)","Gaetano_Donizetti","Il_Giuramento","Saverio_Mercadante","Ernani","Giuseppe_Verdi","Rigoletto","Giuseppe_Verdi","Marion_Delorme_(Ponchielli)","Amilcare_Ponchielli","Nino_Rota","Georges_Bizet","Richard_Wagner","Camille_Saint-Sa%C3%ABns","Gabriel_Faur%C3%A9","Franz_Liszt","Los_miserables_(musical)","Alain_Boublil","Claude-Michel_Sch%C3%B6nberg","Londres","Cameron_Mackintosh","Notre_Dame_de_Paris_(musical)","Riccardo_Cocciante","Cine_musical","Les_Mis%C3%A9rables_(pel%C3%ADcula_de_2012)","Tom_Hooper_(cineasta)","Hugh_Jackman","Russell_Crowe","Jean_Valjean","Anne_Hathaway","Amanda_Seyfried","Cine_de_animaci%C3%B3n","Walt_Disney_Pictures","El_jorobado_de_Notre_Dame_(pel%C3%ADcula_de_1996)","Anime","Los_miserables_(anime)","World_Masterpiece_Theater","Nippon_Animation","Luc-Olivier_Merson","Nuestra_Se%C3%B1ora_de_Par%C3%ADs","Cromwell_(Victor_Hugo)","Hernani_(obra_de_teatro)","El_rey_se_divierte","Ruy_Blas","Bug-Jargal","Han_de_Islandia","El_%C3%BAltimo_d%C3%ADa_de_un_condenado_a_muerte","Nuestra_Se%C3%B1ora_de_Par%C3%ADs","Claude_Gueux","Los_miserables","El_hombre_que_r%C3%ADe","Noventa_y_tres_(Victor_Hugo)","La_Esmeralda_(%C3%B3pera)","Louise_Bertin","R%C3%ADo_Our","Luxemburgo","Par_de_Francia","Legi%C3%B3n_de_Honor","Decoraci%C3%B3n_del_Lis","Academia_Francesa","La_Habana","Antibes","Po%C3%A9tica_(Arist%C3%B3teles)","Arist%C3%B3teles","%C3%89mile_de_Girardin","Segunda_Rep%C3%BAblica_Francesa","Napole%C3%B3n_III","El_rey_se_divierte","Colonialismo","ISBN","ISBN","Charles_Baudelaire","France_2","Wayback_Machine","ISBN","ISBN","ISBN","ISBN","Digital_object_identifier","ISBN","ISBN","Digital_object_identifier","Pierre-Jules_Hetzel","Museum_Tusculanum_Press","ISBN","ISBN","ISBN","ISBN","Digital_object_identifier","ISBN","ISBN","G%C3%A9rard_Blanchard_(artista)","Michel_Winock","France_Inter","Jean_Fran%C3%A7ois-Poncet","Wayback_Machine","Paul_Val%C3%A9ry","Paul_Claudel","Digital_object_identifier","Wayback_Machine","IMDb","Wayback_Machine","IMDb","ISBN","ISBN","ISBN","ISBN","ISSN","ISBN","Comuna_de_Par%C3%ADs","Le_V%C3%A9locip%C3%A8de_Illustr%C3%A9","ISBN","ISBN","ISBN","ISBN","Proyecto_Gutenberg","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Argentina","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Biblioteca_Nacional_de_Chile","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Australia","Biblioteca_del_Estado_Ruso","Biblioteca_Nacional_de_Israel","CiNii","Syst%C3%A8me_universitaire_de_documentation","Union_List_of_Artist_Names","BIBSYS","Istituto_Centrale_per_il_Catalogo_Unico","Deutsche_Biographie","Base_L%C3%A9onore","Open_Library","KulturNav","Rijksbureau_voor_Kunsthistorische_Documentatie","Museo_de_Orsay","Enciclopedia_Au%C3%B1amendi","Historical_Dictionary_of_Switzerland","Enciclopedia_Brit%C3%A1nica","Enciclopedia_Treccani","Biblioteca_Virtual_Miguel_de_Cervantes","Pers%C3%A9e_(portal)","Proyecto_Gutenberg","Europeana","Internet_Movie_Database"]}
{"url":"Charles_de_Gaulle","titulo":"Charles de Gaulle","contenido":"Charles Andre Joseph Marie de Gaulle (pronunciado\u00a0/\u0283a\u0281l d\u0259 \u0261ol/\u00a0( escuchar); Lille; 22 de noviembre de 1890-Colombey-les-Deux-Eglises, 9 de noviembre de 1970) fue un general y estadista frances que dirigio la resistencia francesa contra la Alemania nazi en la Segunda Guerra Mundial y presidio el Gobierno provisional de la Republica francesa de 1944 a 1946 para restablecer la democracia en Francia. Fue una figura predominante en Francia durante la Guerra Fria, ademas de ser promotor de la reconciliacion franco-alemana y una de las figuras influyentes en la historia del proceso de construccion de la Union Europea, lo cual hacen que su pensamiento continue influyendo en la politica de su nacion. En 1958, abandono su retiro de la politica tras haber sido nombrado primer ministro por el presidente Rene Coty. Su principal obra como presidente del gobierno fue la promulgacion de una nueva constitucion, la cual dio paso a la Quinta Republica una vez que esta se aprobo mediante un referendum. Ese mismo a\u00f1o fue elegido presidente y fue reelecto en dicho cargo en 1965, renunciando en 1969.  Se graduo en la Escuela Especial Militar de Saint-Cyr en 1912. Fue nombrado oficial durante la Primera Guerra Mundial, habiendo salido herido varias veces y luego hecho prisionero en Verdun. Petain lo consideraba un muy buen oficial.\u200b En 1921 se caso con Yvonne Vendroux, con quien tuvo tres hijos: Philippe (1921-presente), Elisabeth (1924-2013) y Anne, que tenia sindrome de Down (1928-1948).\u200b Durante el periodo de entreguerras, ejercio diversos cargos militares, en particular el de secretario del Consejo de Defensa Nacional (1937-1940), bajo el mando del mariscal Philippe Petain. Durante la invasion alemana de mayo de 1940, dirigio una division blindada que contraataco a los invasores; posteriormente fue nombrado subsecretario de guerra. Al caer el gobierno de Paul Reynaud y establecerse el regimen de Petain, su antiguo jefe, con el apoyo del colaboracionista nazi, Pierre Laval, constato que las nuevas autoridades no continuarian la guerra contra el Tercer Reich y por el contrario planearian la rendicion francesa en lugar de luchar desde Argelia. Al negarse a aceptar el armisticio de su gobierno con Alemania, De Gaulle exhorto a la poblacion francesa a resistir la ocupacion y continuar la lucha en su llamamiento del 18 de junio desde Londres tras haber abandonado el pais el 16 de junio de 1940. Alli asumio el mando de la Francia Libre o Francia Combatiente.  Durante esos a\u00f1os escribio el libro L'Appel (entre 1940 y 1942), donde expone su vision de la guerra: la enorme tragedia de la ocupacion, el espiritu derrotista, la entrega al enemigo, el llamamiento a no claudicar desde Londres, la organizacion de la Francia Libre, la lucha por la dignidad de esta en defensa de toda Francia y las aportaciones que estos franceses prestaron a los aliados, mediante la organizacion de fuerzas armadas que participaron en combates decisivos contra la Wehrmacht.  Dirigio un gobierno en exilio (fundado en Londres) asi como las fuerzas armadas de este, las cuales estaban en contra de las potencias del Eje. A pesar de las frias relaciones que poseia con el Reino Unido y especialmente con los Estados Unidos, emergio como el lider indiscutido de la resistencia francesa. Se convirtio en jefe del Gobierno Provisional de la Republica Francesa en junio de 1944, siendo este el gobierno interino de Francia despues de su liberacion. Ese mismo 1944, De Gaulle introdujo una politica economica dirigista, la cual implicaba un control sustancial conducido por el Estado sobre una economia capitalista. La consecuencia de esto fueron treinta a\u00f1os de crecimiento economico sin precedentes en la historia francesa, por lo cual dicho periodo (1944-1974) fue denominado como los Treinta gloriosos.  Frustrado por el regreso del mezquino partidismo en la nueva Cuarta Republica, De Gaulle dimitio a principios de 1946 sin dejar de lado la actividad politica al haber fundado el partido Agrupacion del Pueblo Frances (Rassemblement du Peuple Francais, RPF). No obstante se retiro de la politica a principios de la decada de 1950 y escribio un libro sobre su experiencia en la guerra titulado Memorias de guerra, el cual rapidamente se convirtio en un elemento basico de la literatura francesa moderna. Cuando la guerra de Independencia de Argelia estaba desgarrando la inestable Cuarta Republica, la Asamblea Nacional lo trajo nuevamente al poder durante la crisis de mayo de 1958. Fundo la Quinta Republica con una fuerte presidencia, y fue elegido para continuar como presidente. Logro mantener a Francia unida mientras daba los pasos para terminar la guerra, pese a la molestia de los Pieds-Noirs (franceses etnicos nacidos en Argelia) y de los militares; ambos anteriormente habian apoyado su regreso al poder para mantener el dominio colonial. Le otorgo la independencia a Argelia y progresivamente a otras colonias francesas.  En el contexto de la Guerra Fria, De Gaulle inicio su \u00abpolitica de grandeza\u00bb afirmando que Francia, como potencia principal, no deberia depender de otros paises, como los Estados Unidos, para su seguridad nacional y prosperidad. Con este fin, siguio una politica de \u00abindependencia nacional\u00bb que le llevo a retirar al pais de la estructura militar de la OTAN, a despejar el pais de bases estadounidenses\u200b y a lanzar un programa de desarrollo nuclear independiente que convirtio a Francia en la cuarta potencia nuclear. Restauro las relaciones francoalemanas para crear un contrapeso europeo entre las esferas de influencia angloamericanas y sovieticas mediante la firma del Tratado del Eliseo el 22 de enero de 1963. Sin embargo, se opuso a cualquier desarrollo de una Europa supranacional, favoreciendo una Europa soberana. De Gaulle critico abiertamente la intervencion de los Estados Unidos en Vietnam y el \u00abprivilegio exorbitante\u00bb del dolar estadounidense. En sus ultimos a\u00f1os, su apoyo al lema Vive le Quebec libre y sus dos vetos a la entrada del Reino Unido en la Comunidad Economica Europea generaron una considerable controversia.  Pese a haber sido reelegido presidente en 1965, su permanencia en el puesto se vio en crisis por las protestas generalizadas de estudiantes y trabajadores en mayo de 1968. No obstante, logro librarse de dicha crisis y el mismo a\u00f1o consiguio ganar las elecciones legislativas con una considerable mayoria en la Asamblea Nacional. Sorpresivamente, De Gaulle renuncio en 1969 despues de perder un referendum en el que propuso una mayor descentralizacion. Murio un a\u00f1o despues en su residencia en Colombey-les-Deux-Eglises, dejando sus memorias presidenciales sin terminar. Muchos partidos y figuras politicas francesas reclaman un legado denominado gaullista, siendo muchas las calles y monumentos en Francia las que estan dedicadas a su memoria.  De Gaulle nacio en la region industrial de Lille, ubicada en el departamento de Norte. Fue el tercero de cinco ni\u00f1os y fue criado en una familia devotamente catolica y tradicional. Su padre, Henri de Gaulle, fue profesor de historia y literatura en un colegio jesuita y posteriormente fundo su propia escuela.\u200b  Henri de Gaulle provenia de una familia noble de Normandia y Borgo\u00f1a, siendo este un funcionario publico. El nombre se cree que es de origen flamenco, y bien puede derivar de van der Waulle (\u00abde la muralla\u00bb). La madre de De Gaulle, Jeanne (de apellido de soltera, Maillot), descendia de una familia de empresarios ricos de Lille. Tenia ascendencia francesa, irlandesa, escocesa, flamenca y alemana.\u200b\u200b  Como parte de la nobleza francesa, la familia De Gaulle habia perdido la mayor parte de sus tierras en la Revolucion Francesa, a la que se opusieron.\u200b  El padre de De Gaulle alento el debate historico y filosofico entre sus hijos a la hora de la comida, y con su aliento, el entonces peque\u00f1o Charles se familiarizo con la historia francesa desde una edad temprana.\u200b Impresionado por como su madre relataba el cuento de como lloraba una ni\u00f1a cuando supo de la capitulacion francesa ante los alemanes en Sedan en 1870, desarrollo un gran interes en la estrategia militar.\u200b Tambien fue influenciado por su tio, quien tambien era llamado Charles de Gaulle. Su tio era historiador y apasionado estudioso celta que escribio libros y panfletos que abogaban por la union de los galeses, escoceses, irlandeses y bretones en un solo pueblo. Su abuelo Julien-Philippe tambien era historiador, y su abuela Josephine-Marie escribio poemas que apasionaron su fe cristiana.\u200b  Cuando De Gaulle tenia diez a\u00f1os ya era lector de historia medieval. Durante su adolescencia temprana comenzo a escribir poesia, y mas tarde su familia pago una composicion, un juego de un acto en verso sobre un viajero, para ser publicado en privado.\u200b Era un lector voraz, por lo que a raiz de ello, leyo tomos filosoficos de escritores como Henri Bergson, Charles Peguy y Maurice Barres. Ademas de los filosofos alemanes Nietzsche, Kant y Goethe, leyo las obras de los antiguos griegos (especialmente Platon) y la prosa del poeta romantico Chateaubriand.\u200b  De Gaulle se educo en el College Stanislas de Paris y estudio brevemente en Belgica, donde continuo mostrando su interes por leer y estudiar historia, compartiendo a su vez el gran orgullo que muchos de sus compatriotas sentian por los logros de su nacion.\u200b A la edad de quince a\u00f1os escribio un ensayo que imaginaba al \u00abGeneral de Gaulle\u00bb llevando al ejercito frances a la victoria sobre Alemania en 1930; mas tarde escribio que en su juventud habia esperado con cierta anticipacion ingenua la inevitable guerra futura con Alemania para vengar la derrota francesa de 1870.\u200b  La Francia en la que De Gaulle crecio durante su adolescencia, era una sociedad dividida, que traia consigo acontecimientos y procesos que no eran bienvenidos en la familia De Gaulle: el crecimiento del socialismo y el sindicalismo, la separacion legal de la Iglesia y el Estado en 1905 y la reduccion del periodo del servicio militar a dos a\u00f1os (tambien en 1905). Igualmente desagradables para los De Gaulle fueron la Entente Cordiale con Gran Breta\u00f1a, la primera crisis marroqui y, sobre todo, el caso Dreyfus. Henri de Gaulle llego a ser un partidario de Alfred Dreyfus, el general franco-judio en cuestion. Sin embargo, el apoyo del padre de Gaulle era condicional, puesto a que estaba mas preocupado por la reputacion del Ejercito que por su inocencia per se. El mismo periodo tambien vio el resurgimiento del catolicismo evangelico, la culminacion de la Basilica Sacre-C\u0153ur y el surgimiento del culto a Juana de Arco.\u200b\u200b  De Gaulle no fue un alumno sobresaliente hasta la mitad de su adolescencia, pero a partir de julio de 1906 fue mas tenaz en la escuela a medida que se concentraba en reunir los requisitos para entrar a la Escuela Especial Militar de Saint-Cyr.\u200b De Gaulle se unio al ejercito, a pesar de estar mas inclinado a una carrera como historiador, aunque dichas razones podrian encontrarse en buscar complacer a su padre. No obstante, posteriormente escribio: \u00abcuando entre en el ejercito, era una de las mejores cosas del mundo\u00bb,\u200b comentario que el periodista y biografo de De Gaulle, Jean Lacouture, sugiere que debe ser tratado con cautela, pues la reputacion del ejercito frances estaba en un punto bajo a principios del siglo\u00a0XX luego del caso Dreyfus.\u200b Prueba de la reputacion del Ejercito es que habia menos de 700 postulantes para entrar a St. Cyr en 1908, en lugar de los mas de 2000 que habia para el cambio de siglo.\u200b Inicialmente, de Gaulle fue utilizado para romper huelgas.\u200b  Finalmente, De Gaulle tuvo exito en su postulacion para entrar en Saint Cyr en 1909. Su clasificacion dentro de los postulantes fue mediocre (119 de 221 participantes),\u200b sin embargo era relativamente joven y aquel habia sido su primer intento en un examen. De acuerdo con una ley del 21 de marzo de 1905, los aspirantes a oficiales del ejercito debian permanecer por lo menos un a\u00f1o en las filas, incluido el tiempo como privado y suboficial, antes de asistir a la academia. En consecuencia, en octubre de 1909, De Gaulle se alisto en el 33.\u00ba Regimiento de Infanteria del Ejercito de Tierra Frances, con base en Arras. Este fue un regimiento historico en las batallas de Austerlitz, Wagram y Borodino. En abril de 1910 fue ascendido a cabo. El comandante de su compa\u00f1ia se nego a promocionarlo a sargento, el rango habitual para un posible oficial. Esta razon se debio a que de acuerdo con su superior el joven sentia claramente que nada menos que el condestable de Francia seria suficiente para el. Finalmente fue ascendido a sargento en septiembre de 1910.  De Gaulle asumio como sargento en St. Cyr en octubre de 1910. Al final de su primer a\u00f1o escalo hacia el puesto 45. En St Cyr, de Gaulle adquirio el sobrenombre de \u00abel Gran Esparrago\u00bb por su altura extremadamente elevada (1,96 m), su frente alta y su nariz.\u200b Su trayectoria en la academia fue de menos a mas, por lo que en forma posterior recibio elogios por su conducta, modales, inteligencia, caracter, espiritu militar y resistencia a la fatiga. En 1912, se graduo en 13.er lugar de su clase.\u200b  Prefiriendo servir en Francia que en ultramar, en octubre de 1912, se reincorporo al 33.\u00ba Regimiento de Infanteria como subteniente (segundo teniente). El regimiento ahora estaba comandado por el coronel (y futuro mariscal) Philippe Petain, a quien De Gaulle seguiria durante los siguientes quince a\u00f1os. Mas tarde escribio en sus memorias: \u00abMi primer coronel, Petain, me ense\u00f1o el arte del mando\u00bb.\u200b  En el periodo previo a la Primera Guerra Mundial, De Gaulle habria estado de acuerdo con Petain en cuanto a la obsolescencia de la caballeria y de las tacticas tradicionales en la era de las ametralladoras y el alambre de puas. A menudo debatia con su superior acerca de eventuales grandes batallas y el posible resultado de cualquier guerra. Lacouture es esceptico, se\u00f1alando que aunque Petain escribio evaluaciones entusiastas de De Gaulle en los primeros dos trimestres de 1913, es poco probable que se destacara entre los 19 capitanes y 32 tenientes bajo su mando. De Gaulle habria estado presente en las maniobras de Arras de 1913, en las que Petain critico al general Le Gallet en la cara, pero no hay evidencia en sus cuadernos que aceptara las ideas pasadas de moda de Petain sobre la importancia del poder de fuego.  De Gaulle fue ascendido a primer teniente en octubre de 1913.  Cuando finalmente estallo la guerra en Francia a principios de agosto de 1914, el 33.\u00b0 Regimiento, considerado una de las mejores unidades de combate del pais, fue inmediatamente enviado a hacerle frente al avance aleman en Dinant. Sin embargo, el comandante del Quinto Ejercito Frances, el general Charles Lanrezac, permanecio anclado a las tacticas de batalla del siglo\u00a0XIX, arrojando sus unidades a cargas de bayoneta sin sentido con cornetas y colores completos volando contra la artilleria alemana, por lo cual incurrieron en grandes perdidas.  Como comandante de peloton, De Gaulle estuvo involucrado en feroces combates desde el comienzo. Recibio su bautismo de fuego el 15 de agosto y fue uno de los primeros en ser herido, recibiendo una bala en la rodilla durante la masacre de Dinant.\u200b En el hospital habria mostrado su irritacion con base en las tacticas utilizadas, por lo que hablo acerca de ellas con otros oficiales, criticando los metodos obsoletos del Ejercito frances. Sin embargo, no hay evidencia contemporanea de que haya entendido la importancia de la artilleria en la guerra moderna. En cambio, en su escrito de la epoca, critico la ofensiva \u00absuperpuesta\u00bb, la insuficiencia de los generales franceses y la \u00ablentitud de las tropas inglesas\u00bb.\u200b  Se reincorporo a su regimiento en octubre, como comandante de la Septima Compa\u00f1ia. Muchos de sus antiguos camaradas habian perdido la vida. En diciembre se convirtio en ayudante del regimiento.  La unidad de De Gaulle gano el reconocimiento por arrastrarse repetidas veces en tierra de nadie para escuchar las conversaciones del enemigo en sus trincheras. La informacion que De Gaulle brindo luego de estas maniobras fue tan valiosa que el 18 de enero de 1915 recibio la Croix de Guerre. El 10 de febrero fue ascendido a capitan, inicialmente de forma provisional. El 10 de marzo de 1915, De Gaulle recibio una bala en la mano izquierda durante la batalla del Somme, la cual inicialmente parecia trivial, pero que luego termino infectandolo. La herida lo incapacito durante cuatro meses y como secuela dejo el que se viese obligado a usar su anillo de bodas en la mano derecha.\u200b En agosto, comando la decima compa\u00f1ia antes de regresar al trabajo como ayudante de regimiento. El 3 de septiembre de 1915 su rango de capitan se hizo permanente. A fines de octubre, al regresar de un permiso, regreso nuevamente al mando de la decima compa\u00f1ia.  Como comandante de compa\u00f1ia en Douaumont (durante la batalla de Verdun) el 2 de marzo de 1916, mientras lideraba una carga para intentar salir de una posicion que habia sido rodeada por el enemigo, recibio una herida de bayoneta en el muslo izquierdo tras ser aturdido por un proyectil y ser capturado luego de desmayarse por los efectos del gas venenoso. Fue uno de los pocos sobrevivientes de su batallon. Los soldados alemanes lo sacaron de un crater vacio y lo tomaron prisionero.\u200b  De Gaulle paso 32 meses en un campo de prisioneros de guerra aleman en Ingolstadt (Baviera).\u200b Su estancia alli fue relativamente comoda, aunque en una carta escrita para su madre, definio este encierro como \u00abun lamentable exilio\u00bb.  En cautiverio, De Gaulle leia periodicos alemanes. Habilidad que habia adquirido en la escuela, ademas de poner dicha lengua en practica durante sus vacaciones de verano, las que solian ser en Alemania. Su fervor patriotico y su confianza en la victoria le valieron otro sobrenombre, Le Connetable (\u00abel Condestable\u00bb), titulo del comandante en jefe del Ejercito frances en epocas medievales.\u200b En este periodo entablo amistad con otro prisionero, Mijail Tujachevsky, quien se convertiria en uno de los mas importantes generales sovieticos. En Ingolstadt, De Gaulle escribio su primer libro, el cual se titulaba Discorde chez l'ennemi (La casa del enemigo dividida), y en este se analizaban los problemas y las divisiones dentro de las fuerzas armadas alemanas. El libro fue publicado en 1924.\u200b  De Gaulle ademas organizaba ponencias sobre el estado de la guerra para sus compa\u00f1eros cautivos. Pero, sobre todo, intento la evasion cinco veces, sin exito, ya que su gran estatura le hacia demasiado visible. Intento escapar escondiendose en una canasta de ropa, cavando un tunel, cavando un agujero en una pared e incluso haciendose pasar por una enfermera para enga\u00f1ar a sus guardias. En efecto, fue trasladado a un establecimiento de mayor seguridad y castigado a su regreso con largos periodos de confinamiento solitario y con el retiro de privilegios como periodicos y tabaco. De sus dos a\u00f1os y medio de cautiverio guardo un recuerdo amargo, considerandose un revenant, un soldado inutil que no sirvio para nada. En sus cartas a sus padres, hablaba constantemente de su frustracion de que la guerra continuaba sin el, calificando la situacion de \u00abuna desgracia vergonzosa\u00bb y la comparaba con ser enga\u00f1ado.  Con el fin de la guerra cerca, su depresion aumento porque no estaba participando en la victoria, y a pesar de sus esfuerzos, permanecio en cautiverio hasta despues del armisticio, cuando fue liberado. El 1 de diciembre de 1918, regreso a la casa de su padre en Dordo\u00f1a para reunirse con sus tres hermanos, que habian servido en el ejercito y sobrevivieron a la guerra.  Despues del armisticio, De Gaulle sirvio junto al personal de la Mision Militar francesa en Polonia como instructor de la infanteria de dicho pais durante su guerra con la Rusia comunista (1919-1921). Se distinguio en las operaciones cerca del rio Zbruch, con el rango de mayor en el Ejercito polaco, y adquirio la condecoracion militar mas alta de Polonia: la Orden Virtuti Militari.\u200b  De Gaulle regreso a Francia en 1921, donde se convirtio en profesor de historia militar en St. Cyr. Para esa fecha ya era un orador prominente,  aptitud que habia adquirido durante sus a\u00f1os de prisionero en Ingolstadt.\u200b Luego estudio en la Ecole Militaire de noviembre de 1922 a octubre de 1924. Aqui se enfrento con su instructor, el coronel Moyrand, siendo el motivo de las disputas, el empleo de tacticas de acuerdo mas a las circunstancias que a la doctrina. Despues de un ejercicio en el que habia desempe\u00f1ado el papel de comandante, se nego a responder una pregunta sobre suministros, respondiendo que \u00abde minimis non curat pretor\u00bb (\u00abun lider no se preocupa por trivialidades\u00bb). Obtuvo calificaciones respetables, pero no sobresalientes: 15 de 20 en varios de sus examenes. Moyrand escribio en su informe final que era un \u00aboficial inteligente, culto y serio, brillante y talentoso\u00bb. Sin embargo, lo critico por no obtener los beneficios suficientes del curso, la arrogancia que mostraba, excesiva autoconfianza, la brusca desestimacion de los puntos de vista de los demas y su actitud de \u00abrey en el exilio\u00bb. Habiendo ingresado en el lugar 33 de 129, se graduo en el lugar 52, con un grado de assez bien (\u00ablo suficientemente bueno\u00bb). Fue destinado a Maguncia para ayudar a supervisar el suministro de alimentos y equipos para el Ejercito frances de ocupacion en Alemania.\u200b\u200b  La carrera de De Gaulle fue rescatada por el mariscal Petain, quien hizo los arreglos para que la calificacion de su personal se cambiara a bien en lugar de assez bien.\u200b Esta clasificacion implicaba un \u00abbueno\u00bb, pero no un \u00abexcelente\u00bb, que se requeria para una vacante para general. A partir del 1 de julio de 1925 comenzo a trabajar para Petain, ejerciendo como \u00aboficial de pluma\u00bb.\u200b De Gaulle desaprobaba la decision de Petain con base en tomar el mando en Marruecos en 1925 y desaprobaba la adulacion publica hacia dicho general y su esposa. En 1925, De Gaulle comenzo a cultivar a Joseph Paul-Boncour, su primer patron politico.\u200b El 1 de diciembre de 1925 publico un ensayo sobre el \u00abpapel historico de las fortalezas francesas\u00bb. Este era un tema popular debido a la Linea Maginot que entonces se estaba planificando, pero su argumento era bastante matizado: sostenia que el objetivo de las fortalezas deberia ser debilitar al enemigo, no economizar en defensa.  Las diferencias entre de Gaulle y Petain comenzaron a acrecentarse, y estas tuvieron un punto de inflexion cuando De Gaulle escribio la historia de un soldado frances titulada Le Soldat. En aquella obra registro principalmente material historico, pero Petain queria agregar un capitulo final donde ilustrase sus propios pensamientos. Todo esto termino con una tensa discusion a fines de 1926, la cual termino con De Gaulle estallando en ira en la oficina de Petain.\u200b En octubre de 1926 regreso a sus deberes con la sede del Ejercito del Rin.  De Gaulle habia jurado que nunca regresaria a la Ecole de Guerre excepto como comandante, pero a invitacion de Petain, y presentado al escenario por su patron, pronuncio tres conferencias alli en abril de 1927: \u00abLiderazgo en tiempo de guerra\u00bb, \u00abPersonaje\u00bb y \u00abPrestige\u00bb. Estas ponencias mas tarde formaron la base de su libro Le Fil de l'Epee (El borde de la espada, 1932). Muchos de los oficiales en la audiencia eran sus mayores, quienes le habian ense\u00f1ado y evaluado solo unos a\u00f1os antes. (Lacouture, 1991, p.\u00a088)  Luego de doce a\u00f1os como capitan, De Gaulle fue ascendido a comandante el 25 de septiembre de 1927.\u200b En noviembre de ese a\u00f1o, fue destinado por dos a\u00f1os a comandar las fuerzas de ocupacion de Treveris.\u200b\u200b  De Gaulle entreno duramente a sus hombres. Una de sus primeras acciones fue coordinar un ejercicio de cruce del rio Mosela durante la noche. Sin embargo, posteriormente arresto a un soldado por intentar apelar a su adjunto para que lo transfirieran a una unidad mas comoda. Cuando se le investigo inicialmente intento invocar su condicion de miembro de la Maison Petain, ademas de solicitar al mismo general el que se protegiera de una reprimenda por interferir con los derechos politicos del soldado. Un observador escribio sobre De Gaulle que, aunque alentaba a los oficiales jovenes, \u00absu ego brillaba desde lejos\u00bb. En el invierno de la temporada 1928-1929, treinta soldados (siete de ellos del batallon de De Gaulle) murieron a causa de la llamada \u00abgripe alemana\u00bb. Despues de una investigacion, fue elogiado en las esferas del debate parlamentario como un comandante moral y excepcionalmente capaz. La accion que mas le valio elogios fue el haber llevado una banda de luto para un soldado privado que era huerfano. Este elogio vino por parte del entonces primer ministro Raymond Poincare.\u200b  Las disputas entre De Gaulle y Petain por la escritura de Le Soldat se profundizaron en 1928. Petain, por ende, busco un nuevo escritor, el coronel Audet, quien no estaba dispuesto a asumir el cargo y escribio a De Gaulle sentirse avergonzado de hacerse cargo del proyecto. Ante estos hechos, Petain prefirio definitivamente no publicar el libro.\u200b En 1929, Petain no utilizo el borrador del texto hecho por De Gaulle para elogiar al mariscal Ferdinand Foch, quien habia muerto ese a\u00f1o.\u200b  La ocupacion aliada de Renania-Palatinado estaba llegando a su fin, y el batallon que comandaba De Gaulle debia ser disuelto. Para aquella fecha, De Gaulle buscaba un puesto de catedratico en la Ecole de Guerre.\u200b Aparentemente hubo una amenaza de dimision masiva por parte de miembros de la facultad en caso de que se le concediese la catedra. Se hablo de una destinacion a Corcega o al norte de Africa, pero siguiendo los consejos de Petain, acepto un envio de dos a\u00f1os al Libano y Siria.\u200b  En la primavera de 1931, cuando su destinacion a Beirut llegaba a su fin, De Gaulle una vez mas, solicito a Petain el interceder para conseguir un puesto de catedratico en la Ecole de Guerre. Petain trato de obtenerle un cupo como profesor de Historia alli, pero una vez mas no lo tendria. En cambio, De Gaulle, basandose en los planes que habia trazado en 1928 para la reforma de esa institucion, le pidio a Petain que le creara un puesto especial que le permitiera dar conferencias sobre \u00abla conducta de la guerra\u00bb, tanto para la Ecole de Guerre como para el Centre des Hautes Etudes Militaires (CHEM; un colegio superior de personal para generales, conocido como la \u00abescuela para mariscales\u00bb), como para los civiles en la Escuela Normal Superior de Paris, y para los funcionarios publicos.\u200b  En cambio, Petain le aconsejo que solicitara un puesto en la Secretariat General du Conseil Superieur de la Defense Nationale (SGDN; Secretaria General del Consejo de la Defensa Nacional, reportando al Subsecretario del primer ministro, para asi luego trasladarse al Ministerio de Guerra en 1936) en Paris. Petain le prometio negociar por el nombramiento, el cual creia que seria beneficioso para De Gaulle. Fue enviado a la SGDN en noviembre de 1931, partiendo como oficial de redaccion.\u200b\u200b  Fue ascendido a teniente coronel en diciembre de 1932 y nombrado jefe de la Tercera Seccion (operaciones). Su servicio en la SGDN le dio seis a\u00f1os de experiencia siendo parte de la colaboracion entre el ejercito y el gobierno para la planificacion militar, lo que, a la larga, le permitio asumir responsabilidades ministeriales en 1940.\u200b  Despues de estudiar las gestiones militares en paises como los Estados Unidos, Italia y Belgica, De Gaulle redacto un proyecto de ley para la organizacion de Francia en tiempos de guerra. Hizo una presentacion acerca de su proyecto de ley al CHEM. El proyecto de ley fue aprobado por la Camara de Diputados, sin embargo rechazado en el Senado.\u200b  A diferencia de Petain, De Gaulle creia en el uso de tanques y maniobras rapidas en lugar de la guerra de trincheras.\u200b De Gaulle se convirtio en discipulo de Emile Mayer (1851-1938), un teniente coronel retirado (su carrera habia sido damnificada por el caso Dreyfus) y pensador militar. Mayer penso que, aunque las guerras aun debian ocurrir, era \u00abobsoleto\u00bb que los paises civilizados amenazaran o se enfrentaran unos a otros como lo habian hecho en siglos anteriores. Tenia una mala opinion acerca de la calidad de los generales franceses, ademas de ser critico de la Linea Maginot y un defensor de la guerra mecanizada. Lacouture sugiere que Mayer centro los pensamientos de De Gaulle en su obsesion por la mistica del lider fuerte (Le Fil d'Epee: 1932) y en la lealtad a las instituciones republicanas y la reforma militar.\u200b  En 1934, De Gaulle escribio Vers l'Armee de Metier (Hacia un Ejercito Profesional). Propuso la mecanizacion de la infanteria, con enfasis en una fuerza elite de 100\u00a0000 hombres y 3000 tanques. El libro imagina tanques recorriendo el pais como caballeria. El mentor de De Gaulle, Emile Mayer, era algo mas profetico que el acerca de la importancia futura del poder aereo en el campo de batalla. Tal ejercito compensaria la escasez de poblacion en Francia y seria una herramienta eficiente para hacer cumplir el derecho internacional, particularmente el Tratado de Versalles, que prohibia a Alemania rearmarse. Tambien penso que seria un precursor de una reorganizacion nacional mas profunda, y escribio que \u00abun maestro debe hacer su aparicion [...] cuyas ordenes no pueden ser impugnadas; un hombre defendido por la opinion publica\u00bb.\u200b  Solo 700 copias fueron vendidas en Francia; se cree que la afirmacion de que se vendieron miles de copias en Alemania es una exageracion. De Gaulle utilizo el libro para ampliar sus contactos entre los periodistas, en particular con Andre Pironneau, editor de L'Echo de Paris. El libro atrajo elogios en todo el espectro politico, salvo de parte de la izquierda, la cual estaba comprometida con el ideal de un ejercito de ciudadanos.\u200b Las opiniones de De Gaulle atrajeron la atencion del inconformista politico centroderechista, Paul Reynaud, a quien frecuentemente escribia en terminos obsequiosos. Reynaud lo invito a reunirse con el, el 5 de diciembre de 1934.\u200b  La familia De Gaulle era muy reservada.\u200b De Gaulle estaba profundamente enfocado en su carrera en este momento. No hay evidencia alguna de que haya sido tentado por el fascismo, asi como tambien hay poca evidencia acerca de sus puntos de vista sobre crisis politicas como los disturbios del 6 de febrero de 1934.\u200b Aprobo la campa\u00f1a de rearme que inicio el gobierno del Frente Popular en 1936, aunque la doctrina militar francesa seguia siendo el que los tanques deberian usarse en paquetes de penique para el apoyo de la infanteria (ironicamente, en 1940 las unidades de los panzers alemanes serian quienes usarian el sistema que De Gaulle defendia).\u200b En 1935, habia escrito una carta a su madre advirtiendole que la guerra con Alemania era inevitable y que tarde o temprano iba a librarse, ademas de haberle asegurado que el pacto de Pierre Laval con la Union Sovietica ese mismo a\u00f1o fue para bien, comparandolo con la alianza de Francisco I y los otomanos contra el emperador Carlos V.\u200b  Desde abril de 1936, mientras todavia estaba en su puesto de personal de la SGDN, de Gaulle tambien fue conferencista de generales en la CHEM.\u200b Los superiores de De Gaulle desaprobaban sus puntos de vista acerca de los tanques, y no consiguio su ascenso a coronel, supuestamente debido a que su record de servicio no era lo suficientemente bueno. Intercedio con su patron politico, Reynaud, quien termino mostrandola su historial al ministro de Guerra, el radical-socialista Edouard Daladier. Daladier, que era un entusiasta del rearme con armamento modernas, se aseguro de que de Gaulle fuese incluido en la lista de ascensos para el a\u00f1o entrante.\u200b\u200b  En 1937, el general Bineau, quien fue su profesor en St. Cyr, escribio en su informe sobre su catedra en CHEM que era altamente capaz y apto para el alto mando en el futuro, pero que habria ocultado sus atributos bajo \u00abuna actitud fria y elevada\u00bb.\u200b Lo pusieron al mando del 507.\u00b0 Regimiento de Tanques (que consistia en un batallon de Char D2 medianos y un batallon de tanques ligeros R35) en Metz el 13 de julio de 1937, y su ascenso a coronel completo entro en vigencia el 24 de diciembre de ese a\u00f1o. De Gaulle atrajo la atencion del publico al encabezar un desfile de 80 tanques en la Place d'Armes en Metz, en su tanque de comando \u00abAusterlitz\u00bb.\u200b  En ese momento, De Gaulle estaba comenzando a ser conocido como \u00abCoronel Motor\u00bb.\u200b A invitacion de la editorial Plon, produjo otro libro, La France et son Armee (Francia y su Ejercito) en 1938. De Gaulle incorporo gran parte del texto que habia escrito para Petain una decada antes en Le Soldat, siendo esto motivo de disgusto para Petain. Al final, De Gaulle acordo incluir una dedicacion a Petain (aunque escribio la suya en lugar de usar el borrador que le envio Petain), la cual fue eliminada en ediciones de posguerra. Hasta 1938, Petain habia tratado a De Gaulle, como dice Lacouture, \u00abcon buena voluntad ilimitada\u00bb, pero en octubre de 1938, en privado, pensaba que su antiguo protegido era \u00abun hombre ambicioso y muy mal educado\u00bb.\u200b  Para el estallido de la Segunda Guerra Mundial, de Gaulle fue puesto al mando de los tanques del Quinto Ejercito Frances (cinco batallones dispersos, equipados en gran medida con tanques ligeros R35) en Alsacia. El 12 de septiembre de 1939 ataco en Bitche, simultaneamente con la ofensiva de Sarre.\u200b\u200b  Los tanques de De Gaulle fueron inspeccionados por el presidente Lebrun, quien quedo impresionado, pero lamento que ya fuera demasiado tarde para implementar sus ideas.\u200b Escribio un articulo titulado L'Avenement de la force mecanique (La Llegada de la Fuerza Blindada), el cual envio al general Georges (Comandante en Jefe en el Frente Noreste) y al socialista Leon Blum. Daladier, primer ministro en ese momento, no leyo dicho articulo dado que supuestamente estaba demasiado ocupado para hacerlo.\u200b  A fines de febrero de 1940, Reynaud le comunico a de Gaulle que seria destinado para el mando de una division blindada tan pronto como fuese posible. A principios del mismo a\u00f1o (la fecha exacta es incierta), de Gaulle propuso a Reynaud que fuera nombrado secretario general del Consejo de Guerra. Esto, bajo todos los efectos le convertiria en consejero militar de gobierno. Sin embargo, cuando Reynaud fue nombrado primer ministro durante marzo, dependia del respaldo de Daladier, por lo que el puesto recayo en la figura del politico Paul Baudouin (posterior canciller del Regimen de Vichy).  A finales de marzo de 1940, Reynaud le comunico a de Gaulle que se le daria el mando de la 4.\u00aa. Division Blindada. El gobierno estaba en una posicion de aparente purga, puesto que Daladier y el general Maurice Gamelin fueron atacados por la opinion publica a raiz de la derrota de los Aliados en Noruega. El 3 de mayo, De Gaulle, por su parte, seguia insistiendo a Reynaud para que se le diese el puesto de secretario general en el consejo para afrontar la guerra y asi redirigir la organizacion del Ejercito. El 7 de mayo se encontraba reuniendo al personal de su nueva division.  Los alemanes atacaron el oeste el 10 de mayo. De Gaulle ya estaba activo con su nueva division el 12 de mayo. Los alemanes habian penetrado la frontera en Sedan el 15 de mayo de 1940. Ese dia, teniendo reunidos tres batallones de tanques y menos de un tercio de sus hombres, fue convocado al cuartel general, indicandosele que atacara para asi ganar tiempo para que el Sexto Ejercito del General Robert Touchon se desplegara hacia al Aisne desde la Linea Maginot. El general Georges le comento a de Gaulle que era su oportunidad para implementar las ideas.  De Gaulle comando algunas unidades de artilleria y de caballeria en retirada, y de paso, recibio una media brigada adicional, cuyos batallones incluia algunos tanques pesados Char B1 bis. El ataque a Montcornet, un cruce de carreteras clave cerca de Laon, comenzo alrededor de las 04:30 el 17 de mayo. Superado en numero y sin apoyo aereo, perdio 23 de sus 90 vehiculos en minas y armas antitanque (o Stukas). El 18 de mayo fue reforzado por dos nuevos regimientos de caballeria blindada, elevando su fuerza a 150 vehiculos. Ataco de nuevo el 19 de mayo y sus fuerzas fueron devastadas una vez mas por los Stukas alemanes y la artilleria. Ignoro las ordenes de retirarse por parte del general Georges y, a primera hora de la tarde, exigio dos divisiones mas a Touchon, quien rechazo su solicitud. A pesar de que los tanques de De Gaulle obligaron a la infanteria alemana a retirarse a Caumont-sur-Durance, la accion solo trajo un efimero alivio temporal e hizo poco para detener el arrollador avance aleman. No obstante, fue uno de los pocos exitos que disfrutaron los franceses mientras sufrian derrotas en otras partes del pais.  Retraso su retiro hasta el 20 de mayo. El 21 de mayo, a peticion de los agentes de propaganda, dio una charla en la radio francesa sobre su reciente ataque. En reconocimiento por sus esfuerzos, de Gaulle fue ascendido al rango de brigadier general el 23 de mayo de 1940. A pesar de haber sido retirado obligatoriamente como coronel el 22 de junio (ver mas abajo), usaria el uniforme de general de brigada durante el resto de su vida.  Los dias 28 y 29 de mayo, de Gaulle dirigio un ataque contra los alemanes al sur del departamento de Somme en Abbeville, tomando alrededor de 400 prisioneros en un intento desesperado por tratar cortar una ruta de escape con tal de que las fuerzas aliadas nuevamente tuvieran una cabeza de playa en Dunkerque.  Se convirtio en el jefe militar mas visible de la Francia liberada y, gracias a este prestigio, presidio hasta 1946 el Gobierno Provisional de la Republica.  Tras un largo periodo alejado de la vida publica, vuelve a la arena politica para solucionar el enquistado problema de Argelia, colonia francesa que queria independizarse, y la endemica inestabilidad politica de la IV Republica.  Francia, al borde de la guerra civil por las tensiones entre el gobierno central, desunido y desorganizado, y un grupo de ultraderecha, pro-colonos de Argelia, denominado Organisation de l'Armee Secrete (OAS) que exigia la represion lisa y llana del movimiento independentista argelino de Ahmed Ben Bella, y con serios desequilibrios financieros heredados de esa situacion, recurrio a el momentos antes de que estallara un golpe de Estado contra el ultimo primer ministro Pierre Pflimlin. De Gaulle asumio el cargo enseguida (1 de junio de 1958), logro del presidente Coty y de la Asamblea General plenos poderes y procedio a la creacion de la V Republica, aprobada masivamente en un referendum ese mismo a\u00f1o. Al a\u00f1o siguiente, de Gaulle obtendria la presidencia venciendo con el 78\u00a0% de los votos al comunista Georges Marrane, que apenas logro el 13\u00a0%, y el 9\u00a0% el independiente Andre Chatelet. Esta seria la unica eleccion presidencial francesa realizada por medio de un cuerpo electoral de alrededor de 80\u00a0000 personas compuesto de diputados, consejeros generales y de representantes de los concejos. Aprovechando el impulso obtenido favorecio la creacion de un movimiento (no quiso que se llamara partido) alrededor de su figura, la Union para la Nueva Republica (UNR). Creo asi la ideologia del gaullismo (en frances Gaullisme) de tipo tercerposicionista con toques de conservadurismo.  Esta etapa se caracteriza por su firme oposicion a los Estados Unidos, mediante una reafirmacion de la soberania francesa que se plasmara en la salida de las estructuras militares integradas de la OTAN (a la que volveria Francia en 2009, durante la presidencia de Nicolas Sarkozy) y en la peticion de conversion en oro de las reservas francesas de dolares, lo que provoco una crisis financiera mundial, que fue uno de los factores que obligaron a Nixon a suspender la convertibilidad del dolar en oro en agosto de 1971.  Finalmente, tras una sangrienta guerra no convencional (guerrillas, atentados...) Argelia se independiza en julio de 1962, poniendo punto final al problema mas sangrante del Gobierno de Gaulle. Significo un giro radical en la politica exterior francesa, que abandona veleidades coloniales preteritas y centra sus miras en la construccion europea.  El 22 de enero de 1963, Alemania y Francia se reconcilian tras la firma por Charles de Gaulle y Konrad Adenauer del Tratado del Eliseo. Las disonancias con paises vecinos por la construccion del Mercado Comun Europeo hicieron mermar la popularidad de De Gaulle en el frente interno, que llego afectada a las elecciones presidenciales de 1965. En ellas, de Gaulle no logro imponerse en la primera vuelta, ya que obtuvo el 44\u00a0% de los sufragios, 34 puntos menos que seis a\u00f1os antes. Ante tal situacion, de Gaulle estuvo a punto de renunciar a su candidatura y retirarse de la politica por lo que consideraba una reprobacion, pero finalmente se presento y vencio con el 54\u00a0% ante el 46\u00a0% de la Federacion de la Izquierda Democratica y Socialista que encabezaba Mitterrand.  En 1964 realizo una historica gira por varios pais de America Latina (que fue conmemorada en 2014), en la cual visito varios paises como Venezuela, Uruguay, Paraguay, donde se reunio con el dictador Alfredo Stroessner; Chile donde se reunio con el presidente Jorge Alessandri y el presidente electo Eduardo Frei Montalva; Mexico donde se reunio con el presidente Adolfo Lopez Mateos y sus antecesores Emilio Portes Gil, Lazaro Cardenas del Rio, Miguel Aleman y Adolfo Ruiz Cortines. En este pais pronuncio algunos discursos en espa\u00f1ol en el Zocalo de la Ciudad de Mexico ante la presencia de miles de personas; tambien visito Brasil y Argentina, donde un grupo de partidarios de Juan Domingo Peron buscaron una posibilidad de reunir a ambas figuras politicas.  En la etapa final de su Gobierno, se enfrento a un recrudecimiento del conflicto social que derivara en el denominado \u00abMayo frances\u00bb (1968, una revuelta estudiantil y obrera que fuerza la caida del gabinete del primer ministro gaullista Georges Pompidou). En 1969, de Gaulle convoca un referendum sobre las regiones en Francia para lograr mayor legitimidad, pero pierde. Derrotado, dimitira y se retirara de la politica. Murio de un aneurisma el 9 de noviembre de 1970, dejando sus memorias inconclusas.  De Gaulle dejo una impronta indeleble en la politica francesa del pasado y presente siglo, pues buena parte de sus ideas estan todavia presentes en la Francia actual, bajo la corriente del denominado \u00abgaullismo\u00bb. En su honor se cambio el nombre a la parisina plaza de \u00abL'Etoile\u00bb (lugar en el que se situa el Arco de Triunfo de Paris) por plaza Charles de Gaulle. ","snippet":"Charles Andre Joseph Marie de Gaulle (pronunciado\u00a0/\u0283a\u0281l d\u0259 \u0261ol/\u00a0( escuchar); Lille; 22 de noviembre de 1890-Colombey-les-Deux-Eglises, 9 de noviembre de 1970) fue un general y estadista frances que di","enlaces_salientes":["Charles_de_Gaulle","Charles_de_Gaulle","Charles_de_Gaulle","Presidente_de_la_Rep%C3%BAblica_Francesa","Primer_ministro","Michel_Debr%C3%A9","Georges_Pompidou","Maurice_Couve_de_Murville","Ren%C3%A9_Coty","Georges_Pompidou","Alain_Poher","Copr%C3%ADncipes_de_Andorra","Philippe_P%C3%A9tain","F%C3%A9lix_Gouin","Ram%C3%B3n_Iglesias_y_Navarri","Ren%C3%A9_Coty","Georges_Pompidou","Ram%C3%B3n_Iglesias_y_Navarri","Primer_ministro_de_Francia","Presidente","Ren%C3%A9_Coty","Pierre_Pflimlin","Michel_Debr%C3%A9","Primer_ministro_de_Francia","Ministerio_de_Defensa_de_Francia","Presidente","Ren%C3%A9_Coty","Primer_ministro","Gobierno_Provisional_de_la_Rep%C3%BAblica_Francesa","Pierre_Laval","Francia_de_Vichy","Philippe_P%C3%A9tain","Francia_de_Vichy","F%C3%A9lix_Gouin","Francia_Libre","Albert_Lebrun","Tercera_Rep%C3%BAblica_Francesa","Lille","Colombey-les-Deux-%C3%89glises","Aneurisma","Palacio_del_El%C3%ADseo","Francia","Catolicismo","Idioma_franc%C3%A9s","Yvonne_de_Gaulle","Philippe_de_Gaulle","Anne_de_Gaulle","Escuela_Especial_Militar_de_Saint-Cyr","Coll%C3%A8ge_Stanislas","Militar","Pol%C3%ADtico","Escritor","Ej%C3%A9rcito_de_Tierra_franc%C3%A9s","Francia_Libre","Grado_militar","General","Primera_Guerra_Mundial","Guerra_de_Independencia_de_Argelia","Segunda_Guerra_Mundial","Batalla_de_Verd%C3%BAn","Guerra_polaco-sovi%C3%A9tica","Batalla_de_Francia","Batalla_de_Dakar","Batalla_del_Gab%C3%B3n","Liberaci%C3%B3n_de_Par%C3%ADs","Agrupaci%C3%B3n_del_Pueblo_Franc%C3%A9s","Centro_Nacional_de_los_Republicanos_Sociales","Uni%C3%B3n_para_la_Nueva_Rep%C3%BAblica_(Francia)","Uni%C3%B3n_de_Dem%C3%B3cratas_por_la_Rep%C3%BAblica","Lille","22_de_noviembre","1890","Colombey-les-Deux-%C3%89glises","9_de_noviembre","1970","General","Estadista","Francia","Alemania_nazi","Segunda_Guerra_Mundial","Gobierno_provisional_de_la_Rep%C3%BAblica_francesa","Francia","Guerra_Fr%C3%ADa","Relaciones_franco-alemanas","Uni%C3%B3n_Europea","Primer_ministro_de_Francia","Presidente_de_Francia","Ren%C3%A9_Coty","Constituci%C3%B3n_francesa_de_1958","Quinta_Rep%C3%BAblica_Francesa","Elecciones_presidenciales_de_Francia_de_1965","Escuela_Especial_Militar_de_Saint-Cyr","Primera_Guerra_Mundial","Verd%C3%BAn","Yvonne_de_Gaulle","Philippe_de_Gaulle","Anne_de_Gaulle","S%C3%ADndrome_de_Down","Per%C3%ADodo_de_entreguerras","Secretario_de_Estado","Philippe_P%C3%A9tain","Ocupaci%C3%B3n_de_Francia_por_las_Fuerzas_del_Eje","Paul_Reynaud","Pierre_Laval","Tercer_Reich","Argelia_francesa","Armisticio_del_22_de_junio_de_1940","Llamamiento_del_18_de_junio","Londres","Francia_Libre","Wehrmacht","Francia_Libre","Potencias_del_Eje_en_la_Segunda_Guerra_Mundial","Resistencia_francesa","Gobierno_Provisional_de_la_Rep%C3%BAblica_Francesa","Liberaci%C3%B3n_de_Par%C3%ADs","Dirigismo","Treinta_gloriosos","Cuarta_Rep%C3%BAblica_Francesa","Agrupaci%C3%B3n_del_Pueblo_Franc%C3%A9s","Guerra_de_Independencia_de_Argelia","Elecciones_presidenciales_de_Francia_de_1958","Pieds-Noirs","Argelia","Independencia_de_Argelia","Guerra_Fr%C3%ADa","OTAN","Armas_de_destrucci%C3%B3n_masiva_en_Francia","Tratado_del_El%C3%ADseo","Supranacionalidad","Guerra_de_Vietnam","Hegemon%C3%ADa_del_d%C3%B3lar_estadounidense","Vive_le_Qu%C3%A9bec_libre","Comunidad_Econ%C3%B3mica_Europea","Elecciones_presidenciales_de_Francia_de_1965","Mayo_de_1968_en_Francia","Elecciones_legislativas_de_Francia_de_1968","Asamblea_Nacional_de_Francia","Colombey-les-Deux-%C3%89glises","Lille","Norte_(Francia)","Normand%C3%ADa","Borgo%C3%B1a","Pueblo_franc%C3%A9s","Pueblo_irland%C3%A9s","Pueblo_escoc%C3%A9s","Alemanes","Revoluci%C3%B3n_Francesa","Batalla_de_Sed%C3%A1n","Estudios_celtas","Henri_Bergson","Charles_P%C3%A9guy","Maurice_Barr%C3%A8s","Nietzsche","Kant","Goethe","Plat%C3%B3n","Fran%C3%A7ois-Ren%C3%A9_de_Chateaubriand","Par%C3%ADs","B%C3%A9lgica","Alemania","Guerra_franco-prusiana","Socialismo","Movimiento_sindical","Entente_Cordiale","Caso_Dreyfus","Alfred_Dreyfus","Evangelicalismo","Bas%C3%ADlica_del_sacr%C3%A9_c%C5%93ur","Juana_de_Arco","Escuela_Especial_Militar_de_Saint-Cyr","Caso_Dreyfus","Suboficial","Ej%C3%A9rcito_de_Tierra_Franc%C3%A9s","Batalla_de_Austerlitz","Batalla_de_Wagram","Batalla_de_Borodin%C3%B3","Cabo_(rango)","Condestable_de_Francia","Subteniente","Philippe_P%C3%A9tain","Primera_Guerra_Mundial","Dinant","Charles_Lanrezac","Masacre_de_Dinant","Croix_de_Guerre_1914-1918","Batalla_del_Somme","Douaumont","Batalla_de_Verd%C3%BAn","Gas_venenoso_en_la_Primera_Guerra_Mundial","Campo_de_prisioneros_de_guerra","Ingolstadt","Mija%C3%ADl_Tujachevsky","Ej%C3%A9rcito_Rojo","Dordo%C3%B1a_(departamento)","Polonia","Uni%C3%B3n_de_Republicas_Socialistas_Sovieticas","R%C3%ADo_Zbruch","Orden_Virtuti_Militari","%C3%89cole_Militaire","Maguncia","Marruecos","Joseph_Paul-Boncour","L%C3%ADnea_Maginot","Capit%C3%A1n","Comandante_(militar)","Tr%C3%A9veris","R%C3%ADo_Mosela","Raymond_Poincar%C3%A9","Ferdinand_Foch","Renania-Palatinado","C%C3%B3rcega","Norte_de_%C3%81frica","L%C3%ADbano","Siria","Beirut","Escuela_Normal_Superior_de_Par%C3%ADs","Par%C3%ADs","1940","Caso_Dreyfus","L%C3%ADnea_Maginot","Tratado_de_Versalles_(1919)","Alemania","Paul_Reynaud","Fascismo","Disturbios_del_6_de_febrero_de_1934","Frente_Popular_(Francia)","Panzer","Pierre_Laval","Uni%C3%B3n_Sovi%C3%A9tica","Francisco_I_de_Francia","Imperio_otomano","Carlos_I_de_Espa%C3%B1a","%C3%89douard_Daladier","Metz","Batalla_de_Austerlitz","Segunda_Guerra_Mundial","Renault_R35","Alsacia","Bitche","Ofensiva_del_Sarre","Albert_Lebrun","L%C3%A9on_Blum","Primer_ministro_de_Francia","R%C3%A9gimen_de_Vichy","Maurice_Gamelin","Campa%C3%B1a_de_Noruega","Batalla_de_Francia","Segunda_Guerra_Mundial","General","Plan_Amarillo","Sed%C3%A1n_(Ardenas)","Char_B1","Junkers_Ju_87","Caumont-sur-Durance","Brigadier","Somme_(departamento)","Abbeville_(Somme)","Cabeza_de_playa","Dunkerque","Winston_Churchill","Marrakech","Gobierno_Provisional_de_la_Rep%C3%BAblica_Francesa","Richard_Nixon","Argelia","Organisation_de_l%27Arm%C3%A9e_Secr%C3%A8te","Ahmed_Ben_Bella","Golpe_de_Estado","Pierre_Pflimlin","Ren%C3%A9_Coty","V_Rep%C3%BAblica","Refer%C3%A9ndum","Georges_Marrane","Colegio_electoral","Uni%C3%B3n_para_la_Nueva_Rep%C3%BAblica_(Francia)","OTAN","Richard_Nixon","Argelia","Alemania","Konrad_Adenauer","Relaciones_Alemania-Francia","Mercado_Com%C3%BAn_Europeo","Elecci%C3%B3n_presidencial_de_Francia_(1965)","Federaci%C3%B3n_de_la_Izquierda_Democr%C3%A1tica_y_Socialista","Mitterrand","Alfredo_Stroessner","Jorge_Alessandri","Eduardo_Frei_Montalva","Adolfo_L%C3%B3pez_Mateos","Emilio_Portes_Gil","L%C3%A1zaro_C%C3%A1rdenas_del_R%C3%ADo","Miguel_Alem%C3%A1n","Adolfo_Ruiz_Cortines","Juan_Domingo_Per%C3%B3n","Mayo_franc%C3%A9s","Georges_Pompidou","Aneurisma","Gaullismo","Arco_de_Triunfo_de_Par%C3%ADs","Plaza_Charles_de_Gaulle","Le_Monde","Par%C3%ADs","Le_Monde","ISSN","Par%C3%ADs","%C3%89ditions_Gallimard","ISBN","Andr%C3%A9_Malraux","Par%C3%ADs","%C3%89ditions_Gallimard","ISBN","Alain_Peyrefitte","Par%C3%ADs","ISBN","Madrid","ISBN","Aeropuerto_de_Par%C3%ADs-Charles_de_Gaulle","British_Broadcasting_Corporation","ISBN","ISBN","ISBN","ISBN","ISBN","Philippe_P%C3%A9tain","Francia_de_Vichy","Francia_de_Vichy","Albert_Lebrun","Presidente_de_Francia","1940","Presidente_de_Francia","F%C3%A9lix_Gouin","Philippe_P%C3%A9tain","Ram%C3%B3n_Iglesias_y_Navarri","Copr%C3%ADncipes_de_Andorra","Ram%C3%B3n_Iglesias_y_Navarri","F%C3%A9lix_Gouin","Ram%C3%B3n_Iglesias_y_Navarri","Pierre_Pflimlin","Lista_de_primeros_ministros_franceses","Michel_Debr%C3%A9","Ren%C3%A9_Coty","Presidente_de_Francia","Georges_Pompidou","Ren%C3%A9_Coty","Ram%C3%B3n_Iglesias_y_Navarri","Andorra","Ram%C3%B3n_Iglesias_y_Navarri","Georges_Pompidou","Ram%C3%B3n_Malla_Call","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Argentina","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Biblioteca_Nacional_de_Chile","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Australia","Biblioteca_del_Estado_Ruso","Biblioteca_Nacional_de_Israel","CiNii","National_Archives_and_Records_Administration","Syst%C3%A8me_universitaire_de_documentation","BIBSYS","Istituto_Centrale_per_il_Catalogo_Unico","Deutsche_Biographie","Base_L%C3%A9onore","Open_Library","Enciclopedia_Brit%C3%A1nica","Enciclopedia_Treccani","Biblioteca_Virtual_Miguel_de_Cervantes","Pers%C3%A9e_(portal)","Internet_Movie_Database"]}
{"url":"Universidad_de_Stanford","titulo":"Universidad Stanford","contenido":"La Universidad Leland Stanford Junior (Leland Stanford Junior University en ingles), conocida como Universidad Stanford, es una universidad privada estadounidense ubicada en Stanford, California, a unos 56 km al sureste de San Francisco. Stanford es celebre por la calidad de su ense\u00f1anza, por su riqueza y su proximidad a Silicon Valley, cuna de algunas de las mas importantes empresas de tecnologia punta. Esta considerada como una de las diez mejores universidades del mundo.\u200b\u200b\u200b\u200b\u200b  La universidad fue fundada en 1885 por Leland Stanford y su esposa Jane en memoria de su unico hijo, Leland Stanford Jr., que habia fallecido de fiebres tifoideas a la edad de quince a\u00f1os. El fundador, un rico magnate de los ferrocarriles, era senador y habia ejercido como gobernador del estado de California. La universidad abrio sus puertas el 1 de octubre de 1891\u200b como una institucion coeducacional y aconfesional.  La institucion sufrio dificultades financieras tras la muerte de su fundador en 1893 y tambien despues del devastador terremoto de San Francisco de 1906,\u200b que destruyo gran parte de su campus. Despues de la Segunda Guerra Mundial, el administrador academico Frederick Terman apoyo el espiritu empresarial de sus profesores y graduados para construir una industria local autosuficiente en lo que despues seria conocido como Silicon Valley.\u200b La universidad tambien es una de las instituciones que mas dinero recauda de todo Estados Unidos y se convirtio en la primera en ingresar mas de mil millones de dolares en solo un a\u00f1o.\u200b  La Universidad Stanford esta organizada alrededor de tres escuelas universitarias tradicionales que consisten en 40 departamentos academicos de pregrado y posgrado y cuatro escuelas profesionales que se centran en grados de Derecho, Medicina, Educacion y Negocios. El programa de pregrado de Stanford es uno de los tres mas exigentes de Estados Unidos.\u200b\u200b\u200b\u200b\u200b Sus estudiantes compiten en 36 deportes universitarios y han ganado 117 campeonatos de atletismo universitario, mas que ninguna otra universidad del pais.\u200b Los atletas de Stanford han ganado 512 campeonatos individuales,\u200b a lo que hay que sumar que de entre sus alumnos han salido 270 medallistas olimpicos, incluidas 139 medallas de oro.\u200b  A fecha de 2018, 81 galardonados con el premio Nobel, 27 con el Premio Turing y 7 con la medalla Fields han estado afiliados a Stanford como estudiantes, alumnos o profesores.\u200b Ademas, la universidad es particularmente celebre por su emprendimiento y es una de las instituciones educativas que mas exito tienen atrayendo financiacion para empresas emergentes.\u200b\u200b Los alumnos de Stanford han fundado un gran numero de nuevas empresas, que en conjunto producen mas de 2,7 billones de dolares anuales en beneficios y han creado 5,4 millones de puestos de trabajo a fecha de 2011.\u200b\u200b\u200b Stanford es el alma mater de 30 milmillonarios vivos y 17 astronautas, ademas de una de las productoras lideres de miembros del congreso de los Estados Unidos.\u200b\u200b  La Universidad Stanford tomo su nombre del hijo de su fundador, Leland Stanford Jr. (14 de mayo de 1868-13 de marzo de 1884; conocido como Leland DeWitt Stanford hasta los nueve a\u00f1os).\u200b Era el unico hijo del gobernador de California Leland Stanford y su esposa Jane Stanford. Su madre tenia 39 a\u00f1os cuando nacio, despues de 18 a\u00f1os de matrimonio sin hijos con Leland Stanford.  Leland contrajo la fiebre tifoidea dos meses antes de cumplir 16 a\u00f1os, mientras estaba en un Gran Tour por Europa con sus padres. Inicialmente cayo enfermo en Atenas.\u200b Sus padres lo llevaron rapidamente a Italia para recibir tratamiento medico, primero a Napoles, luego a Roma y, finalmente, a Florencia, donde murio despues de semanas de mejorar y empeorar su afeccion.\u200b Leland Stanford Sr. le dijo a su esposa que \"los hijos de California seran nuestros hijos\".\u200b\u200b\u200b Para honrar a su hijo al regresar a los Estados Unidos, los Stanford dedicaron su fortuna a un monumento en su nombre: Leland Stanford Junior University. Aunque la universidad se conoce generalmente como \"Universidad de Stanford\" o \"Stanford\", su nombre oficial sigue siendo \"Leland Stanford Junior University\", como se ve en el sello de la universidad.\u200b  Leland Stanford Jr. esta enterrado junto a sus padres en el mausoleo de la familia Stanford en el campus de Stanford. Despues de la muerte de su padre el 21 de junio de 1893, su madre guio el desarrollo de la universidad hasta su asesinato el 28 de febrero de 1905.  Stanford fue fundada por Leland Stanford, magnate ferroviario, senador de EE.\u00a0UU., y ex gobernador de California, junto con su esposa Jane Lathrop Stanford. Fue llamada asi en honor de su unico hijo, Leland Stanford Jr., que habia muerto en 1884 de fiebre tifoidea poco antes de cumplir 16 a\u00f1os. Sus padres decidieron crear una institucion que sirviera a \"los ni\u00f1os de California\".\u200b  Los Stanford visitaron al presidente de Harvard, Charles Eliot, para pedirles asesoria, sobre si montar una Universidad, un Museo o una Escuela Tecnica en honor a su hijo. Eliot les sugirio lo primero y estimo la inversion necesaria en $ 5 millones (en dolares de 1884, serian cerca de 133 millones de dolares de hoy). Los Stanford tambien visitaron la Universidad Cornell, la Universidad Johns Hopkins y el Instituto de Tecnologia de Massachusetts. Por ultimo, Leland y Jane Stanford crearon dos instituciones en honor a Leland Junior: la Universidad y el Museo, el cual fue originalmente planeado para San Francisco, pero fue trasladado junto a la Universidad.\u200b\u200b  Se la conoce localmente como The Farm (La Granja) porque la universidad esta situada en lo que fuera la granja de cria de caballos de Leland Stanford.  La universidad abrio sus puertas oficialmente el 1 de octubre de 1891, con un total de 559 estudiantes y 15 docentes, siete de los cuales provenian de la Universidad Cornell. Originalmente no se cobraba por la instruccion y, aunque la ense\u00f1anza era mixta, el numero de mujeres inscritas estuvo limitado durante varios a\u00f1os.  El lema oficial de la universidad, seleccionado por los Stanford durante la formacion de la institucion, es \"Die Luft der Freiheit weht\", cuya traduccion del aleman es \"sopla el viento de la libertad\". La frase proviene del reformador Ulrich von Hutten, y fue elegida en una epoca en la que el aleman habia reemplazado recientemente al latin como idioma dominante en las humanidades y la filosofia, funcion que retendria hasta la Segunda Guerra Mundial.  Stanford fue hasta los a\u00f1os 1930 una universidad relativamente peque\u00f1a y poco importante. Entre 1929 y 1934, Herbert Hoover, un graduado de esta Universidad, presidio los EE.\u00a0UU. en un periodo caracterizado por una gran crisis economica. En 1939, William Hansen y los hermanos Russell y Sigurd Varian inventaron el tubo Klystron, un generador de microondas de alta frecuencia que fue la base de los radares de la Segunda Guerra Mundial. A partir de entonces, Stanford fue incrementando su reputacion internacional, primero gracias a los proyectos de investigacion militar y despues al espiritu emprendedor de sus profesores y estudiantes. Stanford ha sido la cuna de empresas tecnicas y cientificas tan importantes como Hewlett-Packard, Cisco Systems, VMware, Yahoo!, Google y Sun Microsystems. De hecho, \"Sun\" originariamente era un acronimo de \"Stanford University Network\".  A lo largo de su historia Stanford ha tenido a veintisiete galardonados con el Premio Nobel entre sus profesores, en areas como por ejemplo la Economia destacan (Kenneth J. Arrow, Gary Becker, Milton Friedman, Douglass North, Myron Scholes, William Sharpe, Michael Spence, Joseph E. Stiglitz), en Fisica, (Felix Bloch, Steven Chu, Robert Hofstadter, Robert B. Laughlin, Douglas Osheroff, Martin Perl, Burton Richter, Arthur L. Schawlow, Richard E. Taylor), y en Quimica (Paul Berg, Roger Kornberg) o Medicina (Andrew Fire, Arthur Kornberg). Aunque el trabajo que les llevo a ganar el Nobel no se desarrollo en muchos casos en esta universidad, Stanford ha sabido atraer el talento de estos nobeles. Stanford figura entre las 10 mejores universidades de los EE.\u00a0UU. en los campos de ingenieria electrica, ingenieria informatica, economia, ciencias empresariales y derecho.  Stanford mantiene una sana y cordial rivalidad con la vecina Universidad de California, Berkeley. Esta rivalidad alcanza su cima todos los a\u00f1os con el \"Big Game\" o partido de futbol americano entre los equipos de las dos universidades.  Actualmente la universidad es la mayor propietaria privada de terrenos en la Bahia de San Francisco gracias al legado de los Stanford. Sus terrenos son tan amplios que llegan a albergar un acelerador lineal, un parque empresarial con la sede mundial de Hewlett-Packard y un importante centro medico.    Stanford tiene siete escuelas:  Stanford compite en la Division I de la NCAA y es miembro de la Pac-12 Conference. ","snippet":"La Universidad Leland Stanford Junior (Leland Stanford Junior University en ingles), conocida como Universidad Stanford, es una universidad privada estadounidense ubicada en Stanford, California, a un","enlaces_salientes":["Universidad_Stanford","Universidad_Stanford","Universidad_Stanford","Coordenadas_geogr%C3%A1ficas","Lema","Universidad_privada","Leland_Stanford","Palo_Alto","California","Estados_Unidos","APRU","Estudiante","Pregrado","Posgrado","Cardenal_(color)","Blanco_(color)","Idioma_ingl%C3%A9s","Estados_Unidos","Stanford_(California)","California","San_Francisco_(California)","Silicon_Valley","Leland_Stanford","Fiebre_tifoidea","Magnate","Ferrocarril","Senado_de_los_Estados_Unidos","1_de_octubre","1891","Coeducaci%C3%B3n","Aconfesional","Terremoto_de_San_Francisco_de_1906","Segunda_Guerra_Mundial","Escuela_universitaria","Pregrado","Posgrado","Deportes_ol%C3%ADmpicos","Atletismo","Premio_Nobel","Premio_Turing","Medalla_Fields","Emprendimiento","Empresa_emergente","Alma_mater","Milmillonario","Astronauta","Congreso_de_los_Estados_Unidos","M%C3%A1scara_mortuoria","Gobernador_de_California","Leland_Stanford","Fiebre_tifoidea","Grand_Tour","Atenas","N%C3%A1poles","Roma","Florencia","Sello_(cu%C3%B1o)","Mausoleo_de_Stanford","Leland_Stanford","Jean-Louis-Ernest_Meissonier","Leland_Stanford","Magnate","Ferrocarril","Gobernador_de_California","Universidad_Harvard","Universidad_Cornell","Universidad_Johns_Hopkins","Instituto_de_Tecnolog%C3%ADa_de_Massachusetts","San_Francisco_(California)","Universidad_Cornell","Idioma_alem%C3%A1n","Reforma_protestante","Ulrich_von_Hutten","Lat%C3%ADn","Segunda_Guerra_Mundial","Herbert_Hoover","Klistr%C3%B3n","Microonda","Radar","Hewlett-Packard","Cisco_Systems","VMware","Yahoo!","Google","Sun_Microsystems","Premio_Nobel","Kenneth_J._Arrow","Gary_Becker","Milton_Friedman","Douglass_North","Myron_Scholes","William_Sharpe","Michael_Spence","Joseph_E._Stiglitz","Felix_Bloch","Steven_Chu","Robert_Hofstadter","Robert_B._Laughlin","Douglas_Dean_Osheroff","Martin_Lewis_Perl","Burton_Richter","Arthur_L._Schawlow","Richard_Edward_Taylor","Paul_Berg","Roger_Kornberg","Andrew_Fire","Arthur_Kornberg","Ingenier%C3%ADa_el%C3%A9ctrica","Ingenier%C3%ADa_inform%C3%A1tica","Econom%C3%ADa","Ciencias_empresariales","Derecho","Universidad_de_California,_Berkeley","F%C3%BAtbol_americano","San_Francisco_(California)","Acelerador_lineal","Hewlett-Packard","Iglesia_Memorial_de_Stanford","Catedral_Nueva_de_Salamanca","Escuela_universitaria","Escuela_de_Ingenier%C3%ADa_de_la_Universidad_Stanford","Escuela_de_Postgrado_de_Negocios_Stanford","Escuela_de_Medicina_de_la_Universidad_Stanford","David_Starr_Jordan","John_Casper_Branner","Donald_Kennedy","John_Hennessy","Stanford_Cardinal","Divisi%C3%B3n_I_de_la_NCAA","Pacific-12_Conference","Reuters","Viz.","Find_a_Grave","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Australia","Biblioteca_Nacional_de_Israel","CiNii","Syst%C3%A8me_universitaire_de_documentation","Union_List_of_Artist_Names","BIBSYS","Enciclopedia_Brit%C3%A1nica","Getty_Thesaurus_of_Geographic_Names","Geographic_Names_Information_System"]}
{"url":"Marcel_Proust","titulo":"Marcel Proust","contenido":"Marcel Proust (en frances: [ma\u0281s\u025bl p\u0281ust]; nombre completo: Valentin Louis Georges Eugene Marcel Proust; (Paris, 10 de julio de 1871-Paris, 18 de noviembre de 1922) fue un novelista y critico frances, cuya obra maestra, la novela En busca del tiempo perdido, (compuesta de siete partes publicadas entre 1913 y 1927) constituye una de las cimas artisticas del siglo\u00a0XX. Su extensa novela fue enormemente influyente tanto en el campo de la literatura como en el de la filosofia y la teoria del arte.  En ella, el autor frances realizo una labor de introspeccion en la que, recordando todo su pasado y rescatando de esta manera recuerdos nitidos y sensaciones, logro retratar su vida en una narracion dentro de la cual se coloco como narrador omnipotente de su escritura autobiografica, creando un estilo onirico caracteristico, donde un olor, un sabor, pueden cobrar suma importancia, y saltar a otra memoria, creando de este modo un increible mar de literatura.  Proust nacio en una familia acomodada y cultivada (su padre era un medico de renombre internacional y su madre una mujer judia muy culta) y siempre estuvieron cubiertas sus necesidades materiales durante toda su corta vida. Fue un ni\u00f1o hiperprotegido por una notoria fragilidad de salud, estado que lo acompa\u00f1aria durante el resto de su vida, generalmente en forma de ataques de asma, hasta sus ultimos a\u00f1os de encierro y su temprana muerte a los cincuenta y un a\u00f1os.  Ya de joven comenzo a frecuentar los salones aristocraticos, lo que le permitio conocer a toda clase de literatos y artistas y, al mismo tiempo, le valio una fama de snob sobre la que Andre Gide, escritor y editor de la Nouvelle Revue Francaise (NRF), se fundaria mas tarde para rechazar el manuscrito de A la recherche... casi sin leerlo.\u200b Se sirvio de la fortuna familiar para vivir sin trabajar y dedicarse a escribir, aunque sin ningun exito durante mas de veinte a\u00f1os. En ese tiempo solo consiguio escribir una novela que nunca concluyo y que no publico, ademas de articulos y traducciones que no recibieron demasiada atencion.  En 1907 comenzo la que seria la primera parte de su gran novela y que titularia Por el camino de Swann (Du cote de chez Swann), publicada en 1913 a cuenta del autor. La segunda parte, A la sombra de las muchachas en flor (A l'ombre des jeunes filles en fleur) obtuvo el Premio Goncourt en 1919, primer reconocimiento de cierta notoriedad que Proust recibio cuando le quedaban solo tres a\u00f1os de vida. Muy enfermo, dedico esta ultima etapa exclusivamente a terminar su gran obra maestra, encerrado en su casa y sin ver casi a nadie. Sin haberla acabado, murio en noviembre de 1922 de una bronquitis mal curada. Su hermano tomaria a su cargo la edicion de los manuscritos, que fueron apareciendo uno a uno hasta que en 1927 se publico el tomo septimo y final: El tiempo recobrado (Le temps retrouve).  A la recherche du temps perdu es una gran reflexion sobre el tiempo, el recuerdo, el arte, las pasiones y las relaciones humanas atravesada por un sentimiento del fracaso y el vacio de la existencia, animada por mas de doscientos personajes \u2014que Proust compuso cuidadosamente amalgamando en cada uno trazos de las diversas personas que habia conocido a lo largo de su vida\u2014 y fundamentalmente por el narrador, a quien seguimos en su largo y minucioso recordar desde el dia en que una magdalena remojada en te reabrio inesperadamente a su memoria las puertas de un pasado lejano y olvidado ya (vease: Magdalena de Proust), que poco a poco comienza a ser exhumado mediante toda clase de recursos imaginables puestos en practica a lo largo del relato: descripciones poeticas, comparaciones y metaforas, reflexiones filosoficas y exposiciones literarias de teorias metafisicas, anecdotas, discusiones y conversaciones que entrecruzan los mas variados personajes en los mas diversos lugares.  Varios ejes estructuran la obra, entre los cuales destacan:  Proust ofrece un gran panorama de la decadencia de la nobleza francesa a fines del siglo\u00a0XIX, pero tambien guarda para la posteridad, ese modo de vida, mediante la riqueza imaginativa de su memoria.  Al margen de esta obra principal, escribio Los placeres y los dias (recopilacion miscelanea), Jean Santeuil (novela inconclusa y postuma, publicada en 1952) y una serie de articulos de prensa (principalmente de critica literaria y recopilados en Contra Saint-Beuve y Parodias y miscelaneas), asi como una cantidad abrumadora de cartas \u2014mas de cien mil\u2014 cuya publicacion se completo en 1993 y alcanza veintiun tomos de Epistolario.\u200b Tradujo a John Ruskin (The Bible of Amiens, Sesame and Lilies) con ayuda de su madre, cuyo ingles era excelente, como ejercicio para dominar ese idioma.  Marcel Proust nacio en Paris, en el barrio de Auteuil (el actual XVI distrito de la ciudad). Fue el hijo mayor de Adrien Proust, famoso epidemiologo frances, profesor en la Facultad de Medicina de Paris y consejero del gobierno en materia de sanidad, y de Jeanne Clemence Weil, judia alsaciana nieta de un antiguo ministro de Justicia, quien, poseedora de una vasta cultura, fue determinante en cuanto a la vocacion literaria de Proust; a ella dedico este su mas intenso afecto en la vida.  La caracteristica fragilidad e hipersensibilidad de Proust proviene de su mismo nacimiento y primeros a\u00f1os:  Por otra parte, Adrien y Jeanne tuvieron un segundo hijo, Robert, nacido en 1873, que, a diferencia de Marcel, satisfizo los propositos de su padre respecto del futuro profesional de su prole, pues devino un cirujano exitoso, con lo que Proust pudo esquivar bien pronto la presion familiar y convertirse en lo que ansiaba, un hombre de letras.  La familia de Proust acostumbraba a viajar desde Auteuil a la casa de sus tios Amiot y Elisabeth Proust, hermana de Adrien, en las temporadas de Pascua. La casa se encontraba en Illiers, el pueblo del padre, a unos 25 kilometros de Chartres. Y en Auteuil, cerca del Bois de Boulogne, ademas de en Cabourg y en Trouville, se inspiro Proust para crear el Balbec de a A la recherche..., mientras que Illiers fue el modelo para el imaginario Combray. Tanto es asi que, en 1971, Illiers fue rebautizada Illiers-Combray en honor de Proust y alli acuden, casi en procesion religiosa, los fieles proustianos a tomar una taza de te con magdalenas para recordar el famoso pasaje de Por el camino de Swann,  sobre la magdalena de Proust.  Marcel, ni\u00f1o debil y asmatico, sufria especialmente en los primeros dias de cada primavera el polen liberado por las flores. Hacia 1880, cuando contaba solo nueve a\u00f1os, Proust sufre su primera crisis grave de asma al volver junto a sus padres de un paseo por el Bois de Boulogne: se ahoga y la respiracion no le vuelve, su padre lo cree muerto y solo in extremis logra salvarse. Como consecuencia, las visitas a Illiers se reducen hasta el punto de suspenderse y Proust, desde entonces, contemplara a Illiers como un paraiso perdido. Su asistencia al colegio resulto irregular; ni alli ni luego en el liceo Condorcet seria considerado un estudiante de demasiado provecho.  Luego de asistir a un peque\u00f1o curso primario, en el que tendria como compa\u00f1ero al hijo del compositor Georges Bizet, Jacques, de quien se haria gran amigo en sus a\u00f1os de adolescencia y el salon de cuya madre frecuentaria mas adelante, inicio sus estudios secundarios en 1882 en el liceo Condorcet. Aunque su asistencia al colegio seria siempre irregular, destaco en lengua y literatura: ya se sabia de memoria a autores como Victor Hugo y Alfred de Musset.\u200b Destaco ademas en la clase de filosofia, uno de cuyos profesores fue Alphonse Darlu, y en sus composiciones llamaban la atencion por sus frases extensas y acaracoladas. Entablo amistad, ademas de con Jacques Bizet, con Fernand Gregh y Daniel Halevy, junto a quien solia publicar en las revistas literarias del liceo.  Su primer amor fue Marie de Benardaky, hija de un diplomatico polaco. Con ella jugaba cada jueves a la tarde en los jardines de los Campos Eliseos, junto a Antoinette y Lucie Faure \u2014hijas del futuro presidente Felix Faure\u2014, a Leon Brunschvicg, Paul Benazete y Maurice Herbette, entre otros.\u200b Dejo de ver a Marie en 1887, y sus primeros intentos de amar a otra persona que no fuera su madre quedaron sin objeto. Proust recuperara el recuerdo de la ni\u00f1a de los Campos Eliseos en los episodios del narrador con Gilberte en A la recherche...  De sus ultimos a\u00f1os en el Liceo datan sus primeras tentativas literarias (mas tarde, en 1892, Gregh fundaria una peque\u00f1a revista con sus antiguos condiscipulos, Le Banquet, de la que Proust seria asiduo colaborador). Es tambien en esta epoca cuando comienza a ganarse su reputacion de snob, pues ya en 1888, a la edad de diecisiete a\u00f1os, Proust comenzo a frecuentar salones parisinos en los que entablaria relacion con damas de la alta burguesia, artistas y literatos de la epoca. Su ascenso mundano comenzaba y ya no se detendria hasta su retiro de los salones mucho mas adelante (se llegaria a decir que \"se proustituia\" sobre alguien que experimentaba un veloz ascenso social), pues la elegancia de Proust y el encanto de su charla maravillaba a las damas del gran mundo. Incansablemente cada noche frecuentaba salones y cafes. Su coche de caballos, su simon, era famoso en todo Paris. Su encanto e inteligencia le permitian hacer amistades con gran facilidad. Para otros, en cambio, el comportamiento de Proust era reprobable y le provocaba mala fama; asi para Andre Gide, quien admitiria haber prejuzgado los manuscritos de A la recherche por la mala impresion que su autor le habia causado.\u200b  Fue esta una de las etapas que mas mediatizaron al autor y a su obra. Tambien fue por esos a\u00f1os cuando Proust mantuvo la primera relacion homosexual de que se tiene registro en su vida. Su amante fue Lucien Daudet, hijo del escritor Alphonse Daudet, y su relacion, escandalosa para una epoca en que no se dudaria, por ejemplo, y exactamente en ese mismo tiempo \u20141895\u2014 en condenar a Oscar Wilde a prision y trabajos forzados por el delito de homosexualidad, fue revelada por Jean Lorrain en Le Journal.  Este periodo de su vida, sin embargo, concluyo rapidamente puesto que, en 1889, Proust decidio ingresar como voluntario en el servicio militar. Esta decision pudo deberse a que buscaba convivir con los compa\u00f1eros y, tambien,  a que de esa forma podia acortar el tiempo del servicio obligatorio. Marcel declaro haberle sido esta experiencia una de las mas gratas en la vida. Su valoracion final lo situo en el puesto 63 de 64. Completado en 1890 su servicio, quiso reengancharse, pero ya se lo impidio su pesimo estado de salud. Por esos a\u00f1os se hizo amigo de Robert de Bailly y tambien de Gasto Arman de Caillavet y su novia Jeanne Pouquet. En ellos se inspirara para crear los personajes de Roberto de Saint-Loup y de Gilberte en A la recherche.... Comenzo a frecuentar el salon de Madame de Caillavet, quien vivia separada de su marido y era amante de Anatole France. A traves de ella, Marcel conocio al famoso escritor, sobre el cual fraguo el personaje de Bergotte, a Alexandre Dumas (hijo) y al filosofo Victor Brochard.  Para satisfacer a su padre, estudio Derecho y se recibio de abogado, pero se nego a ejercer y logro convencer a su padre de que no podria vivir de otra cosa que no fuesen las letras y la filosofia. Asi que emprendio tambien su licenciatura en letras, que completaria en 1895. Durante sus estudios fue alumno, entre otros, de Albert Sorel, quien lo juzgo \"no inteligente\" en su examen, y de Henri Bergson, cuyas ideas sobre el tiempo influirian en su obra. Aun cuando consiguio obtener el titulo en la disciplina que mas placia a su sensibilidad, tampoco en ella ejercio la profesion, sino que se sirvio de la fortuna familiar para continuar frecuentando salones mientras escribia peque\u00f1os textos que nunca tuvieron mucha repercusion.  En 1896, a los 25 a\u00f1os, publico su primer libro: Los placeres y los dias, recopilacion miscelanea de poemas en prosa, nouvelles y retratos de estilo decadente, para el cual Proust consiguio que Madeleine Lemaire lo ilustrara y que Anatole France lo prologara. El libro paso sin embargo desapercibido y si la critica se pronuncio a su respecto fue para juzgarlo con severidad, como fue el caso de Jean Lorrain. Este, escritor y homosexual que escandalizaba por hacer publicas sus inclinaciones de forma exagerada, hizo una critica feroz al libro y, ademas, daba a entender que Proust era amante de Lucien Daudet. Marcel Proust se sintio ofendido, no aceptaba que su homosexualidad se reconociera en sociedad, y lo reto a duelo, el cual afortunadamente no tuvo consecuencias pues parece que ambos dispararon al aire. Toda la reputacion que consigue es la de un mundano dilletante, reputacion con la que cargara ademas hasta la publicacion de Por el camino de Swann y que influira en que su obra no sea reconocida desde el primer momento.  En 1906 Marcel Proust recibe un golpe terrible, el fallecimiento de su madre, que tan importante fue para el. Se sintio en absoluta soledad y enfermo, solo tenia a su hermano Robert, pero estaba casado. Se traslado a Versalles para vivir cerca de una amiga de su madre. Se estaba gestando lo que seria una de las obras mas grandes de la literatura universal.  En 1893, Proust habia conocido al aristocrata Robert de Montesquiou, poeta homosexual, de gran influencia en su vida y su obra. Montesquiou fue quien lo introdujo, entre 1894 y 1900, en el ambiente aristocratico, presentandolo en salones como el de la condesa Greffuhle, el de la princesa de Wagram o el de la condesa de Haussonville. Fue a partir de esta nueva experiencia mundana cuando Proust se hizo del material y de la disposicion necesarias para componer su gran obra.  Pero esta no comenzaria a escribirse sino hacia 1907, y lo que Proust produjo en esta epoca fue otra novela que de alguna manera anuncia A la recherche... por su estilo, por sus temas, por el protagonista, por el afan de rescatar el tiempo pasado, por prefigurar ya la revolucion de la novela, pero que su autor, insatisfecho, dejaria inconclusa. Se trata de Jean Santeuil, proyecto emprendido durante el verano de 1895, novela que relata la vida de un joven preso de pasion por la literatura en el Paris mundano de finales del siglo\u00a0XIX. La novela solo fue publicada postumamente, por Bernard de Fallois, en 1952, para lo cual se debieron editar lo que no eran mas que fragmentos, lo mismo que darle un titulo. En ella evoca Proust especialmente el caso Dreyfus, del cual fue un participante apasionado: fue el uno de los primeros en hacer circular una peticion en favor del capitan Dreyfus, judio acusado injustamente de traicion, la cual hizo firmar, entre otros, por Anatole France. Sin embargo, el caso Dreyfus, del que no se conoceria la verdad publicamente hasta mucho despues, desato una fuerte ola de antisemitismo, especialmente en el medio aristocratico que Proust frecuentaba, lo que habria sido una mas entre varias razones para que este abandonara toda vida social a comienzos del nuevo siglo.  En 1896 Proust publico a su costa Los placeres y los dias, una recopilacion de poemas en prosa, retratos y relatos largos en un estilo decadente, ilustrado por Madeleine Lemaire, due\u00f1a del salon que Proust frecuentaba con asiduidad junto con su amante francovenezolano Reynaldo Hahn, el cual contribuyo al libro con partituras compuestas por el, y prologado por Anatole France. El libro le atrajo a Proust una reputacion de diletante mundano que no se disiparia hasta la misma publicacion de los primeros tomos de A la recherche... a partir de 1913. Con el paso del tiempo, ademas de los diferentes problemas y la vida social agitada que llevaba, Proust continuo profundizando su pasion por la literatura, hasta que dio con la obra de un esteta ingles, John Ruskin, que cambiaria la orientacion de su vida y de su carrera literaria.  Proust descubrio la obra de John Ruskin a traves de la lectura de articulos y obras como la de Robert de la Sizeranne Ruskin et la religion de la beaute, ya que el propio Ruskin habia prohibido que se tradujera del ingles mientras permaneciera vivo. Asi que, al fallecer este en 1900, Proust aprovecho para iniciar la traduccion de su obra y emprendio varios peregrinajes al norte de Francia, a Amiens y sobre todo a Venecia, en donde residio una temporada con su madre; tambien en esta epoca aparecen sus primeros articulos sobre Ruskin en la Gazette des beaux-arts.  Este episodio de su vida esta registrado en Albertine desaparecida (o La fugitiva). Los padres de Marcel desempe\u00f1aron un papel determinante en el trabajo de traduccion: el padre lo acepto como un medio de poner a trabajar a un hijo que se rebelaba contra las funciones sociales y que acababa de abandonar un trabajo no remunerado en la Biblioteca Mazarino; la madre influyo mas aun: Marcel no dominaba el ingles, asi que ella realizo una primera traduccion literal del texto. A partir de alli, Proust pudo \"escribir en excelente frances ruskiniano\", como anota un critico ante la aparicion de la primera traduccion de The Bible of Amiens en 1904. La segunda, publicada en 1906, fue del libro Sesame and Lilies. Proust las acompa\u00f1o de un abundante aparato critico, con largos y ricos prefacios \u2014casi tan extensos como el texto mismo\u2014 y con multiples notas. A medida que traducia a Ruskin, Proust tomaba distancia de las posiciones esteticas del autor ingles. Esto es particularmente evidente en el ultimo capitulo de su prefacio a la primera traduccion, en donde alterna entre la admiracion y la confesion de distancia con respecto a las traducciones anteriores. Con todo, y aun cuando estas traducciones fueron alabadas por personalidades como Henri Bergson, constituyeron un fracaso editorial.  Tras la muerte de sus padres, sobre todo tras la de su madre en 1905, su fragil salud se deterioro mucho a causa del asma y de la depresion por la perdida materna. Permanecio recluido durante quince a\u00f1os en el 102 del bulevar Haussmann en Paris, donde hizo cubrir las paredes de corcho para aislarse de ruidos y dedicarse sin ser molestado a su obra maestra, En busca del tiempo perdido (A la recherche du temps perdu). Vivia exclusivamente de noche, tomando cafe en grandes cantidades y casi sin comer \u2014segun cuenta Celeste Albaret, su criada en esos a\u00f1os, en un libro de memorias\u2014, sin cesar nunca de escribir y de practicar sobre su texto interminables correcciones, supresiones y a\u00f1adidos de papeles que Celeste se encargaba de pegar en las paginas correspondientes, que podian alcanzar, en consecuencia, considerables extensiones.  Proust comenzo la obra hacia 1907. No sale de casa, trabaja durante la noche y duerme de dia; tiene a su servicio a un joven matrimonio de criados, Nicolas y Celine Cottin. En 1912, aparecieron varios fragmentos de su novela en Le Figaro, y por esta epoca, segun sus calculos, el libro daria dos volumenes de setecientas paginas cada uno. Finalmente, la primera parte, Por el camino de Swann se publica en noviembre de 1913 con dinero del bolsillo de Proust, luego de haber sido rechazada por La Nouvelle Revue Francaise (NRF). El principal responsable de este rechazo fue Andre Gide, quien admitiria mas tarde que la declaro sin valor alguno sobre la base de la imagen social que tenia del autor y de un pasaje que leyo al azar y le desagrado.\u200b  La continuidad de la publicacion deberia esperar a raiz de la Primera Guerra Mundial (1914-1918). Proust tenia ganas de ir al campo de batalla, pero su salud no se lo permitio y fue declarado no apto para el servicio, mientras que su hermano Robert fue ascendido a capitan y varios de sus amigos morian en la guerra. Con todo, presto ayuda desde su casa en todo lo que se le solicito. Mientras tanto, se dedico por completo a su obra, rehaciendola y alcanzando asi la extension que tiene en la actualidad. En estos a\u00f1os, al escritor se le llamaba  \u00abProust, el del Ritz\u00bb, debido a que frecuentaba mucho este hotel, donde conocio a nuevos escritores jovenes y a varios amantes entre los camareros suizos, ya que los franceses habian sido movilizados.  Apenas terminada la guerra, se publico el segundo volumen, A la sombra de las muchachas en flor \u2014ahora aceptada por la NRF, luego de las sentidas disculpas de Gide\u2014, que al a\u00f1o siguiente obtendria el premio Goncourt, no sin cierta controversia debido a la decision del jurado. En 1922, se publico Sodoma y Gomorra.  En el mes de septiembre, Proust sufrio de crisis asmaticas. El 10 de octubre fue la ultima vez que salio a la calle, y una semana despues de declararsele una neumonia, el 18 de noviembre de 1922, murio. Fue enterrado en el cementerio de Pere-Lachaise, donde yace junto a los restos de su padre y de su hermano. Todavia habrian de pasar cinco a\u00f1os antes de que se terminaran de publicar las demas partes: La prisionera (1923), La fugitiva (1925) y El tiempo recobrado (1927). Muchas obras \u2014incluida su extensa correspondencia\u2014 serian recopiladas y publicadas de manera postuma, la ultima en 2012.  En general la obra de Proust posee un estilo literario muy caracteristico e inconfundible, influido por el impresionismo y con marcado caracter simbolista. Domina un tipo de descripcion atomizada y narrativamente recurre a un tempo lento y moroso, de parrafo amplio y complejo; su manera de abordar cualquier cuestion es siempre indirecta, en espiral.  Huyendo del realismo artistico y sus excesos naturalistas, Marcel Proust mostrara su transfiguracion de la realidad por medio de distintas formas de subjetivismo, como por ejemplo la forma imaginativa de tratar el tiempo y sus observaciones y descripciones impresionistas, pero todas estas tecnicas quedan resguardadas a la sombra de la principal caracteristica de la obra de Proust: el fluir proteico de la conciencia, reducida a la duree bergsoniana.  Proust hace uso del monologo indirecto, el cual supone la presencia de un narrador omnisciente que presenta pensamientos no articulados por la palabra y regularmente conduce al lector a traves de una estructura episodica que tambien es una modificacion de la clasica estructura tradicional, por dos razones: por el uso de la analepsis o flashback y por su especial contenido tematico. El contenido de la novela no es lineal, y solo reduciendolo a la caricatura puede denominarse argumental, porque no narra sucesos, como en la escuela tradicional, sino el efecto que producen en la sensibilidad, el pensamiento, la imaginacion y la memoria. La obra de Proust presenta tambien dialogos simultaneos que suceden en un mismo tiempo-espacio.  Los cambios de narracion, de lugar, de tiempo, de perspectiva y de narrador, hechos a partir de recuerdos, ofrecen una impresion especial. La novela proustiana posee un tiempo psicologico, manipulado por el narrador a conveniencia.  Se ofrecen una ordenacion cronologica (con la excepcion de las partes de A la recherche..., que son listadas juntas) y los titulos originales entre corchetes. ","snippet":"Marcel Proust (en frances: [ma\u0281s\u025bl p\u0281ust]; nombre completo: Valentin Louis Georges Eugene Marcel Proust; (Paris, 10 de julio de 1871-Paris, 18 de noviembre de 1922) fue un novelista y critico frances,","enlaces_salientes":["Marcel_Proust","Marcel_Proust","Marcel_Proust","1900","Par%C3%ADs","Francia","Neumon%C3%ADa","Cementerio_del_P%C3%A8re_Lachaise","Idioma_franc%C3%A9s","Adrien_Proust","Universidad_de_Par%C3%ADs","Novelista","Ensayista","Cr%C3%ADtica_literaria","Novela_r%C3%ADo","Ensayo","Pastiche","En_busca_del_tiempo_perdido","Premio_Goncourt","Idioma_franc%C3%A9s","Par%C3%ADs","10_de_julio","1871","Par%C3%ADs","18_de_noviembre","1922","Francia","Magnum_opus","En_busca_del_tiempo_perdido","Siglo_XX","Literatura","Filosof%C3%ADa","Teor%C3%ADa_del_arte","Introspecci%C3%B3n","Asma","Andr%C3%A9_Gide","Nouvelle_Revue_Fran%C3%A7aise","Por_el_camino_de_Swann","A_la_sombra_de_las_muchachas_en_flor","Premio_Goncourt","El_tiempo_recobrado","Tiempo","Recuperaci%C3%B3n_(memoria)","Arte","Magdalena_de_Proust","Jacques_Emile_Blanche","John_Ruskin","Par%C3%ADs","XVI_Distrito_de_Par%C3%ADs","Adrien_Proust","Epidemiolog%C3%ADa","Facultad_de_Medicina_de_Par%C3%ADs","Pueblo_jud%C3%ADo","Alsacia","Illiers","Chartres","Bois_de_Boulogne","Cabourg","Trouville","Illiers-Combray","Por_el_camino_de_Swann","Magdalena_de_Proust","Asma","Bois_de_Boulogne","Liceo_Condorcet","Paul_Nadar","Georges_Bizet","Liceo_Condorcet","V%C3%ADctor_Hugo","Alfred_de_Musset","Daniel_Hal%C3%A9vy","Avenida_de_los_Campos_El%C3%ADseos","F%C3%A9lix_Faure","Andr%C3%A9_Gide","Homosexualidad","Alphonse_Daudet","Oscar_Wilde","Jean_Lorrain","Anatole_France","Alexandre_Dumas_(hijo)","Henri_Bergson","Decadentismo","Madeleine_Lemaire","Anatole_France","Jean_Lorrain","Robert_de_Montesquiou","Wagram","Haussonville","Par%C3%ADs","Siglo_XIX","Caso_Dreyfus","Dreyfus","Anatole_France","1896","Los_placeres_y_los_d%C3%ADas","Reynaldo_Hahn","John_Ruskin","John_Ruskin","John_Ruskin","1900","Francia","Amiens","Venecia","Albertine_desaparecida","Biblioteca_Mazarino","Henri_Bergson","En_busca_del_tiempo_perdido","Bulevar_Haussmann","Bulevar_Haussmann","En_busca_del_tiempo_perdido","Le_Figaro","La_Nouvelle_Revue_Fran%C3%A7aise","Andr%C3%A9_Gide","P%C3%A8re-Lachaise","Primera_Guerra_Mundial","H%C3%B4tel_Ritz_(Par%C3%ADs)","A_la_sombra_de_las_muchachas_en_flor","Premio_Goncourt","Sodoma_y_Gomorra_(Proust)","Cementerio_de_P%C3%A8re-Lachaise","Albertine_desaparecida","Impresionismo","Simbolismo","Realismo_art%C3%ADstico","Naturalismo_(literatura)","Subjetivismo","Henri_Bergson","Estilo_indirecto_libre","Narrador_omnisciente","Analepsis","Flashback","Los_placeres_y_los_d%C3%ADas","Le_Figaro","En_busca_del_tiempo_perdido","Por_el_camino_de_Swann","A_la_sombra_de_las_muchachas_en_flor","El_mundo_de_Guermantes","Sodoma_y_Gomorra_(Proust)","La_prisionera_(novela)","Albertine_desaparecida","Alan_Pauls","El_Peri%C3%B3dico_de_Catalunya","ISSN","Gilles_Deleuze","Huerga_y_Fierro_editores","St%C3%A9phane_Zagdanski","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Argentina","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Biblioteca_Nacional_de_Chile","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Australia","Biblioteca_Nacional_de_Israel","CiNii","Syst%C3%A8me_universitaire_de_documentation","Union_List_of_Artist_Names","BIBSYS","Istituto_Centrale_per_il_Catalogo_Unico","Deutsche_Biographie","Base_L%C3%A9onore","Open_Library","KulturNav","Rijksbureau_voor_Kunsthistorische_Documentatie","Enciclopedia_Brit%C3%A1nica","Enciclopedia_Treccani","Biblioteca_Virtual_Miguel_de_Cervantes","Pers%C3%A9e_(portal)","Dialnet","Proyecto_Gutenberg","Internet_Movie_Database"]}
{"url":"Paul_Val%C3%A9ry","titulo":"Paul Valery","contenido":"Ambroise-Paul-Toussaint-Jules Valery (Sete, 30 de octubre de 1871-Paris, 20 de julio de 1945) fue un escritor, poeta, ensayista y filosofo frances. Como poeta es el principal representante de la llamada poesia pura; como prosista y pensador (el se consideraba antifilosofo), la lectura y comentario de sus textos ha sido muy notable, desde Theodor Adorno y Octavio Paz hasta Jacques Derrida, que le comento hasta en su ultimo seminario.  Fue educado en Sete durante su infancia, penso ya adolescente en dedicarse a la carrera de marino, pero diversos contratiempos lo obligaron, en 1884, a renunciar a la preparacion de ingreso en la Escuela Naval. En 1889 inicio estudios de derecho en el Liceo de Montpellier. Segun sus recuerdos, \u201cla estupidez y la insensibilidad me parecen inscritas en el programa. Mediocridad de alma y ausencia total de imaginacion entre los mejores de la clase\u201d. Durante ese tiempo sus actividades principales consistian en a\u00f1orar la frustrada carrera de marino (\u201cEstoy ebrio de la belleza de las cosas del mar, y me esfuerzo por asir su hermosura arriesgada y triunfal\u201d, escribia en 1891) y en descubrir, a partir de la lectura de A contrapelo de Huysmans, la literatura, principalmente la obra de poetas como Baudelaire, Verlaine, Rimbaud y luego Mallarme. Para ese entonces ya encontraba en el arte \u201cla unica cosa solida\u201d, en la metafisica \u201cnada mas que necedad\u201d, en la ciencia \u201cuna potencia demasiado especial\u201d, en la vida practica \u201cuna decadencia, una ignominia\u201d. En Montpellier conocio a Pierre Louys, y, por su intermedio, a Andre Gide, con quien consolidara una amistad duradera. Ellos fueron los primeros oyentes de los versos que habia escrito y que se publicarian en la revista La Conque (fundada por Gide, Leon Blum y Henry Beranger), y del poema Narcisse parle, publicado despues en L`Ermitage.  En la noche del 4 al 5 de octubre de 1892, ocurrio en su vida una crisis que se conoce como la Noche de Genova, por haber sucedido en esa ciudad portuaria. El hecho comenzo a gestarse en junio de 1891, cuando Valery se cruzo por azar en la calle con una mujer catalana, de la cual quedo prendado. Era una mujer diez a\u00f1os mayor, a quien volvio a ver en otras ocasiones pero sin atreverse a abordarla. Segun el testimonio de su amigo Henri Mondor, \u201csu languidez, el ligero balanceo de su talle, sus trajes de amazona y una coqueteria de turbadora soltura lo habian herido y luego enamorado, cada dia mas, con desgarramientos, obsesiones, presagios extra\u00f1os. Apenas sabia su nombre. Ella a el no lo conocia.\u201d En una carta posterior a Guy de Pourtales, Valery le confio: \u201cCrei volverme loco alli en 1892, en cierta noche blanca \u2014blanca de relampagos\u2014 que pase sentado deseando ser fulminado\u201d. Y en otro texto mas o menos contemporaneo del suceso: \u201cNoche infinita. CRITICA. Quiza efecto de esta tension del aire y del espiritu\u2026 Me siento OTRO esta ma\u00f1ana. Pero \u2014sentirse Otro\u2014 esto no puede durar. Ya sea que uno vuelva a ser, y que triunfe el primero; o que el nuevo hombre absorba y anule al primero\u201d.  Se trataba, como se\u00f1ala Charles Moeller, de algo semejante a la \u201cnoche\u201d de Paul Claudel en Notre-Dame, cuando se convirtio; a la de Brasillach en Toledo; fundamentalmente a la de Pascal. El ultimo texto de Valery citado (\u201cNoche infinita. CRITICA\u2026\u201d) se emparenta con el Memorial pascaliano (ese trozo de papel en que el filosofo de Port-Royal escribio los detalles de su revelacion y que llevo cosido en su chaqueta hasta su muerte). Pero para Moeller \u201cla noche de Valery no fue ni de amor humano ni de amor divino; ni siquiera sentimiento de presencia de cualquier clase: fue espanto, descubrimiento de la vanidad radical de toda su vida anterior. Noche mistica, pero bajo el signo de la nada\u201d.  Como resultado del suceso, Valery decidio separarse de si mismo, de ese si mismo que catalogaba de falso, al tiempo que separaba de si los \u201cidolos\u201d, como el los llamaba. Primero de todos, el idolo del amor, concentrado en una imagen que desarticulaba su intelecto, la amazona catalana; despues la literatura, la religion; la emotividad, que destruia el equilibrio de la inteligencia. Pero a continuacion, la violencia de su sensibilidad lo obligo a buscar un sitio existencial estable. Eligio, segun sus propias palabras, el intelecto, el idolo intelecto. Desde ese punto, para el ya no tendria importancia el contenido, que seria solamente vanidad; lo esencial seria el mecanismo del hecho, el secreto de la forma. De cualquier modo, y como resultaria imposible prescindir totalmente de un contenido (el vacio seria su resultado) resolvio al menos apartarse todo lo posible de este, estar siempre mas alla, en esos sitios que iria creando la ascesis que constituiria su vida desde entonces: meditaciones e investigaciones intelectuales desarrolladas en las madrugadas, sobre una peque\u00f1a pizarra, durante veinte a\u00f1os.  Entretanto, y luego de cumplir su servicio militar, se traslado a Paris. En el aspecto literario, fue la epoca en que descubrio a Edgar Allan Poe, algo que encontraba mas importante que el descubrimiento anterior de Mallarme, ya que \u201ccon lucidez y buena fortuna \u2014como le escribio a Gide\u2014, Poe hizo la sintesis de los vertigos\u201d. En la capital francesa se instalo en la calle Gay-Lussac, en una habitacion alguna vez ocupada por Augusto Comte. Comenzo a frecuentar la casa de Marcel Schwob, la de Huysmans, la de Mallarme. Por ese tiempo la revista El Centauro le solicito un texto. Valery decidio reanudar una obra apenas esbozada en la que pensaba describir las memorias de C. Auguste Dupin, el personaje de Poe. Este manuscrito, que empezaba con la frase \u201cLa estupidez no es mi fuerte\u201d, se convirtio, con el agregado de notas en las que se describia a si mismo, en La soiree avec monsieur Teste. Como Valery, Edmund Teste, el personaje, rechaza las apariencias, esas apariencias con las que sin importar el tema, se conforma la mayoria; no acepta tampoco definiciones aproximadas con respecto a las palabras, exige mas y mas rigor alli donde esta en juego la esencia del lenguaje. Como Valery, el tambien es un buscador de lo absoluto.  Poco despues, durante una visita a la casa de Schwob, hablo tan brillantamente sobre Leonardo Da Vinci, que Leon Daudet, director en esa epoca de La Nouvelle Revue, le solicito un articulo sobre el artista. Este pedido dio origen a la Introduccion al metodo de Leonardo Da Vinci, que sera publicado un a\u00f1o antes que la Soiree, en 1895.  Luego de trabajar durante un tiempo como redactor en el Ministerio de Guerra, fue contratado como agregado de prensa por la Chartered Company de sir Cecil Rhodes. Por razones de trabajo se mudo a Londres, donde en la primavera de 1896 estuvo a punto de suicidarse. Lo salvo, cuando tenia ya la soga anudada al cuello, la vista de un libro que reposaba por ahi, la obra de un humorista frances del Boulevar. Leyo unas lineas de un texto absurdo y se sintio liberado. A partir de ese incidente dejo atras una etapa de su vida en la que reinaba, como le confeso a Gide, \u201cla moral de la muerte\u201d.  En 1900 se caso con Jeannie Gobillard, familiar lejana del pintor Edouard Manet. Con ella tendra tres hijos y su matrimonio transcurrira sin sobresaltos. A partir de ese momento proseguira con su trabajo cotidiano, que le permite vivir, y, en el ambiente recogido y alejado del mundo que el mismo ha elegido, sus investigaciones tendientes a reforzar su conocimiento del espiritu y del lenguaje.  Antes del comienzo de la Primera Guerra Mundial, en 1913, Andre Gide, que terminaba de fundar la Nouvelle Revue Francaise, le pidio autorizacion para publicar los versos que habian aparecido antes en algunas revistas. Valery se nego, pero los amigos reunieron todos esos numeros atrasados, los hicieron mecanografiar y se los presentaron al poeta. Tras vacilar un poco, al fin acepto corregirlos. \u201cContacto con mis monstruos. Disgusto. Me pongo a manosearlos. Retoques\u201d, escribio en sus notas. Luego, como la extension de la obra no le parecia suficiente, decidio completarla agregandole un peque\u00f1o poema, algo que seria tambien, segun pensaba, su despedida de la poesia. Comenzo en 1913. Al a\u00f1o siguiente estallo la guerra y su trabajo se fue retrasando. Por fin, en 1917, lo completo. Se titulaba La joven Parca.  Este libro lo convirtio en una celebridad, algo que Valery acepto con modestia e ironia. En 1920 publico El cementerio marino y su fama se acrecento todavia mas. Un a\u00f1o despues una encuesta daba cuenta de que la mayoria lo consideraba como el poeta frances mas grande de ese tiempo. En 1922 aparecio su poesia completa con el titulo de Charmes, en una edicion reducida. Los honores y los reconocimientos oficiales empezaron a sucederse. En 1925 fue elegido miembro de la Academia Francesa. En su discurso de recepcion, hecho en honor de su predecesor, Anatole France, no lo nombro a este ni una vez, como una especie de venganza por haberse negado alguna vez France a la publicacion de los versos de Mallarme. A partir de ese a\u00f1o empezo a publicar una serie de obras en prosa acerca de los temas mas variados, algunas de ellas por encargo. Durante la ocupacion alemana no solamente rehuso colaborar, sino que hasta se atrevio, en su caracter de secretario de la Academia Francesa, a pronunciar el elogio funebre \u201cdel judio Henri Bergson\u201d. Esto consiguio que fuera destituido de su cargo de Administrador del Centro Universitario de Niza.  De 1938 a 1945 vivio una secreta relacion sentimental con Jeanne Loviton, una abogada treinta y dos a\u00f1os mas joven, que escribia novelas con el seudonimo de Jean Voilier, y cuya vida amorosa habia estado ligada a varios escritores de la epoca. Este romance (\u201cOh triunfo de mi ocaso, que doras mi crepusculo con mirada de amor\u201d) le inspiro a Valery la escritura de centenares de poemas de amor, que el mismo corrigio y ordeno y a los que decidio titular Corona & Coronilla, asi, en espa\u00f1ol. Adjunto ademas unas notas declarando que \u201chay buenas cosas en este monton, este pobre monton de horas devotas y cantarinas... Si que valio la pena. Forma un conjunto como no hay otro, creo, en nuestra poesia\u201d. Un conjunto que da cuenta de que el corazon triunfa al fin en Valery sobre el espiritu y su idolo intelecto. El mismo lo escribe en una de sus ultimas anotaciones en los Cuadernos: \u201c\u2026Conozco my heart tambien. Este triunfa. Mas fuerte que todo, que el espiritu, que la organizacion. Es un hecho. El mas oscuro de los hechos. Mas fuerte, pues, que el querer vivir y el querer comprender es este bendito C\u201d. Para algunos biografos del poeta, el que su amante lo abandonara para casarse con el editor Robert Denoel, sumio a Valery en la tristeza y fue causa importante de su muerte, ocurrida dos meses despues de ese abandono, el 15 de julio de 1945. Luego de unos funerales nacionales, ordenados por el presidente Charles De Gaulle, fue sepultado en Sete, en el cementerio marino que habia inspirado su poema.  En los ultimos a\u00f1os ha aparecido la monumental biografia de Michel Jarrety, Paul Valery (Fayard, 2008), referencia ineludible, y el sobresaliente ensayo interpretativo de Benoit Peeters, Valery. Tenter de vivre (Flammarion, 2014), que contiene un balance biblografico.  De entre la obra de Valery se destacan seis titulos: La velada con Monsieur Teste, La joven Parca, El cementerio marino, la serie de ensayos denominada Variedad, la obra teatral inconclusa Mi Fausto, y los Cuadernos, titulo con el que se agrupan las anotaciones que asento durante cincuenta a\u00f1os en mas de doscientos cuadernos.  Monsieur Teste, \u201cfantastico personaje engendrado durante jornadas de embriaguez de su voluntad y entre extra\u00f1os excesos de conciencia de si\u201d, segun escribio el propio Valery, ilustra para el critico Pierre de Boisdeffre \u201cel ideal valeriniano del sabio, del hombre completamente due\u00f1o de su pensamiento, entregado por entero a las despiadadas disciplinas del espiritu\u201d. Verdadera Quimera de la mitologia intelectual, como tambien lo llamo su autor, ningun rasgo lo particulariza; habla sin gesticular, no sonrie, apenas saluda, habita un pisito amoblado sin libros ni escritorio, un alojamiento \u201ccualquiera\u201d, \u201canalogo al punto cualquiera de los teoremas y acaso tan util\u201d. Alli, en ese lugar \u201cpuro y trivial\u201d, repasa los metodos extraordinarios que ha encontrado para lograr que su pensamiento consiga un alto grado de precision, para que el lenguaje adquiera definiciones cinceladas por bordes de diamante, que seccionan hasta el minimo lo vago y mal considerado. A veces se detiene y anota: \u201cConfieso que he hecho un idolo de mi espiritu, pero no he encontrado otro\u201d. Termina por parecerse, segun agrega Boisdeffre, \u201ca un hombre de vidrio de tan clara vision, tan neta sensibilidad, tan sutil representacion y ciencia tan perfecta, que se refleja, repercute y responde como en una serie infinita de limpidos espejos\u201d. Al final, sin embargo, hastiado de tener razon, de la eficacia de sus procedimientos, de conseguirlo todo merced a la potencia de su espiritu, M. Teste considera ensayar \u201calgo distinto\u201d, algo que le permita sortear ese transcurrir \u201cdel inconsciente insensible al inconsciente insensible\u201d al que fue llevada su vida por ese atisbar afiebrado de su propio yo.  \u201cUna pesadilla en la que el personaje es, a la vez que objeto, conciencia consciente. Figuraos que alguien despertara en medio de la noche y que durante toda la vida se hablara y se reviviera a si mismo\u201d: de este modo trato Valery de definir su poema La joven Parca, publicado en 1917, \u201cdespues de muchos a\u00f1os de haber abandonado el arte de versificar y tratando de obligarme de nuevo a ello\u201d, como reza la dedicatoria a su amigo Andre Gide. Para muchos criticos poema de la conciencia, de la memoria, del devenir, su desarrollo en varias direcciones lo transforma, en palabras de su creador, en una \u201cpintura de psicologicas sustituciones\u2026 y en la transformacion de una conciencia durante el transcurso de una noche\u201d. El ensayista y filosofo Alain escribio en el prefacio para la primera edicion francesa que se trata de una epopeya intima, que la Parca desenreda de su propio ser el hilo de cada destino; y segun ella misma, no segun una necesidad externa. \u201cDe ahi su nombre, su doble nombre, la Joven Parca. Parca, debido a que no existira jamas una vida distinta de esta, movida, arriesgada, salvada segun sus propias tormentas y con las mareas de la sangre, es decir de acuerdo con las leyes puras del mundo, en detrimento de la historia. Joven, porque la vida epica es la vida virgen, poderosa, apasionada de si misma \u2014no la vida desgarrada\u2014 y ya transmitida al siguiente\u201d.  El cementerio marino se origino a partir de un ritmo que Valery recordo un dia, un ritmo apenas utilizado desde los cantares de gesta de la Edad Media: el decasilabo con acento y cesura en la cuarta silaba. Concebido como una especie de sinfonia cuyas frases melodicas resonaban en el interior del poeta, semejaba en sus inicios un marco sonoro dentro del cual se encuadraban imagenes flotantes. Segun propia confesion, la mas nitida de estas era una vision de su juventud, una colina alargada que dominaba su ciudad natal de Sete y concluia en el rectangulo del cementerio, llamado desde siempre, por la vista del mar que desde alli se tenia, \u201cEl cementerio marino\u201d. Gustave Cohen, profesor de la Sorbona y que \u201cexplico\u201d a los estudiantes el poema en presencia de Valery, le concede importancia a este elemento personal, \u201cque implica una especie de confesion sentimental, aunque extremadamente velada, y que se justifica sobre todo por el hecho de que la conclusion sera la determinacion de una actitud, el paso de la pura contemplacion a la accion creadora\u201d. Para el, el poema recuerda la estructura de una tragedia clasica, realizada no en cinco sino en cuatro actos, con su exposicion, su trama y su desenlace. Esos cuatro actos o momentos, el los identifica como Inmovilidad del No-Ser o de la Nada eterna e inconsciente (estrofas I-IV), el primero; Movilidad del Ser efimero y consciente (estrofas V-VIII), el segundo; \u00bfMuerte o Inmortalidad?  (estrofas IX-XVIII), el tercero; y Triunfo de lo momentaneo y de lo sucesivo, del cambio y de la creacion poetica (estrofas XIX-XXIV), el cuarto. Su conclusion es que se trata de un arte y de una doctrina que no pretendian \u201cmas que expresar el extasis angustiado del poeta filosofo entre el esplendor inmovil del No-Ser y la inquietud estremecida del Ser, entre el Universo que se ignora y la conciencia que se conoce, entre lo Eterno, que es pura luz, y lo momentaneo, que posee la riqueza, la fecundidad y el viso tornasolado de la existencia\u201d.  Variedad recoge una serie de ensayos clasificados como Estudios literarios, Estudios filosoficos, Ensayos casi politicos, Teoria poetica y estetica y Memorias del poeta.  En Estudios literarios se destacan los dedicados a Stendhal, a Baudelaire y a Mallarme, este ultimo un relato detallado de sus impresiones al tener ante si por vez primera, presentado por su autor, la disposicion tipografica del celebre poema Un coup de des.  En los Estudios filosoficos hay tres estudios sobre Descartes, uno de sus autores favoritos, y, tan importantes como estos, un estudio sobre Eureka de Edgar Allan Poe y otro sobre Swedenborg.  En Ensayos casi politicos aparece \"Balance de la inteligencia\" que es el ensayo mas significativo; en Teoria poetica y estetica, \u201cA proposito de poesia\u201d, \u201cDiscurso sobre la estetica\u201d y \u201cPoesia y pensamiento abstracto\u201d. En Memorias del poeta, finalmente, se distingue el trabajo titulado \u201cA proposito de El cementerio marino\u201d, en el cual Valery relata los detalles que le dieron origen al poema y luego reflexiona, de un modo mas general, sobre cuestiones relacionadas con la labor poetica.  La primera idea acerca de Mi Fausto aparece en julio de 1928, en las anotaciones de los Cuadernos. Son esbozos que seran luego desechados: un monologo de Adan que expresaria la situacion del hombre fuera del Paraiso y su aceptacion de la mortalidad; un dialogo entre el demonio y Dios; algun tema bizarro: \u201cMargarita es presentada a Fausto, que solicita un muchacho\u201d; una especie de relato de \u201cmemorias\u201d, parecido a los fragmentos que aparecen despues en la version actual, cuando le dicta a su secretaria. En 1930 aparecen dos de las ideas centrales de la obra: la amenaza que significa para el mundo el espiritu del hombre, y la idea del \u201cyo puro, del yo que trasciende\u201d. La primera le es comunicada a Mefistofeles entre reproches: \u201cAhora apenas si causas miedo. El infierno no aparece mas que en el ultimo acto\u2026 Mientras tu descansabas en la pereza de tu eternidad, sobre tus procederes del a\u00f1o I, el espiritu del hombre, \u00a1despertado por ti mismo!..., ha acabado por acometer los cimientos de la Creacion\u2026 \u00a1Figurate que han encontrado\u2026 el viejo CAOS!\u2026 Y ahora comienzan, a tientas, a palpar los mismos principios de la vida\u2026 \u00bfSabes que eso es, quiza, el fin del alma?\u201d Se trata de una epoca de la humanidad en la que \u201cel bobo vuela y las tonterias cabalgan sobre la luz\u201d, y que Valery, en el final de sus dias, llamara \u201cinnoble\u201d y juzgara irreversible. La segunda idea, la del yo-puro, Fausto la comunica diciendo que desea acabar \u201cligero, desatado para siempre de todo lo que se parece a algo\u201d, aunque luego, como herido por el frio existencial de esa zona demasiado abstracta, retrocede hasta aceptar la posibilidad de que en su vida se instale la unica forma de amor que halla gracia a sus ojos: la ternura. Lust, \u201cla se\u00f1orita de cristal\u201d, la secretaria joven a quien el le dicta, encarnara entonces esa ternura, estableciendo un balance entre la extrema inteligencia y el corazon oscuro. Para el critico Charles Moeller, la sorprendente novedad de este Fausto reside en que Valery, y segun lo que este mismo escribio al respecto, va a intentar hacer \u201cdel amor una potencia capaz de figurar en el espiritu y de combinarse con el de suerte que uno y otro, reciprocamente, se exalten\u201d. Esto no fue plasmado en la obra, que quedo inconclusa, pero la confesion de Valery en sus Cuadernos: \u201cPues Lust y Fausto son yo \u2014y nada mas que yo\u201d, es para Moeller un indicio \u201cpasmoso y esencial\u201d de las intenciones del poeta.  Los Cuadernos de Valery reunen sus anotaciones diarias, hechas en los amaneceres (\u201centre la lampara y el sol\u201d) y con la disciplina y el rigor obstinado de quien consideraba que \u201cser es ser disciplinado\u201d. La primera anotacion de estos Cuadernos pertenece al a\u00f1o 1894; la ultima, escrita con lapiz y mano temblorosa, al verano de 1945, dice: \u201cLa palabra Amor solo se ha visto asociada al nombre de Dios desde Cristo\u201d.  Andres Sanchez Robayna, traductor y prologuista de la edicion espa\u00f1ola (una seleccion que redujo las mas de veinticinco mil paginas del original a unas quinientas), anota que lo que conduce a Valery a una practica semejante de escritura \u201ces una pertinaz, obsesiva voluntad de conocimiento. Pero una voluntad en la que comprender no es distinto de crear. Lo habia aprendido de Leonardo da Vinci\u201d. Aforismos, formulas matematicas, estudios sobre arte y estetica, sobre filosofia (Ilya Prigogine afirmo que las actuales teorias de la Fisica acerca del tiempo estan anticipadas con la mayor claridad en estos Cuadernos), dibujos, poemas en prosa, apuntes de biografia, de politica, de psicologia, de sociologia, de critica literaria, hasta fragmentos de criptografia erotica, permiten asistir a la evolucion del pensamiento valeriano y, tambien, a la gestacion de sus obras poeticas y ensayisticas.  La estudiosa Judith Robinson destaca en su libro El analisis del espiritu en los  Cuadernos de Valery, que el pensamiento analitico de este autor tiene menos afinidad con el metodo tradicional frances de reflexion que con Ludwig Wittgenstein, con el Circulo de Viena y con la escuela inglesa de Bertrand Russell. Tambien lo ha afirmado Jacques Bouveresse, al aproximarle a Musil y Wittgenstein.  No dejo a los filosofos insensibles: frecuentaron su obra Merleau-Ponty, Heidegger y Adorno. Fue considerado por Octavio Paz, acaso en un momento de declive sartriano, como filosofo mas importante que Sartre, y para Theodor Adorno fue quien tuvo mayor influencia en el pensamiento de Walter Benjamin, con el cual a veces se le ha emparejado mas ajustadamente, como pensador y prosista. Por su parte Jacques Derrida le comento mucho en sus libros, hasta en su ultimo seminario, La bete et le souverain.\u200b  Postumas\u00a0: ","snippet":"Ambroise-Paul-Toussaint-Jules Valery (Sete, 30 de octubre de 1871-Paris, 20 de julio de 1945) fue un escritor, poeta, ensayista y filosofo frances. Como poeta es el principal representante de la llama","enlaces_salientes":["Paul_Val%C3%A9ry","Paul_Val%C3%A9ry","Paul_Val%C3%A9ry","Estudio_Harcourt_de_Par%C3%ADs","30_de_octubre","1871","20_de_julio","1945","Par%C3%ADs","Francia","Francia","Liceo_Condorcet","Poeta","Ensayista","Presidente","Le_Figaro","Coll%C3%A8ge_de_France","Academia_H%C3%BAngara_de_Ciencias","Academia_Francesa","Funeral_de_Estado","S%C3%A8te","Par%C3%ADs","Poes%C3%ADa_pura","Theodor_Adorno","Octavio_Paz","Jacques_Derrida","Derecho","Montpellier","A_contrapelo","Huysmans","Baudelaire","Verlaine","Rimbaud","Mallarm%C3%A9","Metaf%C3%ADsica","Pierre_Louys","Andr%C3%A9_Gide","L%C3%A9on_Blum","G%C3%A9nova","Charles_Moeller","Paul_Claudel","Notre-Dame","Toledo","Blaise_Pascal","Port-Royal","%C3%8Ddolos","Imagen","Intelecto","Daguerrotipo","Edgar_Allan_Poe","Augusto_Comte","Marcel_Schwob","C._Auguste_Dupin","Leonardo_Da_Vinci","Cecil_Rhodes","Londres","1896","Edouard_Manet","Primera_Guerra_Mundial","1917","1920","1922","1925","Academia_Francesa","Anatole_France","Henri_Bergson","Niza","1945","Charles_De_Gaulle","Beno%C3%AEt_Peeters","Quimera","Mitolog%C3%ADa","Teoremas","Devenir","Alain","Parca","Destino","Cantares_de_gesta","Edad_Media","Decas%C3%ADlabo","Sinfon%C3%ADa","Sorbona","Tragedia","Nada","Ser","%C3%89xtasis_(emoci%C3%B3n)","Universo","Eterno","Stendhal","Descartes","Swedenborg","1928","Ad%C3%A1n","Para%C3%ADso","Mortalidad","Demonio","Dios","Fausto","1930","Mefist%C3%B3feles","Mito_de_la_creaci%C3%B3n","Alma","Cristo","Aforismos","Ilya_Prigogine","F%C3%ADsica","Criptograf%C3%ADa","Ludwig_Wittgenstein","C%C3%ADrculo_de_Viena","Bertrand_Russell","Maurice_Merleau-Ponty","Martin_Heidegger","Octavio_Paz","Sartre","Theodor_Adorno","Walter_Benjamin","Jacques_Derrida","Jes%C3%BAs_Mun%C3%A1rriz","Andr%C3%A9s_S%C3%A1nchez_Robayna","Agust%C3%ADn_Garc%C3%ADa_Calvo","Jorge_Guill%C3%A9n","Gino_Severini","Mariano_Brull","Jorge_Luis_Borges","Emilio_Oribe","Mario_Sampaolesi","Ediciones_Linteo","Jos%C3%A9_Bianco","Aurora_Bern%C3%A1rdez","Charles_Moeller","Andr%C3%A9_Maurois","Beno%C3%AEt_Peeters","Karl_L%C3%B6with","ISBN","Po%C3%A9tica","Po%C3%A9tica_de_Val%C3%A9ry","Ra%C3%BAl_Gustavo_Aguirre","Javier_Sologuren","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Argentina","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Biblioteca_Nacional_de_Chile","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Australia","Biblioteca_Nacional_de_Israel","CiNii","Syst%C3%A8me_universitaire_de_documentation","Union_List_of_Artist_Names","BIBSYS","Istituto_Centrale_per_il_Catalogo_Unico","Deutsche_Biographie","Base_L%C3%A9onore","Open_Library","Rijksbureau_voor_Kunsthistorische_Documentatie","Museo_de_Orsay","Enciclopedia_Brit%C3%A1nica","Enciclopedia_Treccani","Biblioteca_Virtual_Miguel_de_Cervantes","Pers%C3%A9e_(portal)","Dialnet","Proyecto_Gutenberg","Internet_Movie_Database"]}
{"url":"Ron_Rivest","titulo":"Ronald Rivest","contenido":"Ronald Linn Rivest (6 de mayo de 1947) es un criptografo y profesor en el MIT.\u200b En dicha institucion es miembro del Departamento de Ingenieria Electrica y Ciencias de la Computacion, y del Laboratorio de Ciencias de la Computacion e Inteligencia Artificial.  Rivest es uno de los inventores del algoritmo RSA junto con Adi Shamir y Len Adleman.\u200b Es el inventor de los algoritmos de criptografia simetrica RC2, RC4, RC5, y co-inventor de RC6. Tambien fue autor de las funciones hash criptograficas MD2, MD4, MD5 y MD6. En 2006, publico su invento ThreeBallot, un sistema de voto que incorpora la habilidad para el votante de discernir que su voto fue contabilizado a la vez que se protege su privacidad.  Rivest recibio su licenciatura en Matematicas por la Universidad de Yale en 1969, y un doctorado en Ciencias de la Computacion por la Universidad de Stanford en 1974.\u200b Rivest es el coautor de Introduccion a los Algoritmos, un libro de texto sobre algoritmos, junto a Thomas H. Cormen, Charles E. Leiserson y Clifford Stein. Tambien fue fundador de RSA Security, Verisign y Peppercoin. Rivest ha investigado en los campos de la criptografia, seguridad en redes de la computacion y algoritmos.  Rivest es miembro de Academia Nacional de Ingenieria, la Academia Nacional de Ciencias, y es un miembro de la Association for Computing Machinery, la International Association for Cryptologic Research, y la Academia Estadounidense de las Artes y las Ciencias. Junto a Adi Shamir y Len Adleman, ha sido galardonado con el Premio Turing. Rivest es doctor honoris causa por la Universidad de Roma La Sapienza.\u200b En 2017, recibio el Premio Fundacion BBVA Fronteras del Conocimiento, en la categoria de tecnologias de la informacion y la comunicacion.   ","snippet":"Ronald Linn Rivest (6 de mayo de 1947) es un criptografo y profesor en el MIT.\u200b En dicha institucion es miembro del Departamento de Ingenieria Electrica y Ciencias de la Computacion, y del Laboratorio","enlaces_salientes":["Ronald_Rivest","Ronald_Rivest","Ronald_Rivest","6_de_mayo","1947","Schenectady","Nueva_York","Estados_Unidos","Estados_Unidos","Universidad_de_Stanford","Universidad_de_Yale","Robert_W._Floyd","Criptograf%C3%ADa","Criptograf%C3%ADa_asim%C3%A9trica","RSA","RC2","RC4","RC5","RC6","MD2","MD4","MD5","Firma_de_anillo","Instituto_Tecnol%C3%B3gico_de_Massachusetts","RSA","Introducci%C3%B3n_a_los_algoritmos","MD5","Academia_Nacional_de_Ciencias_(Estados_Unidos)","Academia_Estadounidense_de_las_Artes_y_las_Ciencias","Academia_Nacional_de_Ingenier%C3%ADa_(Estados_Unidos)","Association_for_Computing_Machinery","Asociaci%C3%B3n_Estadounidense_para_el_Avance_de_la_Ciencia","Premio_Turing","Premio_Marconi","Premios_Fundaci%C3%B3n_BBVA_Fronteras_del_Conocimiento","Criptograf%C3%ADa","Massachusetts_Institute_of_Technology","MIT_Computer_Science_and_Artificial_Intelligence_Laboratory","RSA","Adi_Shamir","Len_Adleman","Criptograf%C3%ADa_sim%C3%A9trica","RC2","RC4","RC5","RC6","Funci%C3%B3n_hash_criptogr%C3%A1fica","MD2","MD4","MD5","Licenciatura","Matem%C3%A1ticas","Universidad_de_Yale","Philosophi%C3%A6_doctor","Ciencias_de_la_Computaci%C3%B3n","Universidad_de_Stanford","Introduction_to_Algorithms","Algoritmos","Thomas_H._Cormen","Charles_E._Leiserson","Clifford_Stein","RSA_Security","Verisign","Academia_Nacional_de_Ciencias_de_Estados_Unidos","Association_for_Computing_Machinery","American_Academy_of_Arts_and_Sciences","Adi_Shamir","Len_Adleman","Turing_Award","Universidad_de_Roma_La_Sapienza","Premios_Fundaci%C3%B3n_BBVA_Fronteras_del_Conocimiento","Thomas_H._Cormen","Charles_E._Leiserson","Introduction_to_Algorithms","MIT_Press","ISBN","Thomas_H._Cormen","Charles_E._Leiserson","Clifford_Stein","Introduction_to_Algorithms","ISBN","Thomas_H._Cormen","Charles_E._Leiserson","Clifford_Stein","Introduction_to_Algorithms","ISBN","ISSN","Semantic_Scholar","Digital_object_identifier","Ole-Johan_Dahl","Kristen_Nygaard","Premio_Turing","2002","Alan_Kay","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Francia","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Australia","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","Mathematics_Genealogy_Project","Open_Library","Google_Acad%C3%A9mico","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Internet_Engineering_Task_Force","titulo":"Grupo de Trabajo de Ingenieria de Internet","contenido":"Internet Engineering Task Force (IETF en espa\u00f1ol: Grupo de Trabajo de Ingenieria de Internet)\u200b es una organizacion internacional abierta de normalizacion, que tiene como objetivos el contribuir a la ingenieria de Internet, actuando en diversas areas, como transporte, enrutamiento y seguridad. Se creo en los Estados Unidos en 1986. Es mundialmente conocida porque se trata de la entidad que regula las propuestas y los estandares de Internet, conocidos como RFC.  Es una institucion sin fines de lucro y abierta a la participacion de cualquier persona, cuyo objetivo es velar para que la arquitectura de Internet y los protocolos que la conforman funcionen correctamente. Se la considera como la organizacion con mas autoridad para establecer modificaciones de los parametros tecnicos bajo los que funciona la red. El IETF se compone de tecnicos y profesionales en el area de redes, tales como investigadores, integradores, dise\u00f1adores de red, administradores y vendedores, entre otros.  Dado que la organizacion abarca varias areas, se utiliza una metodologia de division en grupos de trabajo, cada uno de los cuales trabaja sobre un tema concreto con el objetivo de concentrar los esfuerzos.  Los detalles de las operaciones de la IETF han cambiado considerablemente a medida que ha crecido, pero los mecanismos basicos siguen siendo la publicacion de especificaciones propuestas, desarrollo de propuestas, pruebas independientes de los participantes, y la republicacion como contenido propuesto, propuesta de borrador, o eventualmente como un estandar de Internet. Los estandares de la IETF son desarrollados en un entorno abierto en el que cada individuo interesado puede participar. Todos los documentos de la IETF estan libremente abiertos a traves de internet y pueden ser reproducidos a discrecion. Solo las implementaciones interoperables, multiples y utiles pueden volverse un estandar. La mayoria de las especificaciones estan enfocadas en protocolos simples y no en sistemas cerrados. Esto permite que los protocolos sean utilizados en varios sistemas diferentes, y sus estandares son rutinariamente reutilizados por cuerpos que desean crear arquitecturas completas. ","snippet":"Internet Engineering Task Force (IETF en espa\u00f1ol: Grupo de Trabajo de Ingenieria de Internet)\u200b es una organizacion internacional abierta de normalizacion, que tiene como objetivos el contribuir a la i","enlaces_salientes":["Grupo_de_Trabajo_de_Ingenier%C3%ADa_de_Internet","Grupo_de_Trabajo_de_Ingenier%C3%ADa_de_Internet","Grupo_de_Trabajo_de_Ingenier%C3%ADa_de_Internet","Tipos_de_entidad_empresarial","Organizaci%C3%B3n_sin_%C3%A1nimo_de_lucro","Proyecto","Censura","Democracia","Brecha_digital","Derechos_digitales","Libertad_de_informaci%C3%B3n","Neutralidad_de_red","Privacidad","Sociolog%C3%ADa","Gobernanza_de_Internet","Sede_central","Fremont_(California)","Estados_Unidos","Esfera_de_influencia","Presidente","Empresa_matriz","Internet_Society","Filial","Internet_Architecture_Board","Internet_Engineering_Steering_Group","Internet_Research_Task_Force","Sitio_web","Idioma_espa%C3%B1ol","Normalizaci%C3%B3n","Internet","Estados_Unidos","1986","Request_For_Comments","Internet_Research_Task_Force","Normalizaci%C3%B3n","Request_For_Comments","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel"]}
{"url":"Error_de_software","titulo":"Error de software","contenido":"Un error de software, error o simplemente fallo (tambien conocido por el ingles, bug) es un problema en un programa de computadora o sistema de software que desencadena un resultado indeseado. Los programas que ayudan a la deteccion y eliminacion de errores de software son denominados depuradores (en ingles: debuggers).  Entre las numerosas incidencias notables causadas por este tipo de error estan la maquina de radioterapia Therac-25 en la decada de 1980, la destruccion de la sonda espacial Mariner 1 en 1962,\u200b del Ariane 5 501 en 1996,\u200b y el Airbus A400M en 2015.\u200b Tambien fueron famosos los incidentes de la red de AT&T en 1990, o los accidentes del Boeing 737 MAX en 2018 y 2019 que llevaron a la suspension de sus vuelos durante meses por fallos en el software MCAS.\u200b  En 2002 un estudio encargado por el Instituto Nacional de Estandares y Tecnologia del Departamento de Comercio de Estados Unidos concluyo que los errores informaticos costaban a la economia estadounidense 59\u00a0500 millones de USD al a\u00f1o, un 0.6% del PIB.\u200b  El 9 de septiembre de 1947, la fisica y matematica Grace Murray Hopper y otros que trabajaban en la Universidad de Harvard en el Mark II informaron de que el ordenador sufrio un fallo en el rele electromagnetico #70 del panel F. Cuando se investigo ese rele, el equipo encontro una polilla (bug) electrificada que provoco que el rele quedase abierto. Hopper pego el insecto con cinta adhesiva en la bitacora con el comentario:\u200b  Este incidente es erroneamente referido como el origen de la utilizacion del termino ingles bug (\u00abbicho\u00bb) para indicar un problema en un aparato o sistema.\u200b\u200b En realidad, el termino bug ya formaba parte del idioma ingles, al menos desde que Thomas Alva Edison lo utilizo en sus notas en 1872, en una carta en 1878 para referirse a defectos mecanicos o electricos,\u200b y en 1889 refiriendose a interferencias y mal funcionamiento en un fonografo.\u200b Es posible que Hopper lo haya asociado por primera vez a la informatica, en este caso, relacionado con un insecto real. Por otra parte, aunque durante los a\u00f1os 50 del siglo\u00a0XX, Hopper tambien empleo en ingles el termino debug al hablar de la depuracion de errores en los codigos de programacion. El primer uso registrado del termino se encuentra en la Journal of the Royal Aeronautical Society de 1945: \u200b  La mayor parte de los lenguajes de programacion presentan al menos dos tipos de errores que permiten a los programadores manejar las fallas de los programas de una manera eficiente y que no resulte agresiva con el usuario final. Dichos errores son de compilacion y errores en tiempo de ejecucion.  Los errores de compilacion normalmente inhiben que el codigo fuente derive en un programa ejecutable, mientras que los errores en tiempo de ejecucion son situaciones especificas en las que un evento externo al programa impide su ejecucion. Regularmente un programador eficiente debe intentar imaginar como debe responder ante esos eventos de manera que sea el programa y no el usuario o el sistema operativo los que resuelvan el problema. Por ejemplo, un bloque de error no manejado podria hacer lo siguiente:  Si \"miarchivo\" no existe (o el programa o el usuario no tienen privilegios suficientes para abrirlo), el sistema operativo regresara un error que el programa no atrapara y tendremos un mensaje como \"El archivo \"miarchivo\" no puede ser abierto para escritura\" y botones para reintentar, cancelar y abortar (en el sistema operativo Windows), que no tendran otra accion que repetirse indefinidamente sin posibilidad de salir de ese ciclo como no sea dando por terminado violentamente el programa. Un codigo que permitiese atrapar el error en tiempo de ejecucion seria:  Los diferentes lenguajes de programacion permiten diferentes construcciones logicas a los programadores para atrapar y resolver errores en tiempo de ejecucion, como pueden ser las sentencias assert, try y on error en diferentes lenguajes de programacion.  El tipo y cantidad de da\u00f1o producido por un error de software puede afectar los procesos de toma de decision y la politica sobre la calidad del software. En aplicaciones para el viaje espacial tripulado y para el automovil los controles de calidad del software deben ser superiores.  El problema del a\u00f1o 2000 (Y2K) pudo llegar a ser un colapso economico porque muchos programas interpretarian el a\u00f1o 2000 como si fuera el a\u00f1o 1900. Los trabajos de adaptacion y correccion de programas evitaron problemas graves.  Disrupcion de la bolsa de Nueva York en 2012. El 1 de agosto de 2012 Knight Capital provoco una disrupcion del mercado de bolsa que le llevo a perder en dos dias el 75% de su capitalizacion bursatil. Knight Capital disponia del software SMARS que gestionaba de forma automatizada, a alta velocidad y de forma algoritmica las ordenes para ejecutar en el mercado. Dentro del codigo tenia la funcionalidad \u00abPower Peg\u00bb, que ya no usaba desde 2003. No se habia borrado y estaba disponible si se la llamaba. El contador de las acciones vendidas en cada orden paso a realizarla otra parte del codigo fuera de \u00abPower Peg\u00bb desde 2005. Comenzando el 27 de julio de 2012 se inicio la instalacion del nuevo software SMARS por fases en los servidores durante varios dias. El nuevo software contenia una etiqueta que en el antiguo activaba \u00abPower Peg\u00bb. Un tecnico olvido realizar una copia del nuevo codigo RLP a uno de los ocho servidores SMARS que gestionaban las ordenes de compra y venta de acciones automatizadas. El 1 de agosto de 2012 el servidor no actualizado al ejecutar el antiguo codigo \u00abPower Peg\u00bb mando millones de ordenes porque el contador de acciones ejecutadas en cada orden no se comunicaba a SMARS y entonces el proceso de compra no se paraba nunca. En un intento de solucionar el problema desinstalaron el nuevo codigo RLP de los siete servidores que funcionaban correctamente, lo que agravo el problema. En 45 minutos ejecuto 4 millones de operaciones en 154 valores moviendo 397 millones de acciones, cuando en su lugar deberia haber ejecutado 212 ordenes de peque\u00f1a entidad. Knight Capital perdio 460 millones de USD y la SEC le impuso una multa de 12 millones de USD por violar regulaciones de bolsa.\u200b  Dos accidentes del avion Boeing 737 MAX en 2018 y 2019 llevaron a que el 13 de marzo de 2019 la FAA iniciara la Suspension de vuelo del Boeing 737 MAX durante meses por fallos en el software MCAS (Sistema de Aumento de Caracteristicas de Maniobra, en ingles, Manoeuvring Characteristics Augmentation System).\u200b Fallecieron 346 personas en los accidentes. La FAA permitia a fabricantes como Boeing emitir certificados de vuelo para sus aviones. En noviembre de 2019 la FAA suspendio la capacidad de Boeing para emitir certificados para los aviones MAX.  El MCAS en el MAX se dise\u00f1o para activarse usando la se\u00f1al de uno de los dos sensores de angulo de ataque del avion, haciendolo susceptible al punto unico de fallo (Single point of failure). Cuando MCAS detecta que el avion esta en modo manual con los flaps arriba y con un angulo de ataque elevado, ajusta el estabilizador horizontal para bajar el morro y que el piloto no suba demasiado rapido y produzca una caida en perdida. Aunque el sistema MCAS podia causar picados no intencionados, no se mencionaba en los manuales de vuelo y entrenamiento, por lo que los pilotos lo desconocian.\u200b En marzo de 2019 quedaron en tierra 387 aviones MAX que realizaban 8600 vuelos semanales para 59 compa\u00f1ias aereas. En enero de 2020 Boeing calculo que en 2019 perdio 18\u00a0400 millones de USD y le cancelaron 183 pedidos de MAX. En 2019 el precio de un Boeing 737 MAX iba de 100 a 135 millones de USD.  La Therac-25 fue una maquina de radioterapia producida por AECL, sucesora de los modelos Therac-6 y Therac-20 (las unidades anteriores fueron producidas en asociacion con CGR). El aparato estuvo comprometido en al menos seis accidentes entre 1985 y 1987, en los que varios pacientes recibieron sobredosis de radiacion. Tres de los pacientes murieron como consecuencia directa. Estos accidentes pusieron en duda la fiabilidad del control por software de sistemas de seguridad critica, convirtiendose en caso de estudio en la informatica medica y en la ingenieria de software. La comision investigadora concluyo que las causas primarias de los accidentes fueron malas practicas de desarrollo, analisis de requerimientos y un mal dise\u00f1o de software, y no por errores aislados en el codigo fuente. En particular, el programa de la Therac-25 fue dise\u00f1ado de tal manera que era casi imposible encontrar y subsanar fallos automaticamente.  El sistema no usaba un sistema operativo estandar. En su lugar operaba con un sistema operativo propio escrito en lenguaje ensamblador PDP-11 para funcionar en el ordenador 32K PDP-11/23.\u200b Cuando el sistema notificaba un error y detenia los rayos X, solamente mostraba el mensaje \u00abMALFUNCTION\u00bb (error de funcionamiento) seguido de un numero del 1 al 64. El manual de la maquina no explicaba el problema ni mostraba los codigos de error, y por lo tanto el operario acababa por cerrar la advertencia y proceder con el tratamiento. El personal de AECL y los operadores de las maquinas inicialmente no creyeron en las quejas de los pacientes por la alta confianza que tenian en la maquina.  La ingenieria habia reutilizado codigo de modelos mas antiguos (Therac-6 y Therac-20), que si que contaban con sistemas de seguridad mecanicos.  El fallo solo ocurria cuando se introducia rapidamente una secuencia particular de teclas en la terminal VT100, que controlaba la computadora PDP-11 de la Therac-25. El operador habia rellenado todas las casillas y estaba en la casilla de ordenes cuando se daba cuenta que habia un error en la casilla del tipo de haz que contenia una X (Rayos X) cuando debia contener una E (haz de Electrones). Para corregirlo usaba el cursor \u2191 hasta subir a la casilla, escribir una E y bajar con el cursor \u2193 hasta la casilla de ordenes, escribir una B y pulsar \u21b5 Entrar. La secuencia completa era \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 E \u2193 \u2193 \u2193 \u2193 \u2193 \u2193 \u2193 \u2193 \u2193 \u2193 B \u21b5 Entrar. Si esta secuencia se realizaba en menos de 8 segundos la maquina producia una radiacion que podia llegar a ser hasta 1000 veces la que se pretendia aplicar.  Esto ocurria muy raramente y se desconocia que existiera tal error de condicion de carrera (race condition) en el que la salida o estado de un proceso es dependiente de una secuencia de eventos que se ejecutan en orden arbitrario y van a trabajar sobre un mismo recurso compartido. Se puede producir un error cuando dichos eventos no llegan (se ejecutan) en el orden que el programador esperaba.  El programa cambiaba la variable bandera \u00abClass3\u00bb incrementandola cada vez que ejecutaba la rutina de prueba de ajuste, en vez de asignarle un valor fijo. La variable \u00abClass3\u00bb tenia 1 byte de longitud y sus valores posibles iban de 0 a 255. Cuando el valor era 255 y se sumaba 1, la variable \u00abClass3\u00bb pasaba a valer 0. Cuando la variable \u00abClass3\u00bb valia 0 indicaba que se podia lanzar el haz de electrones y no se comprobaba la posicion del colimador.\u200b  La rutina de prueba de ajuste se ejecutaba cientos de veces en cada sesion para un paciente. Una vez de cada 256 ejecuciones de la rutina, la variable \u00abClass3\u00bb tenia el valor 0 (no intencionado), el colimador no se comprobaba y cualquier fallo en el colimador no se detectaba. La sobredosis se producia si el operador apretaba el boton Set en el preciso momento en que la variable \u00abClass3\u00bb pasaba de 255 a 0 (desbordamiento). Entonces el software aplicaba la maxima potencia de 25 MeV sin tener el objetivo en su sitio y sin escanear. AECL corrigio este problema asignando a la variable \u00abClass3\u00bb un valor distinto de 0 cada vez que pasaba por la rutina de prueba de ajuste, en lugar de incrementarla.\u200b\u200b  Un usuario del paquete Debian OpenSSL notifico un aviso para su rectificacion. En el proceso de arreglo de la incidencia un programador estropeo el generador de numeros aleatorios. El parche defectuoso se lanzo en septiembre de 2006 con la version OpenSSL 0.9.8c-1. Hasta abril de 2008 no se descubrio el problema. Todas las claves criptograficas generadas con esa version estan comprometidas porque los numeros \u00abaleatorios\u00bb son facilmente predecibles, y los datos encriptados con ellas tambien son vulnerables. Esto supuso una amenaza en muchas aplicaciones que se apoyan en la encriptacion como S/MIME, Tor, conexiones protegidas por SSL o TLS y SSH. Se corrigio en la version OpenSSL 0.9.8c-4etch3.\u200b  Heartbleed (espa\u00f1ol: hemorragia de corazon) es un agujero de seguridad de software en la biblioteca de codigo abierto OpenSSL, solo vulnerable en su version 1.0.1f, que permite a un atacante leer la memoria de un servidor o un cliente, permitiendole por ejemplo, conseguir las claves privadas SSL de un servidor.\u200b  El codigo vulnerable fue adoptado y usado ampliamente con el lanzamiento de la version 1.0.1 de OpenSSL el 14 de marzo de 2012. El soporte de Heartbeat estaba habilitado de forma predeterminada, causando que las versiones afectadas fueran vulnerables por defecto.\u200b\u200b\u200b  La \u00abRFC 6520 Heartbeat Extension\u00bb prueba los enlaces de comunicacion segura TLS/DTLS al permitir que un ordenador en un extremo de una conexion envie un mensaje de \"solicitud de latido de corazon\" (\"Heartbeat Request\"), que consiste en una carga util, tipicamente una cadena de texto, junto con la longitud de dicha carga util como un entero de 16-bits. El equipo receptor debe entonces enviar la misma carga exacta de vuelta al remitente. Las versiones afectadas de OpenSSL asignan un bufer de memoria para el mensaje a devolver basado en el campo de longitud en el mensaje de solicitud, sin tener en cuenta el tama\u00f1o real de la carga util de ese mensaje. Debido a esta falla de revision de los limites apropiados, el mensaje devuelto consta de la carga util, posiblemente seguido de cualquier otra cosa que sea que este asignada en el buffer de memoria. La Agencia Tributaria de Canada reporto el robo de numeros de la Seguridad Social que pertenecen a 900 contribuyentes, y declaro que fueron accedidos a traves de la explotacion del fallo durante un periodo de seis horas el 8 de abril de 2014.\u200b Cuando el ataque se descubrio, la agencia cerro su sitio web y amplio el plazo de presentacion de los contribuyentes del 30 de abril al 5 de mayo.\u200b La primera version corregida, 1.0.1g, fue lanzada el dia 7 de abril de 2014. ","snippet":"Un error de software, error o simplemente fallo (tambien conocido por el ingles, bug) es un problema en un programa de computadora o sistema de software que desencadena un resultado indeseado. Los pro","enlaces_salientes":["Error_de_software","Error_de_software","Error_de_software","Bug_(desambiguaci%C3%B3n)","Computadora","Software","Depurador","Idioma_ingl%C3%A9s","Therac-25","Sonda_espacial","Mariner_1","Ariane_5","Airbus_A400M","Boeing_737_MAX","Instituto_Nacional_de_Est%C3%A1ndares_y_Tecnolog%C3%ADa","Grace_Murray_Hopper","Harvard_Mark_II","Rel%C3%A9","Polilla","Thomas_Alva_Edison","A%C3%B1os_1950","Siglo_XX","Depuraci%C3%B3n_de_errores","Divisi%C3%B3n_por_cero","Ciclo_infinito","Problemas_aritm%C3%A9ticos","Desbordamiento_aritm%C3%A9tico","Underflow","Array","Variable_no_inicializada","Error_tipogr%C3%A1fico","Constante_m%C3%A1gica","Memoria_de_ordenador","Violaci%C3%B3n_de_acceso","P%C3%A9rdida_de_memoria_(inform%C3%A1tica)","Pila_(estructura_de_datos)","Desbordamiento_de_b%C3%BAfer","Bloqueo_mutuo","%C3%8Dndice_(base_de_datos)","Normalizaci%C3%B3n_de_bases_de_datos","Ensayo_y_error","Mensaje_de_error","Variable_global","Tipo_de_dato","Variable_(programaci%C3%B3n)","Sem%C3%A1ntica_de_lenguajes_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n","Error_de_sintaxis","Punto_y_coma","Comentario_(inform%C3%A1tica)","Condici%C3%B3n_de_carrera","Aeropuerto_Internacional_Arturo_Merino_Ben%C3%ADtez","Biblioteca_(programaci%C3%B3n)","DLL_Hell","Internet","Enlace_simb%C3%B3lico","Compilaci%C3%B3n","Tiempo_de_ejecuci%C3%B3n","Ejecutable","Lenguaje_de_programaci%C3%B3n","Instrucci%C3%B3n_(inform%C3%A1tica)","Aserci%C3%B3n_(inform%C3%A1tica)","Daltonismo","Rat%C3%B3n_(inform%C3%A1tica)","Internet","Problema_del_a%C3%B1o_2000","Problema_del_a%C3%B1o_2000","Comisi%C3%B3n_de_Bolsa_y_Valores","Boeing_737_MAX","Administraci%C3%B3n_Federal_de_Aviaci%C3%B3n","Suspensi%C3%B3n_de_vuelo_del_Boeing_737_MAX","Single_point_of_failure","Therac-25","Therac-25","PDP-11","VT100","PDP-11","Condici%C3%B3n_de_carrera","S/MIME","Tor_(red_de_anonimato)","Secure_Sockets_Layer","Transport_Layer_Security","Secure_Shell","Heartbleed","Idioma_espa%C3%B1ol","Agujero_de_seguridad","Biblioteca_(programaci%C3%B3n)","OpenSSL","Memoria_(inform%C3%A1tica)","Criptograf%C3%ADa_asim%C3%A9trica","Carga_%C3%BAtil_(inform%C3%A1tica)","Brazil","Teletipo","Harvard_Mark_II","Last_Error_(inform%C3%A1tica)","Agujero_de_seguridad","Bugzilla","Hotfix","Depurador","Depuraci%C3%B3n_de_programas","Ingenier%C3%ADa_de_software","Exploit","Seguridad_inform%C3%A1tica","Common_Vulnerabilities_and_Exposures","Packet_Storm","Wired","CBC_News","ISBN","Control_de_autoridades","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Automatizaci%C3%B3n","titulo":"Automatizacion","contenido":"El vocablo automatizacion describe una amplia gama de tecnologias que reducen la intervencion humana en los procesos. La intervencion humana se reduce mediante la predeterminacion de los criterios de decision, las relaciones de los subprocesos y las acciones relacionadas, y la incorporacion de esas predeterminaciones en las maquinas.\u200b  La automatizacion, incluye el uso de diversos equipos y sistemas de controles como maquinaria, procesos en fabricas, caldera,\u200b y tratamiento termico horno, conmutacion en red telefonica, direccion y estabilizacion de barcos, aviones y otras aplicaciones y vehiculos con reducida intervencion humana.\u200b  La automatizacion abarca aplicaciones que van desde un termostato domestico que controla una caldera, hasta un gran sistema de control industrial con decenas de miles de medidas de entrada y se\u00f1ales de control de salida. La automatizacion tambien ha encontrado espacio en el sector bancario. En cuanto a la complejidad del control, puede ir desde un simple control de encendido y apagado hasta algoritmos multivariables de alto nivel.  En el tipo mas sencillo de un lazo de control automatico, un controlador compara un valor medido de un proceso con un valor de consigna deseado y procesa la se\u00f1al de error resultante para cambiar alguna entrada del proceso, de forma que este se mantenga en su punto de consigna a pesar de las perturbaciones. Este control en lazo cerrado es una aplicacion de la retroalimentacion negativa a un sistema. La base matematica de la teoria del control se inicio en el siglo\u00a0XVIII y avanzo rapidamente en el XX.  La automatizacion se ha logrado por varios medios, incluyendo mecanico, hidraulica, neumatica, electrica, dispositivos electronicos, y ordenadors, normalmente en combinacion. Los sistemas complicados, como las fabricas modernas, los aviones y los barcos, suelen utilizar todas estas tecnicas combinadas. Los beneficios de la automatizacion incluyen el ahorro de mano de obra, la reduccion de los residuos, el ahorro de costes de electricidad, el ahorro de costes de material y la mejora de la calidad, la exactitud y la precision.  El Informe sobre el Desarrollo Mundial del Banco Mundial 2019 muestra evidencias de que las nuevas industrias y puestos de trabajo en el sector tecnologico superan los efectos economicos de los trabajadores desplazados por la automatizacion.  La perdida de puestos de trabajo y la movilidad descendente achacados a la automatizacion se han citado como uno de los muchos factores del resurgimiento de las politicas nacionalistas, proteccionistas y populistas en Estados Unidos, Reino Unido y Francia, entre otros paises desde la decada de 2010.\u200b\u200b\u200b\u200b\u200b  Por otra parte, Jason Resnikoff\u200b critica el abuso de los terminos automatizacion, mecanizacion e informatizacion que no conllevarian realmente una disminucion de trabajo humano global sino una ideologizacion capitalista y una depauperacion de las condiciones de trabajo, considerandolas de inferior categoria. Las maquinas son hechas y manejadas por trabajadores y no disminuyen el numero de trabajadores.\u200b  Fundamentalmente, hay dos tipos de lazos de control: de lazo abierto y de lazo cerrado.  En el control en lazo abierto, la accion de control del regulador es independiente de la \"salida del proceso\" (o \"variable de proceso controlada\"). Un buen ejemplo de ello es una caldera de calefaccion central controlada unicamente por un temporizador, de modo que el calor se aplica durante un tiempo constante, independientemente de la temperatura del edificio. (La accion de control consiste en apagar y encender la caldera. La salida del proceso es la temperatura del edificio).  En el control en lazo cerrado, la accion de control del regulador depende de la salida del proceso. En el caso de la analogia de la caldera, esto incluiria un sensor de temperatura para controlar la temperatura del edificio y, por lo tanto, devolver una se\u00f1al al controlador para garantizar que mantiene el edificio a la temperatura establecida en el termostato. Por lo tanto, un controlador de lazo cerrado tiene un lazo de retroalimentacion que asegura que el controlador ejerce una accion de control para dar una salida del proceso igual a la \"entrada de referencia\" o \"punto de ajuste\". Por esta razon, los controladores de lazo cerrado tambien se denominan controladores de retroalimentacion.\u200b  La definicion de un sistema de control de lazo cerrado segun la British Standard Institution es 'un sistema de control que posee retroalimentacion de monitoreo, la se\u00f1al de desviacion formada como resultado de esta retroalimentacion se utiliza para controlar la accion de un elemento de control final de tal manera que tiende a reducir la desviacion a cero.\u200b  Asimismo, un Sistema de control de retroalimentacion es un sistema que tiende a mantener una relacion prescrita de una variable del sistema con otra, comparando funciones de estas variables y utilizando la diferencia como medio de control.\u200b El tipo avanzado de automatizacion que revoluciono la fabricacion, la aviacion, las comunicaciones y otras industrias, es el control por retroalimentacion, que suele ser continuo y consiste en tomar medidas mediante un sensor y realizar ajustes calculados para mantener la variable medida dentro de un rango establecido.\u200b\u200b La base teorica de la automatizacion en lazo cerrado es la teoria de control.  Uno de los tipos de control mas sencillos es el control on-off. Un ejemplo es un termostato utilizado en los electrodomesticos que abre o cierra un contacto electrico. (Los termostatos se desarrollaron originalmente como verdaderos mecanismos de control de retroalimentacion en lugar del termostato de encendido y apagado comun de los electrodomesticos).  Control de secuencia, en el que se realiza una secuencia programada de operaciones \"discretas\", a menudo basada en la logica del sistema que implica estados del mismo. Un sistema de control de ascensores es un ejemplo de control de secuencia.  Un controlador proporcional-integral-derivativo (controlador PID) es un lazo de control  con mecanismo de retroalimentacion (controlador) muy utilizado en sistemas de control industrial.  En un lazo PID, el controlador calcula continuamente un e ( t ) <valor de error> como la diferencia entre una punto de consigna deseada y una variable de proceso medida y aplica una correccion basada en los terminos proporcional, integral y derivada, respectivamente (a veces denotados como P, I y D) que dan nombre al tipo de controlador.  La comprension teorica y la aplicacion datan de la decada de 1920, y se implementan en casi todos los sistemas de control analogico; originalmente en controladores mecanicos, y luego utilizando electronica discreta y ultimamente en ordenadores de procesos industriales.  El control secuencial puede ser a una secuencia fija o a una logica que realizara diferentes acciones dependiendo de varios estados del sistema. Un ejemplo de una secuencia ajustable pero fija es el temporizador de un aspersor de cesped.  Los estados se refieren a las distintas condiciones que pueden darse en un escenario de uso o secuencia del sistema. Un ejemplo es un ascensor, que utiliza la logica basada en el estado del sistema para realizar ciertas acciones en respuesta a su estado y a la entrada del operador. Por ejemplo, si el operador pulsa el boton de la planta n, el sistema respondera dependiendo de si el ascensor esta parado o en movimiento, subiendo o bajando, o si la puerta esta abierta o cerrada, y otras condiciones.\u200b  El primer desarrollo del control secuencial fue la logica de reles, mediante la cual los reles electricos activan contactos electricos que inician o interrumpen la alimentacion de un dispositivo. Los reles se utilizaron por primera vez en las redes telegraficas antes de desarrollarse para controlar otros dispositivos, como cuando se arrancan y paran motores electricos de tama\u00f1o industrial o se abren y cierran valvulas solenoides. El uso de reles para el control permitia un control basado en eventos, en el que las acciones podian activarse fuera de la secuencia, en respuesta a eventos externos. La respuesta era mas flexible que la de los rigidos temporizadores de leva de secuencia unica. Los ejemplos mas complicados implicaban el mantenimiento de secuencias seguras para dispositivos como los controles de puentes giratorios, en los que era necesario desenganchar un cerrojo antes de poder mover el puente, y el cerrojo no podia soltarse hasta que se hubieran cerrado las puertas de seguridad.  El numero total de reles y temporizadores de leva puede ascender a cientos o incluso miles en algunas fabricas. Las primeras tecnicas y lenguajes de programacion fueron necesarias para hacer manejables estos sistemas, siendo una de las primeras la logica de escalera, en la que los diagramas de los reles interconectados se asemejaban a los pelda\u00f1os de una escalera. Mas tarde se dise\u00f1aron ordenadores especiales llamados controladores logicos programables para sustituir estos conjuntos de hardware por una unica unidad mas facil de reprogramar.  En un tipico circuito de arranque y parada de motor cableado (llamado circuito de control), un motor se pone en marcha pulsando un boton de arranque o marcha que activa un par de reles electricos. El rele de bloqueo bloquea los contactos que mantienen el circuito de control energizado cuando se suelta el pulsador. (El boton de arranque es un contacto normalmente abierto y el de parada es un contacto normalmente cerrado). Otro rele energiza un interruptor que alimenta el dispositivo que acciona el interruptor de arranque del motor (tres conjuntos de contactos para la energia industrial trifasica) en el circuito de alimentacion principal. Los motores grandes utilizan alta tension y experimentan una alta corriente de entrada, lo que hace que la velocidad sea importante a la hora de establecer y romper el contacto. Esto puede ser peligroso para el personal y la propiedad con los interruptores manuales. Los contactos de \"bloqueo\" en el circuito de arranque y los contactos de alimentacion principal del motor se mantienen acoplados por sus respectivos electroimanes hasta que se pulsa un boton de \"parada\" o \"apagado\", que desenergiza el rele de bloqueo.\u200b  Comunmente se a\u00f1aden interlocks a un circuito de control. Supongamos que el motor del ejemplo alimenta una maquinaria que tiene una necesidad critica de lubricacion. En este caso, se podria a\u00f1adir un enclavamiento para garantizar que la bomba de aceite este en funcionamiento antes de que el motor se ponga en marcha. Los temporizadores, los interruptores de limite y los ojos electricos son otros elementos comunes en los circuitos de control.  Las electrovalvulas son muy utilizadas en aire comprimido o fluido hidraulico para alimentar actuadores en componentes mecanico. Mientras que los motores se utilizan para suministrar un movimiento rotatorio continuo, los actuadores suelen ser una mejor opcion para crear de forma intermitente un rango de movimiento limitado para un componente mecanico, como mover varios brazos mecanicos, abrir o cerrar valvulas, levantar rodillos de prensa pesados, aplicar presion a las prensas.  Los ordenadores pueden realizar tanto el control secuencial como el control por retroalimentacion, y normalmente un solo ordenador realiza ambos en una aplicacion industrial. Los controladores logicos programables (PLC) son un tipo de microprocesador de proposito especial que sustituyo a muchos componentes de hardware como los temporizadores y los secuenciadores de tambor utilizados en los sistemas de tipo logica de reles. Los ordenadores de control de procesos de proposito general han sustituido cada vez mas a los controladores autonomos, y un solo ordenador puede realizar las operaciones de cientos de controladores. Los ordenadores de control de procesos pueden procesar datos de una red de PLC, instrumentos y controladores para implementar el control tipico (como el PID) de muchas variables individuales o, en algunos casos, para implementar algoritmos de control complejos utilizando multiples entradas y manipulaciones matematicas. Tambien pueden analizar los datos y crear pantallas graficas en tiempo real para los operadores y ejecutar informes para los operadores, los ingenieros y la direccion.  El control de un cajero automatico (ATM) es un ejemplo de proceso interactivo en el que un ordenador realiza una respuesta derivada de la logica a una seleccion del usuario basada en la informacion recuperada de una base de datos en red. El proceso del cajero automatico tiene similitudes con otros procesos de transaccion en linea. Las diferentes respuestas logicas se denominan escenarios. Estos procesos suelen dise\u00f1arse con la ayuda de casos de uso y diagramas de flujo, que guian la escritura del codigo de software. El primer mecanismo de control retroalimentado fue el reloj de agua inventado por el ingeniero griego Ctesibius (285-222 a.\u00a0C.).  Era una preocupacion de los griegos y los arabes (en el periodo comprendido entre el 300 a.\u00a0C. y el 1200 d.\u00a0C., aproximadamente) llevar la cuenta exacta del tiempo. En el Egipto ptolemaico, hacia el a\u00f1o 270 a.\u00a0C., Ctesibius describio un regulador de flotador para un reloj de agua, un dispositivo no muy diferente de la bola y el grifo de un inodoro moderno. Este fue el primer mecanismo controlado por retroalimentacion.\u200b La aparicion del reloj mecanico en el siglo\u00a0XIV hizo que el reloj de agua y su sistema de control de retroalimentacion quedaran obsoletos.  La Persa Banu Musa los hermanos, en su Libro de los ingenios (850 d.\u00a0C.), describen una serie de controles automaticos.\u200b Los controles de nivel de dos pasos para fluidos, una forma de control de estructura variable discontinua, fueron desarrollados por los hermanos Banu Musa.\u200b Tambien describieron un feedback controller.\u200b\u200b El dise\u00f1o de los sistemas de control por retroalimentacion hasta la Revolucion Industrial fue por ensayo y error, junto con una gran cantidad de intuicion ingenieril. Por lo tanto, era mas un arte que una ciencia. No fue hasta mediados del siglo\u00a0XIX cuando se analizo la estabilidad de los sistemas de control por retroalimentacion utilizando las matematicas, el lenguaje formal de la teoria del control automatico.  El regulador centrifugo fue inventado por Christiaan Huygens en el siglo\u00a0XVII, y se utilizo para ajustar la separacion entre piedras de molinos.\u200b\u200b\u200b  .  La introduccion de los prime movers, o maquinas autopropulsadas avanzo los molinos de grano, los hornos, las calderas y la maquina de vapor creo una nueva necesidad de sistemas de control automatico, incluyendo regulador de temperatura (inventado en 1624; vease Cornelius Drebbel), regulador de presion (1681), regulador de flotador (1700) y dispositivos de control de velocidad. Otro mecanismo de control se utilizaba para tensar las velas de los molinos de viento. Fue patentado por Edmund Lee en 1745.\u200b Tambien en 1745, Jacques de Vaucanson invento el primer telar automatizado. Hacia 1800, Joseph Marie Jacquard creo la un sistema de tarjetas perforadas para programar los telares.\u200b  En 1771 Richard Arkwright invento la primera hilanderia totalmente automatizada accionada por energia hidraulica, conocida en la epoca como water frame.\u200b Un molino harinero automatico fue desarrollado por Oliver Evans en 1785, convirtiendose en el primer proceso industrial completamente automatizado.\u200b  Un gobernador centrifugo fue utilizado por un se\u00f1or Bunce de Inglaterra en 1784 como parte de un modelo de grua de vapor.\u200b\u200b El regulador centrifugo fue adoptado por James Watt para su uso en una maquina de vapor en 1788 despues de que Boulton, socio de Watt, viera uno en un molino de harina que Boulton & Watt estaban construyendo.\u200b El regulador no podia realmente mantener una velocidad establecida; el motor asumia una nueva velocidad constante en respuesta a los cambios de carga. El regulador era capaz de manejar variaciones menores, como las causadas por la fluctuacion de la carga de calor de la caldera. Ademas, habia una tendencia a la oscilacion cada vez que se producia un cambio de velocidad. Como consecuencia, los motores equipados con este regulador no eran adecuados para operaciones que requerian una velocidad constante, como el hilado del algodon.\u200b  Varias mejoras en el regulador, ademas de las mejoras en los tiempos de corte de las valvulas de la maquina de vapor, hicieron que la maquina fuera adecuada para la mayoria de los usos industriales antes de finales del siglo\u00a0XIX. Los avances en la maquina de vapor se mantuvieron muy por delante de la ciencia, tanto de la termodinamica como de la teoria de control.\u200b El regulador recibio relativamente poca atencion cientifica hasta que James Clerk Maxwell publico un articulo que establecio el comienzo de una base teorica para entender la teoria de control. ","snippet":"El vocablo automatizacion describe una amplia gama de tecnologias que reducen la intervencion humana en los procesos. La intervencion humana se reduce mediante la predeterminacion de los criterios de ","enlaces_salientes":["Automatizaci%C3%B3n","Automatizaci%C3%B3n","Automatizaci%C3%B3n","Sistema_de_control","Maquinaria","F%C3%A1brica","Caldera_(m%C3%A1quina)","Horno","Red_telef%C3%B3nica","Direcci%C3%B3n","Aviones","Veh%C3%ADculos","Termostato","Teor%C3%ADa_del_control","Sistema_mec%C3%A1nico","Hidr%C3%A1ulica","Neum%C3%A1tica","El%C3%A9ctrica","Electr%C3%B3nica","Ordenador","Aviones","Electricidad","Banco_Mundial","Desempleo_tecnol%C3%B3gico","Movilidad_social","Proteccionismo","Populismo","Condiciones_de_trabajo","Sistema_de_control","Sensor","Teor%C3%ADa_de_control","Sistema_de_control","Diagrama_de_bloques","Controlador_PID","Controlador_(teor%C3%ADa_de_control)","Control_proporcional","Integral","Derivada","Controlador_l%C3%B3gico_programable","Programaci%C3%B3n_inform%C3%A1tica","Controlador_l%C3%B3gico_programable","Lenguaje_de_modelado_unificado","Electrov%C3%A1lvula","Aire_comprimido","Fluido_hidr%C3%A1ulico","Sistema_mec%C3%A1nico","Motores","V%C3%A1lvulas","Controlador_l%C3%B3gico_programable","Algoritmos","Cajero_autom%C3%A1tico","Casos_de_uso","Diagramas_de_flujo","Egipto_ptolemaico","Reloj_de_agua","Historia_de_Ir%C3%A1n","Ban%C5%AB_M%C5%ABs%C4%81","Regulador_centr%C3%ADfugo","Christiaan_Huygens","Muela_de_molino","M%C3%A1quina_de_vapor","Motores","M%C3%A1quina_de_vapor","Termostato","Cornelius_Drebbel","Regulador_de_presi%C3%B3n","Control_de_velocidad","Jacques_de_Vaucanson","Joseph_Marie_Jacquard","Richard_Arkwright","Regulador_centr%C3%ADfugo","James_Watt","Boulton_%26_Watt","James_Clerk_Maxwell","ISSN","ISBN","Lenguaje_de_modelado_unificado","Semantic_Scholar","Digital_object_identifier","Wayback_Machine","Digital_object_identifier","MIT_Press","ISBN","ISBN","Jacob_Bronowski","ISBN","ISBN","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Art_%26_Architecture_Thesaurus","Medical_Subject_Headings"]}
{"url":"Arduino","titulo":"Arduino","contenido":"Arduino es una compa\u00f1ia de desarrollo de software y hardware libres, asi como una comunidad internacional que dise\u00f1a y manufactura placas de desarrollo de hardware para construir dispositivos digitales y dispositivos interactivos que puedan detectar y controlar objetos del mundo real. Arduino se enfoca en acercar y facilitar el uso de la electronica y programacion de sistemas embebidos en proyectos multidisciplinarios. Los productos que vende la compa\u00f1ia son distribuidos como hardware y software libre, bajo la Licencia Publica General de GNU (GPL) y la Licencia Publica General Reducida de GNU (LGPL),\u200b permitiendo la manufactura de las placas Arduino y distribucion del software por cualquier individuo. Las placas Arduino estan disponibles comercialmente en forma de placas ensambladas o tambien en forma de kits, hazlo tu mismo (del ingles DIY: \"Do It Yourself\").  Los dise\u00f1os de las placas Arduino usan diversos microcontroladores y microprocesadores. Generalmente el hardware consiste de un microcontrolador Atmel AVR, conectado bajo la configuracion de \u00absistema minimo\u00bb sobre una placa de circuito impreso a la que se le pueden conectar placas de expansion (shields) a traves de la disposicion de los puertos de entrada y salida presentes en la placa seleccionada. Las shields complementan la funcionalidad del modelo de placa empleada, agregando circuiteria, sensores y modulos de comunicacion externos a la placa original. La mayoria de las placas Arduino pueden ser alimentadas por un puerto USB o un puerto barrel Jack de 2.5 mm. La mayoria de las placas Arduino pueden ser programadas a traves del puerto serie que incorporan haciendo uso del Bootloader que traen programado por defecto. El software de Arduino consiste de dos elementos: un entorno de desarrollo (IDE) (basado en el entorno de processing y en la estructura del lenguaje de programacion Wiring), y en el cargador de arranque (bootloader, por su traduccion al ingles) que es ejecutado de forma automatica dentro del microcontrolador en cuanto este se enciende. Las placas Arduino se programan mediante un computador, usando comunicacion serie.  El proyecto Arduino tiene sus origenes en el proyecto Wiring, el cual surge por el a\u00f1o 2003 como una herramienta para estudiantes en el Interaction Design Institute Ivrea en Ivrea, Italia,\u200b con el objetivo de proporcionar una forma facil y economica de que principiantes y profesionales crearan dispositivos que pudieran interactuar con su entorno mediante sensores y actuadores. La primera placa Arduino comercial fue introducida en el a\u00f1o 2005, ofreciendo un bajo costo economico y facilidad de uso para novatos y profesionales. A partir de octubre del a\u00f1o 2012, se incorporaron nuevos modelos de placas de desarrollo que empleaban microcontroladores Cortex M3, ARM de 32 bits,\u200b dichos modelos coexisten con los iniciales, que integran microcontroladores AVR de 8 bits. Cabe resaltar que las arquitecturas ARM y AVR no son iguales, por lo cual tampoco lo es su set de instrucciones a nivel ensamblador y por ende algunas bibliotecas realizadas para operar en una arquitectura presentan complicaciones al ser empleadas en la otra. A pesar de lo anterior, todas los modelos de placa Arduino se pueden programar y compilar bajo el IDE predeterminado de Arduino sin ningun cambio, esto gracias a que el IDE compila el codigo original a la version de la placa seleccionada.  De forma estricta, el proyecto \u00abArduino\u00bb se inicio en el a\u00f1o 2005 como un proyecto enfocado a estudiantes en el Interaction Design Institute Ivrea (IDII), de Ivrea (Italia).\u200b En aquellos a\u00f1os, los estudiantes usaban el microcontrolador BASIC Stamp, cuyo costo era de $100 USD, un costo considerablemente alto para un estudiante promedio. Antes del a\u00f1o 2005, especificamente durante el a\u00f1o 2003, Hernando Barragan habia creado la plataforma de desarrollo Wiring como resultado de su proyecto de tesis en la maestria en el IDII, bajo la supervision de Massimo Banzi y Casey Reas, quienes eran conocidos por haber trabajado en el lenguaje Processing y daban clases en el IDII.\u200b El objetivo del proyecto era crear herramientas simples y de bajo costo para la creacion de proyectos digitales por parte de personas sin altos conocimientos tecnicos o sin un perfil de ingenieria. El proyecto Wiring era una placa de desarrollo de hardware que constaba de una placa de circuito impreso (PCB) con un microcontrolador ATmega168, un Ambiente de Desarrollo Integrado (IDE) basado en funciones de procesamiento y una biblioteca de funciones para programar facilmente el microcontrolador.\u200b Regresando al a\u00f1o 2005, Massimo Banzi junto con David Mellis (otro estudiante del IDII) y David Cuartielles, agregaron soporte a Wiring para el microcontrolador ATmega8, mas economico que el inicial (Atmega168). Pero en lugar de continuar el desarrollo en Wiring, se separaron del proyecto y lo renombraron Arduino.\u200b  El nombre Arduino viene de un bar en Ivrea, Italia, en donde algunos de los fundadores del proyecto Arduino solian reunirse. El bar tiene el nombre de \u00abBar di Re Arduino\u00bb, y fue nombrado en honor a Arduino de Ivrea, quien fue el margrave de la Marca de Ivrea y Rey de Italia desde el a\u00f1o 1002 hasta el a\u00f1o 1014.\u200b  El equipo inicial de Arduino estaba conformado por Massimo Banzi, David Cuartielles, Tom Igoe, Gianluca Martino y David Mellis. Hernando Barragan no fue invitado a participar.\u200b  Posteriormente el proyecto Wiring siguio adelante con placas menos densas y costosas que se distribuyeron a traves de la comunidad de codigo abierto.\u200b  Adafruit Industries, un proveedor de componentes electronicos y fabricante de placas de circuito impreso, entre ellas placas Arduino, ubicado en la ciudad de Nueva York, estimo a mediados del a\u00f1o 2011 que se habian producido comercialmente mas de 300\u00a0000 placas Arduino oficiales.\u200b En el a\u00f1o 2013, estimo que se encontraban en manos de usuarios 700,000 placas Arduino oficiales.\u200b  En octubre del a\u00f1o 2016, Federico Musto (actualmente ex CEO de Arduino), adquirio el 50% de la compa\u00f1ia tras haber adquirido las acciones de uno de los miembros fundadores del equipo. En abril del a\u00f1o 2017, la revista Wired informo que Musto habia \"fabricado su propio expediente academico\", habiendolo publicado en el sitio web de Arduino, cuenta personal de LinkedIn, e incluso en documentos comerciales oficiales italianos. Musto afirmaba tener un PhD en ciencias de la computacion por el Instituto Tecnologico de Massachusetts (MIT), y un MBA de la Universidad de Nueva York. La revista Wired reporto que ninguna de las universidades donde el afirmaba haber estudiado tenia registro alguno de la asistencia de Musto. Musto afirmo mas tarde, en una entrevista a Wired, que realmente nunca habia obtenido los grados academicos.\u200b  En el a\u00f1o 2017, Massimo Banzi anuncio la creacion de la \u00abFundacion Arduino\u00bb, declarando que seria \u00abun nuevo comienzo para Arduino\u00bb. Dicha fundacion, segun palabras del mismo Banzi, \u00abpermitira defender los valores fundamentales de la Comunidad Arduino dentro del ecosistema de codigo abierto y hacer que nuestro compromiso ( haciendo referencia a la empresa Arduini) con el codigo abierto sea mas solido que nunca\u00bb.\u200b Sin embargo ha existido cierta incertidumbre del desarrollo actual de dicha iniciativa.\u200b  La controversia en torno a Federico Musto continuo en julio del a\u00f1o 2017, segun los informes, por haber retirado licencias de codigo abierto, esquemas y codigos del sitio web de Arduino, lo que provoco escrutinio y protesta por parte de la comunidad de makers.\u200b  En octubre del a\u00f1o 2017, Arduino anuncio su asociacion con la multinacional ARM Holdings (ARM). El anuncio decia, en parte, que \"ARM reconoce la independencia como un valor central de Arduino... sin ningun acuerdo de uso exclusivo con la arquitectura ARM\". Arduino tiene la intencion de seguir trabajando con todos los proveedores y arquitecturas de tecnologia.\u200b  Para la produccion en serie de la primera version se tomo en cuenta que el coste no fuera mayor de 30 euros, que fuera ensamblado en una placa de color azul, debia ser Plug and Play y que trabajara con todas las plataformas informaticas tales como MacOSX, Windows y GNU/Linux. Las primeras 300 unidades de Arduino se las dieron a los alumnos del Instituto IVREA, con el fin de que las probaran y empezaran a dise\u00f1ar sus primeros prototipos.[cita\u00a0requerida]  A principios de 2008, los cinco cofundadores del proyecto Arduino crearon la empresa Arduino LLC, cuyo proposito era englobar las marcas comerciales asociadas a las placas Arduino.\u200b La fabricacion y venta de las placas Arduino debia ser hecha por compa\u00f1ias externas, y Arduino LLC obtendria un royalty (comision), de ellos. Los estatutos bajo los cuales se creo Arduino LLC especificaban que cada uno de los cinco fundadores originales transferirian la propiedad de la marca Arduino a la empresa recien formada (Arduino LLC).\u200b  A finales de 2008, la empresa de Gianluca Martino (Smart Projects), registro la marca Arduino en Italia y mantuvo esto en secreto de los otros co-fundadores durante un periodo aproximado de dos a\u00f1os. Esto fue descubierto cuando la compa\u00f1ia Arduino LLC intento registrar la marca en otras partes del mundo (originalmente ellos se habian registrado solo en EE. UU.), encontrando que esta ya estaba registrada en Italia. Las negociaciones con Gianluca y su firma para poner la marca bajo control de la compa\u00f1ia Arduino LLC fallaron. En el a\u00f1o 2014, Smart Projects comenzo a negarse a pagar regalias. Luego nombraron a un nuevo CEO, Federico Musto, que renombro a la empresa Arduino SRL y creo el sitio web arduino.org, copiando los graficos y el dise\u00f1o del arduino.cc original. Esto resulto en una fractura en el equipo de desarrollo de Arduino.\u200b\u200b\u200b  En enero de 2015, Arduino LLC entablo una demanda contra Arduino SRL.\u200b  En mayo de 2015, Arduino LLC creo la marca mundial Genuino, utilizada como marca fuera de los Estados Unidos.\u200b  En julio de 2017, la nueva compa\u00f1ia BCMI LABS LLC fundada por Massimo Banzi, David Cuartielles, David Mellis y Tom Igoe, adquirio Arduino AG y todas las marcas registradas de Arduino. Fabio Violante se convirtio en el nuevo CEO que reemplazaria a Federico Musto, quien ya no trabajaria para Arduino AG. \u200b  Durante la \"World Maker Faire\" en Nueva York del 1 de octubre de 2016, el cofundador y CEO de Arduino LLC (Massimo Banzi) y el CEO de Arduino SRL (Federico Musto), anunciaron la fusion de ambas compa\u00f1ias.\u200b  Arduino es un hardware libre. Los dise\u00f1os de referencia de hardware se distribuyen bajo licencia Creative Commons Attribution Share-Alike 2.5 y estan disponibles en el sitio web de Arduino. Los esquematicos y archivos de montaje de componentes (PCBs) para algunas versiones de placas tambien estan disponibles.  Aunque los dise\u00f1os de hardware y software estan disponibles bajo licencias de copyleft, los desarrolladores han solicitado que el nombre Arduino sea exclusivo del producto oficial y no se use para trabajos derivados sin antes solicitar permiso. El documento de politica oficial sobre el uso del nombre Arduino enfatiza que el proyecto esta abierto a incorporar el trabajo de otros en el producto oficial.\u200b Varios productos compatibles con Arduino lanzados comercialmente han evitado incluir el nombre del proyecto Arduino en sus dispositivos al emplear nombres que terminan en \u00ab-duino\u00bb.\u200b  La mayoria de las placas Arduino constan de un microcontrolador AVR Atmel-8 bits (ATmega8, ATmega168, ATmega328, ATmega1280, ATmega2560), cada microcontrolador consta de diversas cantidades de memoria flash, pines y funciones. Las placas utilizan pines/cabezales hembra de una o dos hileras que facilitan las conexiones e incorporacion en otros circuitos.\u200b  Las placas Arduino pueden conectarse con modulos adicionales denominados shields (escudos, por su traduccion al espa\u00f1ol), dichos shields aumentan las caracteristicas tecnicas de la placa Arduino en uso, debido a que poseen circuitos especificos que a\u00f1aden una o mas funcionalidades extras a la placa Arduino nativa en la cual se utilice, tambien se les conoce como placas de expansion. La mayoria de estos shields se conectan a traves de un bus serie I\u00b2C, aunque existen tambien aquellas que emplean conexion mediante el bus UART (Universal Asynchronous Receiver-Transmitter, por su traduccion al espa\u00f1ol Transmisor-Receptor Asincrono Universal), asi como con el bus SPI (Serial Peripheral Interface, por su traduccion al espa\u00f1ol Interfaz Periferica Serie).  La mayoria de las placas incluyen un regulador lineal de 5 V y un oscilador de cristal de 16 MHz, o un resonador de ceramica segun sea el caso. Algunos dise\u00f1os, como el LilyPad, funcionan a 8 MHz y prescinden del regulador de voltaje a bordo debido a restricciones de factor/tama\u00f1o de forma especificas.  Los modelos de Arduino se categorizan en placas de desarrollo, placas de expansion (shields), kits, accesorios e impresoras 3D.  La placa tiene 7 pines de alimentacion, 14 pines digitales y 6 pines analogicos programables con el Arduino IDE (Entorno de desarrollo integrado) a traves de un cable USB. Puede ser alimentado por el cable USB o por una bateria externa de 9 voltios, aunque acepta voltajes entre 7 y 20 voltios. Es el buque insignia de Arduino ya que es la placa mas popular, la que todo el mundo utiliza para iniciarse y la mas sencilla de utilizar. Es el punto de partida de muchos entusiastas de la programacion electronica.  La placa con el microcontrolador mas potente de la familia Arduino. Con 54 pines digitales que funcionan como entrada y salida; 16 entradas analogicas, 7 pines de alimentacion, un cristal oscilador de 16 MHz, una conexion USB, un boton de reinicio y una entrada para la alimentacion de la placa. Arduino MEGA es la placa que se utiliza cuando Arduino UNO no llega a cubrir las necesidades de un proyecto. Se ha utilizado ampliamente como centro de control y computacion en impresoras 3D...  La placa utiliza un microcontrolador Atmega32U4 AVR con oscilador de cristal de 16 MHz y una conexion micro USB capaz de actuar como un dispositivo cliente USB, como un mouse o un teclado.\u200b  La placa tiene 20 pines de entrada/salida digital (de los cuales 7 se pueden usar como salidas PWM y 12 como entradas analogicas), un oscilador de cristal de 16 MHz, una conexion micro USB, un conector de alimentacion, un encabezado ICSP y un boton de reinicio.\u200b  El Arduino Nano es una placa de desarrollo compacta basada en el microcontrolador ATMega328P, que opera a 16 MHz. Con un tama\u00f1o similar al de una tarjeta de credito, ofrece 14 pines de E/S digitales, 8 pines analogicos y la posibilidad de programacion a traves de un conector USB Mini-B o USB-C, asi como una fuente de alimentacion externa de 7-12V. Su capacidad de 32 KB de memoria flash y 2 KB de memoria RAM lo hace adecuado para una amplia variedad de proyectos electronicos. Es compatible con numerosos sensores, actuadores y modulos adicionales, y su precio asequible lo convierte en una eleccion popular para entusiastas y profesionales de la electronica.\u200b  Arduino\u202fes una placa electronica de hardware libre que utiliza un microcontrolador reprogramable con una serie de pines que permiten establecer conexiones entre el controlador y los diferentes sensores, es decir el \"cerebro\" de algun circuito o maquinaria.  En un circuito se suele utilizar como fuente de alimentacion y \u201cpuente\u201d entre los diferentes componentes para lograr que interactuen entre ellos.  En un cuerpo robotico deja de servir como fuente de alimentacion y se convierte enteramente en el cerebro del cuerpo con ayuda de placas externas conocidas como shields (escudos).  El nucleo del equipo de desarrollo de Arduino esta formado por Massimo Banzi, David Cuartielles, Tom Igoe, Gianluca Martino, David Mellis y Nicholas Zambetti.  La plataforma Arduino ha sido usada como base en diversas aplicaciones electronicas:  Es posible comunicar una aplicacion que corra sobre Arduino con otros dispositivos que corran otros lenguajes de programacion y aplicaciones populares,\u200b debido a que Arduino usa la transmision de datos en serie, la cual es soportada por la mayoria de los lenguajes que se mencionan a continuacion. Y para los que no soportan el formato serie de forma nativa, es posible utilizar software intermediario que traduzca los mensajes enviados por ambas partes para permitir una comunicacion fluida. Algunos ejemplos de lenguajes son: ","snippet":"Arduino es una compa\u00f1ia de desarrollo de software y hardware libres, asi como una comunidad internacional que dise\u00f1a y manufactura placas de desarrollo de hardware para construir dispositivos digitale","enlaces_salientes":["Arduino","Arduino","Arduino","Placa_computadora","AVR","Intel_Quark","X86","AVR","Intel_Quark","X86","SRAM","Memoria_flash","EEPROM","Placa_computadora","Hardware_libre","Software_libre","Licencia_P%C3%BAblica_General_de_GNU","Licencia_P%C3%BAblica_General_Reducida_de_GNU","H%C3%A1galo_usted_mismo","Hardware","AVR","Ambiente_de_desarrollo_integrado","Processing","Lenguaje_de_programaci%C3%B3n","Wiring","Cargador_de_arranque","Wiring","Arquitectura_ARM","RS232","Ivrea_(Italia)","BASIC_Stamp","D%C3%B3lar","Arduino_de_Ivrea","Margrave","Marca_de_Ivrea","Rey_de_Italia","Wired","Instituto_Tecnol%C3%B3gico_de_Massachusetts","Universidad_de_Nueva_York","ARM_Holdings","Plug_and_Play","MacOSX","Windows","GNU/Linux","Copyleft","Universal_Asynchronous_Receiver-Transmitter","Serial_Peripheral_Interface","Arduino_Uno","Entorno_de_desarrollo_integrado","Osciloscopio","MIDI","Econ%C3%B3metro","OBD","MicroSD","Drones","Control_num%C3%A9rico","Therem%C3%ADn","Impresora_3D","Ambilight","Led","Philips","Adobe_Director","BlitzMax","Lenguaje_C","C%2B%2B","C_Sharp","Cocoa_(inform%C3%A1tica)","Objective-C","Mac_OS_X","Adobe_Flash_Player","Gambas","Isadora","Java_(lenguaje_de_programaci%C3%B3n)","Mathematica","Matlab","MaxMSP","OLPC","Perl","Php","Processing","Pure_Data","Python","Ruby","Scratch_(lenguaje_de_programaci%C3%B3n)","MIT","Squeak","SuperCollider","VBScript","Visual_Basic_.NET","BASIC_Stamp","Impresi%C3%B3n_3D","Gumstix","MiniPC","OOPIC","PICAXE","Raspberry_Pi","Robot","X10","Sanguino_(microcontrolador)","Hardware_libre","Fritzing","David_Kushner","Digital_object_identifier","ISBN","O%27Reilly_Media","ISBN","ISBN","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation"]}
{"url":"For","titulo":"Bucle for","contenido":"El bucle for es una estructura de control en programacion en la que se puede indicar de antemano el numero maximo de iteraciones  Su uso principal se orienta a los vectores, pudiendo modificar, agregar, eliminar o consultar datos que se encuentren segun el indice. Por esto ultimo, una condicion minima del vector es que debe ser ordenado, porque si se intenta leer un dato inexistente, esto genera un error de programacion.  La principal diferencia de un bucle PARA con respecto a los bucles MIENTRAS Y REPETIR, es que puede determinarse al comienzo del bucle cuantas veces se iterara el mismo, lo cual muchas veces puede redundar en una optimizacion del codigo por parte de los compiladores. Los condicionales constituyen junto con los bucles los pilares de la programacion estructurada, y su uso es una evolucion de una sentencia de lenguaje ensamblador que ejecutaba la siguiente linea o no en funcion del valor de una condicion.  El bucle PARA se ha convertido en el bucle mas ampliamente utilizado en la programacion, ya que con la evolucion de los lenguajes la mayoria de las condiciones de fin   Es lo mismo decir:  Otro uso comun es utilizar los bucles PARA para recorrer vectores de dos o mas dimensiones, en cuyo caso se anidan estas iteraciones.  PSEUDOLENGUAJE  For VariableControl\u00a0:= ValorInicial A ValorFinal, PASO = Incremento  donde VariableControl, ValorInicial, ValorFinal y Paso son enteros. La(s) instruccion(es) del cuerpo se ejecutara(n) (ValorFinal - ValorInicial + 1) veces, o sea que va desde ValorInicial a ValorFinal inclusive.  En la definicion del for, tenemos que la variable de control i se inicializa en un valor 0, luego se entrega la condicion de control que debe ser falsa durante su ejecucion, para completar el ciclo; y por ultimo, tenemos el incrementador en una unidad.  Si por ejemplo en la condicion colocamos i < 11, entonces el ciclo for se ejecutara desde [0...10], lo cual, al intentar acceder al elemento vector, esto generara error, ya que el vector (por definicion) va desde [0..(n-1)].  Cualquiera de los componentes en el parentesis se puede omitir, pero los separadores punto y coma deben aparecer siempre. El resultado es un bucle infinito.  Este bucle es una evolucion del concepto del bucle Para en algunos lenguajes. Se utiliza para recorrer estructuras repetitivas de datos de forma mas simple y agil. El bucle For Each puede describirse genericamente (en pseudolenguaje) de la siguiente manera:  Una de las caracteristicas importantes que se pueden aprovechar de las computadoras es precisamente su capacidad de repetir la ejecucion de secuencias de instrucciones a una gran velocidad y con alto grado de confiabilidad. Para estos fines, precisamente se definen en los lenguajes de programacion las estructuras de control iterativas. El objetivo de estas estructuras es permitir la expresion de la repeticion de una secuencia de instrucciones, a estas estructuras se les denomina ciclo, lazo o bucle.  Sumario 1 Estructuras de Control Iterativas 2 La instruccion while 3 La instruccion do/while 4 La estructura de control for 5 Caso de Estudio 5.1 MCD() 5.2 CantDigitos() 5.3 Factorial() 6 Ciclos Anidados 7 Fuentes Estructuras de Control Iterativas En la vida diaria existen situaciones que frecuentemente se resuelven realizando una determinada secuencia de pasos que puede repetirse muchas veces, ejemplo:  El proceso que seguimos para comer, mientras no se termine la comida. El proceso de insertar monedas, hasta que se abone la cantidad necesaria. Las operaciones que realizamos para llamar por telefono, mientras no se logre la comunicacion. Como se puede observar estos son algoritmos que se hacen cotidianamente, pero tienen la particularidad de que la ejecucion de alguno de sus pasos puede repetirse muchas veces, mientras no se logre la meta trazada. A este tipo de algoritmo se le conoce como algoritmos iterativos o repetitivos. En C#, las instrucciones while, do/while, y for, permiten ejecutar iteraciones, bucles o ciclos. En cada caso se ejecuta un bloque de instrucciones mientras la condicion que se evalua tome valor verdadero. Se resalta que cualquiera de las 3 instrucciones cumple con el mismo objetivo que es el de ejecutar una secuencia de pasos, mas de una vez.  La instruccion while La instruccion while tiene la siguiente sintaxis:  InstruccionWhile.JPG  La semantica de la instruccion es la siguiente:  <condicion>. Esta representada por una expresion booleana y mientras se cumpla se ejecutara el ciclo. [Bloque de Instrucciones] El bloque de instrucciones puede estar formado por una o varias instrucciones y es el conjunto de pasos que se van ejecutar en cada iteracion del ciclo. Para una mayor comprension se muestra su representacion en un diagrama de actividad.  DiagramaWhile.JPG  Esta estructura de control permite repetir o iterar el [Bloque de Instrucciones] mientras la condicion sea verdadera o dicho de otra manera, estas iteraciones terminaran cuando la condicion sea falsa y entonces se podra ejecutar la siguiente instruccion despues del while.  Es valido se\u00f1alar que en esta instruccion la condicion se evalua al inicio del ciclo por lo que si la primera vez que se evalua la condicion esta es falsa, el ciclo no llegara a realizarse.  La instruccion do/while La estructura de control do/while es otra sentencia de iteracion en la que la condicion se evalua por primera vez una vez que se haya ejecutado el [Bloque de Instrucciones] y tienen la siguiente sintaxis:  InstruccionDoWhile.JPG  Su semantica es la misma que la de la instruccion while y su representacion en un diagrama de actividad es la siguiente:  DiagramaDoWhile.JPG  En esta estructura repetitiva el bloque de instrucciones siempre se ejecuta al menos una vez pues la condicion se evalua al final. Una vez realizada la evaluacion si el resultado es true, se vuelve a ejecutar el [Bloque de Instrucciones], en caso contrario se ejecutan las instrucciones que sigan a continuacion saliendo del ciclo. La funcionalidad de este metodo sera la misma que en el ejemplo con while. La unica diferencia es la forma en que se controla el bucle. En la practica, vera que la instruccion while se utiliza mas a menudo que la instruccion do \u2013 while. El elegir una instruccion en lugar de la otra es una eleccion personal. Un aspecto muy importante a tener presente en los ciclos condicionales es la necesidad de contemplar dentro del bloque de instrucciones al menos una, que de alguna manera, altere \u2013en algun momento- el resultado de la expresion booleana. La explicacion sencillamente esta dada por el hecho que de no existir esta instruccion una vez entrada al ciclo este nunca terminaria por lo que se caeria en un ciclo infinito.  La estructura de control for Los procesos iterativos que se han visto hasta ahora terminan por una condicion. En muchas situaciones las iteraciones se realizan un numero determinado de veces, muchos autores les llaman ciclos por conteo pues se conoce de antemano cuantas veces se hara el proceso que se repite. En este tipo de iteracion, siempre se necesita una variable que lleve el control de las veces que se repite el proceso por esto se les conoce tambien como ciclos con variable de control. Uno de los ciclos mas conocidos y usados en la mayoria de los lenguajes de programacion es el de la instruccion for que suele estar controlado por un contador o variable de control y tiene la siguiente sintaxis:  InstruccionFor.JPG  La semantica de la instruccion es la siguiente:  <instrucciones 1>. Se ejecutara una sola vez al inicio del ciclo, generalmente se realizan inicializaciones y declaraciones de variables puesto que como se dijo con anterioridad, esta solo se ejecuta una vez. En caso de que se quiera realizar o ejecutar mas de una instruccion en este momento, dichas instrucciones se deben separar por comas (\u201c,\u201d). <expresion>. Es evaluada en cada iteracion y en dependencia del valor que devuelva, dependera que el ciclo continue ejecutandose (valor de la expresion true) o no (false). Destacar que de no colocarse nada en esta parte, el ciclo tomara como true el valor de la expresion por lo que en principio, el ciclo puede estar repitiendose infinitamente. <instrucciones 2>. Es ejecutado siempre en cada ciclo al terminar de ejecutar todas las instrucciones que pertenecen al bucle for en cuestion. Por lo general puede contener alguna actualizacion para las variables de control. Analogamente a <instrucciones 1> en caso de querer ejecutar en este momento mas de una instruccion se deben separar por comas. Observe que es obligatorio para separar cada termino que compone la instruccion for utilizar un punto y coma (;) de lo contrario el compilador mostrara un error de tipo semantico. Reiterar que la <instruccion 1> se ejecuta una sola vez al comienzo, que la <instruccion 2> es la que generalmente se utiliza para modificar la variable de control aunque en el ciclo esta puede modificarse tambien, y que <expresion>, es la que garantiza la finitud del ciclo, el for se estara ejecutando siempre y cuando <expresion> sea evaluada y tome valor true. ","snippet":"El bucle for es una estructura de control en programacion en la que se puede indicar de antemano el numero maximo de iteraciones  Su uso principal se orienta a los vectores, pudiendo modificar, agrega","enlaces_salientes":["Bucle_for","Bucle_for","Bucle_for","Bucle_(programaci%C3%B3n)","Estructura_de_control","Iteraci%C3%B3n","Array","Error_de_software","Programaci%C3%B3n_estructurada","Lenguaje_ensamblador","Pseudoc%C3%B3digo","L%C3%A9xico","Array","C_(lenguaje_de_programaci%C3%B3n)","Lenguaje_de_programaci%C3%B3n","Estructuras_de_control","Bucle_(programaci%C3%B3n)","Bucle_while","Bucle_repetir","Ciclo_infinito","Teorema_del_programa_estructurado","Programaci%C3%B3n_estructurada","Control_de_autoridades"]}
{"url":"N%C3%BAmeros_Reales","titulo":"Numero real","contenido":" En matematicas, el conjunto de los numeros reales (denotado por R o por \u211d) incluye tanto los numeros racionales (positivos, negativos y el cero) como los numeros irracionales;\u200b y en otro enfoque, a los trascendentes y a los algebraicos. Los irracionales y los trascendentes\u200b no se pueden expresar mediante una fraccion de dos enteros con denominador no nulo; tienen infinitas cifras decimales aperiodicas, tales como 5 }} , \u03c0, o el numero real log \u2061 ( 2 ) , cuya trascendencia fue enunciada por Euler en el siglo\u00a0XVIII.\u200b  Los numeros reales pueden ser descritos y construidos de varias formas, algunas simples, aunque carentes del rigor necesario para los propositos formales de las matematicas, y otras mas complejas, pero con el rigor necesario para el trabajo matematico formal.  Durante los siglos siglo\u00a0XVI y siglo\u00a0XVII el calculo avanzo mucho aunque carecia de una base rigurosa, puesto que en el momento prescindian del rigor y fundamento logico, tan exigente en los enfoques teoricos de la actualidad, y se usaban expresiones como \u00abpeque\u00f1o\u00bb, \u00ablimite\u00bb, \u00abse acerca\u00bb sin una definicion precisa. Esto llevo a una serie de paradojas y problemas logicos que hicieron evidente la necesidad de crear una base rigurosa para la matematica, que consistio en definiciones formales y rigurosas (aunque ciertamente tecnicas) del concepto de numero real.\u200b En una seccion posterior se describiran dos de las definiciones precisas mas usuales actualmente: clases de equivalencia de sucesiones de Cauchy de numeros racionales y cortes de Dedekind.  Los egipcios dieron origen por primera vez a las fracciones comunes alrededor del a\u00f1o 1000\u00a0a.\u00a0C.; alrededor del 500\u00a0a.\u00a0C. un grupo de matematicos griegos liderados por Pitagoras se dio cuenta de la necesidad de los numeros irracionales. Los numeros negativos fueron ideados por matematicos indios cerca del 600, posiblemente reinventados en China poco despues, pero no se utilizaron en Europa hasta el siglo\u00a0XII, si bien a finales del XVIII Leonhard Euler descarto las soluciones negativas de las ecuaciones porque las consideraba irreales. En ese siglo, en el calculo se utilizaban numeros reales sin una definicion precisa, cosa que finalmente sucedio con la definicion rigurosa hecha por Georg Cantor en 1871.  En realidad, el estudio riguroso de la construccion total de los numeros reales exige tener amplios antecedentes de teoria de conjuntos y logica matematica. Fue lograda la construccion y sistematizacion de los numeros reales en el siglo\u00a0XIX por dos grandes matematicos europeos utilizando vias distintas: la teoria de conjuntos de Georg Cantor (encajamientos sucesivos, cardinales finitos e infinitos), por un lado, y el analisis matematico de Richard Dedekind (vecindades, entornos y cortaduras de Dedekind). Ambos matematicos lograron la sistematizacion de los numeros reales en la historia, no de manera espontanea, sino utilizando todos los avances previos en la materia: desde la antigua Grecia y pasando por matematicos como Descartes, Newton, Leibniz, Euler, Lagrange, Gauss, Riemann, Cauchy y Weierstrass.  Se sabe que los egipcios y babilonicos hacian uso de fracciones (numeros racionales) en la resolucion de problemas practicos. Sin embargo, fue con el desarrollo de la matematica griega cuando se considero el aspecto filosofico de numero. Los pitagoricos descubrieron que las relaciones armonicas entre las notas musicales correspondian a cocientes de numeros enteros,\u200b lo que les inspiro a buscar proporciones numericas en todas las demas cosas, y lo expresaron con la maxima \u00abtodo es numero\u00bb.  En la matematica griega, dos magnitudes son conmensurables si es posible encontrar una tercera tal que las primeras dos sean multiplos de la ultima, es decir, es posible encontrar una unidad comun para que las dos magnitudes tengan una medida entera. El principio pitagorico de que todo numero es un cociente de enteros, expresaba en esta forma que cualesquiera dos magnitudes deben ser conmensurables.  Sin embargo, el ambicioso proyecto pitagorico se tambaleo ante el problema de medir la diagonal de un cuadrado o la hipotenusa de un triangulo rectangulo, pues no es conmensurable respecto de los catetos. En notacion moderna, un triangulo rectangulo cuyos catetos miden 1, tiene una hipotenusa que mide raiz cuadrada de dos, 2 }} :  Si se supone que p o q tienen un dos en su descomposicion entonces estaria al cuadrado y por tanto seria una cantidad par en un lado de la igualdad cuando al otro lado es impar.  Surgio entonces una contradiccion: de acuerdo con el principio pitagorico todo numero es racional, pero la hipotenusa de un triangulo rectangulo isosceles no es conmensurable con los catetos. Ello implico que en adelante las magnitudes geometricas y las cantidades numericas tendrian que tratarse por separado, lo que tuvo consecuencias en el desarrollo de la matematica durante los dos milenios siguientes.\u200b  Los griegos desarrollaron una geometria basada en comparaciones (proporciones) de segmentos sin hacer referencia a valores numericos, usando diversas teorias para manejar el caso de medidas inconmensurables, como la teoria de proporciones de Eudoxo. Asi, los numeros irracionales permanecieron a partir de entonces excluidos de la aritmetica puesto que solo podian ser tratados mediante el metodo de infinitas aproximaciones. Por ejemplo, los pitagoricos encontraron (en notacion moderna) que si a\u2044b es una aproximacion a \u221a2 entonces p = a + 2b y q = a + b son tales que p\u2044q es una aproximacion mas precisa. Repitiendo el proceso nuevamente se obtienen mayores numeros que dan una mejor aproximacion.\u200b Dado que las longitudes que expresan los numeros irracionales podian ser obtenidas mediante procesos geometricos sencillos pero, aritmeticamente, solo mediante procesos de infinitas aproximaciones, origino que durante 2000 a\u00f1os la teoria de los numeros reales fuese esencialmente geometrica, identificando los numeros reales con los puntos de una linea recta.  Nuevos avances en el concepto de numero real esperaron hasta los siglos XVI y XVII , con el desarrollo de la notacion algebraica, lo que permitio la manipulacion y operacion de cantidades sin hacer referencia a segmentos y longitudes. Por ejemplo, se encontraron formulas para resolver ecuaciones de segundo y tercer grado de forma mecanica mediante algoritmos, los cuales incluian raices e incluso, en ocasiones, \u00abnumeros no reales\u00bb (lo que ahora conocemos como numeros complejos). Sin embargo, no existia aun un concepto formal de numero y se seguia dando primacia a la geometria como fundamento de toda la matematica. Incluso con el desarrollo de la geometria analitica este punto de vista se mantenia vigente, pues Descartes rechazaba la idea que la geometria pudiera fundamentarse en numeros, puesto que para el la nueva area era simplemente una herramienta para resolver problemas geometricos.  Posteriormente, la invencion del calculo abrio un periodo de grandes avances matematicos, con nuevos y poderosos metodos que permitieron por vez primera atacar los problemas relacionados con lo infinito mediante el concepto de limite. Asi, un numero irracional pudo ser entendido como el limite de una suma infinita de numeros racionales (por ejemplo, su expansion decimal). Como muestra, el numero \u03c0 puede estudiarse de forma algebraica (sin apelar a la intuicion geometrica) mediante la serie:   \u03c0 = 4 ( 1 \u2212 1 3 + 1 5 \u2212 1 7 + \u22ef ) = 4 \u2211 k = 0 \u221e ( \u2212 1 ) k 1 2 k + 1 {3}}+{5}}-{7}}+\\cdots \\right)=4\\sum _{k=0}^(-1)^{k}{2k+1}}}  entre muchas otras expresiones similares. Para entonces, el concepto intuitivo de numero real era ya el moderno, identificando sin problema un segmento con la medida de su longitud (racional o no). El calculo abrio el paso al analisis matematico, que estudia conceptos como continuidad, convergencia, etc. Pero el analisis no contaba con definiciones rigurosas y muchas de las demostraciones apelaban aun a la intuicion geometrica. Esto conllevo a una serie de paradojas e imprecisiones.  Los numeros reales se expresan con decimales que tienen una secuencia infinita de digitos a la derecha de la coma decimal, como por ejemplo 324,8232. Frecuentemente se a\u00f1aden tres puntos al final (324,823211247\u2026) indicando que hay mas digitos decimales, pero que se consideran sin importancia.  Las medidas en las ciencias fisicas son siempre una aproximacion a un numero real. No solo es mas conciso escribirlos con forma de fraccion decimal (es decir, numeros racionales que pueden ser escritos como proporciones, con un denominador exacto) sino que, en cualquier caso, cunde integramente el concepto y significado del numero real. En el analisis matematico los numeros reales son objeto principal de estudio. Puede decirse que los numeros reales son la herramienta de trabajo de las matematicas de la continuidad, como el calculo y el analisis matematico, mientras que los numeros enteros lo son de las matematicas discretas, en las que esta ausente la continuidad.  Se dice que un numero real es recursivo si sus digitos se pueden expresar por un algoritmo recursivo. Un numero no recursivo es aquel que es imposible de especificar explicitamente. Aun asi, la escuela rusa de constructivismo supone que todos los numeros reales son recursivos.  Los ordenadores solo pueden aproximarse a los numeros reales por numeros racionales; de todas maneras, algunos programas de ordenador pueden tratar un numero real de manera exacta usando su definicion algebraica (por ejemplo, \" 2 }} \") en vez de su respectiva aproximacion decimal.  Los matematicos usan el simbolo R } (o, de otra forma, R } , la letra \"R\" en negrita) para representar el conjunto de todos los numeros reales. La notacion matematica R n ^{n}} se refiere a un espacio de n dimensiones de los numeros reales; por ejemplo, un valor R 3 ^{3}} consiste de tres numeros reales y determina un lugar en un espacio de tres dimensiones.  En matematica, la palabra \u00abreal\u00bb se usa como adjetivo, con el significado de que el campo subyacente es el campo de los numeros reales. Por ejemplo, matriz real, funcion real, y Algebra de Lie real.  Un numero real puede ser un numero racional o un numero irracional. Los numeros racionales son aquellos que pueden expresarse como el cociente de dos numeros enteros, tal como 3/4, -21/3, 5, 0, 1/2, mientras que los irracionales son todos los demas. Los numeros racionales tambien pueden describirse como aquellos cuya representacion decimal es periodica despues de cierta cantidad de cifras, mientras que los irracionales tienen una expansion decimal aperiodica:  Los conjuntos de los numeros racionales e irracionales se designan mediante Q } e I } respectivamente.  Otra forma de clasificar los numeros reales es en algebraicos y trascendentes. Un numero es algebraico si existe un polinomio de coeficientes racionales que lo tiene por raiz y es trascendente en caso contrario. Obviamente, todos los numeros racionales son algebraicos: si p q {q}}} es un numero racional, con p entero y q natural, entonces es raiz de la ecuacion q x = p . Sin embargo, no todos los numeros algebraicos son racionales.  El conjunto de los numeros algebraicos se designa mediante A } .  Un numero real se dice computable si tiene una complejidad de Kolmogorov finita, es decir, si puede escribirse un programa informatico de extension finita que genere los digitos de dicho numero. Si un numero real no es computable se dice irreductible. Una definicion de numero irreductible es:  El conjunto de numeros reales computables se designa por R c o m p _}} . Obviamente los racionales y los algebraicos son numeros computables. De hecho se tiene la siguiente inclusion:   Q \u2282 A \u2282 R c o m p \\subset \\mathbb {A} \\subset \\mathbb {R} _}}  Ademas se tiene que todos estos conjuntos son numerables:   card | Q | = card | A | = card | R c o m p | = \u2135 0 }|\\mathbb {Q} |=}|\\mathbb {A} |=}|\\mathbb {R} _}|=\\aleph _{0}}  Esto implica que el conjunto de todos los numeros computables es un conjunto de medida nula.  Fue propuesto por el matematico aleman David Hilbert. En textos actuales de calculo y analisis matematico aparecen enunciados equivalentes al de Hilbert.\u200b  Existen diferentes formas de construir el conjunto de los numeros reales a partir de axiomas, siendo la caracterizacion mas comun, el conocido como metodo directo que introduce el sistema (\u211d, +,., \u2264), donde los elementos de \u211d se llaman numeros reales, + y. son dos operaciones en \u211d, \u2264 es una relacion de orden en \u211d.\u200b Se presenta una variante axiomatica, mediante las siguientes tres propiedades:  Un conjunto ( K , + , \u22c5 , \u2264 ) es el conjunto de los numeros reales si satisface las siguientes tres condiciones:  Las primeras dos condiciones definen el concepto de cuerpo ordenado, mientras que la tercera propiedad es de naturaleza topologica y es la que diferencia al conjunto de los numeros reales de todos los demas cuerpos ordenados. Hay que hacer notar que, en principio pueden existir diferentes conjuntos que satisfagan las mismas condiciones y que podrian ser diferentes al conjunto de los numeros reales, pero un teorema establece que si eso sucediera, ambas estructuras serian esencialmente la misma.  Cualquier cuerpo ordenado que cumpla las tres propiedades mencionadas es isomorfo al conjunto de los numeros reales.  En vista de lo anterior podemos hablar de el conjunto de los numeros reales (y no de un conjunto de numeros reales) y estableciendo su unicidad se puede usar el simbolo \u211d para representarlo.  Al enunciar la tercera propiedad en ocasiones se especifica que \u211d es completo en el sentido de Dedekind, pues existen otros axiomas que se pueden usar y que, asumiendo las primeras dos condiciones, todos son logicamente equivalentes. Algunos de estos son:  Cada una de las primeras dos propiedades mencionadas al inicio de la seccion corresponden a su vez a otra serie de axiomas, de modo que si se hace un desglose, puede caracterizarse el conjunto de los numeros reales como un conjunto que satisfaga la siguiente lista de axiomas.  Los axiomas del 1 al 15 corresponden a la estructura mas general de cuerpo ordenado. El ultimo axioma es el que distingue R } de otros cuerpos ordenados como Q } . Debe se\u00f1alarse que los axiomas 1 a 15 no constituyen una teoria categorica ya que puede demostrarse que admiten al menos un modelo no estandar diferente de los numeros reales, que es precisamente el modelo en el que se basa la construccion de los numeros hiperreales  Consideramos los numeros decimales como los conocemos intuitivamente. Sabemos que \u03c0 = 3 , 1415926535897932384626 \u2026 , es decir, el numero \u03c0 se expresa como el numero entero 3 y una secuencia infinita de digitos 1, 4, 1, 5, 9, 2, etc.  Un numero decimal se expresa entonces como x . d 1 d 2 d 3 d 4 \u2026 d_{2}d_{3}d_{4}\\dots } donde x es un numero entero y cada d i } es un elemento del conjunto { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } } . Ademas, consideramos que no existen las colas de 9.  Al conjunto de todos los numeros decimales donde x es un numero entero positivo se le denota por R + ^{+}} y se le llama el conjunto de los numeros reales positivos.  Al conjunto de todos los numeros decimales donde x es un numero entero negativo se le denota por R \u2212 ^{-}} y se le llama el conjunto de los numeros reales negativos.  Al numero decimal 0 , 00000 \u2026 se le llama cero.  Al conjunto R + \u222a R \u2212 \u222a { 0 , 00000 \u2026 } ^{+}\\cup \\mathbb {R} ^{-}\\cup \\{0,00000\\dots \\}} se le denota por R } y se le llama conjunto de numeros reales.  Se define la relacion de orden total de los numeros decimales como  Hay valores que no se pueden expresar como numeros racionales, tal es el caso de 2 }} . Sin embargo es claro que se puede aproximar 2 }} con numeros racionales tanto como se desee. Podemos entonces partir al conjunto de los numeros racionales en dos subconjuntos A y B de manera que en el conjunto A se encuentran todos los numeros racionales x < 2 }} y en B todos los numeros racionales tales que x > 2 }} .  Una cortadura de Dedekind es un par ordenado ( A , B ) que hace precisamente esto. Conceptualmente, la cortadura es el \"espacio\" que hay entre A y B . De esta manera es posible definir a 2 }} como ( A , B ) tal que A = { x \u2208 Q : x 2 < 2 } :x^{2}<2\\}} y B = { x \u2208 Q : x 2 > 2 } :x^{2}>2\\}} .  Es posible demostrar que B queda univocamente definido por A , de esta manera la cortadura ( A , B ) se reduce simplemente a A .  Tambien es demostrable que el conjunto de todas las cortaduras cumple con los axiomas de los numeros reales, de esta manera R } es el conjunto de todas las cortaduras de Dedekind. Esta es la primera construccion formal de los numeros reales bajo la teoria de conjuntos.  Un numero real r determina sobre la recta real una cortadura cuyas clases son A = { x / x \u2264 r } } y B = { x / x > r } } .\u200b  Las sucesiones de Cauchy retoman la idea de aproximar con numeros racionales un numero real.[cita\u00a0requerida] Tomese por ejemplo, la igualdad  Es claro que esta suma opera solo con los numeros racionales de la forma:  sin embargo, el resultado final es el numero irracional \u03c0 . Cada vez que se a\u00f1ade un termino, la expresion se aproxima mas y mas a \u03c0 .  Las sucesiones de Cauchy generalizan este concepto para definir a los numeros reales. Primero se define una sucesion de numeros racionales como una funcion f : N \u2192 Q \\rightarrow \\mathbb {Q} \\,} en la que se usa la notacion x n := f ( n ) :=f(n)} .  Una sucesion de Cauchy es una sucesion de numeros racionales donde sus elementos cada vez son menos diferentes. Mas formalmente, se define una sucesion de Cauchy como una sucesion de numeros racionales tales que para todo \u03f5 \u2208 Q + ^{+}} existe un n 0 \u2208 N \\in \\mathbb {N} } tal que para todo m , n \u2265 n 0 }} se cumple | x m \u2212 x n | < \u03f5 -x_{n}|<\\epsilon \\,} .  De esta manera es posible definir al numero real \u03c0 como la sucesion de numeros racionales:  Sea \u0393 el conjunto de las sucesiones de Cauchy en Q } . Sea la relacion \u223c definida en \u0393 por  Esta relacion \u223c es una relacion de equivalencia en el conjunto \u0393 de sucesiones de Cauchy definidas en Q } . Llamamos conjunto de los numeros reales al conjunto cociente \u0393 / \u223c } , en el que se puede definir una relacion de orden y una topologia. Se demuestra que Q } es isomorfo a un subconjunto de R } .\u200b  Sean a > 0 , b \u2208 R } cualesquiera. Entonces existe un numero natural n tal que n a > b ; esto expresa a su vez que lim n \u2192 \u221e b n = 0 {n}}=0} .\u200b  Con numeros reales pueden realizarse todo tipo de operaciones basicas con diversas excepciones importantes:  Estas restricciones tienen repercusiones en otras areas de las matematicas como el calculo: existen asintotas verticales en los lugares donde el denominador de una funcion racional tiende a cero, es decir, en aquellos valores de la variable en los que se presentaria una division entre cero, o no existe grafica real en aquellos valores de la variable en que resulten numeros negativos para raices de orden par, por mencionar un ejemplo de construccion de graficas en geometria analitica.  EL calculo con numeros reales suele llevar a resultados de numerosas cifras decimales que son inmanejables, haciendose necesario optar por aproximaciones que introducen errores.  Por ejemplo, el area de un circulo de 5 metros de radio dependera del valor que tomemos para el numero \u03c0:   A = \u03c0 \u22c5 r 2 } A = 25 \u03c0 m2  Asi, segun redondeemos \u03c0 a las decimas o centesimas:   A = 3.1 \u22c5 25 = 77.5 m2 A = 3.14 \u22c5 25 = 78.5 m2  Weisstein, Eric W. \u00abNumero real\u00bb.  En Weisstein, Eric W, ed. MathWorld (en ingles). Wolfram Research.   ","snippet":" En matematicas, el conjunto de los numeros reales (denotado por R o por \u211d) incluye tanto los numeros racionales (positivos, negativos y el cero) como los numeros irracionales;\u200b y en otro enfoque, a l","enlaces_salientes":["N%C3%BAmero_real","N%C3%BAmero_real","N%C3%BAmero_real","Recta_real","Correspondencia_matem%C3%A1tica","Biyecci%C3%B3n,_inyecci%C3%B3n_y_sobreyecci%C3%B3n","Matem%C3%A1ticas","Notaci%C3%B3n_matem%C3%A1tica","N%C3%BAmero_racional","Cero","N%C3%BAmero_irracional","N%C3%BAmero_trascendente","N%C3%BAmero_algebraico","Fracci%C3%B3n","Euler","C%C3%A1lculo_infinitesimal","Definici%C3%B3n_(matem%C3%A1tica)","Clases_de_equivalencia","Sucesi%C3%B3n_de_Cauchy","Cortes_de_Dedekind","Ojo_de_Horus","Antiguo_Egipto","Fracci%C3%B3n_egipcia","1000_a._C.","500_a._C.","Antigua_Grecia","Pit%C3%A1goras","N%C3%BAmero_irracional","N%C3%BAmero_negativo","India","600","China_(regi%C3%B3n)","Europa","Siglo_XVIII","Leonhard_Euler","An%C3%A1lisis_matem%C3%A1tico","Georg_Cantor","1871","Teor%C3%ADa_de_conjuntos","L%C3%B3gica_matem%C3%A1tica","Richard_Dedekind","Cortaduras_de_Dedekind","Ren%C3%A9_Descartes","Isaac_Newton","Leibniz","Euler","Joseph-Louis_de_Lagrange","Carl_Friedrich_Gauss","Bernhard_Riemann","Cauchy","Weierstrass","Matem%C3%A1ticas_en_el_Antiguo_Egipto","Matem%C3%A1tica_babil%C3%B3nica","Pitag%C3%B3ricos","Cuadrado","Tri%C3%A1ngulo_rect%C3%A1ngulo","Ra%C3%ADz_cuadrada_de_dos","Contradicci%C3%B3n","Tri%C3%A1ngulo","Proporcionalidad","Segmento","Aproximaci%C3%B3n","Siglo_XVI","Siglo_XVII","Ecuaci%C3%B3n","Algoritmo","N%C3%BAmero_complejo","Geometr%C3%ADa","Geometr%C3%ADa_anal%C3%ADtica","Ren%C3%A9_Descartes","C%C3%A1lculo_infinitesimal","L%C3%ADmite_de_una_funci%C3%B3n","An%C3%A1lisis_matem%C3%A1tico","F%C3%ADsica","Aproximaci%C3%B3n","Fracci%C3%B3n","N%C3%BAmero_racional","Proporcionalidad","Matem%C3%A1ticas_discretas","Constructivismo_(matem%C3%A1ticas)","R","Tabla_de_s%C3%ADmbolos_matem%C3%A1ticos","Matriz_(matem%C3%A1tica)","Funci%C3%B3n_real","%C3%81lgebra_de_Lie","N%C3%BAmero_racional","N%C3%BAmero_irracional","Cociente_(aritm%C3%A9tica)","N%C3%BAmero_algebraico","N%C3%BAmero_trascendente","Polinomio","N%C3%BAmero_computable","Complejidad_de_Kolmog%C3%B3rov","Conjunto_numerable","Teor%C3%ADa_de_la_medida","Axiomas_de_los_n%C3%BAmeros_reales","Cuerpo_(matem%C3%A1ticas)","Orden_total","Axioma_del_supremo","Supremo_(matem%C3%A1ticas)","Isomorfo","Sucesi%C3%B3n_de_Cauchy","Ley_de_tricotom%C3%ADa","Axioma_del_supremo","Teor%C3%ADa_(l%C3%B3gica)","Teor%C3%ADa_de_modelos","N%C3%BAmero_hiperreal","N%C3%BAmero_decimal","N%C3%BAmero_pi","N%C3%BAmero_entero","0,9_peri%C3%B3dico","Orden_total","Cortaduras_de_Dedekind","N%C3%BAmero_racional","Par_ordenado","Sistema_formal","Teor%C3%ADa_de_conjuntos","Sucesi%C3%B3n_de_Cauchy","Radicaci%C3%B3n","N%C3%BAmero_complejo","Divisi%C3%B3n_entre_cero","As%C3%ADntotas","Funci%C3%B3n_(matem%C3%A1tica)","Divisi%C3%B3n_entre_cero","Aproximaci%C3%B3n","Error_de_aproximaci%C3%B3n","N%C3%BAmero_decimal","%C3%81rea","C%C3%ADrculo","Metro","Radio_(geometr%C3%ADa)","N%C3%BAmero_%CF%80","Metro_cuadrado","Redondeo","N%C3%BAmero","N%C3%BAmero_complejo","N%C3%BAmero_racional","N%C3%BAmero_entero","N%C3%BAmero_natural","Cero","N%C3%BAmero_negativo","Fracci%C3%B3n","N%C3%BAmero_irracional","N%C3%BAmero_imaginario","ISBN","ISBN","Monocordio","Tono_(ac%C3%BAstica)","Octava","Cuarta","Quinta","ISBN","Eric_W._Weisstein","MathWorld","Wolfram_Research","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Operando","titulo":"Operando","contenido":"En matematicas, un operando es una de las entradas (argumentos o variables) de un operador. Por ejemplo, en  \" + \" es el operador, \" 3 \" y \" 6 \" son los operandos. Si el operando va acompa\u00f1ado de un signo menos (\" \u2212 \") se considera que es un operando negativo, en caso contrario se considera operando positivo o simplemente operando.  La cantidad de operandos de un operador es denominada aridad. Basandose en la aridad, los operadores son clasificados como unarios, binarios, ternarios etc.  En los lenguajes de programacion de computadora, las definiciones de operador y operando son casi las mismas que las de matematicas.  Adicionalmente, en lenguaje maquina, un operando es un valor (un argumento) con el cual la instruccion, nombrada por un mnemonico, opera. El operando puede ser un registro, una direccion de memoria, una constante literal, o una etiqueta. Un ejemplo simple en la arquitectura PC es  donde el valor en el operando del registro AX debe ser movido al registro DS. Dependiendo de la instruccion, puede haber cero, uno, dos o mas operandos. ","snippet":"En matematicas, un operando es una de las entradas (argumentos o variables) de un operador. Por ejemplo, en  \" + \" es el operador, \" 3 \" y \" 6 \" son los operandos. Si el operando va acompa\u00f1ado de un s","enlaces_salientes":["Operando","Operando","Operando","Matem%C3%A1ticas","Variable_(matem%C3%A1ticas)","Operador","Aridad","Operaci%C3%B3n_unaria","Operaci%C3%B3n_binaria","Operador_ternario","Lenguaje_de_programaci%C3%B3n","Computadora","C%C3%B3digo_binario","Instrucci%C3%B3n_(inform%C3%A1tica)","Mnem%C3%B3nico","Registro_(hardware)","Direcci%C3%B3n_de_memoria","X86","X86","Conjunto_de_instrucciones","UFLA","23_de_febrero","2008","Fortran","23_de_febrero","2008","Internet_Archive","23_de_febrero","2008","Control_de_autoridades"]}
{"url":"Conjunto_conexo","titulo":"Conjunto conexo","contenido":"Un conjunto conexo es un subconjunto C \u2286 X de un espacio topologico ( X , T ) })\\,} (donde T }\\,} es la coleccion de conjuntos abiertos del espacio topologico) que no puede ser expresado como union disjunta de dos conjuntos abiertos no vacios de la topologia.  Intuitivamente, un conjunto conexo es el que aparece como una sola pieza, que no se puede 'dividir' o 'partir'. En el caso de que un conjunto no sea conexo, se dice que es disconexo.   C \u2286 X es un conjunto conexo si y solo si   \u2200 A , B \u2208 T , A \u2229 B = \u2205 , C \u2286 A \u222a B },A\\cap B=\\emptyset ,C\\subseteq A\\cup B} implica C \u2286 A \u2228 C \u2286 B  Notese que si C = X y cumple lo anterior, entonces se dice que ( X , T ) })\\,} es un espacio topologico conexo.  Bajo estas definiciones, se tiene que C \u2286 X es conexo si y solamente si es un espacio topologico conexo para la topologia traza.  Se va a definir la conexividad en forma negativa: Un conjunto S se llama conexo, si no existe una particion del mismo en dos conjuntos no vacios y disjuntos S 1 y S 2, ninguno de los cuales contiene puntos de acumulacion del otro. Una hoja de papel es un conjunto conexo, al cortarla en dos partes se ve que ningun punto de una parte es punto de acumulacion de la otra.  Sea R } provisto de la topologia usual T u } , ademas J un intervalo de R , M ,M} y N subconjuntos abiertos de R } tales que J es parte de la union de M y N , J \u2229 M \u2229 N = \u2205 .  Entonces J \u2229 M = \u2205 \u2228 J \u2229 N = \u2205 . En este caso J es un subconjunto conexo de la recta real.  Se cumple que si ( X , T ) })\\,} es un espacio topologico conexo, cualquier espacio homeomorfo a el tambien lo sera. Esta propiedad nos da una caracterizacion muy util de los conjuntos conexos: C \u2286 X es un conjunto conexo si y solamente si para toda funcion f : C \u2192 { 0 , 1 } \\ } continua, se cumple que f es una funcion constante, donde a { 0 , 1 } } se le dota de la topologia discreta.  Otra propiedad interesante de los conjuntos conexos es la siguiente: Si ( X i , T i ) i \u2208 I ,}_{i}})_{i\\in I}} es una familia de espacios topologicos conexos (con I un conjunto de indices de cualquier cardinalidad), entonces ( \u220f i \u2208 I X i , T ) X_{i},}\\right)} tambien es conexo, donde T }} es la topologia producto.  Por ultimo, si X no es conexo, es decir, si existen abiertos U , V disjuntos no vacios tales que su union es X , es facil ver que cada abierto sera el complemento del otro, luego seran complementos de un abierto, y por ende, seran cerrados. Es decir, seran conjuntos clopen. Por esto, otra manera de caracterizar la conexidad es decir: X sera conexo si y solo si los unicos clopen son X y el vacio (donde ambos conjuntos son siempre clopen).  Diremos que un conjunto X es conexo por arcos o arco conexo si dados x 1 , x 2 \u2208 X ,x_{2}\\in X} existe una funcion continua llamada arco \u03b1 : [ 0 , 1 ] \u2192 X tal que \u03b1 ( 0 ) = x 1 } y \u03b1 ( 1 ) = x 2 } .  La conexidad por arcos implica conexidad, pero el reciproco no es cierto en general. Un contraejemplo muy tipico es el llamado peine del topologo, X = A \u222a B , donde A = { ( 0 , 1 ) } } y B = { ( \u03bb , 0 ) : \u03bb \u2208 ( 0 , 1 ] } \u222a { ( 1 n , \u03bc ) : n \u2208 N y \u03bc \u2208 [ 0 , 1 ] } \\cup \\left\\{({n}},\\mu ):n\\in \\mathbb {N} }\\mu \\in [0,1]\\right\\}} . X es conexo, pero no conexo por arcos.  Ser conexo por arcos no es una propiedad hereditaria (esto es, si un conjunto es conexo por arcos, cualquier subconjunto de este no es necesariamente conexo por arcos). Sin embargo, ser conexo por arcos es una propiedad topologica (es decir, la imagen mediante una aplicacion continua de un conjunto conexo por arcos es conexa por arcos).  Dado un espacio topologico ( X , T ) })\\,} se llama componente conexa, a cada uno de los conjuntos maximales conexos. Es decir un subconjunto Y \u2282 X es un componente conexo si se cumplen estas dos condiciones:  Se cumple que las componentes conexas de X forman una particion de X . Si X es conexo, se tiene que X es su unica componente conexa.  De manera similar se define componente arco conexa. Una componente arco conexa siempre esta contenida en una componente conexa.  Un espacio topologico se dice totalmente desconectado, si sus unicas componentes conexas son los conjuntos unitarios. Cada espacio discreto es totalmente desconectado, pero tambien hay espacios no discretos con la propiedad, por ejemplo Q } como subespacio de R } con su topologia usual. Asimismo hay espacios totalmente desconectados que no son numerables, por ejemplo Q \u2032 '} (irracionales, como subespacio de R } ) o el conjunto ternario de Cantor C .\u200b  Dado un espacio topologico ( X , T ) })} , se dice que es localmente conexo si para todo punto de X existe una base de entornos conexos. Similarmente, se dice que es localmente arco conexo si todo punto de X tiene una base de entornos arco conexos.  La importancia de estas propiedades es que se heredan a subespacios abiertos de X : si Y \u2286 X es abierto y X es localmente arco conexo, entonces Y tambien lo es. Ademas, en un espacio localmente arco conexo las componentes conexas siempre son abiertas -en un espacio general son cerradas- y coinciden con las arco componentes. ","snippet":"Un conjunto conexo es un subconjunto C \u2286 X de un espacio topologico ( X , T ) })\\,} (donde T }\\,} es la coleccion de conjuntos abiertos del espacio topologico) que no puede ser expresado como union di","enlaces_salientes":["Conjunto_conexo","Conjunto_conexo","Conjunto_conexo","Espacio_topol%C3%B3gico","Uni%C3%B3n_disjunta","Conjunto_abierto","Si_y_s%C3%B3lo_si","Topolog%C3%ADa_traza","Intervalo_(matem%C3%A1tica)","Homeomorfismo","Continuidad_(matem%C3%A1tica)","Topolog%C3%ADa_discreta","Cardinalidad","Topolog%C3%ADa_producto","Complemento_de_un_conjunto","Conjunto_clopen","Espacio_conexo_por_arcos","Peine_del_top%C3%B3logo","Propiedad_topol%C3%B3gica","Partici%C3%B3n_(matem%C3%A1tica)","Conjunto_de_Cantor","Control_de_autoridades","Gemeinsame_Normdatei"]}
{"url":"Restricci%C3%B3n_(matem%C3%A1ticas)","titulo":"Restriccion (matematicas)","contenido":"En matematicas, la restriccion de una funcion es otra funcion definida en un subconjunto del dominio de la primera, y que toma los mismos valores para esos elementos. La funcion original es a su vez una extension de la primera.  La restriccion de una funcion se obtiene al reducir su dominio. Si, por el contrario, se busca una nueva funcion con un dominio mas amplio pero preservando las imagenes de la original, se habla entonces de una extension.  Dada una funcion f\u00a0: A \u2192 B y un subconjunto C \u2286 A, la restriccion de f al conjunto C es la funcion f |C\u00a0: C \u2192 B, dada por:  Dadas dos funciones f\u00a0: A \u2192 B y g\u00a0: D \u2192 B de forma que f sea una restriccion de g, es decir, que A \u2286 D y f = g |A, se dice que g es una extension de f. ","snippet":"En matematicas, la restriccion de una funcion es otra funcion definida en un subconjunto del dominio de la primera, y que toma los mismos valores para esos elementos. La funcion original es a su vez u","enlaces_salientes":["Restricci%C3%B3n_(matem%C3%A1ticas)","Restricci%C3%B3n_(matem%C3%A1ticas)","Restricci%C3%B3n_(matem%C3%A1ticas)","Votante","Partido_pol%C3%ADtico","Mujer","Matem%C3%A1ticas","Funci%C3%B3n_matem%C3%A1tica","Dominio_de_una_funci%C3%B3n","ISBN","Control_de_autoridades"]}
{"url":"Uni%C3%B3n_de_conjuntos","titulo":"Union de conjuntos","contenido":"En la teoria de conjuntos, la union de dos (o mas) conjuntos es una operacion que resulta en otro conjunto, cuyos elementos son los mismos de los conjuntos iniciales. Por ejemplo, el conjunto de los numeros naturales es la union del conjunto de los numeros pares positivos P y el conjunto de los numeros impares positivos I:  La union de conjuntos se denota por el simbolo \u222a , de modo que por ejemplo:  Dados dos conjuntos A y B, su union es el conjunto que contiene todos los elementos, que pertenecen por lo menos a uno de los conjuntos  A o  B:  La union de dos conjuntos A y B es otro conjunto A \u222a B cuyos elementos son todos los elementos de A  y/o de B:   x \u2208 A \u222a B cuando x \u2208 A o x \u2208 B (o en sentido inclusivo) }x\\in A}x\\in B}}  \u200b  Ejemplo.  En la union de conjuntos, los elementos repetidos solo aparecen una vez, pues los conjuntos no pueden tener elementos repetidos:[n 1]\u200b  Es posible definir la union de un numero finito de conjuntos, superior a dos:  La union de una coleccion finita de conjuntos A1, ..., An es el conjunto que contiene todos los elementos de cada conjunto en dicha coleccion:   A 1 \u222a \u2026 \u222a A n = { x : x \u2208 A k donde 1 \u2264 k \u2264 n } \\cup \\ldots \\cup A_{n}=\\{x:x\\in A_{k}}1\\leq k\\leq n\\}}  Y esta se puede calcular utilizando la propiedad asociativa de la union de dos conjuntos (mas abajo). De este modo, para unir varios conjuntos el orden en el que se haga es irrelevante:   A 1 \u222a A 2 \u222a \u2026 \u222a A n = A 1 \u222a ( A 2 \u222a ( \u2026 ( A n \u2212 1 \u222a A n ) \u2026 ) ) \\cup A_{2}\\cup \\ldots \\cup A_{n}=A_{1}\\cup (A_{2}\\cup (\\ldots (A_{n-1}\\cup A_{n})))}  Una definicion mas general en teoria de conjuntos se refiere a una familia de conjuntos:  Sea M una familia de conjuntos. Su union \u222aM se define como:   x \u2208 \u22c3 M cuando x \u2208 A para alg u \u00b4 n A \u2208 M }x\\in A}}}}A\\in M}  Esta definicion coincide con las anteriores en el caso de una familia finita de conjuntos:  La union general de conjuntos se denota de diversas maneras:   \u22c3 M = \u22c3 A \u2208 M A = \u22c3 i \u2208 I A i , A=\\bigcup _{i\\in I}A_{i}}}  donde esta ultima se aplica en el caso de que se utilice un conjunto indice, tomando M como {Ai: i \u2208 I}.  De la definicion de union puede deducirse directamente:  La union de conjuntos posee tambien propiedades similares a las operaciones con numeros:  Todas estas propiedades se deducen de propiedades analogas para la disyuncion logica.  En relacion con la operacion de interseccion existen unas leyes distributivas:  Propiedad distributiva El numero de elementos de la union de dos conjuntos finitos A y B es la suma de los elementos de A y de B, si no tienen elementos en comun.  Si A y B son finitos y disjuntos:   | A \u222a B | = | A | + | B |  Como en un conjunto los elementos no pueden repetirse, si A y B tienen elementos en comun, al sumar sus elementos se contarian los elementos comunes mas de una vez. Por ejemplo:  Por ello, es necesario eliminar las repeticiones al contar los elementos de A \u222a B:  Dados dos conjuntos finitos A y B\u00a0:   | A \u222a B | = | A | + | B | \u2212 | A \u2229 B |  Esta formula se generaliza para el caso mas complicado de una union de un numero arbitrario de conjuntos finitos. Por ejemplo en el caso de tres conjuntos se tiene:  y en general se tiene el llamado principio de inclusion-exclusion:  Dada una coleccion finita de conjuntos A1, ..., An\u00a0:   | A 1 \u222a \u2026 \u222a A n | = \u2211 i = 1 n | A i | \u2212 \u2211 1 \u2264 i < j \u2264 n | A i \u2229 A j | + \u2211 1 \u2264 i < j < k \u2264 n | A i \u2229 A j \u2229 A k | \u2212 \u2026 + ( \u2212 1 ) n \u2212 1 | A 1 \u2229 \u2026 \u2229 A n | \\cup \\ldots \\cup A_{n}|=\\sum _{i=1}^{n}|A_{i}|-\\sum _{1\\leq i<j\\leq n}|A_{i}\\cap A_{j}|+\\sum _{1\\leq i<j<k\\leq n}|A_{i}\\cap A_{j}\\cap A_{k}|-\\ \\ldots \\ +(-1)^{n-1}|A_{1}\\cap \\ldots \\cap A_{n}|}  En el caso de que alguno de los conjuntos involucrados sea infinito, las expresiones anteriores siguen siendo validas, entendiendolas como afirmaciones relativas a cardinales infinitos (con ciertas modificaciones).  En teoria axiomatica de conjuntos no puede demostrarse la existencia de la union de conjuntos a partir de propiedades mas basicas. Es por ello que se postula la existencia de la union, a\u00f1adiendo como axioma el llamado axioma de union. ","snippet":"En la teoria de conjuntos, la union de dos (o mas) conjuntos es una operacion que resulta en otro conjunto, cuyos elementos son los mismos de los conjuntos iniciales. Por ejemplo, el conjunto de los n","enlaces_salientes":["Uni%C3%B3n_de_conjuntos","Uni%C3%B3n_de_conjuntos","Uni%C3%B3n_de_conjuntos","Conjunto","Teor%C3%ADa_de_conjuntos","Conjuntos","Operaci%C3%B3n_binaria","Elemento_de_un_conjunto","N%C3%BAmeros_naturales","N%C3%BAmero_par","N%C3%BAmero_impar","Conjunto","N%C3%BAmeros_naturales","N%C3%BAmero_primo","N%C3%BAmero_compuesto","Finito","Propiedad_asociativa","Teor%C3%ADa_de_conjuntos","Familia_de_conjuntos","Conjunto_%C3%ADndice","%C3%81lgebra_de_conjuntos","Idempotencia","Subconjuntos","Propiedad_asociativa","Propiedad_conmutativa","Elemento_neutro","Conjunto_vac%C3%ADo","Disyunci%C3%B3n_l%C3%B3gica","Intersecci%C3%B3n_de_conjuntos","Propiedad_distributiva","Propiedad_distributiva","Principio_de_la_suma","Principio_de_inclusi%C3%B3n-exclusi%C3%B3n","Conjuntos_disjuntos","Conjunto_infinito","N%C3%BAmero_cardinal_(teor%C3%ADa_de_conjuntos)","Axioma_de_uni%C3%B3n","Teor%C3%ADa_axiom%C3%A1tica_de_conjuntos","Axioma","%C3%81lgebra_de_conjuntos","Conjunto","Teor%C3%ADa_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Multiconjunto","ISBN","ISBN","ISBN","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Recorrido","titulo":"Recorrido","contenido":"El termino recorrido puede referir: ","snippet":"El termino recorrido puede referir: ","enlaces_salientes":["Recorrido","Recorrido","Recorrido","Matem%C3%A1ticas","Codominio","Teor%C3%ADa_de_grafos","Camino_(teor%C3%ADa_de_grafos)","Camino_(teor%C3%ADa_de_grafos)","Ciencias_de_la_computaci%C3%B3n","Recorrido_de_%C3%A1rboles","Recorrido_de_obst%C3%A1culos"]}
{"url":"Encyclopaedia_of_Mathematics","titulo":"Encyclopaedia of Mathematics","contenido":"La Encyclopedia of Mathematics (tambien EOM y anteriormente Encyclopaedia of Mathematics) es una obra de referencia en matematicas.  La version de 2002 contiene mas de 8.000 entradas que cubren la mayoria de las areas de las matematicas a nivel de posgrado,\u200b y la presentacion es de naturaleza tecnica. La enciclopedia esta editada por Michiel Hazewinkel y fue publicada por Kluwer Academic Publishers hasta 2003, cuando Kluwer se convirtio en parte de Springer.\u200b El CD-ROM contiene animaciones y objetos tridimensionales.  La enciclopedia ha sido traducida del sovietico Matematicheskaya entsiklopediya (1977) editado originalmente por Ivan Vinogradov y ampliado con comentarios y tres suplementos a\u00f1adiendo varios miles de articulos.  Hasta el 29 de noviembre de 2011, se podia buscar en linea una version estatica de la enciclopedia de forma gratuita. Esta URL ahora redirige a la nueva encarnacion wiki de la EOM.  Una nueva version dinamica de la enciclopedia esta ahora disponible como wiki publica en linea. Esta nueva wiki es una colaboracion entre Springer y la European Mathematical Society. Esta nueva version de la enciclopedia incluye todo el contenido de la version en linea anterior, pero ahora todas las entradas se pueden actualizar publicamente para incluir los avances mas recientes en matematicas. Todas las entradas son controladas para verificar la precision del contenido por miembros de un comite editorial\u200b seleccionado por la Sociedad Matematica Europea. ","snippet":"La Encyclopedia of Mathematics (tambien EOM y anteriormente Encyclopaedia of Mathematics) es una obra de referencia en matematicas.  La version de 2002 contiene mas de 8.000 entradas que cubren la may","enlaces_salientes":["Encyclopaedia_of_Mathematics","Encyclopaedia_of_Mathematics","Encyclopaedia_of_Mathematics","Enciclopedia","Matem%C3%A1ticas","Idioma_ruso","Idioma_ingl%C3%A9s","Springer_Science%2BBusiness_Media","Matem%C3%A1ticas","Springer_Science%2BBusiness_Media","CD-ROM","Iv%C3%A1n_Vinogr%C3%A1dov","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","Enciclopedia_en_l%C3%ADnea","ISBN","Digital_object_identifier","Control_de_autoridades","Open_Library"]}
{"url":"Modelo_de_computaci%C3%B3n","titulo":"Modelo de computacion","contenido":"En la teoria de la computabilidad y en la teoria de la complejidad computacional, un modelo de computacion es la definicion un conjunto de operaciones permitibles usadas en el computo y sus respectivos costos. Solo asumiendo un cierto modelo de computacion es posible analizar los recursos de computo requeridos, como el tiempo de ejecucion o el espacio de memoria, o discutir las limitaciones de algoritmos o computadores.  Algunos ejemplos de modelos incluyen las maquinas de Turing, las funciones recursivas, calculo lambda, y sistema de produccion.  En la ingenieria dirigida por modelos, el modelo de computacion explica como el comportamiento del sistema entero es el resultado del comportamiento de cada uno de sus componentes.  En el campo del tiempo de ejecucion del analisis de algoritmos, es comun especificar un modelo computacional en terminos de operaciones primitivas permitidas que tengan un costo unitario, o simplemente operaciones costo unitario. Un ejemplo comunmente usado es la maquina de acceso aleatorio, que tiene costo unitario para acceso de lectura y escritura para todas sus celdas de memoria. En este respecto, se diferencia del modelo de maquina de Turing mencionado arriba.  Hay muchos modelos de computacion, diferenciandose en el conjunto de operaciones admisibles y de su costo computacional. Ellos entran en las amplias categorias siguientes: ","snippet":"En la teoria de la computabilidad y en la teoria de la complejidad computacional, un modelo de computacion es la definicion un conjunto de operaciones permitibles usadas en el computo y sus respectivo","enlaces_salientes":["Modelo_de_computaci%C3%B3n","Modelo_de_computaci%C3%B3n","Modelo_de_computaci%C3%B3n","Teor%C3%ADa_de_la_computabilidad","Teor%C3%ADa_de_la_complejidad_computacional","Tiempo_de_ejecuci%C3%B3n","Algoritmo","Computadora_electr%C3%B3nica","M%C3%A1quina_de_Turing","Funci%C3%B3n_recursiva","C%C3%A1lculo_lambda","Ingenier%C3%ADa_dirigida_por_modelos","Tiempo_de_ejecuci%C3%B3n","An%C3%A1lisis_de_algoritmos","Modelo_computacional","Celda_de_memoria","M%C3%A1quina_abstracta","Computabilidad","Modelo_de_%C3%A1rbol_de_decisi%C3%B3n","Control_de_autoridades"]}
{"url":"Matem%C3%A1ticos","titulo":"Matematico","contenido":"Un matematico (del latin mathematicus, y este a su vez del griego \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03ba\u03bf\u03c2 mathematikos) es una persona cuya area primaria de estudio e investigacion es la matematica, es decir que contribuye con nuevo conocimiento en este campo de estudio. En sentido estricto, un matematico es un investigador en el area de las matematicas. El termino recubre una gran gama de competencias y de practicas muy diferentes, que comparten un vocabulario comun y un formalismo especifico, asi como una exigencia de rigor propia de esta disciplina. Tambien se conoce por matematicos a aquellos profesionales que han completado  la carrera universitaria en este campo.  El termino generico matematico puede decantarse en dominios mas restringidos, como por ejemplo: geometra, algebrista, analista, topologo, estadistico, etc.  Existen principalmente dos interpretaciones, por un lado, se le llama matematico a aquella persona que trabaja activamente en la investigacion matematica,\u200b lo cual, en la actualidad, la mayoria de las veces se acompa\u00f1a con publicaciones en revistas especializadas en el tema; a esta clasificacion pertenecen Henri Poincare o Andrew Wiles, por ejemplo. Por otro lado, matematico puede designar a una persona con conocimiento especiales en matematica,\u200b o que trabajo en un campo conexo como la ense\u00f1anza o la vulgarizacion; como por ejemplo Aurelio Baldor o Martin Gardner.  La union de matematica Internacional publica un anuario mundial de matematicos,\u200b la definicion retenida es:  Se le llama matematico activo a toda persona que haya publicado, durante los 4 ultimos a\u00f1os, al menos 2 articulos referenciados en las tres bases de datos bibliograficos: la Zentralblatt MATH, la Mathematical Reviews y la Referativny Zhurnal.  Suele hacerse a veces la distincion entre matematicas puras y matematicas aplicadas\u200b para diferenciar la investigacion en matematica, de la investigacion en areas relacionadas (industria, ingenieria, tecnologia) o interdisciplinas (ciencias cognitivas), en ciencias afines (estadistica, informatica) o incluso en ciencias sociales (filosofia, historia). Esta distincion, sin embargo, no es aceptada unanimemente, como tampoco la clasificacion de un matematico como \"cientifico\".\u200b  Alexander Grothendieck.  Saharon Shelah.  Andrew Wiles.  Grigori Perelman.  Como consecuencia de las enormes dificultades e impedimentos con los que las mujeres han tenido que enfrentarse, a lo largo de la historia y en todos los lugares del mundo, para poder llevar a cabo una labor de estudio o investigacion en matematicas (y en la ciencia, en general), la mayoria de las personas que han sobresalido en el area de las matematicas y han alcanzado renombre universal han sido hombres. A pesar de estos inconvenientes, ha habido mujeres que, gracias a una indomable voluntad, una posicion social alta y, generalmente, a la ayuda de algun mecenas masculino, han dejado una huella imborrable en las matematicas. Y no solo porque sus historias de superacion sean un ejemplo, sino porque sus contribuciones cientificas han tenido una notable repercusion y relevancia. Entre las mujeres matematicas mas prominentes nacidas antes del siglo\u00a0XX podemos citar a: Teano de Crotona (siglo VI \u00a0a.\u00a0C.), Hipatia de Alejandria (alrededor del 400), Ada Lovelace (1815-1852), Maria Gaetana Agnesi (1718-1799), Sophie Germain (1776-1831), Sofia Kovalevskaya (1850-1891), Alicia Boole Stott (1860-1940), Emilie du Chatelet (1706-1749), Carolina Herschel (1750-1848), Mary Somerville (1780-1872) y Florence Nightingale (1820-1910).  Los profundos cambios demograficos y sociales acontecidos principalmente desde el final de la Segunda Guerra Mundial han favorecido la integracion de las mujeres en el ambito laboral y la paulatina reduccion de las diferencias de oportunidades con los hombres. Por tanto, la lista de grandes mujeres matematicas del siglo\u00a0XX es extensa y entre sus figuras mas destacadas cabe mencionar a Mileva Maric (1875-1948), Emmy Noether (1882-1935), Mary Lucy Cartwright (1900-1998), Rozsa Peter (1905-1977), Grace Murray Hopper (1906-1992), Olga Taussky-Todd (1906-1995), Julia Robinson (1919-1985), Emma Castelnuovo, (1913-2014), Maria Wonenburger (1927-), Ingrid Daubechies (1954-)..  No obstante, la presencia de las mujeres en los puestos academicos y cientificos de responsabilidad es escasa. Por ello, y como ocurre en los demas ambitos del conocimiento,  en diversos paises existen asociaciones de mujeres matematicas con una fuerte implicacion social en la busqueda de la igualdad de oportunidades en el marco de la investigacion y la docencia en matematicas. Este es el caso de la Asociacion Mujeres y Matematicas,\u200b la European Women in Mathematics (EWM)\u200b o la Comision Mujeres y Matematicas de la Real Sociedad Matematica Espa\u00f1ola,\u200b asi como algunas asociaciones latinoamericanas de mujeres matematicas.   Cabe citar a Roswitha, monja de un convento sajon del siglo\u00a0X, de mejor y mayor trabajo en literatura y filosofia que en la ciencia de los numeros. No obstante lucio buen conocimiento de la Aritmetica de Boecio y menciona cuestiones ligadas a numeros defectivos y perfectos, se\u00f1alando entre ellos a 6, 28, 496, y 8128.\u200b  En una publicacion sobre matematica recreativa de Rodriguez Vidal y Rodriguez Rigual, tambien figuran los nombres que siguen, como cultoras de matematica.  Nota: No existe premio Nobel de Matematicas; el Premio Abel o la Medalla Fields se consideran por lo general su equivalente.  -- Estructura del informe --  Se puede elegir el orden de la lista, pulsando en el Premio, Sede, etc.   ","snippet":"Un matematico (del latin mathematicus, y este a su vez del griego \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03ba\u03bf\u03c2 mathematikos) es una persona cuya area primaria de estudio e investigacion es la matematica, es decir que contribuye con nu","enlaces_salientes":["Matem%C3%A1tico","Matem%C3%A1tico","Matem%C3%A1tico","Tales_de_Mileto","Lat%C3%ADn","Griego_antiguo","Matem%C3%A1tica","Investigador","%C3%81reas_de_las_matem%C3%A1ticas","Rigor_matem%C3%A1tico","Henri_Poincar%C3%A9","Andrew_Wiles","Aurelio_Baldor","Martin_Gardner","Zentralblatt_MATH","Mathematical_Reviews","Matem%C3%A1ticas_puras","Matem%C3%A1ticas_aplicadas","Cient%C3%ADfico","Leonhard_Euler","Carl_Friedrich_Gauss","Leonhard_Euler","Carl_Friedrich_Gauss","Ni%C3%B1o_prodigio","Srinivasa_Ramanujan","Autodidacta","An%C3%A1lisis_matem%C3%A1tico","Teor%C3%ADa_de_n%C3%BAmeros","Serie_matem%C3%A1tica","Fracci%C3%B3n_continua","%C3%89variste_Galois","Teor%C3%ADa_de_ecuaciones","%C3%81lgebra_abstracta","Teor%C3%ADa_de_grupos","Bourbaki","Historia_de_las_matem%C3%A1ticas","Jean_Dieudonn%C3%A9","Henri_Cartan","Andr%C3%A9_Weil","Jean-Pierre_Serre","Emmy_Noether","%C3%81lgebra_abstracta","F%C3%ADsica_te%C3%B3rica","Clay_Mathematics_Institute","Problemas_del_milenio","Alexander_Grothendieck","%C3%81lgebra_homol%C3%B3gica","Topolog%C3%ADa","Categor%C3%ADa_(matem%C3%A1ticas)","Medalla_Fields","Saharon_Shelah","Teor%C3%ADa_de_conjuntos","Teor%C3%ADa_de_modelos","Andrew_Wiles","%C3%9Altimo_teorema_de_Fermat","Grigori_Perelm%C3%A1n","Hip%C3%B3tesis_de_Poincar%C3%A9","Poincar%C3%A9","Medalla_Fields","Alexander_Grothendieck","Saharon_Shelah","Andrew_Wiles","Grigori_Perelm%C3%A1n","Mujeres_matem%C3%A1ticas","Emmy_Noether","T%C3%A9ano","Hipatia","Ada_Lovelace","Maria_Gaetana_Agnesi","Sophie_Germain","Sofia_Koval%C3%A9vskaya","Alicia_Boole_Stott","%C3%89milie_du_Ch%C3%A2telet","Carolina_Herschel","Mary_Somerville","Florence_Nightingale","Segunda_Guerra_Mundial","Mileva_Mari%C4%87","Emmy_Noether","Mary_Lucy_Cartwright","R%C3%B3zsa_P%C3%A9ter","Grace_Murray_Hopper","Olga_Taussky-Todd","Julia_Robinson","Emma_Castelnuovo","Mar%C3%ADa_Wonenburger","Ingrid_Daubechies","Real_Sociedad_Matem%C3%A1tica_Espa%C3%B1ola","Roswitha","Medalla_Fields","Arqu%C3%ADmedes","Medalla_Fields","Premio_Abel","Premio_Nevanlinna","Premio_Carl-Friedrich-Gauss","Medalla_Chern","Premio_Wolf","Premio_Fermat","Problemas_del_milenio","Clay_Mathematics_Institute","Premio_P%C3%B3lya_(LMS)","Medalla_De_Morgan","Sociedad_Matem%C3%A1tica_de_Londres","Premio_Nobel","Matem%C3%A1ticas","Fundaci%C3%B3n_(Derecho)","Organismo","Estado","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","B%C3%A9lgica","Espa%C3%B1a","Alemania","Espa%C3%B1a","Espa%C3%B1a","Finlandia","Finlandia","Espa%C3%B1a","Espa%C3%B1a","Mar%C3%ADa_%C3%81ngeles_Garc%C3%ADa_Ferrero","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Alemania","Suiza","Estados_Unidos","Espa%C3%B1a","Austria","Espa%C3%B1a","Espa%C3%B1a","Mar%C3%ADa_%C3%81ngeles_Garc%C3%ADa_Ferrero","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Xavier_Ros-Oton","Espa%C3%B1a","Espa%C3%B1a","Francia","Alemania","Austria","Espa%C3%B1a","Espa%C3%B1a","B%C3%A9lgica","Francia","Italia","Reino_Unido","Kazajist%C3%A1n","Francia","Francia","Reino_Unido","Estados_Unidos","Francia","Reino_Unido","Reino_Unido","Espa%C3%B1a","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","Rosa_Maria_Mir%C3%B3_Roig","Espa%C3%B1a","Jos%C3%A9_Antonio_Seade_Kuri","M%C3%A9xico","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Luis_Vega_Gonz%C3%A1lez","Espa%C3%B1a","Antonio_C%C3%B3rdoba_Barba","Espa%C3%B1a","Carme_Torras_Gen%C3%ADs","Espa%C3%B1a","Espa%C3%B1a","Antonio_C%C3%B3rdoba_Barba","Espa%C3%B1a","Jos%C3%A9_Francisco_Duato_Mar%C3%ADn","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Juan_Luis_V%C3%A1zquez_Su%C3%A1rez","Espa%C3%B1a","Mateo_Valero_Cort%C3%A9s","Espa%C3%B1a","Premio_Abel","Noruega","Luis_Caffarelli","Argentina","Academia_China_de_las_Ciencias","Rep%C3%BAblica_Popular_China","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Premios_Fundaci%C3%B3n_Princesa_de_Girona","Espa%C3%B1a","Xavier_Ros-Oton","Espa%C3%B1a","Espa%C3%B1a","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","Jacob_Palis","Brasil","Jos%C3%A9_Luis_Massera","Italia","Uruguay","Ignacio_Rodr%C3%ADguez_Iturbe","Venezuela","Espa%C3%B1a","Estados_Unidos","Espa%C3%B1a","Mar%C3%ADa_%C3%81ngeles_Garc%C3%ADa_Ferrero","Espa%C3%B1a","Joaquim_Serra_Montol%C3%AD","Espa%C3%B1a","Estados_Unidos","Italia","Xavier_Ros-Oton","Espa%C3%B1a","Estados_Unidos","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Mar%C3%ADa_Pe_Pereira","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Colombia","Colombia","Colombia","Colombia","Colombia","Colombia","Colombia","Colombia","Espa%C3%B1a","Jos%C3%A9_Bonet_Solves","Espa%C3%B1a","Espa%C3%B1a","Mar%C3%ADa_Teresa_Lozano_Im%C3%ADzcoz","Espa%C3%B1a","Espa%C3%B1a","Marta_Macho_Stadler","Espa%C3%B1a","Espa%C3%B1a","Premios_Fundaci%C3%B3n_BBVA_Fronteras_del_Conocimiento","Espa%C3%B1a","Stephen_Cook","Estados_Unidos","Ingrid_Daubechies","B%C3%A9lgica","David_Mumford","Estados_Unidos","Italia","Argentina","Costa_Rica","Patricio_Felmer","Chile","Argentina","Eric_Goles","Chile","M%C3%A9xico","Cuba","Chile","Per%C3%BA","Colombia","M%C3%A9xico","Jos%C3%A9_Antonio_de_la_Pe%C3%B1a","M%C3%A9xico","Uruguay","Per%C3%BA","Venezuela","Argentina","Per%C3%BA","Guillermo_Owen","Colombia","M%C3%A9xico","Francia","Espa%C3%B1a","Alemania","Harald_Helfgott","Per%C3%BA","Premio_Fulkerson","Estados_Unidos","Francisco_Santos_Leal","Espa%C3%B1a","Venezuela","Venezuela","B%C3%A9lgica","Espa%C3%B1a","Espa%C3%B1a","Cuba","Estados_Unidos","Canad%C3%A1","Estados_Unidos","Espa%C3%B1a","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","Juan_Luis_V%C3%A1zquez_Su%C3%A1rez","Espa%C3%B1a","Espa%C3%B1a","Estados_Unidos","Premio_Balzan","Italia","Suiza","Espa%C3%B1a","Rusia","Premio_Konex","Argentina","Luis_Caffarelli","Argentina","Argentina","Luis_Santal%C3%B3","Espa%C3%B1a","Argentina","Premio_Nacional_de_Ciencia_y_de_Tecnolog%C3%ADa_Clodomiro_Picado_Twight","Costa_Rica","Costa_Rica","Costa_Rica","Premios_Narc%C3%ADs_Monturiol","Espa%C3%B1a","Espa%C3%B1a","Alberto_Dou_Mas_de_Xax%C3%A0s","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Pilar_Bayer_Isant","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Premio_Nacional_de_Ciencias_y_Artes","M%C3%A9xico","Argentina","Jos%C3%A9_Antonio_de_la_Pe%C3%B1a","M%C3%A9xico","M%C3%A9xico","Guillermo_Owen","Colombia","Ismael_Herrera_Revilla","M%C3%A9xico","Samuel_Gitler","M%C3%A9xico","Jos%C3%A9_Adem","M%C3%A9xico","Estados_Unidos","Ecuaci%C3%B3n_diferencial","Espa%C3%B1a","M%C3%A9xico","Chile","Bogot%C3%A1","M%C3%A9xico","Brasil","Miguel_Walsh","Argentina","M%C3%A9xico","Estados_Unidos","M%C3%A9xico","Luis_Caffarelli","Argentina","Brasil","Estados_Unidos","Reino_Unido","Harald_Helfgott","Per%C3%BA","Espa%C3%B1a","Espa%C3%B1a","Hong_Kong","Francia","Francia","Francia","Francia","Blaise_Pascal","Francia","Europa","Francia","Suiza","Estados_Unidos","Estados_Unidos","Francia","Francia","Espa%C3%B1a","Francia","Francia","Francia","Francia","Francia","Reino_Unido","Estados_Unidos","Estados_Unidos","Estados_Unidos","Australia","Italia","Italia","Italia","Italia","Rusia","Espa%C3%B1a","Espa%C3%B1a","Australia","Espa%C3%B1a","Espa%C3%B1a","Pakist%C3%A1n","Alemania","Reino_Unido","Harald_Helfgott","Per%C3%BA","Canad%C3%A1","Canad%C3%A1","Espa%C3%B1a","Espa%C3%B1a","Estados_Unidos","Premio_Humboldt","Alemania","Argentina","Espa%C3%B1a","Francisco_Santos_Leal","Espa%C3%B1a","Hungr%C3%ADa","Francia","Austria","Italia","Estados_Unidos","Estados_Unidos","Reino_Unido","Premio_B%C3%B4cher","Estados_Unidos","Argentina","Hungr%C3%ADa","Estados_Unidos","Italia","Georg_Cantor","Alemania","Alemania","Estados_Unidos","Estados_Unidos","Australia","Estados_Unidos","Problemas_del_milenio","Estados_Unidos","Estados_Unidos","Argentina","Estados_Unidos","%C3%81lgebra","Teor%C3%ADa_de_n%C3%BAmeros","Estados_Unidos","Argentina","Alberto_Pedro_Calder%C3%B3n","Estados_Unidos","Canad%C3%A1","Suecia","Estados_Unidos","Reino_Unido","Canad%C3%A1","Estados_Unidos","Juan_Mart%C3%ADn_Maldacena","Argentina","Canad%C3%A1","Colombia","Estados_Unidos","Ren%C3%A9_Descartes","Europa","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Estados_Unidos","M%C3%A9xico","Estados_Unidos","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Armenia","Israel","Chile","Chile","Argentina","Estados_Unidos","Europa","Europa","Espa%C3%B1a","Espa%C3%B1a","Estados_Unidos","Francia","Francia","Espa%C3%B1a","Europa","Estados_Unidos","Reino_Unido","Argentina","Estados_Unidos","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Xavier_Ros-Oton","Espa%C3%B1a","Estados_Unidos","Jes%C3%BAs_Mar%C3%ADa_Sanz_Serna","Espa%C3%B1a","Estados_Unidos","Estados_Unidos","Estados_Unidos","Australia","Reino_Unido","Australia","Guatemala","Suiza","Europa","Noruega","Premio_Princesa_de_Asturias","Espa%C3%B1a","Emmanuel_Cand%C3%A8s","Francia","Ingrid_Daubechies","B%C3%A9lgica","Yves_Meyer","Francia","Terence_Tao","Australia","Hamilton_O._Smith","Estados_Unidos","Luis_Santal%C3%B3","Espa%C3%B1a","Argentina","Espa%C3%B1a","Estados_Unidos","Europa","Espa%C3%B1a","Espa%C3%B1a","Estados_Unidos","Canad%C3%A1","Canad%C3%A1","Premio_Nacional_de_Ciencias_Exactas_de_Chile","Chile","Mario_Hamuy_Wackenhut","Chile","Chile","Patricio_Felmer","Chile","Chile","Miguel_Kiwi","Chile","Rafael_Benguria","Chile","Carlos_Conca","Chile","Chile","Chile","Mar%C3%ADa_Teresa_Ruiz","Chile","Claudio_Bunster","Chile","Chile","Chile","Estados_Unidos","Estados_Unidos","Espa%C3%B1a","Estados_Unidos","Reino_Unido","Wayback_Machine","Alemania","Estados_Unidos","Canad%C3%A1","Estados_Unidos","Europa","Premio_Leroy_Steele","Estados_Unidos","Luis_Caffarelli","Argentina","Estados_Unidos","Espa%C3%B1a","Estados_Unidos","Estados_Unidos","Premio_Lilavati","India","Adri%C3%A1n_Paenza","Argentina","Rusia","Premio_Lo%C3%A8ve","Estados_Unidos","Teor%C3%ADa_de_la_probabilidad","Estados_Unidos","Estados_Unidos","Estados_Unidos","Estados_Unidos","Estados_Unidos","Estados_Unidos","Alberto_Pedro_Calder%C3%B3n","Argentina","Reino_Unido","Estados_Unidos","Israel","Finlandia","Estados_Unidos","Alemania","Suiza","Estados_Unidos","Bulgaria","Cuba","Colombia","Espa%C3%B1a","Argentina","Venezuela","Hungr%C3%ADa","Estados_Unidos","Estados_Unidos","Estados_Unidos","Pit%C3%A1goras","Italia","Reino_Unido","Francia","Europa","Espa%C3%B1a","Uni%C3%B3n_Europea","Europa","Espa%C3%B1a","Estados_Unidos","Italia","Miguel_Walsh","Argentina","M%C3%A9xico","Argentina","Argentina","Am%C3%A9rica_Latina","Alemania","Premio_Schock","Suecia","Luis_Caffarelli","Argentina","Reino_Unido","Reino_Unido","Estados_Unidos","Estados_Unidos","Estados_Unidos","Argentina","Espa%C3%B1a","India","Estados_Unidos","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Europa","Paraguay","Reino_Unido","Europa","Espa%C3%B1a","Espa%C3%B1a","Alemania","Francia","Reino_Unido","Reino_Unido","Edimburgo","Estados_Unidos","Premio_Smith","Reino_Unido","Alemania","Sofia_Koval%C3%A9vskaya","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","M%C3%A9xico","Francia","Italia","Estados_Unidos","Jap%C3%B3n","Chile","Estados_Unidos","Estados_Unidos","Australia","Estados_Unidos","Reino_Unido","Harald_Helfgott","Per%C3%BA","Reino_Unido","Reino_Unido","Estados_Unidos","Argentina","Estados_Unidos","Estados_Unidos","Premio_Wolf","Israel","Alberto_Pedro_Calder%C3%B3n","Argentina","Luis_Caffarelli","Argentina","Alemania","Reino_Unido","Espa%C3%B1a","Australia","Espa%C3%B1a","Estados_Unidos","Argentina","Per%C3%BA","Alemania","Estados_Unidos","Estados_Unidos","Estados_Unidos","Francia","Estados_Unidos","Estados_Unidos","Estados_Unidos","Australia","Alemania","Italia","Suiza","B%C3%A9lgica","M%C3%A9xico","Estados_Unidos","Clay_Mathematics_Institute","Estados_Unidos","Canad%C3%A1","Chile","Francia","M%C3%A9xico","Costa_Rica","Canad%C3%A1","Espa%C3%B1a","Alemania","Polonia","Europa","Estados_Unidos","Alemania","Suiza","Europa","Europa","Suiza","B%C3%A9lgica","Espa%C3%B1a","Espa%C3%B1a","Chile","Espa%C3%B1a","Espa%C3%B1a","Espa%C3%B1a","Fundaci%C3%B3n_Princesa_de_Girona","Espa%C3%B1a","M%C3%A9xico","Francia","Espa%C3%B1a","Estados_Unidos","Hungr%C3%ADa","Alemania","Europa","Canad%C3%A1","ICMAT","Espa%C3%B1a","Estados_Unidos","Estados_Unidos","Congreso_Internacional_de_Matem%C3%A1ticos","Italia","Instituto_de_Estudios_Catalanes","Espa%C3%B1a","Estados_Unidos","Reino_Unido","Espa%C3%B1a","Francia","International_Mathematical_Union","Alemania","Estados_Unidos","Fundaci%C3%B3n_Konex","Argentina","Academias_Reales_de_Suecia","Suecia","Reino_Unido","Estados_Unidos","Ministerio_de_Educaci%C3%B3n,_Cultura_y_Deporte","Espa%C3%B1a","Alemania","Costa_Rica","Jap%C3%B3n","Estados_Unidos","Estados_Unidos","Pakist%C3%A1n","Austria","Canad%C3%A1","Academia_de_Ciencias_de_Rusia","Rusia","Canad%C3%A1","Royal_Society","Reino_Unido","Real_Sociedad_Matem%C3%A1tica_Espa%C3%B1ola","Espa%C3%B1a","Reino_Unido","India","Sociedad_Catalana_de_Matem%C3%A1ticas","Espa%C3%B1a","Sociedad_Espa%C3%B1ola_de_Matem%C3%A1tica_Aplicada","Espa%C3%B1a","Secretar%C3%ADa_de_Educaci%C3%B3n_P%C3%BAblica_(M%C3%A9xico)","M%C3%A9xico","Estados_Unidos","Estados_Unidos","Italia","Francia","Francia","M%C3%A9xico","Rusia","Am%C3%A9rica_Latina","Italia","Alfr%C3%A9d_R%C3%A9nyi","Paul_Erd%C5%91s","Johann_Wolfgang_von_Goethe","G._H._Hardy","Apolog%C3%ADa_de_un_matem%C3%A1tico","Tom_Lehrer","Sofia_Kovalevskaya","Matem%C3%A1tica","Historia_de_la_matem%C3%A1tica","Premios_matem%C3%A1ticos_franceses","Encyclop%C3%A6dia_Britannica","Encyclop%C3%A6dia_Britannica_(edici%C3%B3n_de_1911)","Dominio_p%C3%BAblico","Abstracci%C3%B3n_(filosof%C3%ADa)","M%C3%A9todo_cient%C3%ADfico","C%C3%A1lculo","An%C3%A1lisis_matem%C3%A1tico","Augustin_Louis_Cauchy","Godfrey_Harold_Hardy","Joseph_Liouville","Teor%C3%ADa_de_Galois","MacTutor_History_of_Mathematics_archive","Universidad_de_Saint_Andrews","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Art_%26_Architecture_Thesaurus"]}
{"url":"Crecimiento_exponencial","titulo":"Crecimiento exponencial","contenido":"La expresion crecimiento exponencial tambien llamado crecimiento continuo se aplica a una magnitud tal que su variacion en el tiempo es proporcional a su valor, lo que implica que crece cada vez mas rapido en el tiempo, de acuerdo con la ecuacion:   M t = M 0 \u22c5 a r t =M_{0}\\cdot a^{rt}\\,}  Donde:  Se puede ilustrar el crecimiento exponencial tomando en la ecuacion M 0 = 1 =1} , a = 2 , r = 1 y t un valor entero. Por ejemplo, si t = 4 , entonces M t = 2 4 = 16 =2^{4}=16} . Si t = 10 entonces M t = 1024 =1024} . Y asi sucesivamente.  Algunos fenomenos que pueden ser descritos por un crecimiento exponencial, al menos durante un cierto intervalo de tiempo, son:  El crecimiento es exponencial cuando el crecimiento de la funcion en un punto es proporcional al valor de la funcion en ese punto, lo que se puede expresar mediante la ecuacion diferencial de primer orden:  (1) { d M d t = r M M ( 0 ) = M 0 {dt}}=rM\\\\M(0)=M_{0}\\end{cases}}}  Donde M 0 \\;} es el valor inicial de la magnitud cuyo crecimiento exponencial se esta estudiando (es decir, el valor de la magnitud para t = 0 ). La solucion a esta ecuacion (1) para cualquier instante de tiempo posterior es la ecuacion de crecimiento exponencial:   M ( t ) = M 0 e r t e^{rt}\\;}  Para t > 0 puede verse que M ( t ) > M 0 \\;} (siempre y cuando el crecimiento sea positivo r > 0 ).  La catastrofe malthusiana debe su nombre al demografo y economista politico conservador Thomas Robert Malthus y la  vision pesimista del crecimiento de poblacion expuesta en su obra Ensayo sobre el principio de la poblacion. Las tesis de Malthus aunque desajustadas a los hechos, tuvieron gran influencia politica. Malthus llego a afirmar que el crecimiento de la poblacion libre de contenciones era un crecimiento exponencial, mientras que la produccion de alimentos segun su argumento era un crecimiento lineal. Puesto que la tasa de crecimiento de la poblacion era mas acelerada que la de alimentos a partir de un cierto umbral de poblacion, Malthus pronostico que habria una escasez de alimentos y una gran hambruna hacia mediados del siglo\u00a0XIX. La gran hambruna predicha por Malthus jamas se produjo mostrando que los presupuestos logicos de Malthus eran simplistas y en ocasiones hasta erroneos.  Expresado en ecuaciones diferenciales el argumento de Malthus era el siguiente. Si P ( t ) es la poblacion en el a\u00f1o t y A ( t ) la cantidad total de alimentos las hipotesis de crecimiento lineal y exponencial son:  (2a, 2b) d P ( t ) d t = r P ( t ) , d A ( t ) d t = k A 0 {dt}}=rP(t),\\qquad \\qquad {dt}}=kA_{0}}  La solucion de las dos ecuaciones anteriores lleva a que la cantidad de alimento por persona viene dada por:   a ( t ) = A ( t ) P ( t ) = A 0 ( 1 + k t ) P 0 e r t = a 0 ( 1 + k t ) e \u2212 r t {P(t)}}=(1+kt)}{P_{0}e^{rt}}}=a_{0}(1+kt)e^{-rt}}  Donde P 0 } es la poblacion inicial y A 0 } es la cantidad inicial de alimentos. Supongamos ahora que la cantidad minima de alimentos o ingesta minima por persona es a m i n } , entonces si las hipotesis de Malthus hubieran sido correctas para todo instante del tiempo, la cantidad de alimentos por persona se habria reducido hasta ser inferior a la cantidad minima de alimentos por persona en el instante de la catastrofe malthusiana t C M } :  (*) a ( t C M ) = a m i n \u21d2 1 + k t C M e r t C M \u2264 a m i n a 0 )=a_{min}\\Rightarrow }{e^{rt_{CM}}}}\\leq }{a_{0}}}}  Puede verse que para cualesquiera valores positivos de r , k , A 0 , P 0 y a m i n } existe un instante del tiempo dado por t C M } en el que se produce indefectiblemente la catastrofe malthusiana, si las ecuaciones de evolucion (2b 2a, 2b) no cambian en todo el proceso. La solucion de (*) viene dada mediante la funcion W de Lambert:   t C M = \u2212 1 r \u2212 1 k W ( \u2212 r a m i n a 0 e \u2212 r / k ) =-{r}}-{k}}W\\left(-r}{a_{0}}}e^{-r/k}\\right)}  La curva logistica es un refinamiento del crecimiento exponencial. Cuando una magnitud crece en un sistema finito, a partir de cierto punto el tama\u00f1o finito del sistema limita el crecimiento de la magnitud al no existir recursos abundantes suficientes para seguir permitiendo el crecimiento exponencial. Un caso tipico son los ecosistemas biologicos donde ciertas especies basan su supervivencia en altas tasas de reproduccion o natalidad(estrategia r ). Inicialmente cuando existe un peque\u00f1o numero de individuos el crecimiento es exponencial, pero a partir de cierto momento el hecho de que los recursos alimentarios del territorio no sean infinitos \"satura\" el crecimiento. En esos casos el crecimiento de la poblacion P con el tiempo ( t ) responde a la siguiente ecuacion diferencial:  (3) d P d t = r P ( 1 \u2212 P K ) {dt}}=rP\\left(1-{K}}\\right)}  Donde la constante r define la tasa de crecimiento y K es la capacidad, que esta asociada a la saturacion del sistema. Cuando P es peque\u00f1a, esta ecuacion se parece a la ecuacion (1) del crecimiento exponencial, pero para valores no despreciables frente al valor de K el comportamiento cambia. La solucion general a la ecuacion (3) es la funcion logistica, usualmente llamada curva logistica. La solucion general de la ecuacion, siendo P 0 } la poblacion inicial, viene dada por:  Donde: lim t \u2192 \u221e P ( t ) = K . P(t)=K.\\,}    La teoria de la seleccion r/K hipotetiza que las fuerzas evolutivas operan en dos direcciones diferentes: r o K en relacion con la probabilidad de supervivencia de individuos de diferentes especies de plantas y animales. Estos terminos algebricos se derivan de la ecuacion diferencial de Verhulst de la dinamica de poblaciones biologicas.   d N d t = r N ( 1 \u2212 N K ) {dt}}=rN\\left(1-{K}}\\right)\\qquad \\!}  en donde:  De acuerdo con la teoria de seleccion r/K:  Las plantas anuales o perennes, con abundantes semillas, peque\u00f1as, sin compuestos secundarios ni otras defensas contra la depredacion son tipicas de estrategia r : pinos, robles, ceibas, pastos y yerbas en general; mientras que arboles con pocas semillas, grandes, ricas en nutrientes, cargadas de alcaloides o con defensas mecanicas (espinas, cortezas duras, etc.), son tipicas de estrategia K: palma de coco, aguacate, zapote. En forma analoga, los invertebrados terrestres y acuaticos, muchas especies de peces, producen innumerables propagulos que se dispersan pasivamente, sufren altas tasas de depredacion -estrategia r, vs. aves y mamiferos que invierten tiempo y energia en el cuidado de sus hijos, durante periodos prolongados, son el epitome de los estrategas K. Estos ejemplos subrayan el hecho de que r y K son extremos de un espectro de adaptaciones; de facto la mayoria de las especies tanto de plantas como de animales manifiestan estrategas intermedias.  Tambien es de interes fisico el decrecimiento exponencial, por el cual una cierta magnitud M con el tiempo disminuye su valor, o se \"atenua\" segun una ley exponencial negativa del tipo:   M t = M 0 e \u2212 t / \u03c4 =M_{0}e^{-t/\\tau }\\,}  Algunos fenomenos que siguen procesos de decrecimiento o atenuacion exponencial son: ","snippet":"La expresion crecimiento exponencial tambien llamado crecimiento continuo se aplica a una magnitud tal que su variacion en el tiempo es proporcional a su valor, lo que implica que crece cada vez mas r","enlaces_salientes":["Crecimiento_exponencial","Crecimiento_exponencial","Crecimiento_exponencial","N%C3%BAmero_e","Embri%C3%B3n","Inflaci%C3%B3n","C%C3%A1lculo","NP-completo","Fisi%C3%B3n_binaria","Ecuaci%C3%B3n_diferencial_de_primer_orden","Thomas_Robert_Malthus","Ensayo_sobre_el_principio_de_la_poblaci%C3%B3n","Hambruna","Siglo_XIX","Poblaci%C3%B3n","Alimento","Funci%C3%B3n_W_de_Lambert","Curva_log%C3%ADstica","Ecuaci%C3%B3n_diferencial","Teor%C3%ADa_de_la_selecci%C3%B3n_r/K","Estrategia_r","Estrategia_k","Funci%C3%B3n_log%C3%ADstica#La_ecuaci.C3.B3n_Verhulst","Din%C3%A1mica_de_poblaciones","Tasa_de_natalidad","Poblaci%C3%B3n_estad%C3%ADstica","Capacidad_de_carga","Plantas_anuales","Alcaloides","Prop%C3%A1gulos","Inductancia","Tensi%C3%B3n_el%C3%A9ctrica","Sinapsis","Olvido#Bases_neurofisiol\u00f3gicas","The_Limits_to_Growth","Princeton_University_Press","Modelo_exponencial","Funci%C3%B3n_exponencial","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Tetraci%C3%B3n","titulo":"Tetracion","contenido":"En matematicas, la tetracion (o hiper-4) es el siguiente hiperoperador despues de la exponenciacion, y es definida como una exponenciacion iterada. La palabra proviene de tetra (cuatro) y cion (iteracion). La tetracion es usada para la notacion de los numeros muy grandes.  Para entender la tetracion hay que entender la relacion jerarquica que tienen la suma, la multiplicacion y la exponenciacion: las multiplicaciones pueden entenderse como sumar repetidas, la exponenciacion como multiplicaciones repetidas y la tetracion como exponenciaciones repetidas. Todas estas operaciones repetidas forman una jerarquia de \"hiperoperaciones\" que consisten en repetir cierto numero de veces la operacion de nivel inferior. Aqui se presentan ejemplos de los primeros cuatro operadores, con la tetracion como el primer hiperoperador.  Donde cada operacion es definida mediante la iteracion de la operacion previa (la siguiente operacion en la sucesion es la pentacion). La peculiaridad de la tetracion entre estas operaciones es que para las tres primeras (adicion, multiplicacion y exponenciacion) pueden ser generalizadas para valores complejo de n, mientras que para la tetracion, tal generalizacion regular no ha sido todavia establecida; la tetracion no es considerada una funcion elemental.  La adicion ( a + n ) es la operacion mas basica, la multiplicacion ( a n ) es tambien una operacion primaria, aunque para los numeros naturales puede ser pensada como una adicion encadenada que implica n numeros a, y la exponenciacion ( a n } ) puede ser pensada como una multiplicacion encadenada que implica n numeros a. Analogamente, la tetracion ( n a a} ) puede ser pensada como una potencia encadenada que implica n numeros a. El parametro a puede ser llamado parametro base en lo siguiente, mientras que el parametro n puede llamarse en lo siguiente parametro-altura (que es entero en primera aproximacion, pero que puede ser generalizado a  alturas fraccionales, reales y complejas, ver mas abajo).  Para cualquier numero real positivo a > 0 y un numero entero no negativo n \u2265 0 , se define n a a}} como:  Como se puede ver de la definicion, al evaluar la tetracion, esta es expresada como una \"torre de exponentes\", la potenciacion se realiza en el nivel mas alto primero para que esta sea irreducible. Dicho de otro modo:\u200b  Notese que la potenciacion no es asociativa, asi que evaluar la expresion en otro orden proporcionara una respuesta diferente ademas de incorrecta:  Se simplificaria a 2^(2^(4-1))=2^(2^3)=2^8=256, que es una doble exponencial.  Por lo tanto, las torres exponenciales deben ser evaluadas de arriba abajo (o de derecha a izquierda), ya que la tetracion es una funcion exponencial iterada.  La tetracion tiene varias propiedades que son similares a la exponenciacion, asi como propiedades que son especificas de la operacion y que se pierden o ganan con la exponenciacion. Debido a que la exponenciacion no conmutativa, las reglas del producto y de la potencia no tienen un analogo con la tetracion; las afirmaciones a ( b x ) = ( a b x ) ^{a}\\left({}^{b}x\\right)=\\left({}^{ab}x\\right)} y a ( x y ) = a x a y ^{a}\\left(xy\\right)={}^{a}x{}^{a}y} no son ciertas para la mayoria de los casos.\u200b  Sin embargo, la tetracion sigue una propiedad diferente, en donde a x = x ( a \u2212 1 x ) ^{a}x=x^^{a-1}x\\right)}} . Este hecho se ve mas claramente usando una definicion recursiva. De esta propiedad, se sigue que ( b a ) ( c a ) = ( c + 1 a ) ( b \u2212 1 a ) ^{b}a\\right)^^{c}a\\right)}=\\left({}^{c+1}a\\right)^^{b-1}a\\right)}} , lo que permite intercambiar b y c en ciertas ecuaciones. La demostracion de este hecho va como sigue:  Cuando un numero x y 10 son coprimos, entonces es posible computar las ultimas m cifras decimales de a x x} usando el teorema de Euler, para cualquier entero m. Esto es cierto tambien en otras bases: por ejemplo, las ultimas m cifras octales de a x x} pueden ser calculadas cuando x y 8 son coprimos.  La tetracion puede generalizarse de dos maneras diferentes; en la ecuacion n a ! a!} , tanto la base a como la altura n pueden generalizarse utilizando la definicion y las propiedades de la tetracion. Aunque la base y la altura pueden generalizarse mas alla de los enteros no negativos a diferentes dominios, incluyendo n 0 0}} , funciones complejas como n i ^{n}i} , y alturas de infinito n, las propiedades mas limitadas de la tetracion reducen la capacidad de generalizarla.  La exponencial 0 0 } no esta definida de forma consistente. Por lo tanto, las tetraciones n 0 0}} no estan claramente definidas por la formula dada anteriormente. Sin embargo, lim x \u2192 0 n x {}^{n}x} esta bien definida, y existe:\u200b  Por lo tanto, podriamos definir consistentemente n 0 = lim x \u2192 0 n x ^{n}0=\\lim _{x\\rightarrow 0}{}^{n}x} . Esto es analogo a definir 0 0 = 1 =1} . Bajo esta generalizacion, 0 0 = 1 ^{0}0=1} , por lo que la regla 0 a = 1 a}=1} de la definicion original sigue vigente.  Dado que los numeros complejos se pueden elevar a potencias, la tetracion se puede aplicar a bases de la forma z = a + bi (donde a y b son reales). Por ejemplo, en nz con z = i, la tetrizacion se consigue utilizando la rama principal del logaritmo natural; utilizando la formula de Euler obtenemos la relacion:  Esto sugiere una definicion recursiva para n + 1 i = a \u2032 + b \u2032 i ^{n+1}i=a'+b'i} dado cualquier n i = a + b i ^{n}i=a+bi} :  Esto permite encontrar los siguientes valores aproximados:  La tetracion puede extenderse a las alturas infinitas; es decir, para ciertos valores de a y n en n a ^{n}a} , existe un resultado bien definido para un n infinito. Esto se debe a que para bases dentro de un cierto intervalo, la tetrizacion converge a un valor finito a medida que la altura tiende al infinito. Por ejemplo, 2 2 2 \u22c5 \u22c5 }^{}^{}^}}}}} converge a 2, y por tanto puede decirse que es igual a 2. La tendencia a 2 puede verse evaluando una peque\u00f1a torre finita:  En general, la exponencial infinitamente iterada x x \u22c5 \u22c5 \u22c5 }}}\\!\\!} , definida como el limite de n x ^{n}x} a medida que n crece a infinito, converge para e \u2212 e \u2264 x \u2264 e 1 / e \\leq x\\leq e^{1/e}} , aproximadamente el intervalo de 0. 066 a 1,44, resultado demostrado por Leonhard Euler.\u200b El limite, si existe, es una solucion real positiva de la ecuacion 1=y = xy. Asi,  1 =x = y1/y. El limite que define la exponencial infinita de x no existe cuando x > e1/e porque el maximo de y1/y es e1/e. El limite tampoco existe cuando 0 < x < e-e. Esto puede extenderse a los numeros complejos z con la definicion:  donde W representa la funcion W de Lambert.  Como el limite 1=y = \u221ex (si existe en la recta real positiva, es decir para e-e \u2264 x \u2264 e1/e) debe satisfacer 1=xy = y vemos que 1=x \u21a6 y = \u221ex es (la rama inferior de) la funcion inversa de 1=y \u21a6 x = y1/y.  Podemos utilizar la regla recursiva de la tetracion,  para demostrar que \u2212 1 a ^{-1}a} :  Sustituyendo -1 por k se obtiene  Los valores negativos mas peque\u00f1os no pueden ser bien definidos de esta manera. Sustituyendo -2 por k en la misma ecuacion se obtiene  que no esta bien definida. Sin embargo, a veces pueden considerarse conjuntos.\u200b  Para n = 1 , cualquier definicion de \u2212 1 1 1}} es consistente con la regla porque  En este momento no existe una solucion comunmente aceptada para el problema general de extender la tetracion a los valores reales o complejos de n. Sin embargo, ha habido multiples enfoques hacia la cuestion, y a continuacion se esbozan diferentes enfoques.  En general, el problema es encontrar - para cualquier real a > 0 - una funcion superexponencial , f ( x ) = x a ^{x}a} sobre reales x > -2 que satisfaga ","snippet":"En matematicas, la tetracion (o hiper-4) es el siguiente hiperoperador despues de la exponenciacion, y es definida como una exponenciacion iterada. La palabra proviene de tetra (cuatro) y cion (iterac","enlaces_salientes":["Tetraci%C3%B3n","Tetraci%C3%B3n","Tetraci%C3%B3n","Coloreado_de_dominios","Funci%C3%B3n_holomorfa","Tono","Argumento_(an%C3%A1lisis_complejo)","Brillo","Matem%C3%A1ticas","Hiperoperaci%C3%B3n","Exponenciaci%C3%B3n","Adici%C3%B3n","Multiplicaci%C3%B3n","Exponenciaci%C3%B3n","Pentaci%C3%B3n","N%C3%BAmero_complejo","Funci%C3%B3n_elemental","N%C3%BAmero_real","N%C3%BAmero_entero","Asociatividad_(%C3%A1lgebra)","Ley_conmutativa","Coprimo","Teorema_de_Euler","Dominio_de_una_funci%C3%B3n","N%C3%BAmeros_complejos","Rama_principal","F%C3%B3rmula_de_Euler","Infinito","Infinito","Leonhard_Euler","Funci%C3%B3n_W_de_Lambert","Hiperoperaci%C3%B3n","Pentaci%C3%B3n","Eric_W._Weisstein","MathWorld","Wolfram_Research","Wayback_Machine","American_Mathematical_Monthly","Control_de_autoridades"]}
{"url":"M%C3%A9todo_efectivo","titulo":"Procedimiento efectivo","contenido":"Un procedimiento efectivo o metodo efectivo es una secuencia de pasos repetible y determinista; es decir, una en que siempre se iran obteniendo los mismos conjuntos de valores de salida para los mismos conjuntos de valores de entrada.  Todos los algoritmos son procedimientos efectivos. Sin embargo, no todos los procedimientos efectivos son algoritmos, debido a que los algoritmos poseen propiedades adicionales que los primeros no tienen.  Los procedimientos efectivos siempre dan una respuesta correcta, se completan en un numero finito de pasos y trabaja para todas las instancias de problemas de clase. ","snippet":"Un procedimiento efectivo o metodo efectivo es una secuencia de pasos repetible y determinista; es decir, una en que siempre se iran obteniendo los mismos conjuntos de valores de salida para los mismo","enlaces_salientes":["Procedimiento_efectivo","Procedimiento_efectivo","Procedimiento_efectivo","Determinista","Salida_(inform%C3%A1tica)","Entrada","Algoritmo","Receta_de_cocina","Pastel","Cocinero","C%C3%B3digo_fuente","Bucle_infinito","Lenguaje_de_programaci%C3%B3n","Iteraci%C3%B3n","Algoritmo_determinista","Proceso_(inform%C3%A1tica)","Control_de_autoridades"]}
{"url":"Funci%C3%B3n_recursiva_primitiva","titulo":"Recursion primitiva","contenido":"En teoria de la computabilidad, la recursion primitiva permite definir una clase de funciones que forman un importante paso en la formalizacion de la nocion de computabilidad, la clase de funciones recursivas primitivas. Se definen usando como principales operaciones la recursion y composicion de funciones y forman un subconjunto estricto de las funciones recursivas, que son precisamente las funciones computables. Las funciones recursivas se definen agregandole a la recursion primitiva el operador de busqueda no acotada que permite definir funciones parciales.  Muchas de las funciones normalmente estudiadas en teoria de los numeros, y las aproximaciones a las funciones de valor real utilizan la recursion primitiva. Como ejemplo de ellas se tiene la suma, la division, el factorial, el enesimo primo, etc. De hecho, no es facil definir una funcion que sea recursiva pero que no se pueda definir con recursion primitiva.  La variable o argumento de una funcion recursiva primitiva es un numero natural o una n-tupla de numeros naturales (i1, i2,..., in), mientras que el resultado o valor de la funcion es un numero natural. Una funcion recursiva primitiva es n-aria si toma como argumento o variable n-uplas de numeros naturales. El conjunto de las funciones primitivas recursivas se define segun las siguientes reglas:  Se puede notar que las funciones de proyeccion permiten contrarrestar la rigidez impuesta por la paridad de las funciones en la definicion anterior, dado que en la composicion se puede pasar cualquier subconjunto de los argumentos.  Una funcion es primitiva recursiva si es la funcion constante cero, la funcion sucesor, una proyeccion o si se define a partir de funciones primitivas recursivas utilizando unicamente composicion y recursion primitiva.  Intuitivamente, se esperaria que la suma se comportase de la forma siguiente:  llevada esta funcion al esquema de las funciones primitivas queda asi:  (donde P1\u00b3 es la funcion que recibe tres argumentos y devuelve el primero de ellos)  Se puede ver que P1\u00b9 es la funcion identidad; se incluye su llamada para conformarse estrictamente al esquema de la recursion primitiva (funcion f del esquema). La composicion de S con P1\u00b3, en el segundo caso tambien corresponde al esquema dado anteriormente (funcion g del esquema).  Si bien la recursion primitiva parece poder expresar cualquier operacion, en realidad solamente cubre un subconjunto estricto de las funciones computables. Esto se verifica con una variante del argumento de diagonalizacion de Cantor. La prueba se puede esquematizar como sigue:  Las funciones primitivas recursivas pueden ser ordenadas estrictamente asignandole a cada una de ellas un numero. Este numero es unico para cada definicion de funcion, si bien dos definiciones equivalentes de la misma funcion podrian tener diferente numero asociado. El numero asociado a cada funcion es calculable en el sentido de que puede ser definido mediante un mecanismo de computo como una funcion recursiva o una maquina de Turing.  Se construye ahora una matriz donde las filas son las funciones primitivas recursivas de un solo argumento en orden segun el numero asociado y las columnas son los naturales. El valor de cada casilla es el resultado de la funcion de esa fila para el valor entero de esa columna.  Se define ahora la funcion g(x) = S(n) donde n es el valor de la casilla de la fila y columna x. Cualquiera sea el valor de x, el valor de g(x) sera distinto al de la funcion de la fila x al menos para el entero x. Por la construccion anterior, la funcion es computable, pero no recursiva primitiva, dado que es diferente a toda funcion primitiva para al menos un argumento entero. En conclusion, deben existir funciones computables que no son primitivas recursivas.  Este mismo argumento se puede utilizar para cualquier conjunto de funciones totales computables, por lo que cualquier enumeracion (que pueda llevarse a cabo mediante un mecanismo de computo) de funciones computables totales es necesariamente incompleta. En cambio, las funciones parciales computables si pueden ser enumeradas de forma completa, por ejemplo enumerando el \u00abprograma\u00bb de su correspondiente maquina de Turing.  Un ejemplo notable de funcion recursiva que no es primitiva recursiva es la funcion de Ackermann. ","snippet":"En teoria de la computabilidad, la recursion primitiva permite definir una clase de funciones que forman un importante paso en la formalizacion de la nocion de computabilidad, la clase de funciones re","enlaces_salientes":["Recursi%C3%B3n_primitiva","Recursi%C3%B3n_primitiva","Recursi%C3%B3n_primitiva","Teor%C3%ADa_de_la_computabilidad","Recursi%C3%B3n","Composici%C3%B3n_de_funciones","Subconjunto","Funci%C3%B3n_recursiva","Funci%C3%B3n_computable","Teor%C3%ADa_de_los_n%C3%BAmeros","Variable_(matem%C3%A1ticas)","Operando","Tupla","N%C3%BAmero_natural","Sucesor","Axiomas_de_Peano","Composici%C3%B3n_de_funciones","Funci%C3%B3n_identidad","Funci%C3%B3n_computable","Diagonalizaci%C3%B3n_de_Cantor","Funci%C3%B3n_recursiva","M%C3%A1quina_de_Turing","Funci%C3%B3n_de_Ackermann","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Herbert_Enderton","titulo":"Herbert Enderton","contenido":"Herbert Bruce Enderton (15 de abril de 1936 \u2013 20 de octubre de 2010\u200b)\u200b fue un matematico estadounidense. Fue Profesor Emerito de Matematicas en UCLA y miembro de la Facultad de Matematicas, Logica y Metodologia de la Ciencia en la Universidad de California en Berkeley.  Consiguio el Doctorado en la Universidad de Harvard en 1962.\u200b Fue miembro de la American Mathematical Society from 1961 until his death.\u200b  Enderton tambien contribuyo a la reoria de la computabilidad, la teoria de la definabilidad, modelos de analisis, complejidad computacional e historia de la logica.\u200b  De 1980 a 2002 fue coordinador de la seccion de revisiones del Journal of Symbolic Logic de la Association for Symbolic Logic.\u200b ","snippet":"Herbert Bruce Enderton (15 de abril de 1936 \u2013 20 de octubre de 2010\u200b)\u200b fue un matematico estadounidense. Fue Profesor Emerito de Matematicas en UCLA y miembro de la Facultad de Matematicas, Logica y M","enlaces_salientes":["Herbert_Enderton","Herbert_Enderton","Herbert_Enderton","Santa_M%C3%B3nica_(California)","Estados_Unidos","Enfermedad","Universidad_de_Harvard","Hilary_Putnam","Matem%C3%A1tico","Fil%C3%B3sofo","Profesor_de_educaci%C3%B3n_superior","L%C3%B3gica_matem%C3%A1tica","Teor%C3%ADa_de_conjuntos","Universidad_de_California_en_Los_%C3%81ngeles","Universidad_de_California_en_Berkeley","15_de_abril","1936","20_de_octubre","2010","Profesor_Em%C3%A9rito","Matem%C3%A1ticas","Universidad_de_California_en_Los_%C3%81ngeles","Universidad_de_California_en_Berkeley","Universidad_de_Harvard","American_Mathematical_Society","Teor%C3%ADa_de_la_computabilidad","Teor%C3%ADa_de_la_complejidad_computacional","Historia_de_la_l%C3%B3gica","Association_for_Symbolic_Logic","Academic_Press","ISBN","Academic_Press","ISBN","Academic_Press","ISBN","YouTube","Los_Angeles_Times","Notices_of_the_American_Mathematical_Society","American_Mathematical_Society","University_of_Calgary","Association_for_Symbolic_Logic","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Francia","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","Mathematics_Genealogy_Project"]}
{"url":"Si_y_s%C3%B3lo_si","titulo":"Bicondicional","contenido":"En algunos contextos en matematicas y logica, un bicondicional (equivalencia o doble implicacion, en ocasiones abreviado en espa\u00f1ol como si o solo si) es un operador logico binario, es decir, una funcion \u2194: B \u00d7 B \u2192 B , siendo B cualquier conjunto con | B | = 2 , aunque es comun que se considere a B como B = { V , F } } o B = { 0 , 1 } } . El bicondicional tambien se desempe\u00f1a como conectivo logico, permitiendo formular expresiones de la forma \u00abP si y solo si Q\u00bb, que es verdadera en el caso de que ambos componentes tengan el mismo valor de verdad. En otro contexto el bicondicional representa la equivalencia logica entre dos proposiciones.  El valor de verdad de un bicondicional \u00abp si y solo si q\u00bb es verdadero cuando ambas proposiciones (p y q) tienen el mismo valor de verdad, es decir, ambas son verdaderas o falsas simultaneamente; de lo contrario, es falso.  Se tiene asi que la afirmacion \u00abp si y solo si q\u00bb es logicamente equivalente al par de afirmaciones \u00abSi p, entonces q\u00bb, y \u00absi q, entonces p\u00bb. Escrito utilizando conectivas logicas\u00a0:   p \u2194 q \u2261 ( p \u2192 q ) \u2227 ( q \u2192 p ) .  De manera mas precisa, el operador bicondicional tiene la siguiente tabla de verdad:\u200b\u200b  Una forma de expresar el bicondicional es decir que Q es una condicion necesaria y suficiente para P. Tambien se conoce con el nombre de coimplicacion.\u200b  En espa\u00f1ol se usan las abreviaturas sii, ssi y syss, de modo que es equivalente p \u2194 q a \u201cp sii q\u201d. En ingles se abrevia iff (If and only if).  En Logica y en matematicas los simbolos empleados para denotar el bicondicional son \u2194 , \u27fa y \u2261. La notacion \u2194 se utiliza frecuentemente como un conectivo u operador logico, que permite combinar dos proposiciones mas simples para generar una proposicion compuesta de la forma P \u2194 Q , mientras que la segunda y tercera notacion se emplean casi siempre para denotar la relacion de equivalencia logica entre dos proposiciones logicas. El significado de cada notacion depende fuertemente del contexto en que se utilicen.\u200b\u200b  Adicionalmente, en el ambito de la logica digital, el funcionamiento del operador bicondicional puede emularse mediante la puerta logica XNOR, y a la negacion de la puerta XOR.  Es esencial distinguir entre las relaciones bicondicionales y las que son meramente condicionales.  Por ejemplo, notese la diferencia entre las dos proposiciones siguientes:  Una persona es mayor de edad si posee legalmente el carne de conductor. O bien,  Una persona es mayor de edad si y solo si posee legalmente el carne de conductor. La primera proposicion es correcta, puesto que es imposible poseer legalmente el carne de conducir siendo menor de edad. Por tanto, si se tiene el carne, se tiene que ser obligatoriamente mayor de edad.\u200b  La segunda es incorrecta, puesto que la relacion entre \"tener el carne de conducir\" y \"ser mayor de edad\" no es bicondicional. Dicho de otro modo: se puede ser mayor de edad sin tener el carne de conducir.\u200b ","snippet":"En algunos contextos en matematicas y logica, un bicondicional (equivalencia o doble implicacion, en ocasiones abreviado en espa\u00f1ol como si o solo si) es un operador logico binario, es decir, una func","enlaces_salientes":["Bicondicional","Bicondicional","Bicondicional","Diagrama_de_Venn","Conectiva_l%C3%B3gica","Tautolog%C3%ADa","Conjunci%C3%B3n_opuesta","Implicaci%C3%B3n_opuesta","Condicional_material","Disyunci%C3%B3n_l%C3%B3gica","Negaci%C3%B3n_l%C3%B3gica","Disyunci%C3%B3n_exclusiva","Afirmaci%C3%B3n_l%C3%B3gica","Disyunci%C3%B3n_opuesta","Adjunci%C3%B3n_l%C3%B3gica","Adjunci%C3%B3n_opuesta","Conjunci%C3%B3n_l%C3%B3gica","Contradicci%C3%B3n","Matem%C3%A1ticas","L%C3%B3gica","Valor_de_verdad","Equivalencia_l%C3%B3gica","Conectiva_l%C3%B3gica","Tabla_de_verdad","Idioma_espa%C3%B1ol","Idioma_ingl%C3%A9s","L%C3%B3gica","Matem%C3%A1ticas","Equivalencia_l%C3%B3gica","Puerta_l%C3%B3gica#Puerta_equivalencia_(XNOR)","Puerta_l%C3%B3gica#Puerta_OR-exclusiva_(XOR)","ISBN","Control_de_autoridades"]}
{"url":"Inyectiva","titulo":"Funcion inyectiva","contenido":"En matematicas, una funcion:  es inyectiva, uno a uno, si a elementos distintos del conjunto X (dominio) les corresponden elementos distintos en el conjunto Y (codominio) de f , es decir, cada elemento del conjunto Y tiene a lo sumo una preimagen en X , o, lo que es lo mismo, en el conjunto X no puede haber dos o mas elementos que tengan la misma imagen.  Por ejemplo, la funcion  no es inyectiva pues el valor 4 puede obtenerse como f ( 2 ) y f ( \u2212 2 ) pero si el dominio se restringe a los numeros reales positivos (obteniendo asi una nueva funcion g : R + \u2192 R + ^{+}\\to \\mathbb {R} ^{+}} ) entonces si se obtiene una funcion inyectiva.  Funcion inyectiva quiere decir, inyectada  Sea f una funcion cuyo dominio es el conjunto X , se dice que la funcion f es inyectiva si para todo a y b en X , si f ( a ) = f ( b ) entonces a = b , esto es f ( a ) = f ( b ) implica a = b . Equivalentemente, si a = b entonces f ( a ) = f ( b ) . Simbolicamente,  que es equivalente a su contrarreciproco  Para probar que una funcion no es inyectiva, basta con hallar dos valores distintos del dominio, cuyas imagenes en el codominio son iguales.  Si X y Y son subconjuntos de R } , geometricamente, una funcion f : X \u2192 Y es inyectiva si su grafica nunca es intersectada por una recta horizontal mas de una vez. Este principio es conocido como la prueba de la linea horizontal.\u200b  Dados dos conjuntos A y B , entre los cuales existe una funcion inyectiva f : A \u2192 B tienen cardinales que cumplen:   card ( A ) \u2264 card ( B ) }(A)\\leq }(B)}  Si ademas existe otra aplicacion inyectiva g : B \u2192 A , entonces puede probarse que existe una aplicacion biyectiva entre A y B.  Dada una funcion f : \u03a9 \u2282 R n \u2192 R n :\\Omega \\subset \\mathbb {R} ^{n}\\to \\mathbb {R} ^{n}} diferenciable con continuidad sobre un dominio del espacio euclideo n-dimensional, pueden establecerse condiciones necesarias y suficientes para decidir cuando esta funcion es inyectiva. El teorema de la funcion inversa da una condicion no suficiente para que una funcion diferenciable sea localmente inyectiva:   det D f = 0 \\neq 0}  donde:  Esta condicion no es condicion suficiente para garantizar la inyectividad de la funcion (de hecho tampoco es condicion necesaria). Para encontrar condiciones suficientes se define el vector desplazamiento asociado a la funcion como el siguiente campo vectorial:   u ( x ) = f ( x ) \u2212 x \u2208 R n (\\mathbf {x} )=\\mathbf {f} (\\mathbf {x} )-\\mathbf {x} \\in \\mathbb {R} ^{n}}  Esta funcion se interpreta como la diferencia entre la posicion inicial de un punto y la posicion final de su imagen. Puede demostrarse que existe una constante c ( \u03a9 ) si se cumple:   max x \u2208 \u03a9 \u00af \u2016 D u ( x ) \u2016 = sup x \u2208 \u03a9 \u2016 D u ( x ) \u2016 < c ( \u03a9 ) \u2264 1 \\in }}\\|D\\mathbf {u} (\\mathbf {x} )\\|=\\sup _ \\in \\Omega }\\|D\\mathbf {u} (\\mathbf {x} )\\|<c(\\Omega )\\leq 1}  Donde:  Entonces la funcion es [globalmente] inyectiva, puede demostrarse que c ( \u03a9 ) = 1 si el dominio \u03a9 es convexo, mientras que un dominio no convexo requiere c ( \u03a9 ) < 1 . ","snippet":"En matematicas, una funcion:  es inyectiva, uno a uno, si a elementos distintos del conjunto X (dominio) les corresponden elementos distintos en el conjunto Y (codominio) de f , es decir, cada element","enlaces_salientes":["Funci%C3%B3n_inyectiva","Funci%C3%B3n_inyectiva","Funci%C3%B3n_inyectiva","Funci%C3%B3n_sobreyectiva","Matem%C3%A1tica","Funci%C3%B3n_matem%C3%A1tica","Dominio_de_definici%C3%B3n","Codominio","Contrarrec%C3%ADproco","Mapa_de_inclusi%C3%B3n","Funci%C3%B3n_identidad","Funci%C3%B3n_biyectiva","Funci%C3%B3n_exponencial","Sobreyectiva","Logaritmo_natural","Prueba_de_la_l%C3%ADnea_horizontal","Funci%C3%B3n_biyectiva","Espacio_eucl%C3%ADdeo","Teorema_de_la_funci%C3%B3n_inversa","Localmente","Determinante_(matem%C3%A1tica)","Condici%C3%B3n_suficiente","Condici%C3%B3n_necesaria","Vector_desplazamiento","Clausura_topol%C3%B3gica","Conjunto_convexo","ISBN","Funci%C3%B3n_biyectiva","Funci%C3%B3n_sobreyectiva","Correspondencia_matem%C3%A1tica","Pugs","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Funci%C3%B3n_constante","titulo":"Funcion constante","contenido":"En matematica se llama funcion constante a aquella funcion matematica que toma el mismo valor para cualquier variable independiente. Se la representa de la forma:\u200b  Como se puede ver es una recta horizontal en el plano cartesiano, en la grafica la hemos representado en el plano, pero, como se puede ver la funcion no depende de x, si hacemos:  tenemos:  donde c tiene un valor constante, en la grafica tenemos representadas:  Como la variable dependiente y no depende de x tenemos que:  la variacion de y respecto a x es cero.  La integral de la funcion constante:  es:  Si un polinomio general, que tiene la forma:  una funcion constante cumple esta expresion con n= 0, es un polinomio de grado 0,  que es lo mismo que:  que corresponde al termino independiente del polinomio. ","snippet":"En matematica se llama funcion constante a aquella funcion matematica que toma el mismo valor para cualquier variable independiente. Se la representa de la forma:\u200b  Como se puede ver es una recta hori","enlaces_salientes":["Funci%C3%B3n_constante","Funci%C3%B3n_constante","Funci%C3%B3n_constante","Gr%C3%A1fica_de_una_funci%C3%B3n","Matem%C3%A1tica","Funci%C3%B3n_matem%C3%A1tica","Variable_independiente","L%C3%ADnea","Coordenadas_cartesianas","Derivada","Integral","Funci%C3%B3n_polin%C3%B3mica","Geometr%C3%ADa_anal%C3%ADtica","Pendiente_de_una_recta","Control_de_autoridades"]}
{"url":"Factor_primo","titulo":"Factor primo","contenido":"En teoria de numeros, los factores primos de un numero entero son los numeros primos divisores exactos de ese numero entero . El proceso de busqueda de esos divisores se denomina factorizacion de enteros, o factorizacion en numeros primos.  Para un factor primo es p de n, de la multiplicidad de p es el maximo exponente a para el cual pa es un divisor de n. La factorizacion de un numero entero es una lista de los factores primos de ese numero, junto con su multiplicidad. El Teorema fundamental de la Aritmetica establece que todo numero entero positivo tiene una factorizacion de primos unica.  Para un numero entero positivo n, el numero de factores primos de n y la suma de los factores primos de n sin contar su multiplicidad son ejemplos de funciones aritmeticas de n que son funciones aditivas pero no \u00abcompletamente aditivas\u00bb.  Las funciones \u03c9(n) y \u03a9(n) representan el numero de factores primos sin repeticion y con repeticion, por lo que \u03c9 ( n ) \u2264 \u03a9 ( n ) . Mas especificamente, la funcion \u03c9(n) representa el numero de factores primos  \u00abdistintos\u00bb de n, se define como:\u200b   \u03c9 ( n ) = # { p | n : n \u2208 N , p \u2208 P } ,\\,p\\in \\mathbb {P} \\}}  donde #{.} indica el cardinal del conjunto, en este caso la cantidad de factores primos distintos de n. La funcion \u03a9(n) representa el \u00abnumero total\u00bb de factores primos.   n = \u220f i = 1 \u03c9 ( n ) p i \u03b1 i \u21d2 \u03a9 ( n ) = \u2211 i = 1 \u03c9 ( n ) \u03b1 i ^p_{i}^}\\Rightarrow \\qquad \\Omega (n)=\\sum _{i=1}^\\alpha _{i}}  Por ejemplo, 24 = 2 3 \u22c5 3 1 \\cdot 3^{1}} , asi pues: \u03c9 ( 24 ) = 2 y \u03a9 ( 24 ) = 3 + 1 = 4 .  Determinar el numero de factores primos de un numero es un ejemplo de problema matematico frecuentemente empleado para asegurar la seguridad de los sistemas criptograficos: se cree que este problema requiere un tiempo superior al tiempo polinomico en el numero de digitos implicados; de hecho, es relativamente sencillo construir un problema que precisaria mas tiempo que la Edad del Universo si se intentase calcular con los ordenadores actuales utilizando algoritmos actuales.  Dos numeros enteros positivos son coprimos si y solo si no tienen factores primos en comun. El numero 1 es coprimo de todos los numeros enteros, incluso de si mismo. Esto se debe a que no tiene factores primos: es el producto vacio.  El Algoritmo de Euclides puede ser utilizado para determinar si dos numeros enteros son coprimos sin saber sus factores primos; el algoritmo funciona en un tiempo polinomial en el numero de digitos implicados. ","snippet":"En teoria de numeros, los factores primos de un numero entero son los numeros primos divisores exactos de ese numero entero . El proceso de busqueda de esos divisores se denomina factorizacion de ente","enlaces_salientes":["Factor_primo","Factor_primo","Factor_primo","Teor%C3%ADa_de_n%C3%BAmeros","N%C3%BAmero_entero","Divisibilidad","Factorizaci%C3%B3n_de_enteros","Multiplicidad","Teorema_fundamental_de_la_Aritm%C3%A9tica","Funci%C3%B3n_aritm%C3%A9tica","Funci%C3%B3n_aditiva","N%C3%BAmero_cardinal","OEIS","OEIS","Problema_matem%C3%A1tico","Criptograf%C3%ADa","Tiempo_polin%C3%B3mico","Edad_del_Universo","Ordenador","Algoritmo","Coprimos","Si_y_solo_si","Producto_vac%C3%ADo","Algoritmo_de_Euclides","Tiempo_polinomial","Divisibilidad","N%C3%BAmero_compuesto","Control_de_autoridades"]}
{"url":"Operaci%C3%B3n_unaria","titulo":"Operacion unaria","contenido":"Se define como operacion unaria aquella operacion matematica que solo necesita el operador y un unico operando (argumento) para que se pueda calcular un valor.  Por ejemplo, la funcion valor absoluto \u00ab| |\u00bb es un operador unario, porque solo necesita un argumento.  Tambien podemos ver que: dado un conjunto A, el complemento de un elemento a de A es otro elemento b de A, definiendo a b como el complemento de a:  Con lo que tenemos que el complemento es una operacion unaria interna, si a cada elemento a de A le corresponde un unico elemento b de A, siendo b el complemento de a.  Ejemplos importantes de funciones unarias serian las funciones trigonometricas y sus inversas, ya que solo necesitan de un argumento para poder ser calculadas.  El numero de argumentos de una funcion se denomina aridad. ","snippet":"Se define como operacion unaria aquella operacion matematica que solo necesita el operador y un unico operando (argumento) para que se pueda calcular un valor.  Por ejemplo, la funcion valor absoluto ","enlaces_salientes":["Operaci%C3%B3n_unaria","Operaci%C3%B3n_unaria","Operaci%C3%B3n_unaria","Operaci%C3%B3n_matem%C3%A1tica","Operador","Operando","Aridad","Operador","Operaci%C3%B3n_nularia","Operaci%C3%B3n_binaria","Operaci%C3%B3n_ternaria","MathWorld","Wolfram_Research","Control_de_autoridades"]}
{"url":"Adici%C3%B3n","titulo":"Adicion (matematica)","contenido":"La adicion o suma es la operacion matematica de composicion que consiste en combinar o a\u00f1adir dos numeros o mas para obtener una cantidad final o total. La suma tambien ilustra el proceso de juntar dos colecciones de objetos con el fin de obtener una sola coleccion. Por otro lado, la accion repetitiva de sumar uno, es la forma mas basica de contar.  En terminos mas formales, la suma es una operacion aritmetica definida sobre conjuntos de numeros (naturales, enteros, racionales, irracionales, reales y complejos), y tambien sobre estructuras asociadas a ellos, como espacios vectoriales con vectores cuyas componentes sean estos numeros o funciones que tengan su imagen en ellos. Tambien se suman matrices.  En el algebra moderna se utiliza el nombre suma y su simbolo \"+\" para representar la operacion formal de un anillo que dota al anillo de estructura de grupo abeliano, o la operacion de un modulo que dota al modulo de estructura de grupo abeliano. Tambien se utiliza a veces en teoria de grupos para representar la operacion que dota a un conjunto de estructura de grupo. En estos casos se trata de una denominacion puramente simbolica, sin que necesariamente coincida esta operacion con la suma habitual en numeros, funciones, vectores, etc.  El hombre neolitico ya hacia matematica elemental, por lo tanto sabia sumar; pero previamente capto la idea de restar, puesto que sus medios de subsistencia disminuian durante el a\u00f1o, y no le era tan facil de reponer.  Los egipcios llegaron a sumar lo que se llaman hoy, numeros naturales y los numeros fraccionarios. Los babilonios llegaron a sumar los cuadrados de los numeros naturales. Los chinos y los hindues sumaron numeros negativos. En el Renacimiento, con el auge de la banca y del comercio, se impuso la suma de decimales, catapultada por el uso del sistema de numeracion decimal. Ademas se popularizo la adicion de logaritmos vulgares, que reemplazaba eficazmente a la multiplicacion de numeros tanto en el comercio, finanzas, astronomia, navegacion, etc.\u200b  Con la forma de los diferentes tipos de numero, se habla de suma de numeros reales (o expresiones decimales) y la suma de numeros complejos, que no es sino la suma de pares ordenados de numeros reales. Pero si, con sus propias peculiaridades, tanto al generalizar para racionales y enteros. Ademas se suman con otros objetos, aun en el algebra de Boole se habla de suma boleana.\u200b  Elemento neutro: El elemento identidad aditivo de los numeros es el cero, denotado por  0;  porque todo numero sumado con el 0 da el mismo numero como total. Simbolicamente: a + 0 = 0 + a = a ; ejemplo: 0 + 3 = 3 [nota 1]\u200b[nota 2]\u200b Elemento opuesto: Si a \u2208 S existe \u2212 a \u2208 S tal que a + ( \u2212 a ) = 0 .  Ejemplo: 7 + ( \u2212 7 ) = 0  Si todos los terminos se escriben individualmente, se utiliza el simbolo \"+\" (leido mas). Con esto, la suma de los numeros 1, 2 y 4 es 1 + 2 + 4 = 7 .  Tambien se puede emplear el simbolo \"+\" cuando, a pesar de no escribirse individualmente los terminos, se indican los numeros omitidos mediante puntos suspensivos y es sencillo reconocer los numeros omitidos. Por ejemplo:  En sumas largas o infinitas se emplea un nuevo simbolo, llamado sumatorio, y se representa con la letra griega sigma mayuscula (\u03a3). Por ejemplo:  Esta es una suma de una sucesion, cuyo enesimo termino es la suma de los primeros n terminos de la serie infinita; es decir, se suman todos los elementos de un conjunto infinito; sin embargo, en realidad se calcula el limite de todos los elementos que se suman y se calcula el limite matematico.  El procedimiento paradigmatico para efectuar sumas de varios numeros, denominados \u00absumandos\u00bb, es el siguiente:  Los sumandos se colocan en filas sucesivas ordenando las cifras en columnas, empezando por la derecha con la cifra de las unidades (U), a la izquierda las decenas (D), la siguiente las centenas (C), la siguiente los millares (M), etc.  La suma de los numeros 750 + 1583 + 69 se ordenarian de la siguiente forma:   M C D U 7 5 0 1 5 8 3 + 6 9 \u27f5 1 \u2218 sumando \u27f5 2 \u2218 sumando \u27f5 3 \u2218 sumando {rrrrr}&M&C&D&U\\\\&&7&5&0\\\\&1&5&8&3\\\\+&&&6&9\\\\\\hline \\end{array}}{l}\\\\\\longleftarrow 1^\\;}\\\\\\longleftarrow 2^\\;}\\\\\\longleftarrow 3^\\;}\\\\\\end{array}}}  Se suman en primer lugar las cifras de la columna de las unidades segun las tablas elementales, colocando en el resultado la cifra de unidades que resulte; cuando estas unidades sean mas de 10 las decenas se acumulan como un sumando mas en la fila de acarreo.  En este caso 3 mas 9 son 12, el 2 del 12 se pone en la parte inferior y el 1 se pasa como acarreo en la columna siguiente.   1 M C D U 7 5 0 1 5 8 3 + 6 9 2 \u27f5 acarreo \u27f5 1 \u2218 sumando \u27f5 2 \u2218 sumando \u27f5 3 \u2218 sumando {rrrrr}&&&1&\\\\&M&C&D&U\\\\&&7&5&0\\\\&1&5&8&3\\\\+&&&6&9\\\\\\hline &&&&2\\\\\\end{array}}{l}\\longleftarrow }}\\\\\\\\\\longleftarrow 1^\\;}\\\\\\longleftarrow 2^\\;}\\\\\\longleftarrow 3^\\;}\\\\\\\\\\end{array}}}  En la columna de las decenas, procediendo entonces a la suma de esa columna como si fueran unidades.  Sumamos el 1 del acarreo mas 5, 8 y 6 que dan un total de 20, el 0 de 20 se pone en la parte inferior como resultado y el 2 se pasa como acarreo a la columna siguiente.   2 1 M C D U 7 5 0 1 5 8 3 + 6 9 0 2 \u27f5 acarreo \u27f5 1 \u2218 sumando \u27f5 2 \u2218 sumando \u27f5 3 \u2218 sumando {rrrrr}&&2&1&\\\\&M&C&D&U\\\\&&7&5&0\\\\&1&5&8&3\\\\+&&&6&9\\\\\\hline &&&0&2\\\\\\end{array}}{l}\\longleftarrow }}\\\\\\\\\\longleftarrow 1^\\;}\\\\\\longleftarrow 2^\\;}\\\\\\longleftarrow 3^\\;}\\\\\\\\\\end{array}}}  Se procede de igual forma con la columna de las decenas, acarreo incluido, colocando en la fila de acarreo sobre la columna de las centenas las decenas (de unidades de decenas).  En la columna de las centenas tenemos, el 2 de acarreo, el 7 y el 5 que sumados dan 14, el 4 del 14 se pone en la parte inferior y el 1 se pasa a la siguiente columna como acarreo.   1 2 1 M C D U 7 5 0 1 5 8 3 + 6 9 4 0 2 \u27f5 acarreo \u27f5 1 \u2218 sumando \u27f5 2 \u2218 sumando \u27f5 3 \u2218 sumando {rrrrr}&1&2&1&\\\\&M&C&D&U\\\\&&7&5&0\\\\&1&5&8&3\\\\+&&&6&9\\\\\\hline &&4&0&2\\\\\\end{array}}{l}\\longleftarrow }}\\\\\\\\\\longleftarrow 1^\\;}\\\\\\longleftarrow 2^\\;}\\\\\\longleftarrow 3^\\;}\\\\\\\\\\end{array}}}  Se procede de igual forma con todas las columnas, a\u00f1adiendo a la columna ultima de la izquierda las decenas de la columna anterior en vez de subir a la fila de acarreo.  En la columna de los millares tenemos 1 de acarreo mas el 1 de sumando que sumados dan 2, que se pone en la parte inferior como resultado, al no haber mas sumandos damos por finalizada la operacion.   1 2 1 M C D U 7 5 0 1 5 8 3 + 6 9 2 4 0 2 \u27f5 acarreo \u27f5 1 \u2218 sumando \u27f5 2 \u2218 sumando \u27f5 3 \u2218 sumando \u27f5 total {rrrrr}&1&2&1&\\\\&M&C&D&U\\\\&&7&5&0\\\\&1&5&8&3\\\\+&&&6&9\\\\\\hline &2&4&0&2\\\\\\end{array}}{l}\\longleftarrow }}\\\\\\\\\\longleftarrow 1^\\;}\\\\\\longleftarrow 2^\\;}\\\\\\longleftarrow 3^\\;}\\\\\\longleftarrow }\\\\\\end{array}}}  Normalmente los acarreos o llevadas no se anotan en el papel, sumando directamente el acarreo a los sumandos de la columna siguiente y el aspecto de la realizacion de la suma sin las anotaciones auxiliares seria el siguiente:   7 5 0 1 5 8 3 + 6 9 2 4 0 2 {rrrrr}&&7&5&0\\\\&1&5&8&3\\\\+&&&6&9\\\\\\hline &2&4&0&2\\\\\\end{array}}}  Segun la axiomatica de Peano la adicion en el conjunto de los n numeros naturales se definen por estas dos condiciones: ","snippet":"La adicion o suma es la operacion matematica de composicion que consiste en combinar o a\u00f1adir dos numeros o mas para obtener una cantidad final o total. La suma tambien ilustra el proceso de juntar do","enlaces_salientes":["Adici%C3%B3n_(matem%C3%A1tica)","Adici%C3%B3n_(matem%C3%A1tica)","Adici%C3%B3n_(matem%C3%A1tica)","Reacci%C3%B3n_de_adici%C3%B3n","Suma_(desambiguaci%C3%B3n)","Operaci%C3%B3n_matem%C3%A1tica","Uno","Aritm%C3%A9tica","N%C3%BAmeros_naturales","N%C3%BAmeros_enteros","N%C3%BAmeros_racionales","N%C3%BAmeros_reales","N%C3%BAmeros_complejos","Espacio_vectorial","Funci%C3%B3n_matem%C3%A1tica","Conjunto_imagen","%C3%81lgebra_abstracta","Operaci%C3%B3n_matem%C3%A1tica","Anillo_(matem%C3%A1tica)","Grupo_abeliano","M%C3%B3dulo_(matem%C3%A1tica)","Grupo_abeliano","Teor%C3%ADa_de_grupos","Grupo_(matem%C3%A1tica)","Neol%C3%ADtico","Resta","Fracci%C3%B3n","N%C3%BAmeros_negativos","N%C3%BAmero_decimal","Numeraci%C3%B3n_decimal","Logaritmo","%C3%81lgebra_de_Boole","Propiedad_de_cerradura","Propiedad_conmutativa","Propiedad_asociativa","Propiedad_distributiva","Cancelativo","Elemento_neutro","Elemento_opuesto","Sumatorio","Potencia_de_dos","Sumatoria","Sigma","N%C3%BAmero_racional","Suma","Serie_matem%C3%A1tica","Conjunto","L%C3%ADmite_matem%C3%A1tico","Acarreo","Axiomas_de_peano","N%C3%BAmero_natural","Valor_absoluto","Denominador","N%C3%BAmero_racional","Sumatorio","Suma_vectorial","Acarreo","Funci%C3%B3n_aditiva","Principio_de_la_suma","Multiplicaci%C3%B3n","Divisi%C3%B3n_(matem%C3%A1tica)","Resta","Wikcionario","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Lenguaje_recursivo","titulo":"Lenguaje recursivo","contenido":"En matematicas, logica y ciencias de la computacion, un lenguaje formal (un conjunto de secuencias finitas de simbolos tomados de un alfabeto fijo) es llamado lenguaje recursivo si es un subconjunto recursivo del conjunto de todas las secuencias finitas posibles sobre el alfabeto del lenguaje. Es decir, un lenguaje formal es recursivo si existe una maquina de Turing que siempre se detiene cuando dada una secuencia finita de simbolos del alfabeto del lenguaje \u2014llamada cadena de caracteres o palabra\u2014 como entrada, acepta solo esas palabras que son parte del lenguaje y rechaza todas las otras palabras. Los lenguajes recursivos tambien se denominan lenguajes decidibles.  El concepto de decidibilidad puede ser extendido a otros modelos de computacion. Por ejemplo, se puede hablar de lenguajes decidibles en una maquina de Turing no determinista. Por lo tanto, cuando hay ambiguedad, el sinonimo usado para \"lenguaje recursivo\" es lenguaje Turing-decidible, en vez de simplemente \"lenguaje decidible\".  La clase de todos los lenguajes recursivos es a menudo llamada R, aunque este nombre tambien es usado para la clase RP.  Este tipo de lenguaje no estaba definido en la jerarquia de Chomsky. Todos los lenguajes recursivos son tambien recursivamente enumerables. Todos los lenguajes regulares, libres de contexto y sensibles al contexto son lenguajes recursivos.  Los lenguajes recursivos son cerrados bajo las siguientes operaciones. Sean L y P lenguajes recursivos, entonces los siguientes lenguajes son recursivos:  La ultima propiedad viene del hecho que el conjunto diferencia puede ser expresado con intersecciones y complementos. ","snippet":"En matematicas, logica y ciencias de la computacion, un lenguaje formal (un conjunto de secuencias finitas de simbolos tomados de un alfabeto fijo) es llamado lenguaje recursivo si es un subconjunto r","enlaces_salientes":["Lenguaje_recursivo","Lenguaje_recursivo","Lenguaje_recursivo","Matem%C3%A1ticas","L%C3%B3gica","Ciencias_de_la_computaci%C3%B3n","Lenguaje_formal","Alfabeto_(matem%C3%A1ticas)","Conjunto_recursivo","M%C3%A1quina_de_Turing","Cadena_de_caracteres","Decidibilidad","Modelo_de_computaci%C3%B3n","Jerarqu%C3%ADa_de_Chomsky","Lenguaje_recursivamente_enumerable","Lenguaje_regular","Lenguaje_sensible_al_contexto","ISBN","Digital_object_identifier","Decidibilidad","Lenguaje_recursivamente_enumerable","Recursi%C3%B3n","Control_de_autoridades"]}
{"url":"Crash_(inform%C3%A1tica)","titulo":"Crash (informatica)","contenido":"En informatica, un crash es la condicion en la cual una aplicacion informatica, ya sea un programa o parte o la totalidad del sistema operativo dejan de funcionar de la forma inesperada y dejan de responder a otras partes del sistema. A veces el programa simplemente aparece como \"congelado\", esto es: no responde a ninguna accion del usuario o del entorno operativo. Si el programa que falla es una parte critica del nucleo del sistema operativo, el equipo completo puede dejar de responder (crash de sistema). En lenguaje coloquial, se dice de una aplicacion que lo padece, que se \"congelo\", \"colgo\", \"tildo\" o \"pasmo\".  Muchos crashes son resultado de una sola instruccion ejecutada por el equipo de computo, pero las causas pueden ser multiples. Algunas causas tipicas son:  Del ingles crash, choque. En el articulo correspondiente en ingles se cita al choque de los cabezales de lectura y escritura de un disco duro (o head crash) como origen de su uso en informatica.  Un crash de aplicacion sucede cuando un programa ejecuta una operacion que no esta permitida por el sistema operativo. Algunos crashes tipicos son:  Cuando la aplicacion que falla es un servidor, los programas cliente tambien pueden fallar.  Un crash de sistema operativo sucede cuando se presenta una excepcion de hardware que no puede ser manejada por el sistema quedando este o el hardware en un estado inestable. Adicionalmente un crash de sistema operativo puede suceder cuando el mismo sistema operativo detecta que hay inconsistencias en el mismo dandose de baja y apagando el equipo para no causar da\u00f1os mayores; en versiones tempranas de algunos sistemas operativos, los crashes de sistemas operativos podian dar lugar a da\u00f1o fisico del equipo. ","snippet":"En informatica, un crash es la condicion en la cual una aplicacion informatica, ya sea un programa o parte o la totalidad del sistema operativo dejan de funcionar de la forma inesperada y dejan de res","enlaces_salientes":["Crash_(inform%C3%A1tica)","Crash_(inform%C3%A1tica)","Crash_(inform%C3%A1tica)","Aplicaci%C3%B3n_inform%C3%A1tica","N%C3%BAcleo_(inform%C3%A1tica)","Sistema_operativo","Instrucci%C3%B3n_(inform%C3%A1tica)","Bucle_infinito","Condici%C3%B3n_de_carrera","Disco_duro","Bucle_infinito","Hardware","Pantalla_azul_de_la_muerte","Kernel_panic","Error_de_software","Depurador","Modo_a_prueba_de_fallos","Control_de_autoridades"]}
{"url":"Correctitud","titulo":"Correctitud","contenido":"En teoria de la computacion, la correccion de un algoritmo, tambien llamada correctitud (como adaptacion de la palabra inglesa correctness), corresponde a una propiedad que distingue a un algoritmo de un procedimiento efectivo.  Un algoritmo es correcto si:  Si cualquiera de estos tres puntos no se cumple, entonces estamos hablando de un algoritmo incorrecto, que para efectos practicos, carece de utilidad, al no ser mas que un procedimiento efectivo, es decir, una secuencia ordenada y determinista de pasos. ","snippet":"En teoria de la computacion, la correccion de un algoritmo, tambien llamada correctitud (como adaptacion de la palabra inglesa correctness), corresponde a una propiedad que distingue a un algoritmo de","enlaces_salientes":["Correctitud","Correctitud","Correctitud","Teor%C3%ADa_de_la_computaci%C3%B3n","Algoritmo","Procedimiento_efectivo","Tiempo_de_ejecuci%C3%B3n","Finito","Determinismo","Control_de_autoridades"]}
{"url":"Heur%C3%ADstica","titulo":"Heuristica","contenido":"La heuristica (del griego \u03b5\u03c5\u03c1\u03c3\u03ba\u03b5\u03bd),\u200b que significa \u00abhallar, inventar\u00bb (el preterito perfecto de este verbo es eureka),\u200b aparece en mas de una categoria gramatical. Cuando se usa como sustantivo, se refiere a la disciplina, el arte o la ciencia del descubrimiento. Cuando aparece como adjetivo, se refiere a cosas mas concretas, como estrategias, reglas, silogismos y conclusiones. No se debe confundir con la eristica, que es en cierto modo lo opuesto a ella.  Estos dos usos estan intimamente relacionados, ya que la heuristica usualmente propone estrategias que guian el descubrimiento. El termino fue utilizado por Albert Einstein en la publicacion sobre efecto fotoelectrico (1905), con el cual obtuvo el premio Nobel en Fisica en el a\u00f1o 1921 y cuyo titulo traducido al idioma espa\u00f1ol es: \u201cSobre un punto de vista heuristico concerniente a la produccion y transformacion de la luz\u201d (Uber einen die Erzeugung und Verwandlung des Lichtes betreffenden heuristischen Gesichtspunkt).  Actualmente se han hecho adaptaciones al termino en diferentes areas, asi definen la heuristica como un arte, tecnica o procedimiento practico o informal, para resolver problemas.\u200b Alternativamente, Imre Lakatos lo define como un conjunto de reglas metodologicas no necesariamente forzosas, positivas y negativas, que sugieren o establecen como proceder y que problemas evitar a la hora de generar soluciones y elaborar hipotesis.\u200b  En general, se considera que la capacidad heuristica es un rasgo caracteristico de los humanos\u200b desde cuyo punto de vista puede describirse como el arte y la ciencia del descubrimiento y de la invencion o de resolver problemas mediante la creatividad y el pensamiento lateral o pensamiento divergente.  Segun el matematico George Polya\u200b la base de la heuristica esta en la experiencia de resolver problemas y en ver como otros lo hacen. Consecuentemente se dice que hay busquedas ciegas, busquedas heuristicas (basadas en la experiencia) y busquedas racionales.  La popularizacion del concepto se debe a George Polya, con su libro Como resolverlo (How to solve it). Habiendo estudiado tantas demostraciones matematicas desde su juventud, queria saber como los matematicos llegan a ellas. El libro contiene la clase de recetas heuristicas que trataba de ense\u00f1ar a sus alumnos de matematicas. Cuatro ejemplos extraidos de el ilustran el concepto mejor que ninguna definicion:  En la matematica, la heuristica existe desde la Grecia antigua. Sin embargo, la formalizacion y el alto grado de rigor en matematica le ha restado importancia al estudio del descubrimiento, considerandolo mas bien de interes para la psicologia. Aunque existe el campo de la teoria de la demostracion, este nada tiene que ver con encontrar patrones de demostracion o reglas para encontrar las demostraciones de los teoremas.   La palabra heurus proviene del griego erus. Hay trabajos de Poincare, Hadamard y Polya sobre la creacion en matematica. Al respecto el libro \"Razonamiento plausible\" de George Polya, describe las posibilidades de creacion en la diversas ramas de la matematica y trabajos concretos de algunos matematicos. En psicologia la heuristica se relaciona con la creatividad y se ha propuesto que sea \u00abaquella regla sencilla y eficiente para orientar la toma de decisiones y para explicar en un plano practico como las personas llegan a un juicio o solucionan un problema\u00bb. Usualmente una heuristica opera cuando un problema es complejo o el problema trae informacion incompleta. En general, una heuristica puede considerarse como un atajo a los procesos mentales activos y, por lo tanto, es una medida que ahorra o reserva recursos mentales. Las heuristicas funcionan efectivamente en la mayoria de las circunstancias, sin embargo, tambien pueden conducir a errores sistematicos en la toma de decisiones o el desarrollo de juicios. La ideacion de soluciones heuristicas frecuentemente arranca de un razonamiento por analogia.  Un ejemplo de un atajo mental es el uso de un estereotipo. Cuando se juzga a un individuo basandose en la descripcion estereotipica de un grupo al cual pertenece, el uso del estereotipo puede resultar en un error, (juicio por preestablecido) ya que el individuo puede ser poco representativo del estereotipo. Sin embargo la heuristica, aunque imperfecta, puede seguir siendo valida si el estereotipo es estadisticamente lo bastante correcto (no hay estadisticas de estereotipos disponibles). Asi, los posibles errores puntuales quedan sobradamente compensados por los mas frecuentes aciertos (mas aciertos que errores). Estos son obtenidos, ademas, mediante una regla relativamente sencilla (no hay que basarse en razonamientos o conocimientos solidos) que ahorra recursos mentales y acelera de forma significativa la toma de decisiones, lo que en ciertas situaciones puede resultar critico (por ejemplo cuando la integridad fisica, mental o economica del individuo esta en juego).  En ingenieria, una heuristica es un metodo basado en la experiencia que puede utilizarse como ayuda para resolver problemas de dise\u00f1o, desde calcular los recursos necesarios hasta en planear las condiciones de operacion de los sistemas. Mediante el uso de heuristicas, es posible resolver mas rapidamente problemas conocidos o similares a otros conocidos. Existen varios metodos heuristicos disponibles para los ingenieros como, por ejemplo, el Analisis modal de fallos y efectos y los arboles de fallo. En el primero se depende de un grupo de ingenieros experimentados que evaluan los problemas y fallos, los ordenan segun su importancia y recomiendan soluciones.  Otros, como los metodos de ingenieria forense, son una amplia fuente de informacion para la investigacion de problemas y responsables, y se basan en la heuristica del eslabon mas debil y en la eliminacion de causas improbables. El conocimiento de que causas son probables y cuales no, forma una heuristica aprendida por la profesion durante muchos a\u00f1os, mas que un conocimiento cientifico aplicado.  Dado que las heuristicas pueden equivocarse, es fundamental conocer los casos en los que son aplicables y los limites a su uso. En general, en la ingenieria deben considerarse como ayudas o apoyos para hacer estimaciones rapidas y dise\u00f1os preliminares, pero no como justificaciones finales de un dise\u00f1o o proyecto u otros.  Como metodologia cientifica, la heuristica es aplicable a cualquier ciencia e incluye la elaboracion de medios auxiliares, principios, reglas, estrategias y programas que faciliten la busqueda de vias de solucion a problemas; o sea, para resolver tareas de cualquier tipo para las que no se cuente con un procedimiento algoritmico de solucion. Segun Horst Muler: \u00abLos procedimientos heuristicos son formas de trabajo y de pensamiento que apoyan la realizacion consciente de actividades mentales exigentes\u00bb. Los procedimientos heuristicos como metodo cientifico pueden dividirse en principios, reglas y estrategias.   ","snippet":"La heuristica (del griego \u03b5\u03c5\u03c1\u03c3\u03ba\u03b5\u03bd),\u200b que significa \u00abhallar, inventar\u00bb (el preterito perfecto de este verbo es eureka),\u200b aparece en mas de una categoria gramatical. Cuando se usa como sustantivo, se re","enlaces_salientes":["Heur%C3%ADstica","Heur%C3%ADstica","Heur%C3%ADstica","Heur%C3%ADstica_(desambiguaci%C3%B3n)","Idioma_griego_antiguo","%C2%A1Eureka!","Categor%C3%ADa_gramatical","Sustantivo","Disciplina_acad%C3%A9mica","Adjetivo","Estrategia","Er%C3%ADstica","Descubrimiento","Albert_Einstein","Efecto_fotoel%C3%A9ctrico","Luz","Arte","T%C3%A9cnica","Sistema_formal","Imre_Lakatos","Metodol%C3%B3gicas","M%C3%A9todo_hipot%C3%A9tico-deductivo","Creatividad","Pensamiento_lateral","Pensamiento_divergente","George_P%C3%B3lya","George_P%C3%B3lya","C%C3%B3mo_resolverlo","Matem%C3%A1tica","Grecia_antigua","Psicolog%C3%ADa","Teor%C3%ADa_de_la_demostraci%C3%B3n","Teorema","Poincar%C3%A9","Hadamard","Heur%C3%ADstica_en_antivirus","Psicolog%C3%ADa","Creatividad","Estereotipo","An%C3%A1lisis_modal_de_fallos_y_efectos","Metodolog%C3%ADa_cient%C3%ADfica","Ciencia","Algoritmo","M%C3%A9todo_cient%C3%ADfico","Analog%C3%ADa","Modelo_cient%C3%ADfico","Hip%C3%B3tesis_(m%C3%A9todo_cient%C3%ADfico)","Ensayo_y_error","Gr%C3%A1fica","M%C3%A9todo_hipot%C3%A9tico-deductivo","Ciencia","Sartre","Sesgo_cognitivo","Analog%C3%ADa","M%C3%A9todo_cient%C3%ADfico","Metaheur%C3%ADstica","Holismo","Estoc%C3%A1stico","Cuasi-empirismo_matem%C3%A1tico","Wayback_Machine","Wayback_Machine","Imre_Lakatos","C%C3%B3mo_resolverlo","Mauricio_Beuchot","ISBN","ISBN","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Medical_Subject_Headings"]}
{"url":"Diagonalizaci%C3%B3n_de_Cantor","titulo":"Argumento de la diagonal de Cantor","contenido":"El argumento de la diagonal de Cantor, tambien conocido como metodo de la diagonal, es una argumentacion o demostracion matematica vislumbrada por Georg Cantor hacia 1891 para demostrar que el conjunto de los numeros reales no es numerable.  Esta demostracion de la imposibilidad de contar o enumerar los numeros reales no fue la primera, pero si la mas sencilla y elegante. Posteriormente, esta demostracion inspiro otras demostraciones, conocidas como argumento diagonal por la analogia con esta demostracion.  La prueba original de Cantor demuestra que el intervalo [0,1] no es numerable, es decir, no podemos enumerar la lista de todos los reales dentro del intervalo (siempre habra mas). Se extiende a todos los reales, ya que es posible equipotenciar estos al intervalo. Podemos demostrar que lo que es valido para el intervalo  [0,1] lo es para cualquier otro, por grande que sea (exceptuando el intervalo [0,0] que tiene un solo valor el cero).  La demostracion es por reduccion al absurdo:  La secuencia podria tener un aspecto similar a:  Dada la primera premisa dicha lista contiene todos los numeros reales entre 0 y 1. Con esto, se puede construir un numero x que deberia estar en la lista. Para eso usamos los numeros de la diagonal.  Entonces x= 0.6251346....  El numero x es claramente un real. Pero... \u00bfDonde esta x?  Para extender este resultado al campo R } tenemos que establecer una relacion biyectiva entre este intervallo y los reales. Esto es posible gracias a una funcion como esta:  Con esto podemos decir que hay tantos numeros reales como reales hay entre 0 y 1.  El argumento de la diagonal de Cantor esta intimamente ligado al Teorema de Cantor. La relacion entre ambos puede entenderse en terminos de la numerabilidad de un conjunto. Un conjunto se dice numerable o contable si existe una relacion biyectiva entre los elementos del conjunto y los numeros enteros positivos; esto es, si es posible organizar a los elementos del conjunto de tal manera que todos los elementos del conjunto aparecen antes o despues, incluso repetidas veces, en la lista. En tal caso, los elementos del conjunto pueden ser asignados un 'marcador' o 'indice', que seria el correspondiente numero entero positivo (esto es, al primer elemento de la lista le seria asignada la etiqueta 1; al segundo, 2; etc.). Como quiera que esto es posible en tanto en cuanto el conjunto sea numerable, operar con los elementos del conjunto, o con sus etiquetas es equivalente.  El argumento de la diagonal de Cantor establece que  El conjunto de todos los conjuntos de numeros enteros positivos no es numerable.  Sea P el conjunto de todos los conjuntos de numeros enteros positivos. Sea L una lista infinita cualquiera de conjuntos de enteros positivos:  donde S 1 , S 2 , S 3 , \u2026 ,S_{2},S_{3},\\ldots } son conjuntos cualesquiera de enteros positivos. Si el conjunto P fuera numerable, entonces seria posible definir una lista L tal que incluya a todos los conjuntos de numeros enteros positivos. Sin embargo, el argumento de diagonalizacion demuestra que esto no es posible.  Sea d \u00af ( L ) }(L)} un conjunto de numeros enteros positivos definido como sigue:  donde Z + ^{+}} es el conjunto de numeros enteros positivos. Esto indica que d \u00af ( L ) }(L)} esta formado por todos aquellos enteros positivos n tales que al mismo tiempo no formen parte del conjunto S n } de la lista L. Por tanto, la composicion de d \u00af ( L ) }(L)} depende de la composicion de la lista L. Es facil ver que d \u00af ( L ) }(L)} existe: supongase por ejemplo que S 8 } es el conjunto de todos los numeros positivos impares. Entonces, n = 8 no pertenece a S 8 } , y por tanto pertenece a d \u00af ( L ) }(L)} .  Si P fuera enumerable, entonces deberia existir una lista L tal que d \u00af ( L ) }(L)} formara parte de ella como elemento m \u2208 Z + ^{+}} . En cuyo caso, se seguiria que  Esto implica una contradiccion, pues cuando n = m , ocurre que m \u2208 d \u00af ( L ) \u27fa m \u2208 S m = d \u00af ( L ) }(L)\\iff m\\notin S_{m}=}(L)} , esto es, m deberia formar y no formar parte de d \u00af ( L ) }(L)} al mismo tiempo.  Por tanto, no es posible construir una lista L tal que contenga al menos una vez a todos los elementos del conjunto de todos los conjuntos de numeros enteros positivos. O, dicho de otro modo, el conjunto P de todos los conjuntos de enteros positivos no es numerable.   ","snippet":"El argumento de la diagonal de Cantor, tambien conocido como metodo de la diagonal, es una argumentacion o demostracion matematica vislumbrada por Georg Cantor hacia 1891 para demostrar que el conjunt","enlaces_salientes":["Argumento_de_la_diagonal_de_Cantor","Argumento_de_la_diagonal_de_Cantor","Argumento_de_la_diagonal_de_Cantor","Conjunto_no_numerable","Demostraci%C3%B3n_en_matem%C3%A1tica","Georg_Cantor","N%C3%BAmeros_reales","Conjunto_numerable","Intervalo_unitario","Reducci%C3%B3n_al_absurdo","Biyecci%C3%B3n","Teorema_de_Cantor","Conjunto_numerable","N%C3%BAmero_entero","Conjunto_numerable","N%C3%BAmero_positivo","Cambridge_University_Press","Control_de_autoridades"]}
{"url":"B%C3%BAsqueda_lineal","titulo":"Busqueda lineal","contenido":"En informatica, la busqueda lineal o la busqueda secuencial es un metodo para encontrar un valor objetivo dentro de una lista. Esta comprueba secuencialmente cada elemento de la lista para el valor objetivo hasta que es encontrado o hasta que todos los elementos hayan sido comparados.  Busqueda lineal es en tiempo el\u00a0peor, y marca como maximo n comparaciones, donde n es la longitud de la lista. Si la probabilidad de cada elemento para ser buscado es el mismo, entonces la busqueda lineal tiene una media de n/2 comparaciones, pero esta media puede ser afectado si las probabilidades de busqueda para cada elemento varian. La busqueda lineal es poco practica porque otros algoritmos de busqueda y esquemas, como el algoritmo de busqueda binaria y Tabla hash, es significativamente mas rapido buscando todo menos listas cortas.  Busqueda lineal comprueba secuencialmente cada elemento de la lista hasta que  encuentra un elemento que coincide con el valor de objetivo. Si el algoritmo llega al fin de la lista sin encontrar el objetivo, la busqueda termina insatisfactoriamente.  Dado una lista\u00a0L\u00a0de n elementos\u00a0con valores o registros L0 ... Ln\u22121 y valor de objetivo T, la subrutina siguiente utiliza busqueda lineal para encontrar el indice del objetivo T en L.  El algoritmo anterior, realiza dos comparaciones por iteracion: uno para comprobar si Li es igual a t, y el otro para comprobar si i apunta a un indice valido de la lista. A\u00f1adiendo un valor extra Ln a la lista (un valor centinela) que es igual al objetivo, la segunda comparacion puede ser eliminada hasta el fin de la busqueda, haciendo el algoritmo mas rapido. La busqueda encontrara el centinela si el objetivo no esta contenido dentro de la lista.  Si la lista esta ordenada tal que\u00a0L0 \u2264 L1 ... \u2264 Ln\u22121\u00a0, la busqueda puede establecer la ausencia del objetivo mas deprisa al concluir la busqueda una vez que Li supera el objetivo. Esta variacion requiere un centinela cuyo valor es mas grande que el objetivo.  Para una lista con n elementos, el mejor caso es cuando el valor es igual al primer elemento de la lista, en este caso solo se necesita una comparacion. El peor caso es cuando\u00a0el valor no es en la lista (u ocurre solo una vez, al final de la lista), en este caso se necesitan n comparaciones.  Si el valor que se esta buscando se presenta\u00a0k\u00a0veces en la lista, y todos los elementos de la lista es igualmente probables, el numero esperado de comparaciones es  Por ejemplo, si el valor que se esta buscado ocurre una vez en la lista, y todo elemento de la lista es igualmente probable, el numero esperado de comparaciones es n + 1 2 {2}}} Aun asi, si  es sabido que  ocurre una vez, entonces como maximo n - 1 comparaciones son necesitadas, y el numero esperado de comparaciones es  (Por ejemplo, para n = 2 esto es 1, correspondiendo a un solo si-entonces-mas construir).  Cualquier manera, el costo del peor caso y el costo esperado de busqueda lineal son ambos O(n).  El rendimiento de busqueda lineal mejora si el valor deseado es tiene mayor probabilidad de ser encontrado el principio de la lista que a su fin.  Por tanto, si algunos valores son mucho mas probables para ser buscados que otros,   es mejor colocarlos al principio de la lista.  En particular, cuando los elementos de lista estan arreglados por orden de probabilidad decreciente, y estas probabilidades estan geometricamente distribuidas, el coste de busqueda lineal es unico O(1).  Si el tama\u00f1o n de lista es bastante grande, la busqueda lineal sera mas rapida que busqueda binaria, cuyo coste es O(log n).  La busqueda lineal es normalmente muy sencilla de implementar, y es practico cuando la lista posee solo unos cuantos elementos, o cuando realiza una sola busqueda en una lista desordenada.  Cuando muchos valores tienen que ser buscados en la misma lista, a menudo se pre-procesa la lista para utilizar un metodo mas rapido. Por ejemplo, uno puede ordenar la lista y utilizar busqueda binaria, o construir una estructura de datos de busqueda eficaz de el. El contenido de la lista deberia cambiar frecuentemente, repetir la reorganizacion puede ser mas problematico de lo que vale.  Como resultado, incluso si en teoria otros algoritmos de busqueda pueden ser mas rapidos que la busqueda lineal (por ejemplo busqueda binaria), en la practica, (los arreglos de tama\u00f1o medio, alrededor 100 elementos o menos) pueda ser no factible utilizar cualquier otro metodo. En arreglos mas grandes, solo tiene sentido para utilizar otros metodos de busqueda mas rapidos si los datos son bastante grandes, porque el tiempo inicial para preparar (ordenar) los datos es comparable a muchas busquedas lineales ","snippet":"En informatica, la busqueda lineal o la busqueda secuencial es un metodo para encontrar un valor objetivo dentro de una lista. Esta comprueba secuencialmente cada elemento de la lista para el valor ob","enlaces_salientes":["B%C3%BAsqueda_lineal","B%C3%BAsqueda_lineal","B%C3%BAsqueda_lineal","Enrique_Iglesias","Ciencias_de_la_computaci%C3%B3n","Lista_(tipo_de_dato_abstracto)","B%C3%BAsqueda_binaria","Tabla_hash","Subrutina","Iteraci%C3%B3n","Distribuci%C3%B3n_geom%C3%A9trica","B%C3%BAsqueda_binaria","Algoritmo_de_b%C3%BAsqueda","B%C3%BAsqueda_binaria","B%C3%BAsqueda_ternaria","Tabla_hash","ISBN","Control_de_autoridades"]}
{"url":"B%C3%BAsqueda_binaria","titulo":"Busqueda binaria","contenido":"En ciencias de la computacion y matematicas, la busqueda binaria, tambien conocida, como busqueda de intervalo medio\u200b o busqueda logaritmica,\u200b es un algoritmo de busqueda que encuentra la posicion de un valor en un array ordenado.\u200b\u200b Compara el valor con el elemento en el medio del array, si no son iguales, la mitad en la cual el valor no puede estar es eliminada y la busqueda continua en la mitad restante hasta que el valor se encuentre.  La busqueda binaria es computada en el peor de los casos en un tiempo logaritmico, realizando O ( log \u2061 n ) \\log n} comparaciones, donde n es el numero de elementos del arreglo y log es el logaritmo. La busqueda binaria requiere solamente O(1) en espacio, es decir, que el espacio requerido por el algoritmo es el mismo para cualquier cantidad de elementos en el array.\u200b Aunque estructuras de datos especializadas en la busqueda rapidas como las tablas hash pueden ser mas eficientes, la busqueda binaria se aplica a un amplio rango de problemas de busqueda.  Aunque la idea es simple, implementar la busqueda binaria correctamente requiere atencion a algunos detalles como su condicion de parada y el calculo del punto medio de un intervalo.  Existen numerosas variaciones de la busqueda binaria. Una variacion particular (cascada fraccional) acelera la busqueda binaria para un mismo valor en multiples arreglos.  La busqueda binaria funciona en arreglos ordenados. La busqueda binaria comienza por comparar el elemento del medio del arreglo con el valor buscado. Si el valor buscado es igual al elemento del medio, su posicion en el arreglo es retornada. Si el valor buscado es menor o mayor que el elemento del medio, la busqueda continua en la primera o segunda mitad, respectivamente, dejando la otra mitad fuera de consideracion.  Dado un vector A de n elementos con valores A0 ... An\u22121, ordenados tal que A0 \u2264 ... \u2264 An\u22121, y un valor buscado T, el siguiente procedimiento usa busqueda binaria para encontrar el indice de T en A.  Este procedimiento iterativo mantiene los limites de la busqueda mediante dos variables. Algunas implementaciones realizan la comparacion de igualdad al final del algoritmo, como resultando se obtiene un ciclo mas rapido de comparaciones pero se aumenta en uno la cantidad de iteraciones promedio.\u200b  El procedimiento anterior solo realiza coincidencias exactas, encontrando la posicion del valor buscado. Sin embargo, dado el orden natural de los arreglos ordenados, es trivial extender la busqueda binaria para realizar coincidencias aproximadas. Por ejemplo, la busqueda binaria puede ser usada para computar, para un valor dado, su rank(el numero de elementos menores), antecesor(proximo elemento menor), sucesor(proximo elemento mayor), y vecinos cercanos. Las consultas en intervalos, como por ejemplo, buscar el numero de elementos entre dos numeros pueden ser computadas con dos preguntas de rank.  El rendimiento de la busqueda binaria puede ser analizada reduciendo el algoritmo a un arbol binario de busqueda, donde la raiz es el elemento en el medio del arreglo, el elemento en el medio de la primera parte del arreglo es el hijo izquierdo de la raiz y el elemento en el medio de la segunda parte es el hijo derecho de la raiz. El resto del arbol se construye de forma similar. Este modelo representa a la busqueda binaria, comenzando desde la raiz, el subarbol izquierdo o derecho son recorridos de acuerdo a si el valor buscado es menor o mayor que el valor presente en el nodo actual, representando la eliminacion sucesiva de los elementos.\u200b  En el peor de los casos se realizan \u230a log 2 \u2061 n + 1 \u230b n+1\\rfloor } iteraciones (del ciclo de comparaciones), donde la notacion \u230a \u230b denota la parte entera por debajo de la funcion. Esta cantidad de iteraciones es alcanzada cuando la busqueda alcanza el nivel mas profundo del arbol, equivalente a una busqueda binaria que se reduce a un solo elemento, y en cada iteracion, siempre elimina el arreglo mas peque\u00f1o de los dos si no tienen la misma cantidad de elementos.  Como promedio, asumiendo que cada elemento es igualmente probable de ser buscado, despues que la busqueda termine, el valor buscado sera mas probable de ser encontrado en el segundo nivel del arbol. Esto es equivalente a una busqueda binaria que completa una iteracion antes del peor de los casos, alcanzandola despues de log 2 \u2061 n \u2212 1 n-1} iteraciones. Sin embargo, el arbol puede estar no balanceado, con el nivel mas profundo parcialmente completo, y equivalentemente, el arreglo puede no estar dividido perfectamente por la busqueda en algunas iteraciones, resultando que en la mitad de las veces el menor subarreglo es eliminado. El promedio actual del numero de iteraciones es ligeramente mayor ( log 2 \u2061 n \u2212 n \u2212 log 2 \u2061 n \u2212 1 n ) \\log _{2}n-n-1}{n}}} .\u200b En el mejor de los casos, donde el elemento del medio del arreglo es igual al valor buscado, su posicion es retornada despues de una iteracion. En terminos de iteracion, ningun algoritmo basado solamente en comparaciones puede exhibir mejores promedios en su numero de iteraciones que la busqueda binaria.  Cada iteracion de la busqueda binaria definida anteriormente realiza una o dos comparaciones, comprobando si el elemento en el medio es igual al valor buscado en cada iteracion. Asumiendo nuevamente que cada elemento es igualmente probable de ser buscado, cada iteracion realiza como promedio 1.5 de comparaciones. Una variacion del algoritmo comprueba por la igualdad en el final de cada busqueda, eliminando como promedio la mitad de las comparaciones en cada iteracion. En la mayoria de las computadoras el procedimiento anterior reduce el tiempo de cada iteracion muy poco, mientras que garantiza que la busqueda realice el mayor numero de iteraciones posibles y como promedio adiciona una iteracion mas a la busqueda. Dado que el ciclo de comparaciones se realiza solamente \u230a log 2 \u2061 n + 1 \u230b n+1\\rfloor } veces en el peor de los casos, para un n suficientemente grande, el peque\u00f1o incremento de la eficiencia producto de las comparaciones en el ciclo no compensa la iteracion extra. Knuth 1998 propuso un valor de 2 66 } (mas de 76 trillones) elementos para que esta variacion fuese mas rapida.\u200b\u200b  Cascada fraccional puede ser usada para acelerar la busqueda del mismo valor en multiples arreglos. Se requiere O ( k log \u2061 n ) para buscar en cada arreglo el elemento seleccionado, cascada fraccional lo reduce a O ( k + log \u2061 n ) , donde k es el numero de arreglos.\u200b  La tecnica de usar arreglos ordenados con busqueda binaria es una solucion muy ineficiente cuando la insercion y la eliminacion son necesarias, tomando un tiempo de  Otros algoritmos soportan mas eficientemente la insercion y la eliminacion, y tambien un macheo mas rapido y exacto.  Para implementar arreglos asociativos, tablas hash, una estructura que mapea llaves contra valores usando una funcion de hash, son generalmente mas rapidas que la busqueda binaria en arreglos ordenados de valores; la mayoria de las implementaciones requiere como promedio un tiempo amortizado constante. Sin embargo, hashing no es muy util para comparaciones aproximadas, tales como antecesor, sucesor, y vecino mas cercano, dado que la informacion que nos presenta en la busqueda es si el valor esta presente o no. La busqueda binaria es ideal para este tipo de comparaciones, realizandolas en tiempo logaritmico.\u200b  Un arbol binario de busqueda es una estructura de datos que funciona basado en el principio de la busqueda binaria: los valores del arbol estan colocados en forma ordenada, y el recorrido del arbol es realizado usando un algoritmo muy parecido a la busqueda binaria. La insercion y eliminacion requieren al igual que el recorrido un tiempo logaritmico. Este costo es mucho mejor que el costo lineal de la insercion y eliminacion en los arreglos ordenados, y los arboles de busqueda binaria poseen la habilidad de realizar todas las operaciones posibles en los arreglos ordenados, incluyendo consultas en rangos y comparaciones aproximadas.  Sin embargo, la busqueda binaria es usualmente mas eficiente para realizar busquedas puesto que los arboles binarios de busqueda estaran probablemente desbalanceados, dando como consecuencia un costo computacional superior a la busqueda binaria.  Los arboles binarios de busqueda se utilizan para realizar busquedas rapidas en dispositivos de almacenamientos externos, donde los datos necesitan ser buscados y colocados en la memoria principal. Dividiendo el arbol en paginas con una cantidad determinada de elementos resultado que la busqueda en el arbol binario tenga un menor costo computacional que los buscadores convencionales de los discos. Note que este proceso crea un arbol multiproposito, puesto que cada pagina esta conectada una con otra. El arbol-B generaliza este metodo de la organizacion en el arbol, los Arbol-B son frecuentemente utilizados para organizar largos conjuntos de datos como las bases de datos o los sistemas de ficheros.  La busqueda lineal es un simple algoritmo de busqueda que comprueba cada elemento hasta que encuentre el valor buscado. La busqueda lineal puede ser implementada en una lista enlazada, que nos permite inserciones y eliminaciones mas eficientes que un arreglo. La busqueda binaria es mas eficiente que la busqueda lineal en los arreglos ordenados, exceptuando los arreglos que contenga pocos elementos. Si el arreglo debe ser ordenado primero, ese costo debe ser amortizado sobre cualquier busqueda. Ordenar el arreglo tambien nos permite comparaciones aproximadas mas eficientes, entre otras operaciones.  El arreglo de Judy usa un conjunto de ideas para lograr una solucion mas eficiente.  Un problema relacionado con la busqueda es la clasificacion. Cualquier algoritmo que realice busquedas, como la busqueda binaria, puede ser usado para clasificar tambien. Existen otros algoritmos mas especificos para la clasificacion, un arreglo de bit es el mas simple, usado cuando el rango de los elementos es limitado, es muy rapido ya que requiere un tiempo constante.  Para resultados aproximados, los filtros de Bloom, otra estructura de dato probabilista basada en hashing, guarda un conjunto de valores codificando los valores con arreglos de bits y multiples funciones de hash. Los filtros de Bloomson mucho mas eficaces que los arreglos de bits en cuanto a espacio en la mayoria de los casos y mucho mas lentos.\u200b  Existen estructuras de datos que pueden realizar busqueda binaria en arreglos ordenados. Por ejemplo, las busquedas, las comparaciones parciales y todas las operaciones permitidas en arreglos ordenados pueden ser realizadas de manera mas eficiente que con la busqueda binaria con estructuras como los arboles de van Emde Boas, arboles de fusion, tries, y arreglos de bits. Sin embargo, mientras que estas operaciones pueden ser realizadas eficientemente en los arreglos ordenados sin importancia de cual sea el tipo de los elementos, este tipo de estructura de datos son usualmente mas eficientes porque explotan las propiedades del conjunto de elementos del arreglo.\u200b  La busqueda binaria uniforme guarda el indice del elemento del medio y el numero de elementos alrededor del elemento del medio que no hemos eliminado todavia. Cada paso reduce el tama\u00f1o del arreglo aproximadamente en la mitad. Esta variacion es uniforme porque la diferencia entre los indices de los elementos del medio y el elemento escogido en la iteracion anterior permanece constante para arreglos del mismo tama\u00f1o.  La busqueda Fibonacci es un metodo similar a la busqueda binaria que sucesivamente reduce el tama\u00f1o del intervalo al cual el maximo de una funcion unimodal pertenece. Dado un intervalo finito, una funcion unimodal, y la maxima longitud del intervalo resultante, la busqueda Fibonacci encuentra un numero de Fibonacci tal que si el intervalo se divide en esta cantidad de subintervalos de igual longitud, los subintervalos seran menores que la maxima longitud. Despues de dividido el intervalo, elimina los subintervalos a los cuales el maximo no pertenece hasta que permanezcan uno o mas subintervalos continuos.\u200b\u200b  La busqueda exponencial es un algoritmo para buscar principalmente en listas infinitas, pero puede ser aplicada para seleccionar el limite superior de la busqueda binaria. Comienza encontrando el primer elemento que cumple que es una potencia de dos y mayor que el valor buscado, despues, fija este indice como el limite superior de la busqueda binaria, y cambia hacia la busqueda binaria. La busqueda realiza \u230a log 2 \u2061 x + 1 \u230b x+1\\rfloor } iteraciones de la busqueda exponencial y a lo sumo \u230a log 2 \u2061 x \u230b x\\rfloor } iteraciones de la busqueda binaria, donde x es la posicion del valor buscado. Solamente si el valor buscado esta cerca del principio del arreglo es que esta variacion es mas eficiente que seleccionar el mayor elemento como el limite superior.  Al contrario de la busqueda binaria, la busqueda de interpolacion no calcula el punto medio sino que realiza varios intentos en busca del valor requerido, tomando en cuenta el menor y mayor elemento del arreglo asi como su longitud. Este procedimiento es solamente posible si los elementos del arreglo son numeros. Se basa en la hipotesis de que el elemento del medio no es la mejor opcion en muchos casos; por ejemplo, si el elemento buscado esta proximo al mayor elemento del arreglo, es muy probable que este ubicado en el final del arreglo. Cuando la distribucion de los elementos en el arreglo es uniforme o cercanamente, se realizan O ( log \u2061 log \u2061 n ) \\log \\log n} comparaciones.\u200b  En la practica, la busqueda de interpolacion es mas ineficiente que la busqueda binaria para arreglos peque\u00f1os, dado que la busqueda por interpolacion requiere un conjunto de computos extras, y la tasa de crecimiento de su complejidad solo se compensa para arreglos grandes.  Cascada fraccionaria es una tecnica que acelera la busqueda binaria del mismo elemento en arreglos ordenados. La busqueda en cada arreglo toma O ( k log \u2061 n ) k\\log n} , donde k es el numero de arreglos. Cascada fraccionaria reduce este costo a O ( k + log \u2061 n ) k+\\log n} almacenando informacion especifica en cada arreglo acerca de los otros arreglos.\u200b  Cascada fraccionaria fue desarrollada originalmente para resolver eficientemente varios problemas de geometria computacional, pero tambien ha sido aplicada en dominios como el ruteo de los protocolos de internet.\u200b  En 1946, John Mauchly menciono por primera vez la busqueda binaria como parte de Moore School Lectures, el primer conjunto de conferencias relacionado con las computadoras. Las siguientes publicaciones mencionaban que la busqueda binaria solo funcionaba en arreglos cuya longitud fuese de uno menos que una potencia de dos hasta 1960, cuando Derrick Henry Lehmer publico un algoritmo de busqueda binaria que funcionaba en todos los arreglos ordenados. En 1962, Hermann Bottenbruch presento en ALGOL 60 una implementacion del algoritmo de busqueda binaria en el cual colocaba la comparacion de igualdad en el final del algoritmo, incrementando el numero promedio de iteraciones por uno, pero reduciendo a uno el numero de comparaciones por iteracion. La busqueda binaria uniforme fue presentada a Donald Knuth en 1971 por A. K. Chandra de la universidad de Stanford y publicado en el libro de Knuth: The Art of Computer Programming. En 1986, Bernard Chazelle y Leonidas J. Guibas introdujeron cascada fraccional, una tecnica usada para acelerar la busqueda binaria en multiples arreglos.\u200b\u200b\u200b  A pesar de que la idea basica de busqueda binaria es relativamente sencilla, los detalles pueden ser sorprendentemente complicados...\u2014Donald Knuth  Cuando Jon Bentley asigno la busqueda binaria como un problema en un curso de programadores profesionales, se percato que el noventa por ciento fallo en desarrollar una solucion correcta despues de varias horas de trabajo y otro estudio publicado en 1988 muestra que el codigo correcto solo se encuentra en cinco de cada veinte muestras tomadas. Ademas la propia implementacion de busqueda binaria de Bentley, publicada en su libro de 1986 Programming Pearls, contenia un error de desbordamiento (overflow) que permanecio sin ser detectado por mas de veinte a\u00f1os, ademas la implementacion de la biblioteca del lenguaje de programacion Java de la busuqeda binaria tuvo el mismo error durante mas de nueve a\u00f1os.\u200b  En una implementacion practica, las variables utilizadas para representar los indices a menudo seran de tama\u00f1o fijo, y esto puede dar lugar a un desbordamiento aritmetico para arreglos muy grandes. Si el punto medio del intervalo se calcula como (L + R) / 2, entonces el valor de L + R puede exceder el rango de enteros del tipo de datos usado para almacenar el punto medio, incluso si L y R estan dentro del rango. Si L y R no son negativos, esto se puede evitar calculando el punto medio como L + (R - L) / 2.\u200b  Si el valor buscado es mayor que el valor maximo del arreglo y el ultimo indice del arreglo es el valor maximo representable de L, el valor de L eventualmente se convertira en demasiado grande y ocurrira un desbordamiento. Un problema similar ocurrira si el valor buscado es menor que el menor valor en el arreglo y el primer indice del arreglo es el valor representable mas peque\u00f1o de R. En particular, esto significa que R no debe ser un tipo sin signo si el arreglo empieza con indice 0..  Un bucle infinito puede ocurrir si las condiciones de salida para el bucle no estan definidas correctamente. Una vez L supera R, la busqueda ha fallado y debe transmitir el fracaso de la busqueda. Ademas, el bucle debe salir cuando se encuentra el elemento de destino, o en el caso de una implementacion donde este control se mueve al final, comprueba si la busqueda tuvo exito o fallo al final debe estar en su lugar. Bentley encontro que, en su asignacion de busqueda binaria, este error fue realizado por la mayoria de los programadores que no implementaron correctamente una busqueda binaria. \u200b  Las bibliotecas estandar de muchos lenguajes de programacion incluyen implementaciones de la busqueda binaria: ","snippet":"En ciencias de la computacion y matematicas, la busqueda binaria, tambien conocida, como busqueda de intervalo medio\u200b o busqueda logaritmica,\u200b es un algoritmo de busqueda que encuentra la posicion de ","enlaces_salientes":["B%C3%BAsqueda_binaria","B%C3%BAsqueda_binaria","B%C3%BAsqueda_binaria","Ciencias_de_la_computaci%C3%B3n","Algoritmo_de_b%C3%BAsqueda","Vector_(inform%C3%A1tica)","Logaritmo","Tabla_hash","Algoritmo_Fractional_Cascading","Rank","%C3%81rbol_(inform%C3%A1tica)","Tabla_hash","%C3%81rbol_binario_de_b%C3%BAsqueda","%C3%81rbol-B","Bases_de_datos","Sistema_de_archivos","Filtro_de_Bloom","Conjunto","Trie","Algoritmo_Fractional_Cascading","Geometr%C3%ADa_computacional","Internet_Protocol","John_William_Mauchly","Donald_Knuth","Stanford","The_Art_of_Computer_Programming","Donald_Knuth","Knuth","Jon_Bentley","Overflow","Java_(lenguaje_de_programaci%C3%B3n)","C_(lenguaje_de_programaci%C3%B3n)","Subrutina","Biblioteca_est%C3%A1ndar_de_C","C%2B%2B","Standard_Template_Library","COBOL","Java_(lenguaje_de_programaci%C3%B3n)","Microsoft","Ruby","Sort","Objective-C","Cocoa_(inform%C3%A1tica)","M%C3%A9todo_de_bisecci%C3%B3n","Digital_object_identifier","Eric_W._Weisstein","MathWorld","Wolfram_Research","Digital_object_identifier","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","Digital_object_identifier","ISBN","Bjarne_Stroustrup","ISBN","Control_de_autoridades"]}
{"url":"Implementaci%C3%B3n","titulo":"Implementacion","contenido":"Una implementacion es la ejecucion o puesta en marcha de una idea programada, ya sea, de una aplicacion informatica, un plan, modelo cientifico, dise\u00f1o especifico, estandar, algoritmo o politica.  (Distingase siempre el termino implementacion de implantacion, puesto que una implantacion se realiza de forma impuesta u obligatoria al usuario sin importar su opinion; en cambio en la implementacion se involucra al usuario en el desarrollo de lo que se esta realizando).  En ciencias de la computacion, una implementacion es la realizacion de una especificacion tecnica o algoritmos como un programa, componente software, u otro sistema de computo. Muchas implementaciones son dadas segun a una especificacion o un estandar. Por ejemplo, un navegador web respeta (o debe respetar) en su implementacion, las especificaciones recomendadas segun el World Wide Web Consortium, y las herramientas de desarrollo del software contienen implementaciones de lenguajes de programacion.  En la industria IT, la implementacion se refiere al proceso post-venta de guia de un cliente sobre el uso del software o hardware que el cliente ha comprado. Esto incluye el analisis de requisitos, analisis del impacto, optimizaciones, sistemas de integracion, politica de uso, aprendizaje del usuario, marcha blanca y costes asociados. A menudo todos estos pasos son gestionados y dirigidos por un Director de Proyecto que utiliza metodologias de gestion de proyecto como las que por ejemplo se presentan en el Project Management Body of Knowledge. La implementacion de software comprende el trabajo de grupos de profesionales  que son relativamente nuevos en la economia basada en la gestion del conocimiento, tales como  analista de negocios, analistas tecnicos, arquitecto de software, y directores de proyecto.  En ciencias politicas, la implantacion se refiere al cumplimiento de la politica publica. La legislacion aprueba leyes que son llevadas a cabo por funcionarios publicos que trabajan en agencias burocraticas. Este proceso consiste en reglas de creacion, reglas de administracion y reglas de adjudicacion. Los factores de impacto en la implantacion incluyen decisiones legislativas, la capacidad administrativa para la implantacion burocratica, un grupo de actividad interesado y opositores, y soporte ejecutivo o presidencial. ","snippet":"Una implementacion es la ejecucion o puesta en marcha de una idea programada, ya sea, de una aplicacion informatica, un plan, modelo cientifico, dise\u00f1o especifico, estandar, algoritmo o politica.  (Di","enlaces_salientes":["Implementaci%C3%B3n","Implementaci%C3%B3n","Implementaci%C3%B3n","Ciencias_de_la_computaci%C3%B3n","Navegador_web","World_Wide_Web_Consortium","Lenguajes_de_programaci%C3%B3n","Project_Management_Body_of_Knowledge","Analista_de_sistemas","Ciencias_pol%C3%ADticas","Pol%C3%ADtica_p%C3%BAblica","Ley","Funcionario_p%C3%BAblico","Burocracia","Interfaz","Lenguaje_de_programaci%C3%B3n","Algoritmo","Software","C%C3%B3digo_fuente","Computaci%C3%B3n","Funci%C3%B3n_(programaci%C3%B3n)","M%C3%A9todo","Proceso_(inform%C3%A1tica)","Derecho_procesal","Procedimiento","Proyecto","Soluci%C3%B3n","Sistema","T%C3%A9cnica","Wikcionario","Control_de_autoridades"]}
{"url":"Ordenamiento_por_inserci%C3%B3n","titulo":"Ordenamiento por insercion","contenido":"El ordenamiento por insercion (insertion sort en ingles) es una manera muy natural de ordenar para un ser humano y puede usarse facilmente para ordenar un mazo de cartas numeradas en forma arbitraria. Requiere O ( n 2 ) )} operaciones para ordenar una lista de n elementos.  Inicialmente, se tiene un solo elemento que, obviamente, es un conjunto ordenado. Despues, cuando hay k elementos ordenados de menor a mayor se toma el elemento k + 1 y se compara con todos los elementos ya ordenados, deteniendose cuando se encuentra un elemento menor (todos los elementos mayores han sido desplazados una posicion a la derecha) o cuando ya no se encuentran elementos (todos los elementos fueron desplazados y este es el mas peque\u00f1o). En este punto se inserta el elemento k + 1 debiendo desplazarse los demas elementos.    En el mejor de los casos, el arreglo esta inicialmente en orden, el algoritmo solo hace una pasada y entonces la complejidad es O ( n ) .\u200b En el peor caso, con el arreglo ordenado con el criterio contrario, se obtiene una complejidad temporal cuadratica del orden de O ( n 2 / 2 ) /2)}  Martinez Vidal (2006). Introduccion al analisis de algoritmos. Consultado el 22 de junio de 2020. ","snippet":"El ordenamiento por insercion (insertion sort en ingles) es una manera muy natural de ordenar para un ser humano y puede usarse facilmente para ordenar un mazo de cartas numeradas en forma arbitraria.","enlaces_salientes":["Ordenamiento_por_inserci%C3%B3n","Ordenamiento_por_inserci%C3%B3n","Ordenamiento_por_inserci%C3%B3n","Idioma_ingl%C3%A9s","Algoritmo_de_ordenamiento","Control_de_autoridades"]}
{"url":"As%C3%ADntota","titulo":"Asintota","contenido":"En calculo integral, se le llama asintota de la grafica de una funcion a una recta a la que se aproxima continuamente la grafica de tal funcion;\u200b es decir que la distancia entre las dos tiende a ser cero (0), a medida que se extienden indefinidamente, en otra palabras tienden a estar juntas en el infinito.O que ambas presentan un comportamiento asintotico. Generalmente, las funciones racionales tienen comportamiento asintotico.  La palabra asintota deriva del griego: \u03b1\u03c3\u03c5\u03bc\u03c0\u03c4\u03c9\u03c4\u03bf\u03c2 asymptotos, \u00abaquello que no cae\u00bb; en donde a- posee un valor privativo (= no), mientras que sym-ptotos connota a aquello que \u00abcae\u00bb o \u00abcae junto (a algo)\u00bb. Se suele dar la definicion de asintota a una curva que \u00abno se encuentran nunca\u00bb.\u200b Esta interpretacion intuitiva esta plasmada por Apolonio de Perga, en su conocido tratado Sobre las secciones conicas, para referirse a una recta que no interseca a una rama de una hiperbola.\u200b  En geometria, el comportamiento asintotico se refiere a una eventual propiedad entre curvas, y mas precisamente, entre funciones o partes de funciones: segmentos de recta, hojas de hiperbola o de parabola, etc. Es en este sentido que se habla de \u00abrecta asintotica\u00bb como tangente al infinito de una rama parabolica, o bien de curvas asintoticas.  Su estudio mas profundo desborda el mero campo de aplicacion de la geometria elemental y el trazado de curvas planas; con el desarrollo del algebra y del calculo infinitesimal, las nociones intuitivas \u00abtiende a infinito\u00bb y \u00abtiende a cero\u00bb se formalizan con el concepto de limite matematico, y con ello tambien el calculo de asintotas.  Ayudan a la representacion de curvas, proporcionan un soporte estructural e indican su comportamiento a largo plazo. En tanto que lineas rectas, la ecuacion de una asintota es simplemente la de una recta, y su expresion analitica dependera de la eleccion del sistema de referencias (y = m\u2022x + b en coordenadas cartesianas).  Si bien suelen representarse en un mismo sistema de coordenadas, las asintotas no forman parte de la expresion analitica de la funcion, por lo que -en numerosos ejemplos- no estan incluidas explicitamente dentro de la grafica, o bien se las indica con una linea punteada. En muchos casos, las asintotas coinciden con los ejes de coordenadas, es decir que sus ecuaciones en coordenadas cartesianas seran: x = 0, y = 0.  Se distinguen tres tipos:      En analisis, calculo y geometria analitica, el comportamiento de funciones no triviales en las cercanias de puntos de \u00abindefinicion\u00bb (tales como la division por cero o las formas indeterminadas) aporta informacion valiosa sobre su grafica, y en este contexto las asintotas surgen naturalmente como \u00absoluciones\u00bb (o direcciones) en estos puntos. En este sentido, una funcion puede tener una \u00abasintota por la derecha\u00bb pero no por la izquierda (o viceversa); o bien una recta puede intersecar a una curva en un numero finito (o infinito) de puntos, y presentar de todos modos un comportamiento asintotico.  Se llama Asintota Vertical de una rama de una curva y = f(x), a la recta paralela al eje y que hace que la rama de dicha funcion tienda a infinito. Si existe alguno de estos dos limites:  a la recta x = a se la denomina asintota vertical. Ejemplos: logaritmo neperiano, tangente  Se llama Asintota Horizontal de una rama de una curva y = f(x) a la recta paralela al eje x que hace que la rama de dicha funcion tienda a infinito. Si existe el limite:  la recta y = a es una asintota horizontal. Ejemplos: funcion exponencial, tangente hiperbolica  La recta de ecuacion y = mx + b (m\u00a0=\u00a00) sera una asintota oblicua si: lim x \u2192 \u00b1 \u221e [ f ( x ) \u2212 ( m x + b ) ] = 0 [f(x)-(mx+b)]=0} . Los valores de m y de b se calculan con las formulas: m = lim x \u2192 \u00b1 \u221e f ( x ) x {f(x) \\over x}} ; b = lim x \u2192 \u00b1 \u221e f ( x ) \u2212 m x {f(x)-mx}} .  En la representacion grafica de una funcion racional juegan un papel esencial, cuando existen, las asintotas. Si bien es posible aplicar el metodo por limites descrito anteriormente, en el caso de funciones racionales, suelen utilizarse tecnicas algoritmicas que no precisan del analisis matematico. Una funcion racional puede tener mas de una asintota vertical, pero solo una que sea horizontal u oblicua (es decir que si tiene asintota horizontal entonces no puede tener asintota oblicua, y viceversa).  Para mayor claridad, sea:  Si m < n , hay una asintota horizontal de ecuacion: y = 0. Si m = n , hay una asintota horizontal de ecuacion: y = am/bn (el cociente de los coeficientes principales). Si m > n , no hay asintota horizontal; si el grado del numerador es exactamente uno mas que el denominador, hay una asintota oblicua, y su ecuacion viene dada por el cociente de la division de los polinomios.  Las asintotas verticales se dan en los valores que anulan el denominador pero no el numerador. Si hay una raiz en comun, se compara la multiplicidad de las raices. Ejemplos:        Las mas variadas funciones evidencian del comportamiento asintotico: desde el simple grafico de una curva plana en dos dimensiones, hasta superficies tridimensionales mas complejas; tanto en funciones algebraicas (polinomicas, racionales) como trascendentes (trigonometricas, logaritmicas, exponenciales), ya sea en coordenadas cartesianas, polares, etc. Las asintotas actuan como curvas guia para graficar otras curvas, o funciones.       ","snippet":"En calculo integral, se le llama asintota de la grafica de una funcion a una recta a la que se aproxima continuamente la grafica de tal funcion;\u200b es decir que la distancia entre las dos tiende a ser c","enlaces_salientes":["As%C3%ADntota","As%C3%ADntota","As%C3%ADntota","Gr%C3%A1fica_de_una_funci%C3%B3n","Hip%C3%A9rbola","Plano_cartesiano","C%C3%A1lculo_integral","Funci%C3%B3n_racional","Idioma_griego","Apolonio_de_Perga","Hip%C3%A9rbola","Geometr%C3%ADa","Curva_plana","%C3%81lgebra","C%C3%A1lculo_infinitesimal","L%C3%ADmite_matem%C3%A1tico","Gr%C3%A1fica_de_una_funci%C3%B3n","Recta","Sistema_de_referencia","Coordenadas_cartesianas","An%C3%A1lisis_matem%C3%A1tico","C%C3%A1lculo_infinitesimal","Geometr%C3%ADa_anal%C3%ADtica","Divisi%C3%B3n_por_cero","Formas_indeterminadas","L%C3%ADmite_matem%C3%A1tico","Logaritmo_neperiano","Tangente_(trigonometr%C3%ADa)","Funci%C3%B3n_exponencial","Tangente_hiperb%C3%B3lica","Funci%C3%B3n_racional","An%C3%A1lisis_matem%C3%A1tico","Dominio_de_definici%C3%B3n","Divisi%C3%B3n_(matem%C3%A1tica)#divisi\u00f3n_de_polinomios","Multiplicidad","Curva_plana","Superficie_(matem%C3%A1tica)","Funci%C3%B3n_algebraica","Funci%C3%B3n_trascendente","Espiral_hiperb%C3%B3lica","Curva_kappa","Folium_de_Descartes","Tridente_de_Newton","Trompeta_de_Torricelli","Hiperboloide","Estructura_hiperboloide","Secci%C3%B3n_c%C3%B3nica","Infinito","Divisi%C3%B3n_por_cero","Derivada","Clasificaci%C3%B3n_de_discontinuidades","An%C3%A1lisis_de_algoritmos","An%C3%A1lisis_asint%C3%B3tico","ISSN","Encyclopaedia_of_Mathematics","ISBN","PlanetMath","Control_de_autoridades","Biblioteca_Nacional_de_la_Dieta"]}
{"url":"Videojuego","titulo":"Videojuego","contenido":"Un videojuego o juego de video es un software o juego electronico en el que uno o mas jugadores interactuan por medio de un controlador, con un dispositivo electronico que muestra imagenes de video.\u200b Este dispositivo, conocido genericamente como \u00abplataforma\u00bb, puede ser una computadora, una maquina de arcade, una consola de videojuegos o un dispositivo portatil, como por ejemplo un telefono movil, telefono inteligente, tableta o una consola de videojuegos portatil. La industria de los videojuegos es un sector en constante crecimiento y se ha convertido en una forma de entretenimiento muy popular a nivel mundial.  Los jugadores interactuan con los videojuegos a traves de dispositivos de entrada a los que se les conoce como controladores o mandos. Mediante estos dispositivos, los jugadores controlan los movimientos y acciones de los personajes del juego y varia dependiendo de la plataforma. Por ejemplo, un controlador podria unicamente consistir de un boton y una palanca de mando o joystick, mientras otro podria presentar una docena de botones y una o mas palancas, lo que llamamos mando. Los primeros juegos informaticos solian hacer uso de un teclado para llevar a cabo la interaccion, o bien requerian que el usuario adquiriera un mando con un boton como minimo.\u200b Muchos juegos de computadora modernos permiten o exigen que el usuario utilice un teclado y un raton de forma simultanea.  Generalmente los videojuegos hacen uso de otras maneras, aparte de la imagen, de proveer los reflejos e interaccion al jugador. El audio es casi universal, usandose dispositivos de reproduccion de sonido, tales como altavoces y auriculares. Otro tipo de realimentacion se hace a traves de perifericos hapticos que producen vibracion o retroalimentacion de fuerza.  Los origenes del videojuego se remontan a la decada de 1950, cuando poco despues de la aparicion de las primeras computadoras electronicas tras el fin de la Segunda Guerra Mundial, se llevaron a cabo los primeros intentos por implementar programas de caracter ludico. Asi, fueron creados el Nimrod (1951) o el Oxo (1952), juegos electronicos que aun no pueden ser denominados videojuegos, y el Tennis for Two (1958) o el Spacewar! (1962), autenticos pioneros del genero. Todos ellos eran todavia prototipos, juegos muy simples y de caracter experimental que no llegaron a comercializarse, entre otras cosas, porque funcionaban en unas maquinas que solo estaban disponibles en universidades o en institutos de investigacion.  No seria hasta la decada de los 70 en que, con el descenso de los costes de fabricacion, aparecieron las primeras maquinas recreativas y los primeros videojuegos dirigidos al gran publico. Titulos como Computer Space (1971) o Pong (1972), de Atari, inauguraron las primeras maquinas recreativas construidas al efecto, que funcionaban con monedas. Poco despues llegarian los videojuegos a los hogares gracias a las consolas domesticas, la primera de las cuales fue la Magnavox Odyssey (1972), y mas tarde la exitosa Atari 2600 o VCS (de 1977), con su sistema de cartuchos intercambiables. Por aquel entonces las maquinas de arcade empezaron a hacerse comunes en bares y salones recreativos, una expansion debida en parte a un matamarcianos que alcanzo gran popularidad, el Space Invaders (1978). Otros juegos que marcaron esta primera epoca fueron Galaxian (1979), Asteroids (1979) o Pac-Man (1980).  En los a\u00f1os 1980, la empresa norteamericana Atari tuvo que compartir su dominio en la industria del videojuego con dos compa\u00f1ias llegadas de Japon: Nintendo (con su famosa consola NES) y SEGA (con la Master System). Paralelamente, surgio una generacion de ordenadores personales asequibles y con capacidades graficas que llegaron a los hogares de millones de familias, como fueron el Spectrum, el Amstrad CPC, el Commodore 64 o el MSX. A partir de entonces, los videojuegos empezaron a convertirse en una poderosa industria. Fue ademas una epoca muy creativa para los desarrolladores de videojuegos; muchos de la principales generos que existen hoy en dia (conduccion, lucha, plataformas, estrategia, aventura...) tomaron forma en esta decada. Por otra parte, aparecieron tambien las primeras consolas de bolsillo, tambien conocidas como \u00abmaquinitas\u00bb, que aunque hasta la llegada de la Game Boy de Nintendo (1989) solo ejecutaban un juego cada una, alcanzaron gran popularidad entre los mas jovenes.  Los a\u00f1os 1990 traen el salto a la tecnologia de 16-bit (como la SNES y la Mega Drive), lo que traia consigo importantes mejoras graficas. Entra en escena el gigante Sony con su primera PlayStation (1994), mientras Nintendo y Sega actualizan sus maquinas (Nintendo 64 y Sega Saturn). En cuanto a las computadoras, el progreso de los PC termina por barrer del mapa a los demas sistemas salvo el de Apple. Aparecen juegos cada vez mas avanzados tecnologicamente, como los juegos de tiradores, tambien llamados shooters en 3D. Estos comenzaron siendo en tercera persona pero a traves de la implementacion de tecnicas de camara en primera persona, se convirtieron en lo que a dia de hoy se denomina Juegos de tiradores en primera persona o FPS. En el a\u00f1o 2002 entra Microsoft en el sector de las videoconsolas con su Xbox, En 2001 se lanza la Gamecube y en el 2006 Nintendo lanza su innovadora Wii. Entretanto, Sony actualiza su exitosa PlayStation (versiones II y III), y en los PC, gracias a la expansion del Internet, cobran protagonismo los juegos en linea y multijugador.  Por ultimo, en la decada de 2010 emergen como plataformas de juegos los dispositivos tactiles portatiles, como los telefonos inteligentes y las tabletas, llegando a un publico muy amplio. Por otro lado, varias empresas tecnologicas empiezan a desarrollar cascos de realidad virtual, que prometen traer nuevas experiencias al mundo del entretenimiento electronico.  Tipicamente, los videojuegos recrean entornos y situaciones virtuales en los que el videojugador puede controlar a uno o varios personajes (o cualquier otro elemento de dicho entorno), para conseguir uno o varios objetivos dentro de unas reglas determinadas.  Dependiendo del videojuego, una partida puede disputarla una sola persona contra la maquina, dos o mas personas en la misma maquina, o bien multiples jugadores a traves de una red LAN o en linea via Internet, compitiendo colaborativamente contra la maquina o entre si.  Existen videojuegos de muchos tipos. Algunos de los generos mas representativos son los videojuegos de accion, rol, estrategia, simulacion, deportes o aventura.  Un videojuego se ejecuta gracias a un programa de software (el videojuego en si) que es procesado por una maquina (el hardware) que cuenta con dispositivos de entrada y de salida.  El programa de software o soporte logico contiene toda la informacion, instrucciones, imagenes y audio que componen el videojuego. Va grabado en cartuchos, discos opticos, discos magneticos, tarjetas de memoria especiales para videojuegos, o bien se descarga directamente al aparato a traves de Internet.  En la decada de 1980 el soporte habitual para el software era el cartucho en las videoconsolas, y el disco magnetico o la cinta de casete en los ordenadores. Posteriormente se uso el CD-ROM, pues tenia mas capacidad que los cartuchos ya que estos habian llegado a su tope tecnologico y ademas resultaba mas economico para producir en masa. Actualmente se usa el sistema DVD de alta capacidad y, en las consolas de sobremesa como PlayStation 4 y Xbox One, el Blu-Ray, de capacidad muy alta. Sin embargo desde hace unos a\u00f1os esta creciendo la descarga desde Internet, al ser una tecnologia extendida masivamente, de facil acceso y menos costosa que la distribucion fisica de discos, aparte de las ventajas de seguridad al evitar perdidas por da\u00f1os o extravio de discos (ya que el videojuego estara virtualmente siempre disponible).  Los dispositivos de entrada son los que permiten al jugador manejar el juego. Si bien es habitual el uso de un dispositivo de entrada externo \u2014como son los clasicos teclado y raton, el mando, o el joystick\u2014, las plataformas portatiles de hoy en dia (smartphones, tablets, videoconsolas de bolsillo...) permiten jugar mediante su pantalla tactil o mediante el movimiento del propio aparato (gracias al uso de giroscopios y acelerometros). Otros dispositivos de entrada pueden ser los detectores de movimiento, entre los que destacan los dispositivos de mano (por ejemplo el Wiimote de Wii), los de presion (alfombras o soportes con sensores), los de dispositivos de realidad virtual como la PlayStation VR y los de captura de imagenes, caso del Kinect de Xbox. Tambien se puede emplear la voz en aquellos videojuegos que la soporten a traves de procesadores de voz.  Los dispositivos de salida son aquellos que muestran las imagenes y los sonidos del videojuego: un televisor, un monitor o un proyector para el video, y unos altavoces o auriculares para el audio. Los equipos mas modernos utilizan sonido digital con Dolby Surround con efectos EAX y efectos visuales modernos por medio de las ultimas tecnologias en motores de videojuego y unidades de procesamiento grafico.  La pieza central del hardware lo constituye la CPU o unidad central de procesamiento, que interpreta las instrucciones contenidas en los programas y procesa los datos. Su capacidad de procesamiento, mayor en cada nueva generacion de dispositivos, marca el limite de las posibilidades tecnicas y graficas de los videojuegos.  Todos estos dispositivos (de entrada, de salida, de procesamiento...) pueden constituir unidades fisicamente separadas pero conectadas entre si \u2014como es el caso de los PC o las videoconsolas de sobremesa\u2014, o bien estar integradas en un solo aparato \u2014como sucede en los telefonos moviles y otros dispositivos portatiles\u2014.  Los distintos tipos de dispositivo en los que se ejecutan los videojuegos se conocen como plataformas. Los cuatro tipos de plataformas mas populares son el PC, las videoconsolas, los dispositivos portatiles y las maquinas de arcade.  Las videoconsolas o consolas de videojuegos son aparatos electronicos domesticos destinados exclusivamente a reproducir videojuegos. Creadas por diversas empresas desde los a\u00f1os 70, han generado un inmenso negocio de trascendencia historica en la industria del entretenimiento. La videoconsola por antonomasia es un aparato de sobremesa que se conecta a un televisor para la visualizacion de sus imagenes, pero existen tambien modelos de bolsillo con pantalla incluida, conocidos como videoconsolas portatiles.  El PC u ordenador personal es tambien una plataforma de videojuegos, pero como su funcion no es solo ejecutar videojuegos, no se considera como videoconsola. El PC no entra en ninguna generacion, ya que cada pocos meses salen nuevas piezas que modifican sus prestaciones. El PC por regla general puede ser mucho mas potente que cualquier consola del mercado. Los mas potentes soportan modos graficos con resoluciones y efectos de postprocesamiento grafico muy superiores a cualquier consola.  Las maquinas recreativas de videojuegos estan disponibles en lugares publicos de diversion, centros comerciales, restaurantes, bares, o salones recreativos especializados. En los a\u00f1os 1980 y 90 del siglo pasado disfrutaron de un alto grado de popularidad al ser entonces el tipo de plataforma mas avanzado tecnicamente. Los progresos tecnologicos en las plataformas domesticas han supuesto a comienzos del siglo\u00a0XXI una cierta decadencia en el uso de las maquinas arcade.  Las videoconsolas portatiles y otros aparatos de bolsillo cuentan con la capacidad para reproducir videojuegos. Entre estos ultimos destacan hoy en dia los telefonos moviles (en particular los telefonos inteligentes) que, sin ser los videojuegos su funcion primaria, los han ido incorporando a medida que se han ido incrementando sus prestaciones tecnicas. Otros dispositivos portatiles de creciente popularidad en los ultimos a\u00f1os son las tabletas.  Los videojuegos se pueden clasificar en generos atendiendo a factores como el sistema de juego, el tipo de interactividad con el jugador, sus objetivos, etc. La evolucion de los videojuegos desde sus comienzos ha dado lugar a una variedad creciente y cambiante de generos, muchas veces en relacion con lo que los avances en la tecnologia han ido haciendo posible. Entre los generos de videojuegos mas populares estan los de accion, estrategia, rol, aventura, rompecabezas, simulacion, deportes o carreras, cada uno de ellos con varios subgeneros. Por otro lado, hoy en dia son habituales los videojuegos que toman elementos de mas de un genero, lo que ha dado lugar a generos mixtos (por ejemplo rol-accion, aventura-accion, etc.).  Junto a los generos, existen otras formas de clasificar o caracterizar los juegos como puede ser por su tematica (fantastico-medieval, futurista, de guerra...), su complejidad (juegos AAA, juegos casuales...), su finalidad (educativos, promocionales, artisticos...), tipo de desarrollo, etc.  Por otra parte, tambien se distingue a unos juegos de otros, incluso dentro de un mismo genero, por la perspectiva visual que adoptan (o dicho de otra manera, la posicion de la camara). Asi, hay juegos con perspectiva 2D (ya sea con proyeccion paralela, vista lateral o vista cenital), 2.5D (mediante proyeccion isometrica, oblicua, o parallax scrolling, entre otras), y 3D (en perspectiva fija, en primera persona, o en tercera persona).  En muchos juegos se puede encontrar la opcion de multijugador, es decir, que varias personas puedan participar simultaneamente en la misma partida, ya sea empleando todos la misma maquina (como suele ocurrir con las videoconsolas) o bien usando cada uno su propio dispositivo (el caso habitual en los PC o dispositivos portatiles, en lo que se conoce como videojuegos en linea). Existen juegos en que un jugador humano se enfrenta contra otros jugadores controlados por la maquina, mediante inteligencia artificial, pero en este caso no se considera que sea un videojuego multijugador. Por ultimo, hay videojuegos que estan pensados para congregar a un gran numero de jugadores de todo el mundo conectados a traves de Internet, son los conocidos como videojuegos MMO (de massive multiplayer online).  Nacida con la aparicion de la primera maquina recreativa a monedas en 1971, la industria del videojuego ha pasado en unas pocas decadas de ser una mera curiosidad tecnologica a convertirse en una de las mayores industrias del entretenimiento por volumen de facturacion. Se estima este en 1 dolar en 2014 a nivel mundial, llegando a duplicar el de la industria del cine en el mismo a\u00f1o. Los ingresos proceden fundamentalmente de la venta de videojuegos, de videoconsolas, de accesorios y de maquinas recreativas. Los principales paises en ingresos por videojuegos son EE.\u00a0UU., China y Japon, seguidos de Alemania y Reino Unido. Espa\u00f1a se situa en la decima posicion, facturando anualmente cerca de 1\u00a0500\u00a0000\u00a0000 de dolares.\u200b  La industria del videojuego da trabajo a mas de 100\u00a0000 personas en todo el mundo, gente de muy diversas disciplinas entre las que se incluye la programacion, el dise\u00f1o, la ingenieria, la interpretacion, las finanzas, la mercadotecnia, la musica, la comunicacion o el comercio. La cadena de valor en la industria del videojuego se puede dividir en 6 partes: los inversores, los desarrolladores de videojuegos, los creadores del software empleado por los desarrolladores, los fabricantes de hardware, las distribuidoras de videojuegos, y los consumidores.  Los costes de desarrollo de un videojuego comercial varian enormemente desde los pocos miles de dolares que puede representar un titulo peque\u00f1o, desarrollado por una sola persona, hasta los mas de 100\u00a0000\u00a0000 de dolares de algunos videojuegos AAA, en los que intervienen equipos de hasta un centenar de trabajadores. El videojuego con mayor coste de desarrollo hasta la fecha es Grand Theft Auto V, de la desarrolladora Rockstar Games, con 167 millones de dolares, seguido por Destiny, de Bungie, con 154 millones de dolares. Las cifras son aun bastante mayores si se suma la inversion en mercadotecnia.  Las ferias de videojuegos constituyen uno de los principales escaparates donde la industria presenta sus mas recientes creaciones cada a\u00f1o. Las mas conocidas mundialmente son la E3 en Los Angeles (EE.\u00a0UU.), la Gamescom en Colonia (Alemania) y la Tokyo Games Show (Japon). En Francia la feria mas importante es la Paris Games Week y en Espa\u00f1a destacan la Madrid Games Week, GameLab y GameFest. En Chile destaca sobre todo la Festigame, siendo la mas importante de Latinoamerica. Los consumidores se informan de las novedades del sector principalmente a traves de medios de comunicacion especializados. Entre los pertenecientes al ambito hispano se pueden destacar revistas en papel como Micromania, New Superjuegos o Hobbyconsolas, y revistas en Internet como Meristation, Vandal, Eurogamer, Gamercafe, LagZero o Niubie. Existen tambien numerosos blogs y canales de Youtube centrados esta tematica. Es menor sin embargo su presencia en television o en radio.  La venta de videojuegos se ha realizado tradicionalmente en grandes almacenes o en tiendas fisicas especializadas; en Espa\u00f1a las dos principales cadenas de tiendas de videojuegos son Game y, hasta su cierre en 2014, Gamestop. En Chile las mas grandes son Zmart, MicroPlay y TodoJuegos. Sin embargo, la tendencia en estos ultimos a\u00f1os en todo el mundo es hacia la venta por internet mediante descarga, tanto en PC como en consolas. En dispositivos moviles, la venta por internet \u2014a traves de las tiendas de aplicaciones\u2014 es de hecho el unico canal disponible.  Las principales asociaciones sectoriales en Espa\u00f1a son AEVI (Asociacion Espa\u00f1ola de Videojuegos), que engloba a compa\u00f1ias que facturan el 90\u00a0% de los ingresos totales del sector, y DEV (Desarrollo Espa\u00f1ol de Videojuegos), que agrupa a las principales compa\u00f1ias desarrolladoras del pais. En Chile esta el grupo VGChile, donde se agrupan los desarrolladores chilenos.  Algunas de las mas importantes desarrolladoras de videojuegos a nivel internacional son: Blizzard Entertainment, Valve, Rockstar North, Bungie, Microsoft, Nintendo, BioWare, Sega, Sierra Entertainment o Zynga, a las cuales hay que a\u00f1adir los estudios internos (a menudo homonimos) de las principales distribuidoras.  En un mercado dominado por las grandes distribuidoras de videojuegos, cabe destacar en esta ultima decada el auge de los videojuegos independientes (tambien conocidos como indie), que han llegado a constituir un apartado propio en tiendas y en plataformas de distribucion como Steam o Gameloft. Estos juegos son desarrollados por peque\u00f1os grupos de no mas de 20 personas, sin la ayuda financiera de ninguna distribuidora. Se caracterizan habitualmente por un desarrollo artistico variado y particular, tanto en graficos como en banda sonora, con historias de tramas innovadoras y que generalmente no tienen una continuidad o no estan dise\u00f1ados para crear una saga. La originalidad de sus planteamientos, alejandose muchas veces de los estereotipos establecidos, le ha valido el interes de una parte de los aficionados.  La creacion de videojuegos es una actividad llevada a cabo por las desarrolladoras de videojuegos. Estas se encargan de dise\u00f1ar y programar el videojuego, desde el concepto inicial hasta el videojuego en su version final. Esta es una actividad multidisciplinaria, que involucra profesionales de la informatica, el dise\u00f1o, el sonido, la actuacion, etc. El proceso es similar a la creacion de software en general, aunque difiere en la gran cantidad de aportes creativos (musica, historia, dise\u00f1o de personajes, niveles, etc.) necesarios. El desarrollo tambien varia en funcion de la plataforma objetivo (PC, moviles, consolas), el genero (estrategia en tiempo real, RPG, aventura grafica, plataformas, etc.) y la forma de visualizacion (2d, 2.5d y 3d).  La comercializacion de los juegos creados por las desarrolladoras es labor de las distribuidoras de videojuegos. Estas se ocupan de su distribucion (ya sea a traves de tiendas fisicas o por internet), publicidad, presentacion, traduccion... pero tambien ejercen a menudo un papel fundamental antes y durante el desarrollo del juego, como es su concepcion, su financiacion, los estudios de mercado, el control de calidad, etc. Muchas distribuidoras tienen uno o varios estudios de desarrollo propio, al margen de que puedan o no trabajar con desarrolladoras externas.  La ciencia que estudia los videojuegos se llama \u00abludologia\u00bb o estudio de los juegos. Uno de los aspectos principales estudiados por esta ciencia y la informacion que recolecta son los impactos positivos y negativos de los videojuegos en las personas. Esta ciencia se ocupa del estudio critico de los juegos, de su dise\u00f1o, de los jugadores y de la interaccion entre ambos, asi como su papel en la sociedad y la cultura. Los metodos usados para recolectar informacion van desde encuestas e investigaciones etnograficas, hasta experimentos controlados de laboratorio.[cita\u00a0requerida]  Una encuesta en linea realizada por la ISFE entre europeos con edades comprendidas entre 16 y 64 a\u00f1os revelo que el 48\u00a0% de ellos juega a videojuegos, ya sea de manera habitual (1 o mas veces por semana, 25\u00a0%) u ocasional (23\u00a0%).\u200b En Espa\u00f1a dicho porcentaje se situaria en el 40\u00a0%, y en EE.\u00a0UU. (segun la ESA) en el 59\u00a0%.\u200b Por edades, el 51\u00a0% de los videojugadores europeos son menores de 35 a\u00f1os y el 49\u00a0% mayores, situandose la edad promedio en 34 a\u00f1os (el estudio realizado en EE. UU la situa en 31 a\u00f1os). Por sexos, el 55\u00a0% son hombres, el 45\u00a0% mujeres. Segun un estudio de 2015, los datos en los EE.\u00a0UU. cambian; 50% de los hombres juegan a videojuegos mientras que un 48% de mujeres lo hace; de estos, solo un 15% de hombres se denominarian Gamers contra un 6% en las mujeres.  Cabe se\u00f1alar que la demografia de los videojuegos no ha sido siempre la misma. En el pasado los videojuegos eran un tipo de entretenimiento casi exclusivamente para personas jovenes, pero esta situacion ha ido cambiando con el paso de los a\u00f1os como demuestran diversos estudios recientes. Ademas de los ya se\u00f1alados, un estudio de Parra, David et al. (2009) en el que se realizaron 974 encuestas a espa\u00f1oles mayores de 35 a\u00f1os concluyo que \"los videojuegos se estan implantando con singular intensidad en el conjunto de la poblacion espa\u00f1ola. Mas de la mitad de los espa\u00f1oles mayores de 35 a\u00f1os (53,5 por ciento) juega con videojuegos (bien de manera esporadica o bien de manera habitual)\".\u200b  Los efectos que pueda tener el uso habitual de videojuegos en las personas, y en especial en los ni\u00f1os, han sido objeto de interes y de controversia.  Entre los efectos positivos que se les atribuyen estan capacidades tales como: \u00abcoordinacion ojos-manos, capacidad logica, capacidad espacial, resolucion de problemas, desarrollo de estrategias, concentracion, atencion, colaboracion, cooperacion y seleccion de informacion relevante, estimulacion auditiva, entre otras\u00bb.\u200b Segun un estudio, el ni\u00f1o desarrolla habilidades mentales y su capacidad de razonamiento es mas activa en comparacion a un ni\u00f1o de hace 20 a\u00f1os que no contaba con esta tecnologia. En adultos pueden funcionar como un liberador de estres, contribuyendo a una buena salud.\u200b Otros afirman que mejoran la salud visual\u200b e incluso ciertas habilidades como por ejemplo las necesarias para practica de la cirugia.\u200b Hay que se\u00f1alar tambien que los efectos varian segun el tipo de juego.\u200b\u00a0 Un catedratico de la Universidad de Nottingham tambien ha afirmado que pueden tener el efecto de atenuar el dolor.\u200b Segun un estudio, la exposicion a corto plazo tiene un efecto positivo en la atencion en unos ni\u00f1os sin problemas psiquiatricos, estos obtuvieron una mejor puntuacion en la prueba de Stroop despues de estar expuestos durante una hora a un videojuego que jugaron por primera vez.\u200b  En cuanto a los aspectos negativos de los videojuegos, cabe se\u00f1alar factores que se encuentran bajo escrutinio como la adiccion. El facil acceso a ordenadores, smartphones y consolas, junto a la falta de control por parte de los padres o el ambiente de un hogar disfuncional, podria dar lugar a que ni\u00f1os o adolescentes hagan un uso abusivo de los videojuegos. Ello podria conllevar efectos negativos como es el ser mas propensos a la agresividad, falta de asertividad y bajo rendimiento academico.\u200b Expertos en medicina y salud mental han mostrado preocupacion por ello y la Organizacion Mundial de la Salud llego a incluirlo como \u00abjuego patologico\u00bb en la undecima revision de su Clasificacion Internacional de Enfermedades entre otras adicciones a nuevas tecnologias. Sin embargo; otros expertos en la materia, entre los que se incluye la Asociacion Estadounidense de Psiquiatria, han afirmado que no hay evidencias suficientes de que los videojuegos puedan producir tendencias violentas o inducir a un comportamiento adictivo,\u200b aunque estan de acuerdo que los videojuegos tipicamente hacen uso del \u00abbucle de compulsion\u00bb en su dise\u00f1o el cual puede crear dopamina y esta puede ayudar a reforzar el deseo de continuar jugando a traves de ese bucle de compulsion y potencialmente llevar a comportamientos violentos o adictivos.\u200b\u200b\u200b Otros medios han puesto de manifiesto que la inclusion es algo cuestionable dado que no todos los juegos presentan un dise\u00f1o que incluya mecanismos etiologicos como si lo hacen los juegos que incluyen cajas de botin por su similitud con los juegos de azar.\u200b  Otro aspecto controvertido de los videojuegos en los ni\u00f1os es que pueden frenar algunos aspectos de su desarrollo motriz, y conducir a una falta de socializacion,\u200b aunque esto ultimo esta rebatido por otros estudios que apuntan a todo lo contrario, a que los videojuegos aumentan su sociabilidad.\u200b\u200b \"Los videojuegos son un entretenimiento que se adecua bien a la realidad del ni\u00f1o nacido en la era de la informatica ya que suponen una socializacion en la cultura de simulacion que caracteriza a las sociedades avanzadas contemporaneas\u201d (Turkle 1997).\u200b  En un estudio se asocia la salud mental y jugar videojuegos, se encontro que los jugadores que jugaban de forma moderada tenian la mejor salud mental, los que jugaban de forma excesiva tenian un leve incremento en comportamientos problematicos y los que no jugaban videojuegos tuvieron la peor salud mental.\u200b  Estudios cientificos demuestran que, en general, los videojuegos enriquecen la vida del jugador, le ense\u00f1an a resolver problemas tecnicos, y estimulan sus habilidades neuro-cineticas, reflejos visuales y enfoque de multiples puntos de vision (objetivos). Incluso mejoran la comunicacion cuando se juega en familia o en linea.\u200b  En algunos colegios han sido implementados algunos videojuegos con el fin de expandir la metodologia didactica y hacer las clases mas amenas. Diversos expertos han se\u00f1alado el valor de los videojuegos como herramientas para inculcar conocimientos. Gros, B. y sus colaboradores (1997)\u200b escriben: \u00abPensamos que los juegos de ordenador constituyen un material informatico de gran valor pedagogico\u00bb, y enumeran una serie de caracteristicas:  Los juegos educativos se presentan en los ultimos tiempos como una alternativa a los videojuegos violentos. Incluso existe una coleccion de juegos cuya caratula versa \u00abla alternativa inteligente a los videojuegos violentos\u00bb.\u200b\u200b\u200b  A pesar de las cuestiones positivas, se deben tener en cuenta todos aquellos aspectos negativos, como el uso ilimitado y no vigilado, asi como la falta de compromiso, responsabilidad o esfuerzo con actividades que no esten relacionadas con el juego. Por ello, lo ideal es no perder de vista que aunque los videojuegos estan en funcion del entretenimiento, son utilizados como herramientas para posibilitar o potencializar el aprendizaje, lo cual se lograra siempre y cuando exista un buen uso y control por parte de los usuarios o los responsables de estos.\u200b  Gee (2004)\u200b establece que \u201cla teoria de aprendizaje incorporada a los buenos videojuegos se acerca mas a lo que yo creo que son las mejores teorias del aprendizaje planteadas por la ciencia cognitiva\u201d. De esta forma, establece una similitud entre las teorias del aprendizaje que se utilizan diariamente en el ambito educativo con las teorias incorporadas en los videojuegos, encontrando entre ellas pocos puntos en los que diverjan.  Los videojuegos, como otras formas de expresion audiovisual, han despertado controversia entre personas o colectivos que consideran que tienen o pueden tener efectos perniciosos sobre los jugadores. Entre estos se arguyen por ejemplo los efectos que puede tener en el desarrollo emocional el hecho de pasar demasiado tiempo ante la pantalla e inhibirse por completo en un universo de fantasia. Existen asimismo casos de ludopatia y de ciberadiccion.[cita\u00a0requerida] Tambien se argumenta[\u00bfquien?] un posible fomento de la violencia y lujuria, graficamente presentes en muchos videojuegos. Por otro lado, se ha comprobado que la rapidez con que se mueven los graficos puede provocar ataques en las personas que padecen diversos tipos de epilepsia.\u200b\u200b  Diferentes estudios con ni\u00f1os y adolescentes (Castells y Bofarull, 2002; Bringas, Rodriguez y Herrero, 2008)\u200b\u200b demuestran que el rendimiento escolar puede verse afectado debido al uso de los videojuegos. Ahora bien, existen diferentes articulos que establecen que niveles moderados de juego no se asocian con un bajo rendimiento escolar (Ferguson, 2011);\u200b incluso, podrian relacionarse con un mejor rendimiento (Llorca, Bueno, Villar y Diez, 2010).\u200b Esto se debe a que los jugadores que utilizan videojuegos adquieren mejores estrategias de conocimiento, estrategias de resolucion de problemas, y sus capacidades espaciales, su precision y capacidad de reaccion se ven mejoradas gradualmente (McFarlane, 2002).\u200b  En Espa\u00f1a, la imposibilidad de registrar el videojuego como tal, obedece a que no esta reconocido juridicamente por no estar contemplado en el marco del articulo 145.1 del Real Decreto Legislativo 1/1996, de 12 de abril (en adelante, Ley de Propiedad Intelectual o LPI), como creacion intelectual original y unitaria, obliga a sus creadores y titulares a desistir a registrarlo como videojuego, al tener que pasar por separar cada obra de acuerdo a su propia naturaleza, artistica, cientifica o literaria, lo que se evidencia como un obstaculo ante la falta de una regulacion especifica que permita a la industria proteger, exportar e internacionalizar estos activos intangibles en constante crecimiento socioeconomico, bajo un marco legal estable en el ambito de la propiedad intelectual de sus creadores.  En el a\u00f1o 2009, la \u00abProposicion No de Ley (PNL)\u00bb del Congreso de los Diputados, fue aprobada por unanimidad con dos enmiendas del Partido Popular y CiU: \u00abLa Comision de Cultura del Congreso de los Diputados establece que el videojuego constituye un ambito fundamental de la creacion y la industria cultural de Espa\u00f1a. En consecuencia, insta al Gobierno a reconocer a sus creadores y emprendedores como protagonistas de nuestra cultura. Asimismo, en el marco de sus competencias y en coordinacion con las administraciones autonomicas competentes, se insta al Gobierno a facilitar su acceso a todas las ayudas factibles para la promocion de su actividad, la financiacion como industria cultural y la internacionalizacion de sus iniciativas\u00bb.  Lo mas relevante de la PNL, es que se acuerda por unanimidad que \u00abno debe ser valido contemplarlos como obra audiovisual y, por otro, tampoco se les debe asimilar simplemente a creadores de software\u00bb.\u200b ","snippet":"Un videojuego o juego de video es un software o juego electronico en el que uno o mas jugadores interactuan por medio de un controlador, con un dispositivo electronico que muestra imagenes de video.\u200b ","enlaces_salientes":["Videojuego","Videojuego","Videojuego","Pong","National_Videogame_Museum","Juego_electr%C3%B3nico","Jugador_de_videojuegos","Controlador_de_videojuego","Dispositivo_electr%C3%B3nico","Video","Plataforma_(inform%C3%A1tica)","Computadora","M%C3%A1quina_de_arcade","Videoconsola","Tel%C3%A9fono_b%C3%A1sico","Tel%C3%A9fono_inteligente","Tableta_(computadora)","Videoconsola","Controlador_de_videojuego","Mando_(videojuegos)","Palanca_de_mando","Palanca_de_mando","Teclado_(inform%C3%A1tica)","Interactividad","Rat%C3%B3n_(inform%C3%A1tica)","Reproducci%C3%B3n_y_grabaci%C3%B3n_de_sonido","Altavoz","Auriculares","Realimentaci%C3%B3n","Perif%C3%A9rico_(inform%C3%A1tica)","H%C3%A1ptica","Volante_(videojuegos)#Sistema_Force_Feedback","Historia_de_los_videojuegos","Tennis_for_Two","Computadora_anal%C3%B3gica","Osciloscopio","Pong","Computadora","Nimrod_(videojuego)","OXO","Tennis_for_Two","Spacewar!","Magnavox_Odyssey","M%C3%A1quinas_recreativas","Computer_Space","Pong","Atari","Magnavox_Odyssey","Atari_2600","M%C3%A1quina_de_arcade","Space_Invaders","Galaxian","Asteroids","Pac-Man","Videoconsola_port%C3%A1til","Game_Boy","Atari","Nintendo","NES","SEGA","Sega_Master_System","Commodore_64","MSX","Industria_del_videojuego","G%C3%A9nero_de_videojuegos","Consola_port%C3%A1til","Game_Boy","16-bit","Super_Nintendo","Sega_Mega_Drive","Sony","PlayStation","Nintendo_64","Sega_Saturn","Computadora_personal","Videojuego_de_disparos","Tercera_persona_(videojuegos)","Primera_persona_(videojuegos)","Videojuego_de_disparos_en_primera_persona","Microsoft","Xbox","GameCube","Wii","Compatible_IBM_PC","Juegos_en_l%C3%ADnea","Smartphone","Tableta_(computadora)","Casco_de_realidad_virtual","Mundo_virtual","Videojugador","Personaje_jugador_(videojuegos)","Red_de_%C3%A1rea_local","Videojuego_en_l%C3%ADnea","Internet","G%C3%A9nero_de_videojuegos","Software","Hardware","Programa_inform%C3%A1tico","Cartucho_(inform%C3%A1tica)","Disco_%C3%B3ptico","Disco_magn%C3%A9tico","Tarjeta_de_memoria","Internet","CD-ROM","DVD","Blu-Ray","Mando_(videojuegos)","Dispositivo_de_entrada","Teclado_(inform%C3%A1tica)","Rat%C3%B3n_(inform%C3%A1tica)","Gamepad","Joystick","Tel%C3%A9fono_inteligente","Tableta_(computadora)","Detectores_de_movimiento","Wii","Dispositivo_de_salida","Televisor","Monitor_de_computadora","Proyector_de_v%C3%ADdeo","Dolby_Surround","Motor_de_videojuego","Unidad_de_procesamiento_gr%C3%A1fico","Hardware","Unidad_central_de_procesamiento","Computadora_personal","Videoconsola","Computadora_personal","Arcade","Videoconsola_port%C3%A1til","Plataforma_(inform%C3%A1tica)","Videoconsolas","M%C3%A1quina_de_arcade","PlayStation_2","Videoconsola","Computadora_personal","M%C3%A1quinas_recreativas","Videoconsola_port%C3%A1til","Tel%C3%A9fono_inteligente","G%C3%A9nero_de_videojuegos","Videojuego_de_acci%C3%B3n","Videojuego_de_estrategia","Videojuego_de_rol","Videojuego_de_aventura","Videojuego_de_rompecabezas","Videojuego_de_simulaci%C3%B3n","Videojuego_de_deportes","Videojuego_de_carreras","AAA_(industria_del_videojuego)","Desarrollador_de_videojuegos","Videojuego_multijugador","Videojuego_multijugador","Videojuego_en_l%C3%ADnea","Inteligencia_artificial","Videojuego_multijugador","MMOG","Industria_de_los_videojuegos","M%C3%A1quina_recreativa","Industria_del_entretenimiento","Desarrollo_de_videojuegos","Electronic_Entertainment_Expo","Gamescom","Paris_Games_Week","Madrid_Games_Week","Festigame","Microman%C3%ADa","Hobby_Consolas","Meristation","Vandal","Eurogamer","Tienda_online","Videojuego_independiente","Steam","Gameloft","Estereotipos","Desarrollo_de_videojuegos","Desarrolladora_de_videojuegos","Dise%C3%B1o_de_videojuegos","Programar","Inform%C3%A1tica","Software","Distribuidora_de_videojuegos","Ludolog%C3%ADa","Ludolog%C3%ADa","Controversia_en_los_videojuegos","Controversia_en_los_videojuegos","Efecto_Stroop","Organizaci%C3%B3n_Mundial_de_la_Salud","Clasificaci%C3%B3n_Internacional_de_Enfermedades","Asociaci%C3%B3n_Estadounidense_de_Psiquiatr%C3%ADa","Dopamina","Etiolog%C3%ADa","Caja_de_recompensas","Juegos_de_azar","Estimulaci%C3%B3n","Pedag%C3%B3gico","Controversia","Universo_de_ficci%C3%B3n","Ludopat%C3%ADa","Ciberadicci%C3%B3n","Epilepsia","Videojuegos","G%C3%A9nero_de_videojuegos","Industria_de_los_videojuegos","Los_videojuegos_como_forma_de_arte","Desarrollo_de_videojuegos","Adicci%C3%B3n_a_los_videojuegos","Wayback_Machine","The_New_York_Times","PubMed_Central","PubMed_Identifier","Semantic_Scholar","Digital_object_identifier","Gamasutra","Time_(magazine)","ISSN","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Art_%26_Architecture_Thesaurus","Enciclopedia_Brit%C3%A1nica","Medical_Subject_Headings"]}
{"url":"Teorema_maestro","titulo":"Teorema maestro","contenido":"En el analisis de algoritmos, el teorema maestro proporciona una cota superior asintotica para ecuaciones de recurrencia que ocurren en muchos algoritmos recursivos como en los divide y venceras. Fue popularizado por el libro Introduccion a los algoritmos, en el cual fue tanto introducido como probado formalmente.  No todas las ecuaciones de recurrencia pueden ser resueltas con el uso del teorema maestro, una generalizacion es el metodo Akra-Bazzi.  Considere un problema que puede ser resuelto a traves de un algoritmo recursivo como el siguiente:  Este algoritmo divide al problema original en subproblemas de forma recursiva, cada uno de estos subproblemas tienen tama\u00f1o n/b. Las llamadas recursivas podrian modelarse como un arbol de llamadas. En este caso, cada nodo tendria un numero a de hijos. Cada nodo hara la cantidad de trabajo correspondiente al tama\u00f1o del subproblema f ( n ) que recibe. El trabajo total realizado por todas las llamadas del arbol es la suma de los trabajos hechos por cada uno de los nodos del arbol. La relacion de recurrencia resultante es la siguiente:   T ( n ) = a T ( n b ) + f ( n ) {b}}\\right)+f(n)} .\u200b  El teorema maestro nos permite acotar el tiempo de ejecucion asintotico sin expandir la relacion de arriba.  El teorema maestro sirve para resolver relaciones recursivas de la forma:  En la aplicacion de analisis de algoritmos recursivos, las constantes y funciones toman los siguientes significados:  Si f ( n ) = O ( n c ) \\right)} donde c < log b \u2061 a a}  entonces:  Como puede verse en la formula de arriba:  Luego, vemos que se cumple la condicion del caso 1:  Luego por el teorema maestro tenemos que  Si f ( n ) = \u0398 ( n log b \u2061 a ) a}\\right)}  entonces:   T ( n ) = 2 T ( n 2 ) + 10 n {2}}\\right)+10n}  Como podemos ver en la formula de arriba, las variables tienen los siguientes valores:  Luego, nos fijamos que cumpla la condicion del caso 2:  Entonces por el segundo caso del teorema maestro:  Dando de esa manera que la relacion de recurrencia de T(n) es \u0398(n log n).  Si es verdad que:  Y si es verdad ademas que:  Entonces:  Como puede verse en la formula de arriba, las variables obtienen los siguientes valores:  Luego se comprueba que satisface la condicion del caso 3:  La condicion tambien se cumple:  Entonces por el tercer caso del teorema maestro:  Por consiguiente la relacion de recurrencia T(n) es in \u0398(n2).  Los siguientes casos no pueden ser resueltos a traves de la utilizacion del teorema maestro:\u200b ","snippet":"En el analisis de algoritmos, el teorema maestro proporciona una cota superior asintotica para ecuaciones de recurrencia que ocurren en muchos algoritmos recursivos como en los divide y venceras. Fue ","enlaces_salientes":["Teorema_maestro","Teorema_maestro","Teorema_maestro","An%C3%A1lisis_de_algoritmos","Cota_superior_asint%C3%B3tica","Relaci%C3%B3n_de_recurrencia","Algoritmo_divide_y_vencer%C3%A1s","Introducci%C3%B3n_a_los_algoritmos","Algoritmo_recursivo","Algoritmo","Topolog%C3%ADa_arb%C3%B3rea","Nodo","Relaci%C3%B3n_de_recurrencia","Thomas_H._Cormen","Charles_E._Leiserson","Ronald_L._Rivest","Clifford_Stein","Introduction_to_Algorithms","MIT_Press","McGraw-Hill","Ecuaci%C3%B3n_recurrente","Internet_Archive","Control_de_autoridades"]}
{"url":"Optimizaci%C3%B3n_de_software","titulo":"Optimizacion de software","contenido":"La optimizacion de software es el proceso de modificacion de un software para hacer que algun aspecto del mismo funcione de manera mas eficiente y/o utilizar menos recursos (mayor rendimiento). En general, un programa puede ser optimizado para que se ejecute mas rapidamente, o sea capaz de operar con menos memoria u otros recursos, o consuman menos energia.\u200b  La palabra \"optimizacion\", comparte la misma raiz que \"optimo\", es raro que el proceso de optimizacion produzca un sistema verdaderamente optimo. El sistema optimizado tipicamente solo sera optimo en una aplicacion o para una audiencia. Se podria reducir la cantidad de tiempo que un programa se toma para realizar alguna tarea logrando que consuma mas memoria. En una aplicacion donde el espacio de la memoria es un bien escaso, se podria elegir un algoritmo mas lento con el fin de utilizar menos memoria. A menudo no existe una solucion de dise\u00f1o que funcione bien en todos los casos, en estos casos los ingenieros de trades-offs para optimizar los atributos de mayor interes. Ademas, el esfuerzo que se requiere para hacer una pieza de software completamente optima \u2014incapaz de cualquier mejora adicional\u2014 es casi siempre mas de lo razonable que los beneficios que brinda, de modo que el proceso de optimizacion puede ser detenido antes de que una solucion optima ha sido completamente alcanzado.  La optimizacion general se centra en la mejora de uno o dos aspectos del rendimiento: el tiempo de ejecucion, uso de memoria, espacio en disco, ancho de banda, el consumo de energia o algun otro recurso. Para ello se requiere un trade-off, donde uno de los factores se optimiza a expensas de los demas. Por ejemplo, aumentar el tama\u00f1o de cache mejora el rendimiento del tiempo de ejecucion, aunque tambien aumenta el consumo de memoria. Otras ventajas y desventajas comunes incluyen la claridad del codigo y la concision.  Hay casos en que el programador que realiza la optimizacion debe decidir hacer mejor el software para algunas operaciones pero con esto, lograra hacer otras operaciones menos eficientes. Estas compensaciones pueden ser a veces de caracter no tecnico - como cuando un competidor publica un resultado de referencia que debe ser batido con el fin de mejorar el exito comercial, pero esta caracteristica logra que el software sea menos eficiente. Tales cambios son a veces burlonamente llamado \"pessimizations\".\u200b  En algunos casos, un fragmento de codigo puede ser tan optimizado como para ser de forma no intencional ofuscado. Esto puede conducir a dificultades en el mantenimiento del codigo.  La optimizacion puede incluir buscar cuellos de botellas, una parte critica de codigo que es la principal consumidora de los recursos necesarios, a veces conocida como hot-spot.  En ciencias de la computacion el principio de Pareto se puede aplicar a la optimizacion de recursos observando que el 80% de los recursos son tipicamente usados por el 20% de las operaciones en promedio. En ingenieria de software es a menudo una mejor aproximacion decir que el 90% del tiempo de ejecucion de un programa se gasta en ejecutar el 10% del codigo (conocido como la ley 90/10 en este contexto).  En algunos casos, agregar mas memoria puede ayudar a hacer que un programa se ejecute mas rapido. Por ejemplo un programa de filtrado leera comunmente cada linea, la filtrara y mostrara esa linea inmediatamente. Esto solo usa suficiente memoria para una linea, pero el rendimiento es tipicamente muy pobre. El rendimiento se puede mejorar leyendo un archivo completo y luego escribir los datos filtrados, pero usa mas memoria. Escribir en cache los resultados es similarmente efectivo y tambien requiere mas uso de memoria.  La optimizacion puede ocurrir en una serie de niveles:  La optimizacion de codigo se puede clasificar en terminos generales como tecnicas dependientes de la plataforma e independientes de la plataforma. Si bien estos ultimos son eficaces en la mayoria o todas las plataformas, las tecnicas dependientes de la plataforma utilizan propiedades especificas de una plataforma, o se basan en parametros en funcion de la plataforma unica o incluso en el procesador. Escribir o producir diferentes versiones del mismo codigo para diferentes procesadores por lo tanto, podria ser necesaria. Por ejemplo, en el caso de la optimizacion a nivel de compilacion, las tecnicas independientes de la plataforma son tecnicas genericas (tales como el desarme de ciclos, la reduccion en las llamadas a funcion, las rutinas eficiente de la memoria, reduccion en las condiciones, etc), eso impacta en la arquitectura de CPU en una similar manera. Generalmente, estos sirven para reducir la longitud total del instruction path length necesario para completar el programa y/o reducir el uso total de memoria durante el proceso. Por otra parte, las tecnicas dependientes de la plataforma implican la planificacion de instrucciones, el paralelismo a nivel de instruccion, paralelismo a nivel de datos, las tecnicas de optimizacion de memoria cache (es decir, parametros que difieren entre las distintas plataformas) y la planificacion de instrucciones optima puede ser diferente incluso en diferentes procesadores de la misma arquitectura.  Las tareas de calculo se puede realizar de varias formas diferentes con diferentes eficiencia. Por ejemplo, considere el siguiente fragmento de codigo en C cuya intencion es obtener la suma de todos los numeros enteros de 1 a N:  Este codigo puede (suponiendo que no hay desbordamiento aritmetico) ser reescrito utilizando una formula matematica como:  La optimizacion, a veces se realiza automaticamente por un compilador de optimizacion, es seleccionar un metodo (algoritmo) que sea computacionalmente mas eficiente, manteniendo la misma funcionalidad. Sin embargo, una mejora significativa en el rendimiento a menudo se puede lograr mediante la eliminacion de alguna funcionalidad extra\u00f1a.  La optimizacion no siempre es un proceso obvio ni evidente. En el ejemplo anterior, la optimizacion en realidad puede ser mas lenta que la version original si N fuera suficientemente peque\u00f1o y el hardware en particular pasa a ser mucho mas rapido en la realizacion de operaciones de suma y de bucle de multiplicacion y division.  La optimizacion durante el desarrollo de codigo usando macros toma formas diferentes en diferentes lenguajes.  En algunos lenguajes procedurales, tales como C, las macros se implementan mediante la sustitucion de palabras. Hoy en dia, las funciones inline se pueden utilizar como una alternativa de tipo seguro en muchos casos. En ambos casos, se puede invertir mas tiempo de compilacion en el cuerpo de la funcion inline para llevar a cabo las optimizaciones del compilador, incluyendo plegamiento de constantes, que puede mover algunos calculos a tiempo de compilacion.  En muchos lenguajes de programacion funcionales las macros se implementan utilizando sustitucion en tiempo de parseado durante el parseo del arbol de sintaxis abstracta , la cual se afirma que los hace mas seguros de usar. Dado que en muchos casos la interpretacion se utiliza, que es una manera de asegurarse de que tales calculos solo se realizan en tiempo de analisis, y a veces la unica manera.  Lisp origino este estilo de macros y estos son a menudo llamados \"Lisp-like macros\". Un efecto similar puede conseguirse mediante el uso de las plantillas de metaprogramacion en C++.  En ambos casos, el trabajo se hace en tiempo de compilacion. La diferencia entre las macros de C, por un lado, y macros Lisp y plantilla de metaprogramacion de C++ por otro lado, es que las ultimas herramientas permiten realizar calculos arbitrarios en tiempo de compilacion/tiempo de parseo, mientras que la expansion de las macros de C no realiza ninguna computacion, y se basa en la capacidad del optimizador para llevarla a cabo. Ademas, las macros de C no apoyan directamente la recursion o iteracion, por lo que no son turing completo.  Como con cualquier optimizacion, sin embargo, a menudo es dificil predecir donde las herramientas de este tipo tienen el mayor impacto antes de que el proyecto este completo.  La optimizacion puede ser automatizada por compiladores o realizadas por los programadores. Las ganancias se limitan generalmente para la optimizacion local, y mayor para las optimizaciones globales. Por lo general, la optimizacion mas potente es encontrar un algoritmo superior.  La optimizacion de un sistema en su conjunto se suele realizar por los programadores, ya que es demasiado complejo para los optimizadores automatizados. En esta situacion, los programadores o administradores del sistema explicitamente cambian el codigo de manera que el sistema en general tenga un mejor rendimiento. Aunque se puede producir una mayor eficacia, es mucho mas caro que las optimizaciones automatizados.  Se suelen utilizar profilers para encontrar las secciones del programa que esta tomando la mayor cantidad de recursos - el cuello de botella. Ocasionalmente se puede creer en donde esta el cuello de botella, pero esta intuicion no siempre es correcta. La optimizacion de una pieza insignificante de codigo suele hacer poco para ayudar al rendimiento general.  Cuando el cuello de botella es localizado, la optimizacion general comienza con un replanteamiento del algoritmo utilizado en el programa. A menudo, un algoritmo particular se puede adaptar especificamente a un problema particular, para proporcionar un mejor rendimiento que un algoritmo generico. Por ejemplo, la tarea de clasificar una gran lista de articulos se realiza normalmente con una rutina quicksort, que es uno de los algoritmos genericos mas eficientes. Pero si alguna caracteristica de los elementos es explotable (por ejemplo, ya estan dispuestos en un orden particular), un metodo diferente se puede utilizar con mejores resultados.  Despues de que el programador este razonablemente seguro de que el mejor algoritmo se selecciona, la optimizacion de codigo puede comenzar. Los bucles pueden ser desenrollados (para reducir la sobrecarga, aunque esto a menudo puede conducir a una menor velocidad si se sobrecarga la memoria cache de CPU), usar tipos de datos lo mas peque\u00f1o posible, la aritmetica de enteros puede usarse en lugar de coma flotante, y asi sucesivamente.  La optimizacion a veces tiene el efecto secundario de socavar la legibilidad. Asi, las optimizaciones de codigo deben ser cuidadosamente documentadas (preferentemente con comentarios en linea), y debe evaluarse su efecto sobre el desarrollo futuro.  La optimizacion puede reducir la legibilidad y agregar codigo que se utiliza solo para mejorar el rendimiento. Esto puede complicar programas o sistemas, lo que hace que sean mas dificiles de mantener y depurar. Como resultado, la optimizacion o el rendimiento a menudo se realiza al final de la etapa de desarrollo. Donald Knuth hizo las siguientes declaraciones sobre la optimizacion:  \"Debemos olvidarnos de las peque\u00f1as eficiencias, por ejemplo, el 97% del tiempo: la optimizacion prematura es la raiz de todos los males\".\u200b  \"En las disciplinas de ingenieria ya establecidas, una mejoria del 12% facil de obtener, no se considera marginal y creo que el mismo punto de vista debe prevalecer en la ingenieria de software\"\u200b \"Optimizacion prematura\" es una frase usada para describir una situacion en la que un programador permite consideraciones de rendimiento que afectan al dise\u00f1o de una pieza de codigo. Esto puede resultar en un dise\u00f1o que no es tan limpio como podria haber sido o codigo que es incorrecto, ya que el codigo se complica por la optimizacion y el programador puede llegar a cometer errores a causa de esto.  Al decidir si se debe optimizar una parte especifica del programa, la ley de Amdahl deberia ser considerada siempre: el impacto sobre el programa en general depende en gran medida de cuanto tiempo se gasta realmente en esa parte especifica, que no siempre es claro al considerar el codigo sin un analisis del rendimiento.\u200b  Un mejor enfoque es por lo tanto el dise\u00f1ar en primer lugar, desde el dise\u00f1o realizar el codigo para luego ver que partes deben ser optimizadas. Un dise\u00f1o simple y elegante es a menudo mas facil de optimizar en esta etapa, y el profiling puede revelar problemas inesperados de rendimiento que no han sido abordadas por la optimizacion prematura.  En la practica, a menudo es necesario para mantener los objetivos de rendimiento en mente durante el dise\u00f1o de software, pero el programador equilibra los objetivos de dise\u00f1o y la optimizacion.  A veces el tiempo que se tarda en optimizar puede ser en si mismo un problema.  Optimizar un codigo existente no agrega nuevas caracteristicas, y peor, puede llegar a agregar bugs en codigo que previamente no los tenia. Debido a que la optimizacion manual a veces hace el codigo menos claro que el codigo no optimizado, la optimizacion puede impactar en la compatibilidad como consecuencia. La optimizacion tiene un precio y es importante asegurar que invertir en eso sera beneficioso.  Un optimizador automatico puede en si ser optimizado, ya sea para mejorar aun mas la eficiencia de los programas que produce o bien acelerar su propio funcionamiento. Una compilacion realizada con la optimizacion activada por lo general toma mas tiempo, aunque esto suele ser un problema solo cuando los programas son bastante grandes. ","snippet":"La optimizacion de software es el proceso de modificacion de un software para hacer que algun aspecto del mismo funcione de manera mas eficiente y/o utilizar menos recursos (mayor rendimiento). En gen","enlaces_salientes":["Optimizaci%C3%B3n_de_software","Optimizaci%C3%B3n_de_software","Optimizaci%C3%B3n_de_software","Software","Eficiente","Rendimiento","Programa_inform%C3%A1tico","Memoria_(inform%C3%A1tica)","Algoritmo","Ingenieros","Trade-off","Trade-off","Ofuscaci%C3%B3n","Cuello_de_botella","Ciencias_de_la_computaci%C3%B3n","Principio_de_Pareto","Ingenier%C3%ADa_de_software","Cache","Compilador","Pragma","Flag","Preprocesador","Lenguaje_ensamblador","JIT","Eficiencia_algor%C3%ADtmica","Desbordamiento_aritm%C3%A9tico","Compilador","Macros","C_(lenguaje_de_programaci%C3%B3n)","Funci%C3%B3n_inline","Programaci%C3%B3n_funcional","%C3%81rbol_de_sintaxis_abstracta","Lisp","C%2B%2B","Turing_completo","Compilador_optimizador","Algoritmo","Programador","Administrador_de_sistemas","An%C3%A1lisis_de_rendimiento_de_software","Quicksort","Comentario_(inform%C3%A1tica)","C%C3%B3digo_fuente","Mantenibilidad","Depuraci%C3%B3n_de_programas","Donald_Knuth","Tony_Hoare","Ley_de_Amdahl","An%C3%A1lisis_de_rendimiento_de_software","Profiling","Errores_de_software","An%C3%A1lisis_de_rendimiento_de_software","Niklaus_Wirth","Control_de_autoridades"]}
{"url":"Complejidad_temporal","titulo":"Complejidad temporal","contenido":"En informatica, la complejidad temporal es la complejidad computacional que describe la cantidad de tiempo que lleva ejecutar un algoritmo. La complejidad temporal se estima comunmente contando el numero de operaciones elementales realizadas por el algoritmo, suponiendo que cada operacion elemental requiere una cantidad fija de tiempo. Por lo tanto, la cantidad de tiempo necesario y el numero de operaciones elementales realizadas por el algoritmo difieren en un factor constante como maximo.  Dado que el tiempo de ejecucion de un algoritmo puede variar entre diferentes entradas del mismo tama\u00f1o, comunmente se considera la complejidad temporal del peor caso, que es la cantidad maxima de tiempo requerida para las entradas de un tama\u00f1o determinado. Menos comun, y usualmente especificado explicitamente, es la complejidad del caso promedio, que es el promedio del tiempo necesario para las entradas de un tama\u00f1o dado (esto tiene sentido porque solo hay un numero finito de entradas posibles de un tama\u00f1o dado). En ambos casos, la complejidad temporal generalmente se expresa como una funcion del tama\u00f1o de la entrada.\u200b Dado que esta funcion es generalmente dificil de calcular exactamente, y el tiempo de ejecucion para entradas peque\u00f1as generalmente no es consecuente, uno comunmente se enfoca en el comportamiento de la complejidad cuando aumenta el tama\u00f1o de entrada, es decir, el comportamiento asintotico de la complejidad. Por lo tanto, la complejidad temporal se expresa comunmente usando la notacion O grande, tipicamente O ( n ) , O ( n log \u2061 n ) , O ( n \u03b1 ) )} , O ( 2 n ) )} , etc., donde n es el tama\u00f1o de entrada en unidades de bits necesarios para representar la entrada.  Las complejidades algoritmicas se clasifican segun el tipo de funcion que aparece en la notacion O grande. Por ejemplo, un algoritmo con complejidad temporal O ( n ) es un algoritmo de tiempo lineal y un algoritmo con complejidad de tiempo O ( n \u03b1 ) )} por alguna constante \u03b1 > 1 es un algoritmo de tiempo polinomico .  La siguiente tabla resume algunas clases de complejidades de tiempo comunmente encontradas. En la tabla, poly(x) = xO(1), es decir, polinomial en x .  logaritmo iterado  Se dice que un algoritmo es tiempo constante (tambien escrito como tiempo O(1)) si el valor de T(n) esta limitado por un valor que no depende del tama\u00f1o de la entrada. Por ejemplo, acceder a cualquier elemento individual en una matriz requiere tiempo constante, ya que solo se debe realizar una operacion para localizarlo. De manera similar, encontrar el valor minimo en una matriz ordenada en orden ascendente tambien es una operacion de tiempo constante ya que el resultado es siempre el primer elemento. Sin embargo, encontrar el valor minimo en una matriz desordenada no es una operacion de tiempo constante ya que es necesario escanear cada elemento de la matriz para determinar el valor minimo. Por lo tanto, este caso es una operacion de tiempo lineal, que toma tiempo O(n). Sin embargo, si el numero de elementos se conoce de antemano y no cambia aun se puede decir que dicho algoritmo se ejecuta en tiempo constante.  A pesar del nombre \"tiempo constante\", el tiempo de ejecucion no tiene que ser independiente del tama\u00f1o del problema, pero un limite superior para el tiempo de ejecucion tiene que estar limitado independientemente del tama\u00f1o del problema. Por ejemplo, la tarea \"intercambia los valores de a y b si es necesario para que a \u2264 b \" se llama de tiempo constante aunque el tiempo pueda depender de si ya es cierto o no que a \u2264 b . Sin embargo, hay una constante t tal que el tiempo requerido es siempre como maximo t .  Estos son algunos ejemplos de fragmentos de codigo que se ejecutan en tiempo constante.  \u00a0:  Si T(n) es O(cualquier valor constante) se indica en notacion estandar como T(n) siendo O(1).  Se dice que un algoritmo toma tiempo logaritmico cuando T(n) = O(log n) . Dado que log a n y log b n estan relacionados por un multiplicador constante, y dicho multiplicador es irrelevante para la clasificacion big-O, el uso estandar para algoritmos de tiempo logaritmico es O(log n ) independientemente de la base del logaritmo que aparece en la expresion de T.  Los algoritmos que toman tiempo logaritmico se encuentran comunmente en operaciones con arboles binarios o cuando se usa la busqueda binaria.  Un algoritmo O(log n) se considera altamente eficiente, ya que la relacion entre el numero de operaciones y el tama\u00f1o de la entrada disminuye y tiende a cero cuando aumenta n. Un algoritmo que debe acceder a todos los elementos de su entrada no puede tomar tiempo logaritmico ya que el tiempo necesario para leer una entrada de tama\u00f1o n es del orden de n .  Un ejemplo de tiempo logaritmico es la busqueda dentro de un diccionario. Considere un diccionario D que contiene n entradas, ordenadas por orden alfabetico. Suponemos que, para 1 \u2264 k \u2264 n, uno puede acceder a la entrada k del diccionario en un tiempo constante. Usemos D(k) para denotar la k-esima entrada. Bajo estas hipotesis, la prueba de si una palabra w esta en el diccionario se puede hacer en tiempo logaritmico: considere D ( \u230a n / 2 \u230b ) , donde \u230a \u230b denota la funcion de piso . Si w = D ( \u230a n / 2 \u230b ) , entonces hemos terminado. Si no w < D ( \u230a n / 2 \u230b ) , continuamos la busqueda de la misma manera en la mitad izquierda del diccionario, de lo contrario continuamos de manera similar con la mitad derecha del diccionario. Este algoritmo es similar al metodo utilizado a menudo para encontrar una entrada en un diccionario de papel.  Se dice que un algoritmo se ejecuta en tiempo poli-logaritmico si T(n) = O ((log n )k ), para alguna constante k. Por ejemplo, el orden de una matriz de cadena se puede resolver en tiempo poli-logaritmico en una maquina paralela de acceso aleatorio.\u200b  Se dice que un algoritmo se ejecuta en tiempo sub-lineal si T(n)=o(n). En particular, esto incluye algoritmos con las complejidades de tiempo definidas anteriormente.  Los algoritmos tipicos que son exactos y, sin embargo, se ejecutan en tiempo sub-lineal usan el procesamiento paralelo (como lo hace el calculo del determinante de una matriz NC1), o alternativamente tienen suposiciones garantizadas en la estructura de entrada (como lo hacen la busqueda binaria de tiempo logaritmico y muchos algoritmos de mantenimiento de arboles). Sin embargo, los lenguajes formales, como el conjunto de todas las cadenas que tienen un bit en la posicion indicada por los primeros log (n) bits de la cadena pueden depender de cada bit de la entrada y, sin embargo, ser computables en tiempo sub-lineal.  El termino especifico algoritmo de tiempo sublineal generalmente se reserva a algoritmos que son diferentes a los anteriores en el sentido de que se ejecutan sobre modelos de maquinas seriales clasicas y donde no se permiten suposiciones previas en la entrada.\u200b Sin embargo, se les permite ser aleatorizados, y de hecho deben ser aleatorizados para todas las tareas excepto las mas triviales.  Como tal, un algoritmo debe proporcionar una respuesta sin leer toda la entrada, sus detalles dependen en gran medida del acceso permitido a la entrada. Por lo general, para una entrada que se representa como una cadena binaria b1,..., bk se supone que el algoritmo puede solicitar y obtener el valor de bi para cualquier i en tiempo O(1).  Los algoritmos de tiempo sub-lineal suelen ser aleatorios y solo proporcionan soluciones aproximadas. De hecho, la propiedad de una cadena binaria que solo tiene ceros puede demostrarse facilmente que no puede ser decidida por un algoritmo de tiempo sub-lineal (no aproximado). Los algoritmos de tiempo sub-lineales surgen naturalmente en la investigacion de property testing .  Se dice que un algoritmo toma tiempo lineal, o tiempo O(n), si su complejidad temporal es O(n). Informalmente, esto significa que el tiempo de ejecucion aumenta como maximo linealmente con el tama\u00f1o de la entrada. Mas precisamente, esto significa que hay una constante c tal que el tiempo de ejecucion es como maximo cn para cada entrada de tama\u00f1o n . Por ejemplo, un procedimiento que suma todos los elementos de una lista requiere un tiempo proporcional a la longitud de la lista, si el tiempo de adicion es constante o, al menos, esta limitado por una constante.  El tiempo lineal es la mejor complejidad de tiempo posible en situaciones en las que un algoritmo tiene que leer secuencialmente toda su entrada. Por lo tanto, se ha invertido mucha investigacion en descubrir algoritmos que exhiben tiempo lineal o, al menos, tiempo casi lineal. Esta investigacion incluye metodos de software y hardware. Hay varias tecnologias de hardware que explotan el paralelismo para proporcionar esto. Un ejemplo es la memoria direccionable por contenido . Este concepto de tiempo lineal se utiliza en algoritmos de coincidencia de cadenas como el algoritmo de Boyer-Moore y el algoritmo de Ukkonen .  Se dice que un algoritmo se ejecuta en tiempo cuasilineal (tambien denominado tiempo log-lineal) si T (n)=O(n log k n) para alguna constante positiva k;\u200b el caso de k=1 se llama tiempo linealitmico.\u200b Usando la notacion O suave, estos algoritmos son O(n). Los algoritmos de tiempo cuasilineal tambien son O(n1+\u03b5) para cada constante \u03b5> 0, y por lo tanto se ejecutan mas rapido que cualquier algoritmo de tiempo polinomico cuyo limite de tiempo incluye un termino nc para cualquier c>1)  Los algoritmos que se ejecutan en tiempo cuasilineal incluyen:  En muchos casos, el tiempo de ejecucion n log n es simplemente el resultado de realizar una operacion \u0398 (log n) n veces. Por ejemplo, el ordenamiento de un arboles binario crea un arbol binario insertando uno por uno los elementos de la matriz de tama\u00f1o n. Dado que la operacion de insercion en un arbol de busqueda binaria auto-balanceado toma tiempo O(log n ), todo el algoritmo toma tiempo O (n log n).  El ordenamiento por comparacion requiere al menos \u03a9(n log n) comparaciones en el peor de los casos porque log (n!) = \u0398(n log n), por aproximacion de Stirling. Esto tiempos tambien surgen con frecuencia de la relacion de recurrencia T(n) = 2T(n/2) + O (n).  Se dice que un algoritmo es de tiempo subcuadratico si T (n) = O(n2).  Por ejemplo, los algoritmos de ordenamiento simples basados en la comparacion son cuadraticos (por ejemplo, ordenamiento por insercion) pero se pueden encontrar algoritmos mas avanzados que son subcuadraticos (por ejemplo, ordenamiento shell). Ningun algoritmo de ordenamiento de proposito general se ejecuta en tiempo lineal pero la reduccion de un tiempo cuadratico a uno subcuadratico es de gran importancia practica.  Se dice que un algoritmo es de tiempo polinomico si su tiempo de ejecucion esta limitado por una expresion polinomica en el tama\u00f1o de la entrada para el algoritmo, es decir, T (n) = O(nk) para alguna constante positiva k.\u200b\u200b Los problemas para los que existe un algoritmo de tiempo polinomico determinista pertenecen a la clase de complejidad P, que es central en el campo de la teoria de la complejidad computacional. La tesis de Cobham establece que el tiempo polinomial es sinonimo de \"manejable\", \"factible\", \"eficiente\" o \"rapido\".\u200b  Algunos ejemplos de algoritmos de tiempo polinomiales:  En algunos contextos, especialmente en la optimizacion, uno diferencia entre el tiempo fuertemente polinomial y los algoritmos de tiempo debilmente polinomial . Estos dos conceptos solo son relevantes si las entradas a los algoritmos consisten en enteros.  El tiempo fuertemente polinomico se define en el modelo aritmetico de computacion. En este modelo de computacion, las operaciones aritmeticas basicas (suma, resta, multiplicacion, division y comparacion) toman un paso de unidad de tiempo para realizar, independientemente de los tama\u00f1os de los operandos. El algoritmo se ejecuta en tiempo fuertemente polinomico si:\u200b  Cualquier algoritmo con estas dos propiedades se puede convertir en un algoritmo de tiempo polinomico reemplazando las operaciones aritmeticas por algoritmos adecuados para realizar las operaciones aritmeticas en una maquina de Turing . Si el segundo de los requisitos anteriores no se cumple, entonces esto ya no es cierto. Dado el entero 2 n } (que ocupa un espacio proporcional a n en el modelo de maquina de Turing), es posible calcular 2 2 n }} con n multiplicaciones usando exponenciacion binaria. Sin embargo, el espacio utilizado para representar 2 2 n }} es proporcional a 2 n } y, por lo tanto, exponencial en lugar de polinomico en el espacio utilizado para representar la entrada. Por lo tanto, no es posible llevar a cabo este calculo en tiempo polinomico en una maquina de Turing pero es posible calcularlo polinomicamente con muchas operaciones aritmeticas.  Por el contrario, existen algoritmos que se ejecutan en varios pasos de la maquina de Turing delimitados por un polinomio en la longitud de la entrada codificada en binario pero no toman una serie de operaciones aritmeticas delimitadas por un polinomio en el numero de numeros de entrada. El algoritmo euclidiano para calcular el maximo divisor comun de dos enteros es un ejemplo. Dados dos enteros a y b , el algoritmo realiza O ( log \u2061 a + log \u2061 b ) operaciones aritmeticas en numeros con como maximo O ( log \u2061 a + log \u2061 b ) bits. Al mismo tiempo, el numero de operaciones aritmeticas no puede estar limitado por el numero de enteros en la entrada (que es constante en este caso, siempre hay solo dos enteros en la entrada). Debido a la ultima observacion, el algoritmo no se ejecuta en un tiempo fuertemente polinomico. Su tiempo real de ejecucion depende de las magnitudes de a y b y no solo en el numero de enteros en la entrada.  Se dice que un algoritmo que se ejecuta en tiempo polinomial pero que no es fuertemente polinomial se ejecuta en tiempo polinomial debil.\u200b Un ejemplo bien conocido de un problema para el que se conoce un algoritmo de tiempo polinomial debil, pero no se sabe que admita un algoritmo de tiempo polinomial fuerte, es la programacion lineal. El tiempo debilmente polinomial no debe confundirse con el tiempo pseudopolinomico.  El concepto de tiempo polinomial conduce a varias clases de complejidad en la teoria de la complejidad computacional. Algunas clases importantes definidas usando el tiempo polinomial son las siguientes.  P es la clase de complejidad temporal mas peque\u00f1a en una maquina determinista que es robusta en terminos de cambios en el modelo de maquina. (Por ejemplo, un cambio de una maquina de Turing de una sola cinta a una maquina de varias cintas puede conducir a una aceleracion cuadratica pero cualquier algoritmo que se ejecute en tiempo polinomico en un modelo tambien lo hace en el otro). Cualquier maquina abstracta tendra una clase de complejidad correspondiente a los problemas que se pueden resolver en tiempo polinomico en esa maquina.  Se dice que un algoritmo toma tiempo superpolinomial si T (n) no esta limitado por ningun polinomio. Usando una notacion omega chica, es el tiempo \u03c9(nc) para todas las constantes c, donde n es el parametro de entrada, tipicamente el numero de bits en la entrada.  Por ejemplo, un algoritmo que se ejecuta durante 2n pasos en una entrada de tama\u00f1o n requiere tiempo superpolinomial (mas especificamente, tiempo exponencial).  Un algoritmo que utiliza recursos exponenciales es claramente superpolinomial, pero algunos algoritmos son muy debilmente superpolinomiales. Por ejemplo, la prueba de primalidad Adleman \u2013 Pomerance \u2013 Rumely se ejecuta durante nO(log log n) en entradas de n bits; esto crece mas rapido que cualquier polinomio para una n lo suficientemente grande pero el tama\u00f1o de entrada debe hacerse tan grande como para volverse impractico si se quiere evitar ser dominado por un polinomio de peque\u00f1o grado.  Un algoritmo que requiere tiempo superpolinomial se encuentra fuera de la clase de complejidad P. La tesis de Cobham postula que estos algoritmos no son practicos. Dado que el problema P versus NP no esta resuelto, actualmente no se sabe de un algoritmo para un problema NP completo que se ejecute en tiempo polinomico.  Los algoritmos de tiempo cuasi polinomiales son algoritmos que funcionan mas lentamente que aquellos de tiempo polinomico pero no tan lentos como para ser de tiempo exponencial. El peor tiempo de ejecucion de un algoritmo de tiempo cuasi polinomial es 2 O ( ( log \u2061 n ) c ) )}} para una constante c > 0 . Para c = 1 obtenemos un algoritmo de tiempo polinomico, para c < 1 obtenemos un algoritmo de tiempo sub-lineal.  Los algoritmos de tiempo cuasi polinomiales generalmente surgen en reducciones de un problema NP-hard a otro problema. Por ejemplo, uno puede tomar una instancia de un problema NP-hard, digamos 3SAT, y convertirlo en una instancia de otro problema B, pero el tama\u00f1o de la instancia se convierte en 2 O ( ( log \u2061 n ) c ) )}} . En ese caso, esta reduccion no prueba que el problema B sea NP-hard; esta reduccion solo muestra que no existe un algoritmo de tiempo polinomico para B a menos que exista un algoritmo de tiempo cuasi polinomico para 3SAT (y, por lo tanto, todo NP). De manera similar, existen algunos problemas para los cuales conocemos algoritmos de tiempo cuasi-polinomiales pero no de tiempo polinomial. Tales problemas surgen en los algoritmos de aproximacion; Un ejemplo famoso es el problema del arbol Steiner dirigido, para el cual existe un algoritmo de aproximacion de tiempo cuasi polinomial que logra un factor de aproximacion de O ( log 3 \u2061 n ) n)} (n es el numero de vertices), pero la demostracion de la existencia de dicho algoritmo de tiempo polinomial es un problema abierto.  Otros problemas computacionales con soluciones de tiempo cuasi-polinomiales pero ninguna solucion de tiempo polinomial conocida incluye el problema de planted cliques en el que el objetivo es encontrar un clique mayor en la union de una clique y un grafo aleatorio. Aunque cuasi-polinomialmente solucionable, se ha conjeturado que el problema de planted cliques no tiene una solucion de tiempo polinomial; Esta conjetura se ha utilizado como un supuesto de dureza computacional para demostrar la dificultad de varios otros problemas en la teoria de juegos computacionales, property testing y el aprendizaje automatico.\u200b  La clase de complejidad QP consiste en todos los problemas que tienen algoritmos de tiempo cuasi-polinomiales. Se puede definir en terminos de DTIME de la siguiente manera:\u200b  En teoria de la complejidad, el problema de P versus NP sin resolver pregunta si todos los problemas en NP tienen algoritmos de tiempo polinomial. Todos los algoritmos mas conocidos para problemas NP-completos como 3SAT, etc. toman tiempo exponencial. De hecho, se conjetura para muchos problemas naturales completos de NP que no tienen algoritmos de tiempo sub-exponenciales. Aqui \"tiempo sub-exponencial\" se entiende como la segunda definicion presentada a continuacion. (Por otro lado, muchos problemas de grafos representados de forma natural por matrices de adyacencia se pueden resolver en tiempo subexponencial simplemente porque el tama\u00f1o de la entrada es el cuadrado del numero de vertices.) Esta conjetura (para el problema k-SAT) se conoce como la hipotesis del tiempo exponencial.\u200b Dado que se conjetura que los problemas NP-completos no tienen algoritmos de tiempo cuasi-polinomiales, algunos resultados de inaplicabilidad en el campo de los algoritmos de aproximacion suponen que los problemas NP-completos no tienen algoritmos de tiempo cuasi-polinomiales. Por ejemplo, vea los resultados de inaplicabilidad conocidos para el problema de la cobertura de conjuntos.  El termino tiempo sub-exponencial se usa para expresar que el tiempo de ejecucion de algun algoritmo puede crecer mas rapido que cualquier polinomio pero aun es significativamente mas peque\u00f1o que un exponencial. En este sentido, los problemas que tienen algoritmos de tiempo sub-exponenciales son algo mas manejables que aquellos que solo tienen algoritmos exponenciales. Generalmente no hay consenso respecto a la definicion precisa de \"sub-exponencial\",\u200b enumeramos las dos mas utilizados a continuacion:  Se dice que un problema puede resolverse con un tiempo sub-exponencial si se puede resolver en tiempos de ejecucion cuyos logaritmos crecen mas lentamente que cualquier polinomio dado. Mas precisamente, un problema toma un tiempo sub-exponencial si por cada \u03b5>0 existe un algoritmo que resuelve el problema en el tiempo O (2n\u03b5). El conjunto de todos estos problemas es la clase de complejidad SUBEXP que se puede definir en terminos de DTIME de la siguiente manera:\u200b\u200b\u200b\u200b  Esta nocion de sub-exponencial no es uniforme en terminos de \u03b5 en el sentido de que \u03b5 no es parte de la entrada y cada \u03b5 puede tener su propio algoritmo para el problema.  Algunos autores definen el tiempo sub-exponencial como tiempos de ejecucion en 2o(n).\u200b\u200b\u200b Esta definicion permite tiempos de ejecucion mayores que la primera definicion de tiempo sub-exponencial. Un ejemplo de dicho algoritmo de tiempo sub-exponencial es el algoritmo clasico mas conocido para la factorizacion de enteros, la criba general del cuerpo de numeros , que se ejecuta en un tiempo de 2 O ~ ( n 1 / 3 ) }(n^{1/3})}} , donde n es la longitud de la entrada. Otro ejemplo es el problema del isomorfismo de grafos, donde el algoritmo de Luks se ejecuta a tiempo 2 O ( n log \u2061 n ) })}} . (En 2015\u20132017, Babai redujo la complejidad de este problema al tiempo cuasi polinomial.)  Si el algoritmo puede ser sub-exponencial en el tama\u00f1o de la instancia, el numero de vertices o el numero de aristas, eso hace una diferencia. En la complejidad parametrizada, esta diferencia se hace explicita considerando pares ( L , k ) de problemas de decision y parametros k. SUBEPT es la clase de todos los problemas parametrizados que se ejecutan en tiempo sub-exponencial en k y en tiempo polinomico en el tama\u00f1o de entrada n:\u200b  Mas precisamente, SUBEPT es la clase de todos los problemas parametrizados ( L , k ) para los cuales hay una funcion computable f : N \u2192 N \\to \\mathbb {N} } con f \u2208 o ( k ) y un algoritmo que decide L en tiempo 2 f ( k ) \u22c5 poly ( n ) \\cdot }(n)} .  La hipotesis del tiempo exponencial (ETH ) es que 3SAT, el problema de satisfaccion de las formulas booleanas en forma conjuntiva normal con, como maximo, tres literales por clausula y con n variables, no puede resolverse en el tiempo 2o(n) . Mas precisamente, la hipotesis es que existe una constante absoluta c>0 tal que 3SAT no puede decidirse en tiempo 2cn por ninguna maquina determinista de Turing. Con m denotando el numero de clausulas, ETH es equivalente a la hipotesis de que k-SAT no puede resolverse en el tiempo 2o(m) para cualquier entero k\u00a0\u2265\u00a03\u200b La hipotesis del tiempo exponencial implica P = NP .  Se dice que un algoritmo es de tiempo exponencial, si T(n) esta limitado por 2poly(n), donde poly(n) es un polinomio en n. Mas formalmente, un algoritmo es de tiempo exponencial si T(n) esta limitado por O(2nk) para alguna constante k. Los problemas que admiten algoritmos de tiempo exponencial en una maquina de Turing determinista forman la clase de complejidad conocida como EXP.  A veces, el tiempo exponencial se usa para referirse a algoritmos que tienen T(n) = 2O(n), donde el exponente es como maximo una funcion lineal de n. Esto da lugar a la clase de complejidad E.  Un ejemplo de un algoritmo que se ejecuta en tiempo factorial es bogosort, un algoritmo de clasificacion notoriamente ineficiente basado en prueba y error. Bogosort ordena una lista de n elementos mezclando repetidamente la lista hasta que se encuentre ordenada. En el caso promedio, cada paso a traves del algoritmo bogosort examinara uno de los n! ordenamientos de los n elementos. Si los elementos son distintos, solo se ordena uno de esos pedidos. Bogosort comparte patrimonio con el teorema del mono infinito .  Se dice que un algoritmo es el tiempo exponencial doble si T (n) esta limitado por 22poli (n), donde poly (n) es algun polinomio en n. Dichos algoritmos pertenecen a la clase de complejidad 2-EXPTIME .  Los algoritmos de tiempo doble exponencial bien conocidos incluyen: ","snippet":"En informatica, la complejidad temporal es la complejidad computacional que describe la cantidad de tiempo que lleva ejecutar un algoritmo. La complejidad temporal se estima comunmente contando el num","enlaces_salientes":["Complejidad_temporal","Complejidad_temporal","Complejidad_temporal","An%C3%A1lisis_de_algoritmos","Ciencias_de_la_computaci%C3%B3n","Complejidad_de_algoritmo","Algoritmo","Cota_superior_asint%C3%B3tica","Funci%C3%B3n_matem%C3%A1tica","An%C3%A1lisis_asint%C3%B3tico","Cota_superior_asint%C3%B3tica","Bit","Vector_(inform%C3%A1tica)","Funci%C3%B3n_de_Ackermann","An%C3%A1lisis_de_amortizaci%C3%B3n","Estructura_de_datos_para_conjuntos_disjuntos","Logaritmo_iterado","Coloraci%C3%B3n_de_grafos","Cola_de_prioridades","B%C3%BAsqueda_binaria","%C3%81rbol_kd","Vector_(inform%C3%A1tica)","Triangulaci%C3%B3n_de_un_pol%C3%ADgono","Transformada_r%C3%A1pida_de_Fourier","Ordenamiento_de_burbuja","Ordenamiento_por_inserci%C3%B3n","Teorema_de_convoluci%C3%B3n","Correlaci%C3%B3n_parcial","P_(clase_de_complejidad)","Programaci%C3%B3n_lineal","Test_de_primalidad_AKS","Algoritmo_de_aproximaci%C3%B3n","%C3%81rbol_de_Steiner","Criba_general_del_cuerpo_de_n%C3%BAmeros","Factorizaci%C3%B3n_de_enteros","Problema_del_isomorfismo_de_grafos","E_(clase_de_complejidad)","Problema_del_viajante","Programaci%C3%B3n_din%C3%A1mica","EXPTIME","B%C3%BAsqueda_de_fuerza_bruta","Problema_del_viajante","B%C3%BAsqueda_de_fuerza_bruta","Vector_(inform%C3%A1tica)","Conjunto_de_instrucciones","Elemento_de_un_conjunto","Identidades_logar%C3%ADtmicas","Cota_superior_asint%C3%B3tica","%C3%81rbol_binario","B%C3%BAsqueda_binaria","Diccionario","Orden_alfab%C3%A9tico","Funciones_de_parte_entera","Algoritmo_paralelo","B%C3%BAsqueda_binaria","Lenguaje_formal","Algoritmo_probabilista","Algoritmo_de_aproximaci%C3%B3n","Computaci%C3%B3n_paralela","Memoria_de_contenido_direccionable","Algoritmo_de_b%C3%BAsqueda_de_cadenas_Boyer-Moore","Algoritmo_de_Ukkonen","Cota_superior_asint%C3%B3tica","Ordenamiento_por_mezcla","Quicksort","Heapsort","Ordenamiento_por_mezcla","Transformada_r%C3%A1pida_de_Fourier","Ordenamiento_con_%C3%A1rbol_binario","%C3%81rbol_binario","%C3%81rbol_binario_de_b%C3%BAsqueda_auto-balanceable","F%C3%B3rmula_de_Stirling","Relaci%C3%B3n_de_recurrencia","Algoritmo","Algoritmo_de_ordenamiento","Ordenamiento_por_inserci%C3%B3n","Ordenamiento_Shell","Elemento_mayorante_y_minorante","Anillo_de_polinomios","Problema_de_decisi%C3%B3n","Clase_de_complejidad","P_(clase_de_complejidad)","Teor%C3%ADa_de_la_complejidad_computacional","Tesis_de_Cobham","Ordenamiento_por_selecci%C3%B3n","Grafo","Optimizaci%C3%B3n_(matem%C3%A1tica)","M%C3%A1quina_de_Turing","Exponenciaci%C3%B3n_binaria","Algoritmo_de_Euclides","M%C3%A1ximo_com%C3%BAn_divisor","Programaci%C3%B3n_lineal","Tiempo_pseudo-polin%C3%B3mico","P_(clase_de_complejidad)","Clase_de_complejidad","Clase_de_complejidad","Problema_de_decisi%C3%B3n","Problema_de_decisi%C3%B3n","M%C3%A1quina_de_Turing","M%C3%A1quina_de_Turing_probabil%C3%ADstica","BQP","M%C3%A1quina_abstracta","Cota_superior_asint%C3%B3tica","Clase_de_complejidad","P_(clase_de_complejidad)","Tesis_de_Cobham","Clases_de_complejidad_P_y_NP","NP-completo","Reducci%C3%B3n_(complejidad)","NP-hard","Problema_de_satisfacibilidad_booleana","NP_(clase_de_complejidad)","%C3%81rbol_de_Steiner","Problema_de_la_clique","Grafo_aleatorio","Teor%C3%ADa_de_juegos","Aprendizaje_autom%C3%A1tico","DTIME","Clases_de_complejidad_P_y_NP","NP-completo","Algoritmo_de_aproximaci%C3%B3n","Problema_del_conjunto_de_cobertura","DTIME","Criba_general_del_cuerpo_de_n%C3%BAmeros","Problema_del_isomorfismo_de_grafos","Complejidad_parametrizada","Problema_de_decisi%C3%B3n","Funci%C3%B3n_computable","Problema_de_satisfacibilidad_booleana","Forma_normal_conjuntiva","Clases_de_complejidad_P_y_NP","EXPTIME","E_(clase_de_complejidad)","Stupid_sort","Ensayo_y_error","Teorema_del_mono_infinito","Eliminaci%C3%B3n_de_cuantificadores","ISBN","Digital_object_identifier","Terence_Tao","ISBN","Digital_object_identifier","Hendrik_Lenstra","Carl_Pomerance","Society_for_Industrial_and_Applied_Mathematics","ISSN","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","ISBN","L%C3%A1szl%C3%B3_Lov%C3%A1sz","ISBN","ISBN","Bibcode","Elsevier","ISSN","Digital_object_identifier","L%C3%A1szl%C3%B3_Babai","Avi_Wigderson","Springer-Verlag","Digital_object_identifier","ISBN","Digital_object_identifier","ISBN","Digital_object_identifier","ISSN","ArXiv","Digital_object_identifier","ArXiv","ISBN","Digital_object_identifier","Control_de_autoridades"]}
{"url":"Charles_E._Leiserson","titulo":"Charles E. Leiserson","contenido":"Charles E. Leiserson (10 de noviembre de 1953), es un cientifico informatico estadounidense, especializado en la teoria de computacion paralela y computacion distribuida, y particularmente en sus aplicaciones practicas. Como parte de este esfuerzo, desarrollo el lenguaje multihilo Cilk. Invento la red de interconexion Fat tree, una red de interconexion hardware universal usada en muchos supercomputadores, incluyendo el Connection Machine CM5, para el cual fue el arquitecto de red. Ayudo en el desarrollo de la teoria VLSI, incluyendo el metodo de recoordinacion de optimizacion digital con James B. Saxe y las matrices sistolicas con H. T. Kung. Concibio el concepto de los algoritmos cache-ignorante, que son algoritmos que no tienen parametros de configuracion para el tama\u00f1o de la cache o la longitud de linea de la cache, pero sin embargo usan la cache casi optimamente.  Leiserson recibio el titulo de B.S. en computacion y matematicas de la Universidad de Yale en 1975, y un titulo de Ph.D. en computacion de la Universidad de Carnegie Mellon en 1981, donde sus consejeros fueron Jon Bentley y H. T. Kung.  Despues se unio al MIT, donde ahora es profesor. Ademas, es el director del grupo de investigacion de Teoria de la Computacion en el Laboratorio de Computacion e Inteligencia Artificial del MIT, y fue el antiguo Director de Investigacion de Akamai Technologies.  La tesis doctoral de Leiserson, Area-Efficient VLSI Computation, gano el primer Premio de Tesis Doctorales de la ACM. En 1995, la NSF le concedio el premio Presidential Young Investigator Award (Premio Presidencial a Joven Investigador). En 2006 fue investido como miembro de la ACM.  Leiserson es coautor del libro de texto de algoritmos estandar Introduction to Algorithms (Introduccion a los Algoritmos) junto a Thomas H. Cormen, Ronald Rivest, y Clifford Stein. ","snippet":"Charles E. Leiserson (10 de noviembre de 1953), es un cientifico informatico estadounidense, especializado en la teoria de computacion paralela y computacion distribuida, y particularmente en sus apli","enlaces_salientes":["Charles_E._Leiserson","Charles_E._Leiserson","Charles_E._Leiserson","Oslo","Noruega","Estados_Unidos","Universidad_Yale","Universidad_Carnegie_Mellon","H._T._Kung","Jon_Bentley","Inform%C3%A1tico_te%C3%B3rico","Ingeniero","Profesor_de_educaci%C3%B3n_superior","Empresario","Matem%C3%A1tico","Matem%C3%A1ticas","Ciencias_de_la_informaci%C3%B3n_(tecnolog%C3%ADa)","Instituto_de_Tecnolog%C3%ADa_de_Massachusetts","Thomas_H._Cormen","Association_for_Computing_Machinery","Sociedad_de_Matem%C3%A1ticas_Aplicadas_e_Industriales","Beca_de_la_Asociaci%C3%B3n_Estadounidense_para_el_Avance_de_la_Ciencia","10_de_noviembre","1953","Ciencias_de_la_computaci%C3%B3n","Estados_Unidos","Computaci%C3%B3n_paralela","Computaci%C3%B3n_distribuida","Multihilo","Cilk","VLSI","H._T._Kung","Cach%C3%A9_(inform%C3%A1tica)","Bachelor_of_Science","Universidad_de_Yale","1975","Ph.D.","Universidad_de_Carnegie_Mellon","1981","Jon_Bentley","H._T._Kung","Massachusetts_Institute_of_Technology","Profesor","Akamai","Tesis_doctoral","Association_for_Computing_Machinery","1995","National_Science_Foundation","2006","Association_for_Computing_Machinery","Introduction_to_Algorithms","Thomas_H._Cormen","Ronald_Rivest","Clifford_Stein","Thomas_H._Cormen","Ronald_L._Rivest","Clifford_Stein","Thomas_H._Cormen","Ronald_L._Rivest","Introduction_to_Algorithms","MIT_Press","Thomas_H._Cormen","Ronald_L._Rivest","Clifford_Stein","Introduction_to_Algorithms","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Francia","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","ORCID","Scopus","Mathematics_Genealogy_Project","Open_Library"]}
{"url":"Ronald_L._Rivest","titulo":"Ronald Rivest","contenido":"Ronald Linn Rivest (6 de mayo de 1947) es un criptografo y profesor en el MIT.\u200b En dicha institucion es miembro del Departamento de Ingenieria Electrica y Ciencias de la Computacion, y del Laboratorio de Ciencias de la Computacion e Inteligencia Artificial.  Rivest es uno de los inventores del algoritmo RSA junto con Adi Shamir y Len Adleman.\u200b Es el inventor de los algoritmos de criptografia simetrica RC2, RC4, RC5, y co-inventor de RC6. Tambien fue autor de las funciones hash criptograficas MD2, MD4, MD5 y MD6. En 2006, publico su invento ThreeBallot, un sistema de voto que incorpora la habilidad para el votante de discernir que su voto fue contabilizado a la vez que se protege su privacidad.  Rivest recibio su licenciatura en Matematicas por la Universidad de Yale en 1969, y un doctorado en Ciencias de la Computacion por la Universidad de Stanford en 1974.\u200b Rivest es el coautor de Introduccion a los Algoritmos, un libro de texto sobre algoritmos, junto a Thomas H. Cormen, Charles E. Leiserson y Clifford Stein. Tambien fue fundador de RSA Security, Verisign y Peppercoin. Rivest ha investigado en los campos de la criptografia, seguridad en redes de la computacion y algoritmos.  Rivest es miembro de Academia Nacional de Ingenieria, la Academia Nacional de Ciencias, y es un miembro de la Association for Computing Machinery, la International Association for Cryptologic Research, y la Academia Estadounidense de las Artes y las Ciencias. Junto a Adi Shamir y Len Adleman, ha sido galardonado con el Premio Turing. Rivest es doctor honoris causa por la Universidad de Roma La Sapienza.\u200b En 2017, recibio el Premio Fundacion BBVA Fronteras del Conocimiento, en la categoria de tecnologias de la informacion y la comunicacion.   ","snippet":"Ronald Linn Rivest (6 de mayo de 1947) es un criptografo y profesor en el MIT.\u200b En dicha institucion es miembro del Departamento de Ingenieria Electrica y Ciencias de la Computacion, y del Laboratorio","enlaces_salientes":["Ronald_Rivest","Ronald_Rivest","Ronald_Rivest","6_de_mayo","1947","Schenectady","Nueva_York","Estados_Unidos","Estados_Unidos","Universidad_de_Stanford","Universidad_de_Yale","Robert_W._Floyd","Criptograf%C3%ADa","Criptograf%C3%ADa_asim%C3%A9trica","RSA","RC2","RC4","RC5","RC6","MD2","MD4","MD5","Firma_de_anillo","Instituto_Tecnol%C3%B3gico_de_Massachusetts","RSA","Introducci%C3%B3n_a_los_algoritmos","MD5","Academia_Nacional_de_Ciencias_(Estados_Unidos)","Academia_Estadounidense_de_las_Artes_y_las_Ciencias","Academia_Nacional_de_Ingenier%C3%ADa_(Estados_Unidos)","Association_for_Computing_Machinery","Asociaci%C3%B3n_Estadounidense_para_el_Avance_de_la_Ciencia","Premio_Turing","Premio_Marconi","Premios_Fundaci%C3%B3n_BBVA_Fronteras_del_Conocimiento","Criptograf%C3%ADa","Massachusetts_Institute_of_Technology","MIT_Computer_Science_and_Artificial_Intelligence_Laboratory","RSA","Adi_Shamir","Len_Adleman","Criptograf%C3%ADa_sim%C3%A9trica","RC2","RC4","RC5","RC6","Funci%C3%B3n_hash_criptogr%C3%A1fica","MD2","MD4","MD5","Licenciatura","Matem%C3%A1ticas","Universidad_de_Yale","Philosophi%C3%A6_doctor","Ciencias_de_la_Computaci%C3%B3n","Universidad_de_Stanford","Introduction_to_Algorithms","Algoritmos","Thomas_H._Cormen","Charles_E._Leiserson","Clifford_Stein","RSA_Security","Verisign","Academia_Nacional_de_Ciencias_de_Estados_Unidos","Association_for_Computing_Machinery","American_Academy_of_Arts_and_Sciences","Adi_Shamir","Len_Adleman","Turing_Award","Universidad_de_Roma_La_Sapienza","Premios_Fundaci%C3%B3n_BBVA_Fronteras_del_Conocimiento","Thomas_H._Cormen","Charles_E._Leiserson","Introduction_to_Algorithms","MIT_Press","ISBN","Thomas_H._Cormen","Charles_E._Leiserson","Clifford_Stein","Introduction_to_Algorithms","ISBN","Thomas_H._Cormen","Charles_E._Leiserson","Clifford_Stein","Introduction_to_Algorithms","ISBN","ISSN","Semantic_Scholar","Digital_object_identifier","Ole-Johan_Dahl","Kristen_Nygaard","Premio_Turing","2002","Alan_Kay","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Francia","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Australia","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","Mathematics_Genealogy_Project","Open_Library","Google_Acad%C3%A9mico","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Clifford_Stein","titulo":"Clifford Stein","contenido":"Clifford Stein es catedratico de informatica en la universidad de Columbia, en Nueva York. En 1987 se graduo en la universidad de Princeton; se licencio en el MIT en 1989, y en 1992 obtuvo en el mismo lugar su doctorado.  Es coautor del libro Introduction to Algorithms junto con Charles E. Leiserson, Ronald Rivest y Thomas H. Cormen, un libro de referencia en muchos cursos de programacion, algoritmos e informatica. ","snippet":"Clifford Stein es catedratico de informatica en la universidad de Columbia, en Nueva York. En 1987 se graduo en la universidad de Princeton; se licencio en el MIT en 1989, y en 1992 obtuvo en el mismo","enlaces_salientes":["Clifford_Stein","Clifford_Stein","Clifford_Stein","Catedr%C3%A1tico_de_Universidad","Inform%C3%A1tica","Universidad_de_Columbia","Nueva_York","Universidad_de_Princeton","MIT","Introducci%C3%B3n_a_los_algoritmos","Charles_E._Leiserson","Ronald_Rivest","Thomas_H._Cormen","Thomas_H._Cormen","Charles_E._Leiserson","Ronald_L._Rivest","Introducci%C3%B3n_a_los_algoritmos","MIT_Press","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Francia","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","BIBSYS","Mathematics_Genealogy_Project","Google_Acad%C3%A9mico"]}
{"url":"Introduction_to_Algorithms","titulo":"Introduccion a los algoritmos","contenido":"Introduccion a los algoritmos (Introduction to Algorithms en version original) es un libro de Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest y Clifford Stein. Tiene tres ediciones en ingles, la primera 1990, sin Clifford Stein, una segunda en 2001, y una tercera en 2009. Se usa como libro de texto para ense\u00f1ar algoritmos en algunas universidades.  Cormen ense\u00f1a en el Dartmouth College, Rivest y Leiserson dan clases en el MIT, y Clifford Stein ense\u00f1a en la Universidad de Columbia.  La primera edicion del libro no incluia a Stein como autor, y el libro empezo a ser conocido por el acronimo CLR. Despues que se a\u00f1adiera al cuarto autor en la segunda edicion, algunos empezaron a referirse al libro como el CLRS (otros siguieron insistiendo en el sobrenombre anterior llamandolo \"la segunda edicion del CLR\"). La primera edicion del libro tambien se conocio como \"El Gran Libro Blanco (de algoritmos)\", en ingles: \"The Big White Book (of Algorithms).\" Con la segunda edicion, el color predominante en la portada era ahora el verde y esto hizo que el sobrenombre se acortara a \"El gran libro (de los Algoritmos).\"\u200b\u200b  Este libro tambien dispone de un CD para ampliar conocimiento con ejemplos en Java.  El movil de la portada, Big Red de Alexander Calder, se encuentra en la Coleccion Phillips, un museo de arte moderno en Dupont Circle in Washington\u00a0D.\u00a0C. ","snippet":"Introduccion a los algoritmos (Introduction to Algorithms en version original) es un libro de Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest y Clifford Stein. Tiene tres ediciones en ingles,","enlaces_salientes":["Introducci%C3%B3n_a_los_algoritmos","Introducci%C3%B3n_a_los_algoritmos","Introducci%C3%B3n_a_los_algoritmos","Thomas_H._Cormen","Charles_E._Leiserson","Ronald_Rivest","Clifford_Stein","Libro_de_texto","Algoritmo","Idioma_ingl%C3%A9s","MIT_Press","Estados_Unidos","Thomas_H._Cormen","Charles_E._Leiserson","Ron_Rivest","Clifford_Stein","Thomas_H._Cormen","Dartmouth_College","Ron_Rivest","Charles_E._Leiserson","Massachusetts_Institute_of_Technology","Clifford_Stein","Columbia_University","Java_(lenguaje_de_programaci%C3%B3n)","M%C3%B3vil_(escultura)","Alexander_Calder","Colecci%C3%B3n_Phillips","Dupont_Circle","MIT_Press","ISBN","ISBN","Control_de_autoridades","Open_Library"]}
{"url":"Microsoft_.NET","titulo":"Microsoft .NET","contenido":".NET es un framework de Microsoft que hace un enfasis en la transparencia de redes, con independencia de plataforma de hardware y que permite un rapido desarrollo de aplicaciones. Basada en ella, la empresa intenta desarrollar una estrategia horizontal que integre sus productos, desde el sistema operativo hasta las herramientas de mercado.  .NET podria considerarse una respuesta de Microsoft al creciente mercado de los negocios en entornos Web, como competencia a la plataforma Java de Oracle Corporation y a los diversos framework de desarrollo web basados en PHP. Su propuesta es ofrecer una manera rapida y economica, a la vez que segura y robusta, de desarrollar aplicaciones \u2013o como la misma plataforma las denomina, soluciones\u2013 permitiendo una integracion mas rapida y agil entre empresas y un acceso mas simple y universal a todo tipo de informacion desde cualquier tipo de dispositivo.  La plataforma .NET de Microsoft es un componente de software que puede ser a\u00f1adido al sistema operativo Windows. Provee un extenso conjunto de soluciones predefinidas para necesidades generales de la programacion de aplicaciones, y administra la ejecucion de los programas escritos especificamente con la plataforma. Esta solucion es el producto principal en la oferta de Microsoft, y pretende ser utilizada por la mayoria de las aplicaciones creadas para la plataforma Windows.  .NET Framework se incluye en Windows Server 2008, Windows Vista y Windows 7. De igual manera, la version actual de dicho componente puede ser instalada en Windows XP, y en la familia de sistemas operativos Windows Server 2003. Una version \"reducida\" de .NET Framework esta disponible para la plataforma Windows Mobile, incluyendo telefonos inteligentes.  La norma (incluido en ECMA-335, ISO/IEC 23271) que define el conjunto de funciones que debe implementar la biblioteca de clases base (BCL por sus siglas en ingles, tal vez el mas importante de los componentes de la plataforma), define un conjunto funcional minimo que debe implementarse para que el marco de trabajo sea soportado por un sistema operativo. Aunque Microsoft implemento esta norma para su sistema operativo Windows, la publicacion de la norma abre la posibilidad de que sea implementada para cualquier otro sistema operativo existente o futuro, permitiendo que las aplicaciones corran sobre la plataforma independientemente del sistema operativo para el cual haya sido implementada. El Proyecto Mono emprendido por Ximian pretende realizar la implementacion de la norma para varios sistemas operativos adicionales bajo el marco del codigo abierto.  Los principales componentes del marco de trabajo son:  Debido a la publicacion de la norma para la infraestructura comun de lenguajes (CLI por sus siglas en ingles), el desarrollo de lenguajes se facilita, por lo que el marco de trabajo .NET soporta ya mas de 20 lenguajes de programacion y es posible desarrollar cualquiera de los tipos de aplicaciones soportados en la plataforma con cualquiera de ellos, lo que elimina las diferencias que existian entre lo que era posible hacer con uno u otro lenguaje.  Algunos de los lenguajes desarrollados para el marco de trabajo .NET son: C#, Visual Basic .NET, Delphi (Object Pascal), C++, F#, J#, Perl, Python, Fortran, Prolog (existen al menos dos implementaciones, el P#\u200b y el Prolog.NET\u200b), Cobol y PowerBuilder.  El CLR es el verdadero nucleo del framework de .NET, entorno de ejecucion en el que se cargan las aplicaciones desarrolladas en los distintos lenguajes, ampliando el conjunto de servicios del sistema operativo (W2k y W2003). Permite integrar proyectos en distintos lenguajes soportados por la plataforma .Net, como C++, Visual Basic, C#, entre otros.  La herramienta de desarrollo compila el codigo fuente de cualquiera de los lenguajes soportados por .NET en un codigo intermedio, el CIL (Common Intermediate Language) antes conocido como MSIL (Microsoft Intermediate Language), similar al BYTECODE de Java. Para generarlo, el compilador se basa en la especificacion CLS (Common Language Specification) que determina las reglas necesarias para crear el codigo MSIL compatible con el CLR.  Para ejecutarse se necesita un segundo paso, un compilador JIT (Just-In-Time) es el que genera el codigo maquina real que se ejecuta en la plataforma del cliente. De esta forma se consigue con .NET independencia de la plataforma de hardware. La compilacion JIT la realiza el CLR a medida que el programa invoca metodos. El codigo ejecutable obtenido se almacena en la memoria cache del ordenador, siendo recompilado de nuevo solo en el caso de producirse algun cambio en el codigo fuente.  Es el encargado de proveer lo que se llama codigo administrado, es decir, un entorno que provee servicios automaticos al codigo que se ejecuta. Los servicios son variados:  En agosto de 2000, Microsoft, Hewlett-Packard e Intel trabajaron conjuntamente para estandarizar el lenguaje de programacion C# y una Infraestructura de Lenguaje Comun (CLI por sus siglas en ingles). Para diciembre de 2001, ambos fueron ratificados por los estandares Internacionales ECMA.\u200b\u200b ISO tambien siguio los pasos para abril de 2003.  Mientras Microsoft y sus socios de negocios ganaban patentes para los lenguajes CLI y C#, ECMA e ISO solicitaron que era esencial que la implementacion estuviera disponible bajo \u201cterminos no discriminatorios\u201d. Ademas de alcanzar estos terminos, las compa\u00f1ias tambien accedian a dejar estas patentes disponibles. Sin embargo, esto no aplico para la parte del .NET Framework, que no esta cubierto por los estandares ECMA/ISO. Esto incluye Windows Forms, ADO.NET y ASP.NET.  Hasta 2015, .NET brindaba unicamente soporte para Windows, ademas de que su codigo tenia una licencia patentada. Ello derivo en la creacion de implementaciones libres, tales como Mono. No obstante, Mono seguia teniendo limitaciones frente a .NET, sobre todo en lo relacionado con WinForms (herramienta para interfaces graficas de Windows), ademas de ciertos problemas de patentes. Por ello, Microsoft decidio liberar parte del framework .NET bajo el nombre de .NET Core. Posteriormente, se le a\u00f1adio soporte para ASP .NET, ML .NET y WinForms. Se espera que .NET Core reemplace a .NET Framework en un futuro.  A largo plazo Microsoft pretende reemplazar el API Win32 o Windows API con la plataforma .NET. Esto debido a que el API Win32 o Windows API fue desarrollada sobre la marcha, careciendo de documentacion detallada, uniformidad y cohesion entre sus distintos componentes, provocando multiples problemas en el desarrollo de aplicaciones para el sistema operativo Windows. La plataforma .NET pretende solventar la mayoria de estos problemas proveyendo un conjunto unico y expandible con facilidad de bloques interconectados, dise\u00f1ados de forma uniforme y bien documentados, que permitan a los desarrolladores tener a mano todo lo que necesitan para producir aplicaciones solidas.  Debido a las ventajas que la disponibilidad de una plataforma de este tipo puede darle a las empresas de tecnologia y al publico en general, muchas otras empresas e instituciones se han unido a Microsoft en el desarrollo y fortalecimiento de la plataforma .NET, ya sea por medio de la implementacion de la plataforma para otros sistemas operativos aparte de Windows (Proyecto Mono de Ximian/Novell para GNU/Linux/Mac OS X/BSD/Solaris), el desarrollo de lenguajes de programacion adicionales para la plataforma (Lexico para hispanoparlantes, ANSI C de la Universidad de Princeton, NetCOBOL de Fujitsu, Delphi de Borland, PowerBuilder de Sybase entre otros) o la creacion de bloques adicionales para la plataforma (como controles, componentes y bibliotecas de clases adicionales); siendo algunas de ellas software libre, distribuibles bajo la licencia GPL.  Con esta plataforma, Microsoft incursiona de lleno en el campo de los Servicios Web y establece el XML como norma en el transporte de informacion en sus productos y lo promociona como tal en los sistemas desarrollados utilizando sus herramientas.  La biblioteca de clases base (BCL por sus siglas en ingles) maneja la mayoria de las operaciones basicas que se encuentran involucradas en el desarrollo de aplicaciones, incluyendo entre otras:  Esta funcionalidad se encuentra organizada por medio de espacios de nombres jerarquicos.  La Biblioteca de Clases Base se clasifica, en cuatro grupos clave:  Un ensamblado es un compilado EXE o DLL que contiene codigo CIL que se genera desde los diferentes lenguajes .NET, y que es ejecutado por el CLR. Puede contener una o varias clases al igual que uno o varios namespaces.\u200b  Los ensamblados pueden tener diferentes decoradores que definen el entorno de ejecucion de los mismos COM+, DCOM, Remoting, etc.  Notas: ","snippet":".NET es un framework de Microsoft que hace un enfasis en la transparencia de redes, con independencia de plataforma de hardware y que permite un rapido desarrollo de aplicaciones. Basada en ella, la e","enlaces_salientes":["Microsoft_.NET","Microsoft_.NET","Microsoft_.NET","Framework","Desarrollador_de_software","Microsoft","Licencia_de_software","Licencia_MIT","Software_privativo","Ciclo_de_vida_del_lanzamiento_de_software",".NET_Core","Framework","Microsoft","Red_de_computadoras","Hardware","Aplicaci%C3%B3n_inform%C3%A1tica","Sistema_operativo","World_Wide_Web","Plataforma_Java","Oracle_Corporation","Framework","PHP","Microsoft","Software","Sistema_operativo","Windows","Programaci%C3%B3n","Windows_Server_2008","Windows_Vista","Windows_7","Windows_XP","Windows_Server_2003","Windows_Mobile","Smartphone","Microsoft","Sistema_operativo","Windows","Proyecto_Mono","Ximian","Lenguaje_de_programaci%C3%B3n","C_Sharp","Visual_Basic_.NET","Embarcadero_Delphi","Object_Pascal","C%2B%2B","F_Sharp","J_Sharp","Perl","Lenguaje_de_programaci%C3%B3n_Python","Fortran","Prolog","P_Sharp","Cobol","PowerBuilder","Common_Language_Runtime","Common_Intermediate_Language","MSIL","Compilaci%C3%B3n_en_tiempo_de_ejecuci%C3%B3n","C%C3%B3digo_m%C3%A1quina","Depuraci%C3%B3n_de_programas","Multiproceso","Hilo_(inform%C3%A1tica)","Agosto_de_2000","Abril_de_2003","Infraestructura_de_Lenguaje_Com%C3%BAn","C_Sharp","ECMA","Organizaci%C3%B3n_Internacional_para_la_Estandarizaci%C3%B3n","Windows_Forms","ADO.NET","ASP.NET",".NET_Core","Proyecto_Mono","Microsoft","Interfaz_de_programaci%C3%B3n_de_aplicaciones","Win32","Windows_API","Interfaz_de_programaci%C3%B3n_de_aplicaciones","Win32","Windows_API","Sistema_operativo","Windows","Microsoft","Sistema_operativo","Windows","Proyecto_Mono","Ximian","Novell","GNU/Linux","Mac_OS_X","BSD","Solaris_(sistema_operativo)","Lenguajes_de_programaci%C3%B3n","Lexico","ANSI_C","Universidad_de_Princeton","Fujitsu","Delphi","Borland","PowerBuilder","Sybase","Software_libre","Licencia_p%C3%BAblica_general_de_GNU","Plataforma_de_desarrollo","Microsoft","Servicios_Web","XML","Idioma_ingl%C3%A9s","Dispositivos_perif%C3%A9ricos","ADO.NET","XML","TCP/IP","P%C3%A1gina_web","ASP.NET","GDI%2B","Sistema_operativo","Cadenas_de_caracteres","Expresi%C3%B3n_regular","Vector_(programaci%C3%B3n)","Interfaz_de_programaci%C3%B3n_de_aplicaciones","Win32","Windows_API","Compilaci%C3%B3n","Servicios_Web","XML","Ensamblado_(Microsoft_.NET)","EXE","DLL","Common_Intermediate_Language",".NET","Common_Language_Runtime","Common_Language_Runtime","Windows_XP#Service_Pack_1","Windows_XP#Service_Pack_2","Windows_XP#Service_Pack_3","Windows_Vista","Windows_7#Service_Pack_1","Windows_8","Windows_8.1","Windows_10#Versi\u00f3n_1507_(versi\u00f3n_inicial)","Windows_10#Versi\u00f3n_1511_(November_Update)","Windows_10#Versi\u00f3n_1607_(Anniversary_Update)","Windows_10#Versi\u00f3n_1703_(Creators_Update)","Windows_10#Versi\u00f3n_1709_(Fall_Creators_Update)","Windows_10#Versi\u00f3n_1803_(April_2018_Update)","Windows_10#Versi\u00f3n_1809_(October_2018_Update)","Windows_10#Versi\u00f3n_1903_(May_2019_Update)","Windows_10#Versi\u00f3n_1909_(November_2019_Update)","Windows_10#Versi\u00f3n_2004_(May_2020_Update)","Windows_10#Versi\u00f3n_20H2_(October_2020_Update)","Windows_10#Versi\u00f3n_21H1_(May_2021_Update)","Windows_10#Versi\u00f3n_21H2_(November_2021_Update)","Windows_11","Microsoft_Visual_Studio_.NET","Programaci%C3%B3n_orientada_a_objetos",".NET_Compact_Framework","C_Sharp","Proyecto_Mono","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Telecomunicaciones","titulo":"Telecomunicacion","contenido":"Una telecomunicacion es toda transmision y recepcion de se\u00f1ales de cualquier naturaleza, tipicamente electromagneticas, que contengan signos, sonidos, imagenes o, en definitiva, cualquier tipo de informacion que se desee comunicar a cierta distancia.\u200b Por metonimia, tambien se denomina telecomunicacion (o telecomunicaciones, indistintamente)[nota 1]\u200b a la disciplina que estudia, dise\u00f1a, desarrolla y explota aquellos sistemas que permiten dichas comunicaciones; de forma analoga, la ingenieria de telecomunicaciones resuelve los problemas tecnicos asociados a esta disciplina.  Las telecomunicaciones son una infraestructura basica del contexto actual. La capacidad de poder comunicar cualquier orden militar o politica de forma casi instantanea ha sido radical en muchos acontecimientos historicos de la Edad Contemporanea \u2014el primer sistema de telecomunicaciones moderno aparece durante la Revolucion Francesa\u2014. Pero ademas, la telecomunicacion constituye hoy en dia un factor social y economico de gran relevancia. Asi, estas tecnologias adquieren una importancia como su utilidad en conceptos de la globalizacion o la sociedad de la informacion y del conocimiento; que se complementa con la importancia de las mismas en cualquier tipo de actividad mercantil, economico-financiera, profesional y empresarial. Los medios de comunicacion de masas tambien se valen de las telecomunicaciones para compartir contenidos al publico, de gran importancia a la hora de entender el concepto de sociedad de masas.  La telecomunicacion incluye muchas tecnologias como la radio, television, telefono y telefonia movil, comunicaciones de datos, redes informaticas, Internet, radionavegacion o GPS o telemetria. Gran parte de estas tecnologias, que nacieron para satisfacer necesidades militares o cientificas, ha convergido en otras enfocadas a un consumo no especializado llamadas tecnologias de la informacion y la comunicacion, de gran importancia en la vida diaria de las personas, las empresas o las instituciones estatales y politicas. Es por este contexto que la tendencia actual es la comunion de la telecomunicacion con otras disciplinas como la informatica, la electronica o la telematica para dise\u00f1ar y ofrecer estos productos y servicios, lo suficientemente complejos y multidisciplinares como para que la frontera entre la aportacion de dichas disciplinas no sea percibida por las personas \u2014a pesar de que un informatico, un electrico y un telecomunicador tengan distintos ambitos disciplinarios\u2014.  El termino \u00abtelecomunicacion\u00bb tiene su origen en el frances Telecommunication, palabra que invento el ingeniero Edouard Estaunie al a\u00f1adir a la palabra latina communicare \u2014compartir\u2014 el prefijo griego tele-, que significa distancia.\u200b Con este termino pretendia usar una misma palabra para denominar a la \u00abtransmision del conocimiento a distancia mediante el uso de la electricidad\u00bb, que hasta ese momento era la telegrafia y la telefonia, y lo publico por primera vez en Traite Practique de Telecommunication Electrique (Telegraphie-Telephonie) de 1904.\u200b  El castellano asimilo con exito el prestamo en varios ambitos de la vida publica, academica, politica y empresarial. Ya en el 1907 se impartia una asignatura de \u00abtelecomunicacion\u00bb en la Escuela Oficial de Telegrafia de Madrid con los contenidos de telefonia, telegrafia, radiotelegrafia y radiotelefonia; y en el a\u00f1o 1920 Juan Antonio Galvarriato publico El Correo y la Telecomunicacion en Espa\u00f1a.\u200b La vida politica tambien se habituo a usar el termino y, en 1921, el gobierno de Manuel Allendesalazar solicito un ambicioso plan de ampliacion de los \u00abservicios de Telecomunicacion\u00bb, que si bien nunca llego a materializarse debido al Desastre de Annual, demuestra el uso del termino en castellano.\u200b De hecho, en esa epoca \u00abtelecomunicacion\u00bb era sinonimo de modernidad, por lo que se incorporo al nombre de muchas compa\u00f1ias de la epoca como la \"Compa\u00f1ia Iberica de Telecomunicacion\" de Antonio Castilla Lopez en 1916 o la \"Compa\u00f1ia de Telecomunicacion y Electricidad\" en 1919.\u200b  La consolidacion real del termino a nivel internacional llego con la constitucion de la Union Internacional de Telecomunicaciones (UIT) en la Conferencia de Madrid de 1932, en la que se definio \u00abtelecomunicacion\u00bb como \u00abtoda comunicacion telegrafica o telefonica de signos, se\u00f1ales, escritos, imagenes y sonidos de cualquier naturaleza, por hilos, radio u otros sistemas o procedimientos electrica o visual (semaforos)\u00bb.\u200b El avance de la telecomunicacion acabo por dejar desfasada esta definicion y, en el actual Reglamento de Radiocommunicaciones, se redefine el termino:  \u226a\u00a0Telecomunicacion: Toda transmision, emision o recepcion de signos, se\u00f1ales, escritos, imagenes, sonidos o informaciones de cualquier naturaleza por hilo, radioelectricidad, medios opticos u otros sistemas electromagneticos (CS).\u00a0\u226b\u200b  Por metonimia, el estudio de la telecomunicacion o las telecomunicaciones se denomina \u00abTelecomunicacion\u00bb o \u00abTelecomunicaciones\u00bb indistintamente.  Aunque como se ha visto, la \u00abtelecomunicacion\u00bb como estudio unificado de las comunicaciones a distancia es una idea reciente, siempre han existido medios de comunicacion que tambien son estudiados por esta disciplina. A lo largo de la historia han existido diferentes situaciones en las que ha sido necesaria una comunicacion a distancia, como en la guerra o en el comercio.\u200b Sin embargo, la base academica para el estudio de estos medios, como la teoria de la informacion, datan de mediados del siglo xx.  Conforme las distintas civilizaciones empezaron a extenderse por territorios cada vez mayores, fue necesario un sistema organizado de comunicaciones que permitiese el control efectivo de esos territorios.\u200b Es probable que el metodo de telecomunicaciones mas antiguo sea el realizado con mensajeros, personas que recorrian largas distancias con sus mensajes. Hay registros de que ya las primeras civilizaciones como la sumeria, la persa, la egipcia o la romana implementaron diversos sistemas de correo postal a lo largo de sus respectivos territorios.  Las primeras tecnologias usadas en la telecomunicacion usaban las se\u00f1ales visuales como las almenaras o las se\u00f1ales de humo, o acusticas como mediante el uso de tambores, cuernos o bramaderas.\u200b  Asi, el dramaturgo griego Esquilo (525-456\u00a0a.\u00a0C.) relata en su obra Agamenon que el personaje homonimo de la mitologia comunico a la ciudad de Argos, de la que era rey, y a su esposa Clitemnestra, la victoria de los aqueos sobre Troya mediante una cadena de se\u00f1ales de fuego que iban de un punto a otro.\u200b\u200b Tambien el historiador griego Polibio (204-122\u00a0a.\u00a0C.) explica otro ejemplo de comunicaciones a larga distancia, el telegrafo hidraulico, que segun cuenta fue desarrollado por Eneas el Tactico en el siglo iv\u00a0a.\u00a0C..\u200b\u200b Consistia en dos cubas de agua provistas de sendos grifos y, sumergida de forma vertical, una tablilla con los signos y se\u00f1ales que se deseaban transmitir. El emisor alertaba al receptor con antorchas el momento en el que ambos debian abrir y cerrar el agua, de tal forma que el nivel del agua indicaba que mensaje de la tablilla se deseaba transmitir.\u200b Sin embargo, estas primeras manifestaciones tecnicas no dieron como resultado sistemas de telecomunicacion reales, sino que hasta la Edad Contemporanea no se inventaron formas para realizar comunicaciones a distancia. Fue el correo postal, en sus diferentes manifestaciones, el que asumio el papel de comunicar a las personas durante casi toda la historia.\u200b  Mas reciente es el uso de los telegrafos opticos, considerado el primer sistema de telecomunicacion moderno al permitir codificar mensajes que no habian sido prefijados con anterioridad; hasta entonces, se transmitian mensajes sencillos, como 'peligro' o 'victoria', sin la posibilidad de dar detalles o descripciones. Se trataba de unas estructuras provistas de brazos moviles que, mediante cuerdas y poleas, adoptaban diferentes posiciones con las que codificar el mensaje.\u200b Aunque fue Robert Hooke quien, en 1684, presento a la Royal Society un primer dise\u00f1o detallado de un telegrafo optico,\u200b\u200b no fue hasta principios del siglo xix en Francia cuando se implemento de una forma eficaz. Fue durante la Revolucion francesa, cuando existian en el pais una necesidad importante de poder transmitir las ordenes de una forma eficaz y rapida,\u200b cuando el ingeniero Claude Chappe y sus hermanos instalaron 556 telegrafos opticos que cubrian una distancia de casi 5000 kilometros.\u200b La primera linea, de 22 torres y 230 kilometros, se dispuso en 1792 entre Paris y Lille,\u200b y en 1794, transmitio la noticia de la victoria francesa en Conde-sur-l'Escaut:\u200b  El sistema, que resulto ser un exito en el terreno militar, se extendio por toda Europa aunque con las modificaciones propias de cada pais, como el dise\u00f1o de Murray en Gran Breta\u00f1a\u200b o el de Breguet y Betancourt, asi como el de Mathe, en Espa\u00f1a.\u200b  Aunque fue en el 1729 cuando el cientifico Stephen Gray habia descubierto formalmente que la electricidad podia ser transmitida, los primeros experimentos tecnicos no se materializaron hasta el siglo xix, cuando Alessandro Volta presento a la Royal Society un instrumento capaz de generar corriente continua, la pila voltaica \u2014vease la historia de la electricidad\u2014. Por ejemplo, un experimento inicial en la telegrafia electrica fue el telegrafo electroquimico creado por el cientifico aleman Samuel Thomas von Sommerring en 1809,[nota 3]\u200b basado en un dise\u00f1o menos robusto de 1804 del cientifico espa\u00f1ol Francisco Salva Campillo.\u200b\u200b\u200b Este invento empleaba se\u00f1ales electricas que se enviaban por diversos cables metalicos, una por cada letra. En el extremo receptor las corrientes electrolizaban el acido de unos tubos individuales de vidrio liberandose corrientes de burbujas de hidrogeno en el tubo correspondiente para que fueran vistas por el operador del receptor.\u200b\u200b  El telegrafo electrico, que se desarrollo en la primera mitad del siglo xix, tiene su origen en multitud de experimentos y nuevas tecnologias, por lo que no se puede mencionar un unico inventor aunque si algunos nombres importantes.\u200b  Por ejemplo, el diplomatico ruso Pavel Schilling construyo en 1832, en su propio apartamento, un telegrafo electromagnetico que usaba seis galvanometros como receptores cuyas agujas se\u00f1alaban el caracter enviado.\u200b Otro ejemplo lo encontramos en los celebres cientificos Gauss y Weber, quienes en 1833 instalaron una linea telegrafica entre la universidad y el observatorio astronomico de Gotinga donde ambos trabajaban. Consiguieron comunicarse haciendo mover la aguja de un magnetometro, con la que coordinaban el tiempo, y llegaron a desarrollar un codigo de 5 bits.\u200b  Sin embargo no fue hasta la primera patente de un telegrafo cuando este salio de los laboratorios. Fue en 1837, cuando William Fothergill Cooke, quien se asocio con el profesor de fisica Charles Wheatstone, patento un telegrafo de cinco conductores electricos que hacian mover otras cinco agujas imantadas con las que se\u00f1alar una de las 20 letras que tenia el aparato.\u200b En julio de ese mismo a\u00f1o hicieron una demostracion de su invento entre las estaciones de Euston y Camden Town,\u200b pero no fue hasta el 9 de julio de 1839 cuando empezo a funcionar su invento entre la estacion de Paddington, en Londres y la de West Drayton, a 21 kilometros de distancia.\u200b Esta vez, sin embargo, utilizaron una variante de su invento que usaba solo dos agujas y utilizaba un codigo de pulsos electricos positivos y negativos para cada caracter.\u200b Finalmente, tras conseguir reducir el numero de agujas de su invento a una sola, Cooke y Wheatstone fundaron la Electric Telegraph Company en 1846, precursora de la primera empresa de telecomunicaciones \u2014la British Telecom\u2014, y para 1852 ya habia instalados en Inglaterra 6500\u00a0km de lineas telegraficas.\u200b El invento se extendio a lo largo de Europa y se instalaron lineas en diversos paises como Francia (1845), Austria-Hungria y Belgica (1846), Italia (1847), Suiza (1842) o Rusia (1853).\u200b  La otra pareja clave en la historia de la telegrafia fue la formada por el pintor Samuel Morse y Alfred Vail, ambos estadounidenses y contemporaneos a Cooke y Wheatstone. Samuel Morse habia oido hablar en 1832 sobre los electroimanes en el transcurso de un viaje, y se le ocurrio usarlos para hacer mover un lapicero que marcase el mensaje enviado en un papel. En 1835 fue nombrado profesor de literatura, de arte y de dibujo en la universidad de Nueva York, por lo que pudo dedicarse a construir su primer prototipo. Sin embargo, no seria hasta 1837 cuando junto con Alfred Vail consiguiese un prototipo totalmente operativo.\u200b En 1843 consiguieron 30\u00a0000 dolares estadounidenses para financiar la construccion de una linea telegrafica entre Washington y Baltimore, la cual se inauguro el 1 de enero de 1845.\u200b Asi se consolido tambien el uso del telegrafo en Estados Unidos. En este pais, entre 1861 y 1865 tuvo lugar la Guerra de Secesion, en la que se tendieron miles de kilometros de lineas telegraficas y se explotaron todos los avances tecnicos de la epoca como la telegrafia, la aerostatica, el ferrocarril o los barcos de vapor.\u200b Para 1866 la empresa que habia unificado el mercado \u2014la Western Union Telegraph Company\u2014 tenia mas de 2250 oficinas y 120\u00a0000 kilometros de lineas;\u200b y se ofrecian servicios tanto personales como profesionales, como el servicio de noticias de Associated Press.\u200b  Conforme el uso del telegrafo se iba consolidando se les fueron a\u00f1adiendo nuevas mejoras y funcionalidades. Cabe destacar el modelo de telegrafo que patento David Edward Hughes en 1855 con el que se podian transmitir hasta 45 palabras por minuto en vez de las 25 palabras por minuto del sistema Morse.\u200b Se trataba de un sistema que, utilizando una rueda con las letras del alfabeto, imprimia directamente el mensaje transmitido en un lenguaje comprensible.\u200b Otro gran avance fue el que introdujo Emile Baudot en 1874, quien invento un tipo de multiplexacion por division de tiempo que permitia varias comunicaciones simultaneas usando la misma linea; o Tomas Edison, quien habia trabajado desde los quince a\u00f1os como telegrafista e invento en 1874 un sistema de comunicaciones cuadruplex con el que enviar cuatro telegramas simultaneos por el mismo hilo.\u200b  El telegrafo se consagro como el medio de comunicacion predilecto. Si en 1865 el total de lineas telegraficas de los miembros de la Union Telegrafica Internacional era de 500\u00a0000 kilometros y se enviaban unos 30 millones de mensajes, hacia 1913 habia 7 millones de kilometros de lineas y se transmitian 500 millones de telegramas.\u200b Solo algunos paises de Europa, como Inglaterra o Espa\u00f1a, adoptaron mayoritariamente el sistema de Cooke y Wheatstone, y en el resto del mundo se prefirio el sistema de Morse.\u200b Este fue establecido para las lineas telegraficas internacionales en la Conferencia de Paris de 1865 cuando se constituyo la Union Telegrafica Internacional.\u200b Despues, en 1903, este mismo organismo recomendo en la Conferencia de Londres el uso del sistema de Hughes para las lineas de mayor actividad y el de Baudot para los servicios con mas de 500 telegramas diarios.\u200b  El telegrafo se habia consagrado como el medio de comunicacion por antonomasia, e influyo notablemente en otras tecnologias futuras hasta el punto de condicionar su denominacion: 'telegrafo parlante' o 'mejoras en telegrafia' \u2014telefono\u2014, o la 'telegrafia sin hilos' \u2014radiocomunicacion\u2014.  Uno de los inventos mas exitosos del siglo xix, que aun es muy usado en nuestros dias, fue el telefono. Este invento hizo posible comunicarse utilizando la voz, aunque en un principio no se aposto por su desarrollo debido al exito y el poder que ya tenia el telegrafo. Como en muchos otros casos, el invento y desarrollo del telefono no se debe a una sola persona, y fueron varios los inventores que desarrollaron tecnologias relacionadas con la telefonia. De hecho, las primeras especulaciones sobre la posibilidad de transmitir la voz a distancia son muy anteriores a la invencion del telefono. Por ejemplo, Robert Hooke especulo sobre la transmision de la voz a distancia, pero sus experimentos con cuerdas tirantes no tuvieron mucho exito;\u200b y G. Huth utilizo por primera vez la palabra \u2018telefono\u2019 en A Treatise concerning some Acoustic Instruments and the use of the Speaking Tube in Telegraphy (1796) al sugerir usar instrumentos acusticos para comunicarse a distancia, asi como el uso de un tubo en telegrafia.\u200b  Pero no fue hasta el desarrollo de una tecnologia especifica cuando se puede hablar de los primeros pioneros: Antonio Meucci, Philipp Reis, Innocenzo Manzetti, Elisha Gray o Alexander Graham Bell, entre otros. El comienzo de la telefonia estuvo marcado, de hecho, por numerosas batallas legales por la autoria de los primitivos telefonos, por lo que es preferible recurrir al orden cronologico a la hora de enumerar los distintos avances tecnicos o las patentes de estos. Asi, en 1856 Antonio Meucci instalo en su domicilio un dispositivo que conectaba el dormitorio con el sotano con el que poder hablar con su esposa enferma, que llamo \u00abteletrofono\u00bb \u2014\u00abtelettrofono\u00bb en italiano\u2014, y que supuestamente fue publicado en la prensa. Sea como sea, el primer artilugio al que se le llamo \u00abtelefono\u00bb \u2014\u00abtelefon\u00bb en aleman\u2014 fue el presentado por Philipp Reis en 1862, quien uso una membrana de cuero para su dispositivo. El resultado fue un telefono que permitia transmitir notas electricas y sonidos sencillos, pero en el que se hacia practicamente imposible hablar. Dos a\u00f1os despues, en 1864, Innocenzo Manzetti invento su propio 'telegrafo parlante' \u2014telegraphe parlant en frances\u2014 que permitia transmitir la voz, y fue publicado por los medios.[nota 4]\u200b Sin embargo, la primera patente de un sistema telefonico fue la que obtuvo el estadounidense Alexander Graham Bell en 1876, con la que obtuvo la explotacion en exclusiva del invento hasta 1893 y logro llegar a monopolizar el mercado en Estados Unidos. Otro inventor, el tambien estadounidense Elisha Gray presento una solicitud de patente de un sistema telefonico el mismo dia que Bell \u2014en realidad que su inversor, Hubbard\u2014, pero llego tarde por unas horas. Cabe destacar que Bell se vio envuelto hasta en 600 litigios por la autoria del telefono, incluidos Meucci, Gray, Edison o la entonces todopoderosa Western Union, pero gano todos los juicios. La autoria del telefono sigue siendo aun motivo de controversia y difiere segun el pais.[nota 5]\u200b  Sea como sea, la realidad es que el mercado no supo ver el potencial del invento, calificado de \"juguete\", pues todas las necesidades de comunicacion eran resueltas con el telegrafo, que ademas dejaba testimonio escrito de lo transmitido. Asi, el verdadero hito de Bell y sus asociados fue haber iniciado, y luego monopolizado, un mercado tan importante como es el telefonico, que llego a estar controlado casi por completo por la American Telephone & Telegraph Company \u2014inicialmente Bell Telephone Company\u2014. Por supuesto, eso paso en los Estados Unidos, pero el desarrollo en el resto del mundo se hizo a imagen y semejanza del caso estadounidense. Bell, profesor de hijos sordomudos y conocedor de la fisonomia del oido humano, buscaba la forma de construir un telefono \u2014el penso en un \"oido electrico\"\u2014, pero todos los experimentos de la epoca trataban de inventar la telegrafia armonica con la que transmitir multitud de conversaciones telegraficas en un mismo hilo, cada una con una nota. Los esfuerzos de Bell hicieron que perdiera la mayoria de sus alumnos para dedicar tiempo a sus experimentos, por lo que los padres de los dos unicos alumnos que le quedaban, su futuro suegro Gardiner Hubbard y Thomas Sanders, empezaron a financiarle si se centraba en buscar un telegrafo armonico. Bell, sin embargo, siguio investigando su oido mecanico junto con Thomas Watson, un habil constructor que cubria la torpeza de Bell con los cacharros electricos. En junio de 1875 lograron identificar un sonido metalico a traves del invento, y el 14 de febrero de 1876 Hubbard pidio la patente bajo la denominacion de \"mejoras en telegrafia\", en la que se mencionaba que serviria para enviar voz u otros sonidos telegraficamente. El 10 de marzo Bell recibio la patente 174\u00a0465 y tres dias despues pronunciaria la famosa frase \u00abSe\u00f1or Watson, venga aqui, le necesito\u00bb a traves de su telefono. Pero el contexto en la decada de 1870 no era el mas propicio para las grandes inversiones, debido fundamentalmente a la crisis economica de 1873 y a la consolidacion del telegrafo \u2014se cuenta que la propia Western Union se nego a comprar la patente del telefono\u2014.[nota 6]\u200b Asi, Bell y Watson de centraron en hacer diversas demostraciones de su invento, incluyendo la exposicion universal de ese a\u00f1o, mientras que Hubbard empezo a comercializar el producto a bajo coste y a conseguir conferencias para Bell. Un a\u00f1o despues, en 1877 constituyeron la Bell Telephone Company, repartiendose los beneficios en 3 decimas partes para cada uno \u2014Bell, Hubbard y Sanders\u2014 y una decima parte para Watson; y a finales de ese a\u00f1o ya tenian 3000 telefonos instalados y muchas deudas. No fue hasta la incorporacion de Theodore Vail \u2014hermano de Alfred Vail\u2014 cuando la empresa empezo a tomar buen rumbo, pero para ese a\u00f1o ya habia 1730 compa\u00f1ias competidoras en los Estados Unidos, incluida la Western Union que habia fichado a Edison para que mejorase la tecnologia de Bell. La situacion siguio siendo precaria durante dos a\u00f1os, en los que Watson invento el timbre del telefono e instalaron un telefono en el despacho del presidente Hayes; hasta que en 1879 la Corte Suprema dio la razon a Bell en su proceso contra la Western Union, por lo que se quedo con sus 56\u00a0000 clientes para tener un total de 133\u00a0000 abonados. A partir de ese a\u00f1o el grupo liderado por Vail se hizo con todo el mercado estadounidense, pues tenian aun 17 a\u00f1os hasta que caducara la patente para explotar en exclusiva el invento, y de hecho las acciones de 50 dolares valian ahora mas de 1000 dolares. En esos 13 a\u00f1os alcanzaron los 230\u00a0000 clientes y se refundaron como la American Telephone & Telegraph Company. La compa\u00f1ia siguio creciendo, dentro de las fluctuaciones propias del mercado, hasta llegar a ser un autentico monopolio, diferencia primordial entre el mercado estadounidense y el europeo en el que el monopolio de estas infraestructuras fue ejercido por el Estado. La empresa fundo los Laboratorios Bell, compro gran parte de la Western Union y siguio siendo una de las empresas mas grandes de la historia hasta que las acciones antimonopolio del Departamento de Justicia de los Estados Unidos lograron separar la compa\u00f1ia en entidades locales \u2014Baby Bells\u2014 en 1984.  Otro gran hito en la telefonia fue la invencion de la conmutacion de manos de Tivadar Puskas.  El desarrollo de la telecomunicacion en el ultimo tercio del siglo xix estuvo marcado por la cooperacion internacional en la telecomunicacion, que tuvo sus inicios en las actividades cotidianas de los telegrafos que, en las propias fronteras de las distintas naciones de la epoca, se intercambiaban y traducian los mensajes transfronterizos. Sin embargo, los mares y oceanos constituian una frontera natural dificil de evitar.  Durante este siglo se investigo el uso de medios de transmision de formas simples, de hierro o cobre, y en la mayoria de ocasiones sin recubrimiento externo. Cabe recordar que la forma de investigar de la epoca era el ensayo y error, en la que se probaban decenas de materiales para solventar un problema hasta dar por el optimo. En 1847 Werner von Siemens y otros inventaron metodos para recubrir cables de gutapercha para impermeabilizarlos.  El primer cable submarino fue el que se largo en el paso de Calais \u2014canal de la Mancha\u2014 entre el cabo Gris-Nez \u2014Francia\u2014 y el cabo Southerland \u2014Inglaterra\u2014 de manos de los hermanos John y Jacob Brett. Se trato de un cable telegrafico que fue tendido por el remolcador Goliaht el 28 de agosto de 1850, pero que fue seccionado por un pescador local al poco tiempo, el cual lo exhibio como trofeo. El a\u00f1o siguiente se volvio a largar un cable, que corrio mas suerte que el anterior, formado de 4 hilos de cobre de 1,65\u00a0mm de diametro recubiertos de ca\u00f1amo y reforzado con 10 alambres de hierro galvanizado de 7\u00a0mm de diametro. Debido al exito de este primer cable la idea se extendio y en 1852 se unio Gales y Escocia con Irlanda, y al a\u00f1o siguiente se conecto Belgica y Dinamarca a traves del mar del Norte. Se tendieron tambien cables entre Corcega y Cerde\u00f1a, Italia y Corcega, Tasmania y Australia, y muchas otras localizaciones. En 1860 ya existia un enlace directo entre Inglaterra y la India que salvaba numerosas vias de agua como el canal de Suez.  Sin embargo, el gran desafio de la epoca fue tender el primer cable telegrafico transatlantico, una autentica proeza en la ingenieria de la epoca. El 7 de agosto de 1857, el buque de guerra Agamemnon, trato de largar unos 3200 kilometros de cable fabricado con un nucleo de siete hilos de cobre recubiertos de gutapercha \u2014hasta los 12,2\u00a0mm\u2014 y un refuerzo exterior de 18 alambres de hierro. Sin embargo, 10 dias despues de su partida de Irlanda, el cable se rompio a 3600 metros de profundidad \u20142000 brazas\u2014, por lo que se abandono el proyecto.\u200b El verano siguiente se reintento el tendido, pero con otro planteamiento: el Agamemnon y el Niagara se encontrarian en medio del atlantico, cada uno con la mitad del cable, y tras unir ambos extremos el 28 de junio partieron cada uno en direcciones opuestas; el cable del Agamemnon se rompio a los 230\u00a0km de travesia, por lo que ambos fondearon en Queenstown \u2014Terranova\u2014 a la espera de ordenes. Un mes despues del primer intento, el 28 de julio de 1858, ambos barcos repitieron la operacion una vez mas y lograron tender los 2340\u00a0km de cable necesarios para unir Dowlas Bay \u2014Valentia, Irlanda\u2014 y la bahia de Trinity \u2014Terranova\u2014, a donde ambos barcos llegaron el 5 de agosto. Esa misma noche se envio el primer telegrama anunciando la llegada, asi como diversas felicitaciones. Sin embargo, apenas un mes despues, el 3 de septiembre, el cable se averio debido a una sobrecarga de tension. A pesar de los multiples fracasos, el empresario Cyrus Field, due\u00f1o de la compa\u00f1ia Atlantic Telegraph Company, consiguio fletar una nueva expedicion para largar otro cable. Tras la Guerra de Secesion, el 23 de julio de 1865, el buque Great Eastern \u2014el mas grande de la epoca\u2014 zarpo de Valentia con 3700\u00a0km de cable, 3 veces mas grueso que el anterior, con rumbo a Terranova. A principios de agosto, cuando se habian tendido mas de 1900\u00a0de cable, los tecnicos del barco descubrieron un defecto de fabricacion que les obligo a reflotar varios kilometros de cable para sustituirlo, con tan mala fortuna que este se rompio durante las tareas de reparacion. Tras tres intentos fallidos de recuperar el cable, despues de conseguir encontrarlo en el fondo del oceano, el barco regreso a Irlanda. Por fin, en 1866, el Great Eastern consiguio largar con exito el cable submarino y, para rematar la faena, recupero el cable perdido un a\u00f1o antes del fondo del Atlantico y lo completo para tener un segundo cable a traves del oceano.  Desde entonces, se han tendido muchos mas cables submarinos a lo largo de todo el planeta, mejorando las tecnologias existentes hasta el uso de la actual fibra optica. Se calcula que hoy en dia el 90\u00a0% del trafico de Internet se transmite por cables submarinos \u2014el resto, por satelites\u2014.  A finales del siglo xix, en la llamada Belle Epoque, se generalizo un sentimiento de optimismo, ilusion y confianza en el devenir del progreso y el potencial de la ciencia y tecnica \u2014positivismo y cientificismo\u2014. El auge de la burguesia y las clases medias supuso una irrupcion de personas ajenas a la aristocracia en el poder politico, y hasta el proletariado sintio cierta confianza en el futuro conforme la lucha obrera crecia e iba consiguiendo peque\u00f1os logros. Se sucedian las exposiciones universales, que promocionaban una vision del progreso global y sin fronteras, y las noticias del mundo exterior se difundian mas facilmente gracias al ferrocarril, al cable submarino y al telegrafo, el sistema de telecomunicacion que dominaba la epoca. Se llego a creer incluso que ya estaba todo inventado, a pesar de que los ultimos a\u00f1os del siglo xix y los primeros del xx fueron especialmente prolificos para la ciencia y la tecnica: los hermanos Lumiere proyectaron la primera pelicula cinematografica en 1895; la medicina avanzaba con descubrimientos como el protagoinizado por Ronald Ross, que descubrio como se transmitia la malaria; los fisicos Henri Becquerel, Marie Curie y Pierre Curie descubrieron la radiactividad del uranio y el radio respectivamente, descubrimiento que les valio el premio Nobel en 1903; la aviacion nacio en Estados Unidos de la mano de los hermanos Wright, etc.\u200b  La telecomunicacion tambien se nutrio de los notables experimentos cientificos de la epoca. Asi, Heinrich Rudolf Hertz reformulo las ecuaciones de Maxwell, que predecian la propagacion de las ondas electromagneticas, y en diversos experimentos en la decada de 1880 produciendo y midiendo sus propias ondas demostro que estas 'ondas hertzianas', como se llamo en la epoca a estos fenomenos electromagneticos, se podian reflejar, refractar, polarizar, difractar e interferirse.\u200bOtros muchos ampliaron estos experimentos \u2014entre los que destaca Augusto Righi\u2014,\u200b hasta conseguir una base que permitio la puesta en marcha de un nuevo sistema de telecomunicacion, superior al telegrafo en eficiencia y eficacia: la radiocomunicacion o 'telegrafia sin hilos'.\u200b  La invencion de la radiocomunicacion, como ocurre con el telefono, esta disputada entre varios inventores, entre los que destacan Edouard Branly, Nikola Tesla, Aleksandr Stepanovich Popov y Guillermo Marconi; este articulo narra los hechos de forma cronologica. Ademas, tal y como ocurrio con el telegrafo o el telefono, el credito de este tipo de invenciones suele ser otorgado a quien patenta y comercializa los nuevos sistema, y no a quien descubre cierto fenomeno en un laboratorio. Por ejemplo, en 1891 Edouard Branly descubrio el cohesor, un simple tubo de cristal relleno de limaduras metalicas que permitia el paso de la corriente electrica cuando incidian en este ondas electromagneticas, y que seria usado por inventores coetaneos para detectar dichas ondas. De hecho, en Francia Branly es considerado el inventor de la radiocomunicacion.\u200b El prolifico inventor Nikola Tesla, que disputo contra Thomas Alva Edison la guerra de las corrientes, tambien llevo a cabo diversas experiencias y dise\u00f1o varios inventos que permitian el transporte efectivo de energia electromagnetica, pero se centro en el transporte industrial de energia electrica y no busco una aplicacion de sus inventos para el transporte de informacion. Asi, entre 1891 y 1893 presento diversos trabajos y experimentos que permitian la transmision efectiva de energia electrica en la banda de los 5,1\u00a0MHz.\u200b Tambien Oliver Joseph Lodge influyo de una manera notable a otros inventores, sobre todo debido a una conferencia sobre los experimentos de Hertz que dio en 1894 en la Royal Institution de Londres.\u200b Pero ademas realizo notables inventos que permitieron poco tiempo despues construir los primeros sistemas de radiotransmision eficaces.\u200b Asi, en mayo de 1897 solicito la patente, numero 11\u00a0575, de un sistema de sintonizacion de radio \u2014filtrado de una sola banda de frecuancias\u2014 basado en el fenomeno de resonancia electromagnetica.\u200b  El fisico ruso Aleksandr Stepanovich Popov leyo la conferencia de Lodge sobre Herth, lo que le sirvio de inspiracion para empezar a investigar en el tema.\u200b Popov, que era catedratico de fisica en la Escuela Imperial Rusa de Torpedos de Kronstadt, construyo diversos prototipos desde 1894 e hizo una demostracion en 1896 ante la Sociedad Rusa de Fisica y Quimica en la que varias fuentes afirman que se transmitio por telegrafia sin hilos las palabras \u00abHeinrich Hertz\u00bb,\u200b mientras que otras fuentes no contemplan la posibilidad de que esto pudiese haber sucedido antes de mediados de 1896, fecha en la que Marconi ya estaba realizando transmisiones.\u200b Sea como fuere, Popov es hoy en dia considerado el inventor de las radiocomunicaciones en Rusia, donde cada 7 de mayo se celebra el dia de la Radio.  Sin embargo, fue Guillermo Marconi quien patento, dise\u00f1o e implemento un sistema de radiocomunicacion efectivo alrededor de todo el mundo bajo su supervision\u200b y estrechamente ligado a las comunicaciones en el mar. Marconi, con el apoyo financiero de su padre, empezo a desarrollar un sistema de telegrafia sin hilos a la temprana edad de veintiun a\u00f1os, en 1895.\u200b Experimento de forma empirica con cohesores de Branly y antenas de fabricacion casera en una finca de su padre, logrando transmisiones de hasta un kilometro de distancia, hasta que en 1896 Marconi se desplazo a Londres para continuar con sus experimentos.\u200b Alli conto con el apoyo de William Henry Preece, ingeniero jefe en la British Post Office que tambien habia llevado a cabo experimentos telegraficos y telefonicos, y bajo el paraguas de la compa\u00f1ia se realizaron pruebas en 1896 y 1897  en las que se logro transmisiones a distancias de 7\u00a0km en tierra y 14\u00a0km sobre agua salada.\u200b El exito fue tal que en ese mismo a\u00f1o Marconi fundo la Wireless Telegraph and Signal Company Limited, logro progresivamente aumentar el alcance de sus equipos \u2014tardo mas de dos a\u00f1os en percatarse de la importancia de sintonizar el tama\u00f1o de la antena emisora con el de la receptora\u2014, y los embarco e instalo por todo el globo. Cuando empresas como la alemana Telefunken, fruto de la union de Siemens & Halske y AEG en 1903, aumentaron la presion sobre el proyecto de Marconi este dejo de comercializar sus equipos y se centro en desplegar una red de estaciones terrenas, que daban cobertura en las principales rutas comerciales, y equipar a los barcos no solo con equipamiento de la compa\u00f1ia, si no con operadores en nomina que solo se comunicaban con las estaciones de su propia red;\u200b esta practica acabo con la aprobacion en la Primera Conferencia Radiotelegrafica Internacional en 1906 del Convenio de Radiocomunicaciones y su reglamento anexo, pero para entonces la empresa de Marconi ya dominaba la comunicacion en el mar.  Como hubo ocurrido con el telegrafo, varios episodios demostraron que la radiotelegrafia era una herramienta con la que evitar grandes tragedias humanas, relatando otro capitulo de gran importancia en la historia de la disciplina y su aceptacion como un pilar de la sociedad moderna.  A principios del xx aparece el teletipo que, utilizando el codigo Baudot, permitia enviar texto en algo parecido a una maquina de escribir y tambien recibir texto, que era impreso por tipos movidos por reles.  El termino telecomunicacion fue definido por primera vez en la reunion conjunta de la XIII Conferencia de la UTI (Union Telegrafica Internacional) y la III de la URI (Union Radiotelegrafica Internacional) que se inicio en Madrid el dia 3 de septiembre de 1932. La definicion entonces aprobada del termino fue: \"Telecomunicacion es toda transmision, emision o recepcion, de signos, se\u00f1ales, escritos, imagenes, sonidos o informaciones de cualquier naturaleza por hilo, radioelectricidad, medios opticos u otros sistemas electromagneticos\".  El siguiente artefacto revolucionario en las telecomunicaciones fue el modem que hizo posible la transmision de datos entre computadoras y otros dispositivos. En los a\u00f1os 60 comienza a ser utilizada la telecomunicacion en el campo de la informatica con el uso de satelites de comunicacion y las redes de conmutacion de paquetes. La decada siguiente se caracterizo por la aparicion de las redes de computadoras y los protocolos y arquitecturas que servirian de base para las telecomunicaciones modernas (en estos a\u00f1os aparece la ARPANET, que dio origen a la Internet). Tambien en estos a\u00f1os comienza el auge de la normalizacion de las redes de datos: el CCITT trabaja en la normalizacion de las redes de conmutacion de circuitos y de conmutacion de paquetes y la Organizacion Internacional para la Estandarizacion crea el modelo OSI. A finales de los a\u00f1os setenta aparecen las redes de area local o LAN.  En los a\u00f1os 1980, cuando los ordenadores personales se volvieron populares, aparecen las redes digitales. En la ultima decada del siglo xx aparece Internet, que se expandio enormemente, ayudada por la expansion de la fibra optica; y a principios del siglo xxi se estan viviendo los comienzos de la interconexion total a la que convergen las telecomunicaciones, a traves de todo tipo de dispositivos que son cada vez mas rapidos, mas compactos, mas poderosos y multifuncionales, y tambien de nuevas tecnologias de comunicacion inalambrica como las redes inalambricas.  La telecomunicacion se basa en otras disciplinas de las que obtiene herramientas muy potentes para modelar los diferentes sistemas con los que transmitir y recibir la informacion que conforma cada comunicacion y proceder a su implementacion.  La telecomunicacion tiene por objetivo establecer una comunicacion a distancia, y toda comunicacion lleva asociada la entrega de cierta informacion, pues desde el punto de vista tecnico hasta la funcion fatica aporta informacion al mensaje, a traves de un lenguaje.  Esta informacion se obtiene de las denominadas fuentes de informacion: sonido, imagen, dato, se\u00f1ales biomedicas, se\u00f1ales meteorologicas... y en definitiva cualquier forma de se\u00f1al analogica, discreta o digital. Estas fuentes se procesan y tratan con el fin de proceder a su estudio tanto en el tiempo como en la frecuencia y buscar asi la forma mas eficiente de transmitirlas. Se atiende a criterios tales como el ancho de banda de la se\u00f1al o la tasa de transferencia con el fin de transmitir la mayor informacion posible con el menor numero de recursos sin que haya interferencias ni perdidas de informacion. Asi, se aplican tecnicas de compresion que permiten reducir el volumen de informacion sin afectar gravemente al contenido del mismo.  Una forma de obtener esa informacion que ha tomado gran importancia es la digitalizacion, que consiste en caracterizar se\u00f1ales analogicas con se\u00f1ales digitales. El proceso consisten en muestrear la se\u00f1al el suficiente numero de veces como para que se pueda reproducir de nuevo la se\u00f1al original con la interpolacion de sus muestras. Mediante el criterio de Nyquist-Shannon, teorema fundamental de la teoria de la informacion, se deduce que solo es necesario muestrear la se\u00f1al al doble de su frecuencia; por ejemplo, en la voz humana, que tiene un ancho de banda de unos 4\u00a0kHz, solo es necesario muestrear a 8\u00a0kHz (8000 muestras por segundo). El siguiente paso consiste en cuantificar dichas muestras, esto es, asociarles un valor discreto preestablecido segun el codigo utilizado \u2014en este paso del proceso se pierde parte de la informacion, pero lo suficientemente peque\u00f1a como para que sea despreciable\u2014. Por ultimo, en la codificacion, cada valor es representado con un simbolo de un codigo binario.  Por ultimo, es necesario un lenguaje en el que codificar esa informacion y que sea conocido tanto por el emisor como por el receptor. En el ambito de la telecomunicacion ese lenguaje se denomina protocolo de comunicacion, que no solo define el idioma utilizado, sino tambien las caracteristicas tecnicas de la comunicacion.  Un sistema de comunicacion o de transmision es cualquier sistema que permite establecer una comunicacion a traves de el. Esta definicion incluye tanto la red de transmision, que sirve de soporte fisico, como todos los elementos que permiten encaminar y controlar la informacion:  Un sistema de transmision se modela de forma matematica tanto con la teoria de sistemas como por la teoria de control. De esta forma se puede valorar las diferentes aportaciones de los componentes por separado y las funciones matematicas que estos aportan. En este sentido, todo un conjunto de componentes se puede reducir a una sola aportacion neta; se dice entonces que la salida es la respuesta de un sistema a una entrada o que el sistema responde a la entrada con cierta salida. De forma analoga tambien toma gran relevancia la teoria de colas, ya que permite relacionar los servicios que se pueden prestar con la calidad de servicio de estos y los recursos necesarios para su implementacion.  Un sistema de comunicacion efectivo es aquel que satisface de forma satisfactoria tres necesidades esenciales:  Para conseguir estos objetivos se dise\u00f1an el sistema de comunicacion con componentes que permitan dar una calidad de servicio adecuada a la aplicacion del sistema, dise\u00f1andolo e implementandolo con elementos adecuados. Sin embargo no se puede controlar todas los que intervienen en la transmision, pues existen fenomenos que alteran la calidad del servicio: ruido impulsivo, ruido de Johnson-Nyquist (tambien conocido como ruido termico), tiempo de propagacion, funcion de transferencia de canal no lineal, caidas subitas de la se\u00f1al (microcortes), limitaciones en el ancho de banda y reflexiones de se\u00f1al (eco). Sin embargo, muchos sistemas de telecomunicacion modernos aprovechan algunas de estas imperfecciones para mejorar la dicha calidad.  Un medio de transmision es el canal que permite la transmision de informacion entre dos terminales de un sistema de transmision. La transmision se realiza habitualmente empleando ondas electromagneticas que se propagan a traves del denominado canal de comunicacion. A veces el canal es un medio fisico y otras veces no, ya que las ondas electromagneticas son susceptibles de ser transmitidas por el vacio.  Se pueden clasificar en dos grandes grupos: medios de transmision guiados y medios de transmision no guiados. Ademas, los medios de transmision se clasifican segun sus caracteristicas de atenuacion, adicion de ruido, distorsion o retardo de la se\u00f1al que contiene la informacion, por lo que cada medio de transmision sera adecuado para una aplicacion concreta.  Son medios de transmision guiados los constituidos por un canal solido por el que se transmite la informacion en forma de variacion de una magnitud fisica. Asi, aunque rudimentario, la cuerda que une los dos extremos de un telefono de latas constituye un medio de transmision guiado, en este caso de ondas sonoras.Por el contrario, un medio de transmision no guiado es aquel que sirve de soporte para que se produzca la variacion de la magnitud, pero no la dirigen por un camino especifico. Es el caso, en contraposicion del ejemplo anterior, del sonido cuando hablamos con otra persona cara a cara.  En el contexto de telecomunicacion actual la mayor parte de los medios guiados son cables de distintos metales como el cobre. En la red telegrafica se usaban cables sin cubierta maleable suspendidos de travesa\u00f1os en postes. Este tipo de cables estaba expuesto a interferencias y a cortocircuitos, pero considerando la baja velocidad del telegrafo, funcionaron convenientemente bien. Para evitar estos problemas lo cables se recubrieron con aislamiento, generalmente plastico. El mas comun era cable telefonico compuesto de dos hilos de cobre paralelos, aunque actualmente se usa el cable trenzado, el cual es mas resistente a las interferencias electromagneticas. Con la expansion de las telecomunicaciones fue necesario extender cables para interconectar los distintos continentes, por lo que se instalaron cables submarinos.  El par trenzado es el medio guiado mas economico y mas usado para aplicaciones generales. Inventados por Alexander Graham Bell en 1881, consiste en dos alambres de cobre aislados, que se trenzan de forma helicoidal. Puesto que dos alambres paralelos constituyen una antena simple; en el par trenzado las ondas de diferentes vueltas se cancelan, por lo que la radiacion del cable es menos efectiva y permite reducir la interferencia electrica tanto exterior como de pares cercanos. Este tipo de cables puede estar o no protegido por una malla protectora metalica, pudiendo ser asi STP (Shielded Twisted Pair, par trenzado acorazado), UTP (Unshielded Twisted Pair, par trenzado sin coraza) o FTP (Foiled Twisted Pair, par trenzado forrado en hoja metalica).  El cable coaxial tambien se compone de dos conductores, pero en este caso uno de ellos es un alambre interno y el otro una malla metalica que lo rodea. Los dos conductores estan separados por un aislante y la malla tiene una cubierta de plastica.  La fibra optica es un enlace hecho con un hilo muy fino de material transparente de peque\u00f1o diametro y recubierto de un material opaco que evita que la luz se disipe. Por el nucleo, generalmente de vidrio o plasticos, se envian pulsos de luz, no electricos. Hay dos tipos de fibra optica: la multimodo y la monomodo. En la fibra multimodo la luz puede circular por mas de un camino pues diametro del nucleo es de aproximadamente 50\u00a0\u00b5m. Por el contrario, en la fibra monomodo solo se propaga un modo de luz, la luz solo viaja por un camino. El diametro del nucleo es mas peque\u00f1o (menos de 5\u00a0\u00b5m).  Como medios de trasmision no guiados destacan aquellos que usan variaciones del campo electromagnetico, manifestacion fisica del electromagnetismo,  como soporte para transmitir la informacion. A finales del siglo xix varios experimentos consiguieron realizar comunicaciones a traves de ondas de radio. Si bien, la primera comunicacion inalambrica trasatlantica se establecio en 1901 de la mano del ingeniero Guillermo Marconi, utilizando dise\u00f1os del cientifico Nikola Tesla. A partir de este momento la radiocomunicacion tomo forma y se vio impulsada en la segunda decada de siglo, con el hundimiento del Titanic en 1912 o la Primera Guerra Mundial en el 1914 como escenarios de fondo que demandaban este tipo de comunicaciones.  Con la radiocomunicacion se pueden establecer telecomunicaciones a traves de las denominadas radiofrecuencias, la parte del espectro de frecuencias menos energetica. La transmision y recepcion de ondas de radio se realizan con una antena, un dispositivo que transforma variaciones del voltaje que se le aplica en ondas electromagneticas y viceversa. Los servicios que se pueden aprovechar de esta tecnologia son la radiodifusion, la television, la telefonia movil o las comunicaciones entre radioaficionados.  A las frecuencias comprendidas entre 300 MHz y 300 GHz (UHF, SHF y EHF) se le denominan microondas. En la telecomunicacion, las microondas son muy explotadas en la actualidad ya que atraviesan facilmente la atmosfera con menos interferencia que otras longitudes de onda mayores y este espectro posee un ancho de banda mayor, por lo que se pueden establecer mas bandas. Por ejemplo, las microondas se usan en los informativos para transmitir una se\u00f1al desde una localizacion remota a una estacion de television mediante una camioneta especialmente equipada. El estandar 802.11 tambien usa microondas para, entre otros, implementar los servicios de Wi-Fi.  En la practica un radiocomunicacion puede tener millones de kilometros de distancia; por ejemplo, en la exploracion espacial se siguen recibiendo datos de sondas espaciales que se encuentran a mas de 100 ua, como la mision Voyager, mediante la red del espacio profundo DSN.  Mencion aparte merecen los satelites de comunicaciones por el papel que desempe\u00f1an en la telecomunicacion actual. Desde el lanzamiento del Telstar 1 en 1962 los satelites se han usado para la retransmision de comunicaciones a gran distancia. La primera aplicacion importante para los satelites de comunicaciones fue la telefonia a larga distancia, utilizando un satelite geosincrono como conexion entre nodos de la red telefonica. Posteriormente se adaptaron otros servicios como la telefonia satelital movil, radio satelital, television por satelite e Internet por satelite.  Las redes de comunicaciones tienden a ser complejas cuando el numero de usuarios de estas crece de una manera considerable, como ocurrio a principios de siglo\u00a0XX con la red telefonica conmutada. Historicamente son varios los objetos y tecnicas que han permitido reducir los recursos necesarios de las redes y aumentar las capacidades de las ya existentes. De hecho, el bucle de abonado suele ser un par de cobre, que se invento a finales del siglo\u00a0XIX para telefonia, pero que aun hoy se puede usar para ciertos servicios de ADSL o IPTV, tecnologias mucho mas avanzadas que el telefono.  Mediante la conmutacion se conectan los diferentes nodos que existen en la red permitiendo elegir el camino mas eficiente entre los dos terminales. En un principio la conmutacion se llevaba a cabo de forma manual mediante la conmutacion de circuitos. El operador establecia una conexion fisica entre la linea entrante y la saliente con un cable a peticion del cliente. Mas tarde se desarrollaron sistemas de conmutacion automatizada por motivos de privacidad, como el sistema Rotary. La conmutacion de paquetes se refiere a la que se hace en las redes informaticas con los paquetes de datos, donde cada nodo o enrutador elige el camino mas apropiado para la informacion; similar a la que se hace en el correo postal.  Otra tecnica muy usada es la modulacion, que permite introducir la informacion contenida en una onda electromagnetica en otra denominada onda portadora. De esta manera se resuelven ciertos problemas tecnicos que aparecen a la hora de transmitir ciertas se\u00f1ales, como por ejemplo el asociado al tama\u00f1o de la antena. Esta debe tener el tama\u00f1o de la longitud de onda de la se\u00f1al que irradie; al modular la se\u00f1al en una portadora de frecuencia superior, y por tanto menor longitud de onda, se puede usar una antena mas peque\u00f1a. Tambien tiene importantes aplicaciones en la multiplexacion de se\u00f1ales y es una forma de reducir la distorsion que sufre la se\u00f1al durante la transmision. La modulacion es la tecnica que se utiliza en la radiodifusion AM y FM, por ejemplo.  Por ultimo, mediante tecnicas de acceso multiple al medio se usa el mismo medio de transmision para enviar varias comunicaciones, de tal forma que se reduce significativamente el numero de cables usados o se usa el espacio libre de forma compartida y ordenada. Por ejemplo, la multiplexacion  divide la capacidad de transmision de un medio en ranuras o ventanas para cada una de las transmisiones. En el caso de la multiplexacion por division de tiempo se dividen los mensajes en segmentos y se asigna una ventana de tiempo para realizar cada transmision, que se recuperan sincronizando ambos extremos. Se usa, por ejemplo, en la telefonia movil GSM. En la multiplexacion por division de frecuencia lo que se divide en ventanas o slots es el espectro de frecuencias, modulando cada transmision en una frecuencia distinta de tal forma que no se superpongan, y se recupera usando un filtro electronico para cada frecuencia. Se usa, por ejemplo, en la radiodifusion FM en la que decenas de canales de radio se transmiten por el aire a la vez pero solo una se escucha en el receptor.  Una red de telecomunicacion es el conjunto de todos los sistemas necesarios para el intercambio de informacion entre los usuarios del sistema. Estos sistemas son precisamente los items tratados hasta ahora en este articulo. Asi, sobre un conjunto de medios de transmision se implementa un sistema de transmision mediante tecnologias de procesado, multiplexacion y modulacion; y se dise\u00f1an unos protocolos de transmision que permitan establecer comunicacion con el que llevar a cabo un intercambio efectivo de informacion entre los usuarios.  Existen distintas formas de clasificar las redes de telecomunicacion, entre los que destacan:  En cada red, que presentara una topologia adecuada, se suele distinguir entre la red de acceso, en la que se situan los terminales de la red por la que acceden los usuarios; y la red de transito o nucleo de red, donde se situan los sistemas necesarios para establecer la comunicacion y evitar la perdida de informacion \u2014los nodos de la red y demas enlaces de telecomunicacion\u2014.En el simil del correo postal, los buzones de correos y los carteros serian la red de acceso en la que cada usuario entrega la informacion y esta le es entregada al usuarios; mientras que las oficinas de correos, centrales y camiones de transporte entre municipios seria la red de transito, donde se decide que hacer con cada carta para que llegue al destino de forma integra.  Sobre estas redes de comunicacion se implementan distintas funcionalidades; un servicio de telecomunicacion es un conjunto de prestaciones que el usuario recibe de la red. De nuevo en el simil del correo postal, los diferentes servicios podrian ser enviar una carta, un paquete o una carta documento \u2014o burofax\u2014; diferentes servicios que aprovechan la misma red. Los servicios de telecomunicacion se pueden clasificar en:  La aplicacion tradicional de la comunicacion es la transmision de voz y datos, pues permiten que dos personas intercambien mensajes de forma casi istantanea y efectiva; con importantes aplicaciones en la vida de las personas, en la gestion economica, en emergencias o en la guerra, por ejemplo. Son sistemas tempranos de este tipo de redes desde la red telegrafica o la red de teletipos (telex) hasta la comunicacion con palomas mensajeras o los mensajes por semaforo.  Se conoce como Red Telefonica Conmutada a la red tradicional publica de telefonia; se dice 'publica' porque el acceso es libre a cualquier interesado y no porque sea de gestion publica, aunque pueda serlo. En esta red se utilizan como terminales de red telefonos, a traves del cual los usuarios hablan, y se conecta por el bucle de abonado a las centrales de distribucion local; conformando asi la red de acceso. Las distintas centrales telefonicas se interconectan entre si a traves de otras mas grandes de forma jerarquica, conformando el nucleo de la red. Son centrales de conmutacion de circuitos en las que se establece un canal fijo y exclusivo para cada comunicacion y que no desaparece hasta que esta finaliza. De forma tradicional la conexion del circuito era fisica, ya sea por conmutacion manual o por un sistema de conmutacion Rotary; pero actualmente se establece de forma digital en centrales telefonicas digitales. Asi pues, la voz se digitaliza con 8\u00a0bit a unos 8\u00a0kHz.  Si se desea compartir datos entre varias computadoras se tendra que establecer una red de computadoras. Una red de area local es una interconexion de ordenadores y perifericos con el objetivo de compartir tanto informacion como recursos, como impresoras o servidores. En este caso de redes se usan estandares como Ethernet o Token Ring y medios de transmision como cable de par trenzado o cable coaxial. Sin embargo, una red de area amplia tiene una extension mas grande, como un pais entero por ejemplo, y son establecidas por grandes empresas para su uso privado o por los ISP para ofrecer servicios de Internet.  La radio y la television son, junto con los periodicos, los denominados medios de comunicacion de masas ya que se trata de formas de comunicacion difusivas en las que a una gran cantidad de personas les llega la informacion de pocas fuentes. Una red de difusion es aquella red orientada a entregar a varios puntos, de forma simultanea y sincrona, una copia identica de la misma informacion que ha sido generada por un punto. En las redes de radio y television, puesto que la atmosfera es un unico medio de transmision, solo se pueden enviar diferentes mensajes utilizando, tipicamente, multiplexacion en frecuencia. En el receptor se filtra o 'sintoniza' una de las se\u00f1ales y se demodula para reproducirla de forma integra. Es el caso de la television analogica, la TDT o la television por satelite; asi como de las emisiones de radio AM y FM.  Otros medios de retransmitir radio y television de forma difusiva son la television por cable, que utiliza fibra optica o cable coaxial para la transmision; o la IPTV, que utiliza los servicios de datos sobre la red telefonica como la linea de abonado digital (xDSL). En estos casos se usa multiplexacion por division de codigo.  El termino banda ancha hace referencia a un gran numero de tecnologias de trasporte de datos que los ISP denominan asi para facilitar su comprension al cliente; pero que en definitiva ofrecen el mismo servicio al usuario, pero con una calidad de servicio distinta, por lo que se denominan de la misma manera para su comercializacion. Asi, incluye tecnologias que permitan una conexion a Internet de 'alta' velocidad como la linea de abonado digital (xDSL), lineas basadas en fibra optica o hibridas de fibra optica y coaxial; o conexiones inalambricas como la telefonia movil 3G o el WiMAX.  Se denomina triple play al empaquetamiento sobre protocolo IP de servicios tales como voz (VoIP con telefonos IP), television (IPTV) y banda ancha en un unico paquete de suministro y, por tanto, un unico producto de venta de servicios al usuario; la evolucion natural del concepto, el cuadruple play, incluye el uso de redes moviles para la prestacion de estos servicios. De esta manera, estos servicios se ofrecen al usuario usando sistemas y tecnologias parecidas, lo que se ha venido a denominar convergencia tecnologica de las TIC. La implementacion total de este tipo de estructuras de redes daria como resultado la denominada red de siguiente generacion.  Son servicios telematicos los que usan tanto sistemas informaticos como de telecomunicacion, como son los que se ofrecen en redes de computadoras como Internet, la \u00abred de redes\u00bb. Este se trata de un conjunto de un gran numero de redes de comunicacion e informaticas interconectadas entre si de forma descentralizada y voluntaria. Cada red que compone Internet esta dise\u00f1ada con una arquitectura y tecnologias que pueden ser muy diferentes; el exito de Internet como sistema global se basa en que en todas estas redes se usa el mismo protocolo de comunicacion, el mismo 'lenguaje', la familia de protocolos de Internet. El protocolo IP es capaz de encaminar el trafico de datos en Internet como si esta fuera una sola red logica utilizando identificaciones para cada maquina (direccion IP) mientras que el protocolo TCP permite gestionar una transmision efectiva de esos datos sin que se produzcan perdidas. Otros protocolos importantes para el funcionamiento de Internet son, por ejemplo, HTTP, SMTP, SSH, FTP...  Un error habitual es confundir los diferentes servicios a los que se puede acceder por Internet con la internet propiamente dicha. Por ejemplo, la World Wide Web, conocida como la Web,  es un conjunto de protocolos que permite visualizar archivos de hipertexto alojados en otras maquinas; pero es habitual la confusion entre 'Internet' y 'la Web'. Otros servicios serian el envio de correo electronico (SMTP), la transmision de archivos (FTP y P2P), las conversaciones en linea (IRC), la mensajeria instantanea, la transmision de contenido y comunicacion multimedia \u2014telefonia (VoIP), television (IPTV)\u2014, los boletines electronicos (NNTP), el acceso remoto a otros dispositivos (SSH y Telnet) o los juegos en linea. De hecho, se denominan proveedor de servicios de Internet a una empresa que conecta los dispositivos de los usuarios domesticos al resto de Internet permitiendo el acceso de este a dichos servicios.  Existen otras muchas redes que ofrecen servicios mas especificos a empresas, instituciones academicas o de investigacion, etc. A modo de ejemplo se puede mencionar  El desarrollo de las telecomunicaciones ha tenido lugar casi en exclusiva durante la Edad Contemporanea, y su influencia se ha dejado notar en el desarrollo de multiples dimensiones de la actividad humana: la sociedad, la economia, la politica, la paz y la guerra y, en definitiva, la historia.  La consolidacion de las telecomunicaciones como una infraestructura basica las ha convertido en un factor historico en si mismas:  Pero la telecomunicacion excede un planteamiento meramente testimonial hasta haber conseguido eliminar casi por completo el espacio el tiempo.(Hernandez 1974, p. 244)  Las telecomunicaciones se perfilaron como un instrumento con el que centralizar el poder del Estado y conseguir asi una gestion economica, militar y burocratica centralizada.\u200b De hecho, el uso de las telecomunicaciones en el seno de la Administracion de un estado puede servir como un medio de control muy efectivo: \u00abFomentan el desarrollo del telegrafo porque este es el instrumento mas poderoso de un despota que desea controlar a sus funcionarios\u00bb.\u200b  Tal es la importancia de las telecomunicaciones como un factor clave en el gobierno de los pueblos y estados que los medios telegraficos fueron desde su concepcion objeto de un monopolio exclusivo del Estado \u2014excepto algun caso notable como el de EE.\u00a0UU.\u00a0\u2014.\u200b Por ejemplo, Francia empezo en 1837 a castigar con penas de carcel o grandes multas cualquier comunicacion a distancia con se\u00f1ales; ya que durante la Rebelion de junio de 1832 se concluyo que de haber tenido acceso al telegrafo los rebeldes hubieran supuesto una gran amenaza.\u200b Sin ir mas lejos, Curzio Malaparte se\u00f1alaba en Tecnica del golpe de Estado de 1931 que bastaba con que un pu\u00f1ado de hombre tomasen algunas estructuras clave del Estado, como las centrales telegraficas y telefonicas, para lograr su control efectivo.\u200b De forma analoga Trotski creia que un ataque revolucionario no debia tener como objetivo las centros de poder del Estado como la Duma, sino las infraestructuras basicas de este como los ferrocarriles, las centrales electricas o las centrales de telecomunicacion.\u200b Esta concepcion de la revolucion, que tiene por objetivo tomar el control de las infraestructuras tecnicas del Estado, ha sido puesta en practica en diversas ocasiones: en el Golpe de Estado de mayo de 1926 en Polonia, o en el intento de Golpe de Estado de 1932 en Espa\u00f1a, entre otros.\u200b  Con el tiempo, los Estados permitieron a la ciudadania y a las empresas el uso del excedente de trafico en sus redes de telecomunicacion, aunque como se consideraban de vital importancia para la soberania y seguridad, seguian perteneciendo al Estado y este se reservaba su control.\u200b  Por ultimo, pero no menos importante por ello, cabe destacar que las tecnicas de telecomunicacion hacen posible la existencia de los llamados medios de comunicacion de masas \u2014menos el notable caso del periodico\u2014. Estos ejercen un papel muy importante en la politica, pues suponen un nexo de union de doble sentido entre los gobernantes y la ciudadania:  El 8 de enero de 1815 unos 8000 soldados britanicos atacaron por sorpresa a la guarnicion de milicianos que el entonces general Andrew Jackson tenia en Nueva Orleans en el marco de la guerra anglo-estadounidense de 1812. La batalla de Nueva Orleans resulto en una masacre para las unidades britanicas debido al potente fuego de artilleria; pero mas inquietante resulta saber que apenas 15 dias antes se habia firmado la paz, pero la noticia no cruzo el Atlantico hasta el 4 de febrero de ese a\u00f1o.\u200b  Un factor clave en la guerra son las comunicaciones, y en este sentido la telecomunicacion se ha convertido un factor de gran relevancia e influencia; tanto es asi que a lo largo de la historia las contiendas belicas han impulsado el desarrollo de nuevas tecnicas de telecomunicacion.\u200b En la estrategia militar hay dos factores clave para el manejo de cualquier ejercito: la unidad de accion y la rapidez en los movimientos.\u200b  Las primeras manifestaciones de comunicaciones a distancia en la historia antigua respondian precisamente a las necesidades belicas de la epoca, como el uso de tambores, hogueras o se\u00f1ales de humo.\u200b El primer sistema de telecomunicaciones moderno, el telegrafo optico de Chappe, se invento en la Francia revolucionaria, sitiada por todas sus fronteras; donde un sistema de comunicaciones rapido y fiable se convirtio en un factor muy favorable en la contienda.\u200b Mas reciente es la primera aplicacion de la telegrafia electrica en la guerra, que se realizo en la Guerra de Crimea (1853\u20131856);\u200b en la linea telegrafica que se construyo entre Baltschick y Varna, punto de operaciones de las tropa anglofrancesas destinadas a la peninsula de Crimea.\u200b Desde entonces, el uso del telegrafo ha sido decisivo en grandes contiendas como el Motin de la India de 1857, en la que desde Calcuta se comando al grueso del ejercito britanico desplegado en toda la India;\u200b en las guerras de unificacion italiana en 1859, en las que tanto el bando franco-piamontes como el austriaco usaron a gran escala el telegrafo;\u200b o en la Guerra de Secesion de Estados Unidos de 1861-1865, en la que se trato de usar \u2014y destruir al contrincante\u2014 los avances tecnicos de la epoca como la telegrafia, la aerostatica, el ferrocarril o los barcos de vapor;\u200b entre otras.  El desarrollo de las telecomunicaciones permitio en la Primera Guerra Mundial (1914-1918) la generalizacion del uso de las telecomunicaciones en el campo de batalla.\u200b Si bien al inicio de la contienda los medios moviles eran escasos,\u200b conforme se consolido el conflicto belico la telecomunicacion tomo un papel relevante en los frentes, para lo que se instalaron miles de kilometros de lineas telegraficas y telefonicas; en las batallas navales, en las que los buques se comunicaban a traves de la telegrafia sin hilos; asi como en las batallas aereas y misiones de reconocimiento aereo, en las que destaco el uso de la radio.\u200b En la Segunda Guerra Mundial (1939-1945) nacio el uso de la radiodifusion como arma psicologica y propagandistica, en lo que se vino a llamar \u00abla lucha de las ideas\u00bb.\u200b\u200b  Por ultimo, en la guerra moderna \u2014desde el fin de la Segunda Guerra Mundial hasta la actualidad\u2014 han aparecido nuevas tecnicas belicas de enorme importancia como los misiles guiados o los vehiculos aereos de combate no tripulados; o nuevas formas de confrontacion como la guerra electronica, la guerra informatica, la guerra de la informacion o la guerra centrada en redes.  Uno de los mayores consensos respecto a las telecomunicaciones se refiere al potencial de estas como un factor clave para la consecucion de la paz.\u200b Alli donde ocurre un suceso de cierta gravedad o urgencia, los sistemas de telecomunicacion demuestran ser una herramienta de vital importancia para minimizar los efectos de dicho suceso, por lo que muchos autores coinciden en que en la telecomunicacion tiene la capacidad de ser \u00abel servicio mas eficaz a la Humanidad\u00bb.\u200b  Un ejemplo recurrente de dicha capacidad es el Molink, el \u00abtelefono rojo\u00bb, que fue un sistema de comunicaciones que en plena Guerra Fria comunico de forma directa la cupula de gobierno de los Estados Unidos y la Union Sovietica. Esta linea telegrafica, pues se trataba de un sistema de teletipos y no de un telefono, permitia una comunicacion instantanea y sin la posibilidad de malas interpretaciones entre las dos potencias, que comprometia a ambas partes de una forma casi presencial.\u200b  Las telecomunicaciones han formado parte de la maquinaria economica y financiera desde antes de la aparicion de las tecnologias modernas, sobre todo desde el punto de vista del envio de noticias que pueden alterar el comportamiento de los agentes economicos. Una telecomunicacion se realiza para enviar cierta informacion, y \u00abla informacion es poder\u00bb.[nota 7]\u200b Asi, en 1815, el influyente Nathan Mayer Rothschild consiguio tener noticias de la victoria en Waterloo horas antes de la llegada de la noticia oficial gracias al uso de palomas mensajeras, por lo que en una maniobra especulativa vendio todos sus bonos de estado e hizo creer asi que Inglaterra habia perdido la guerra, lo que provoco el panico y la venta masiva de activos, que luego recompro el mismo a bajo coste.\u200b  La inversion en telecomunicaciones genera un crecimiento dividido debido a que la propagacion de las telecomunicaciones reduce los costos de interaccion, expande los limites del mercado y amplia enormemente los flujos de informacion. Algunas revoluciones modernas de gestion, tales como la produccion \ufffd??Justo a tiempo\ufffd?\ufffd (JIT) dependen completamente de una red eficiente de comunicaciones ubicuas.  Estas redes son desarrollos recientes. El trabajo de Roeller and Waverman (2001) sugiere que en la OECD, la difusion de las redes modernas de telecomunicaciones de linea fija era las responsable de un tercio del crecimiento de la produccion entre 1970 y 1990. Para los paises de ingresos altos, los telefonos moviles tambien proporcionan un significativo crecimiento dividido durante el mismo periodo de tiempo. Suecia, por ejemplo, tuvo una tasa media de penetracion movil 64 por cada 100 habitantes durante el periodo de 1996 a 2003, la mas alta penetracion de moviles observada. En ese mismo periodo, Canada tenia una tasa media de penetracion movil de 26 por cada 100 habitantes.  En las mismas condiciones, se estima que Canada ha disfrutado de un crecimiento promedio del PIB de casi 1 por ciento mas alto de lo que realmente era, la tasa de penetracion movil en Canada se ha mas que duplicado.\u200b  Si de forma general se considera que las tres infraestructuras de una sociedad son la energia, el transporte y las comunicaciones,\u200b son las telecomunicaciones la principal forma de comunicacion en la sociedad actual.La influencia de las telecomunicaciones en la situacion social de las personas se deja ver en conceptos como la sociedad del conocimiento, sociedad de la informacion o la sociedad de masas, teorias muy influyentes en la concepcion actual de las sociedades industriales y posindustriales de la Edad Contemporanea \u2014la actual\u2014.  En el ambito de los medios de comunicacion de masas, el sociologo Daniel Bell sostenia que en la historia pueden distinguirse cuatro grandes cambios o revoluciones asociadas a distintos modelos de sociedad:\u200b  Asi, ya en los a\u00f1os 1970 y 1980, a los que pertenecen las teorias aqui explicadas, se considero que las telecomunicaciones son una influencia esencial para la sociedad, ya que posibilita un dialogo directo e instantaneo capaz de hacer llegar a cualquier punto del planeta una misma idea, costumbre o mentalidad, condicionando el cambio social hacia una concepcion mas universal y sin fronteras de la humanidad.\u200b Esta idea tambien queda recogida en el concepto de \u00abaldea global\u00bb, concebido por el canadiense Marshall McLuhan, para el cual, debido a la expansion de los medios de comunicacion en los a\u00f1os 1950, el individuo pasaria a concebir el ancho mundo como una peque\u00f1a aldea global en la que la sociedad volveria a comportarse de forma mucho mas tribal y cercana. Este concepto se ha ido ampliando con el tiempo hasta incluir dimensiones como redes de dependencias mutuas, solidaridad, defensa de ideales compartidos, como por ejemplo la ecologia, el desarrollo sustentable o la democracia; un relativismo, debido a la falta de referencias universales, lideres y normas sociales emergentes; un mayor protagonismo de los individuos junto con la igualdad social; o que peque\u00f1os acontecimientos acontecidos en determinadas partes del mundo puedan tener efectos a una escala global: efecto mariposa, teoria del caos. Esto es, la globalizacion.  La cooperacion internacional en el ambito de las telecomunicaciones ha sido de vital importancia para entender la historia estas; pero ademas supuso una de las primeras formas modernas de organizacion internacional y que marcaria una forma de funcionamiento que se puede ver aun en las grandes organizaciones internacionales como la ONU.  En la primera mitad del siglo xix ninguna telecomunicacion sobrepasaba las fronteras entre las diferentes naciones de la epoca, que no eran pocas. Recuerdese, por ejemplo, que la Confederacion Germanica agrupaba a 39 entidades territoriales distintas en una extension asimilable a la actual Alemania. En este escenario, el primer acuerdo internacional fue el que firmaron Prusia y Austria el 3 de octubre de 1949. En este regulaban la actividad de la linea telegrafica entre Berlin y Viena, que transcurria paralela al ferrocarril que las unia, y establecia las prioridades de uso de la linea: asuntos de estado, informacion del tren y correspondencia comercial \u2014si procedia\u2014. A este acuerdo le siguieron el de Prusia y Sajonia y el de Austria y Baviera. En 1850 estos cuatro estados \u2014Prusia, Austria, Sajonia, Baviera\u2014 formaron la Union Telegrafica Austro-alemana, a la que se unieron otros estados germanos y los Paises Bajos, y no desaparecio hasta 1872. Como grandes aportaciones de esta Union destaca la decision en 1851 de conectar las lineas telegraficas en las fronteras, prescindiendo de los funcionarios que traducian y repetian los mensajes en estas; la eleccion del telegrafo de Morse como preferente; y la decision de separar los acuerdos mas generales e inmutables en un Convenio de los mas tecnicos y coyunturales, que se a\u00f1adian a un Reglamento anexo al Convenio. De esta manera se reducian los contactos diplomaticos que solo modificaban tasas o aspectos tecnicos. La experiencia germanica prospero y fue motivo de imitacion. Tras los acuerdos entre Francia y Belgica (1851), Francia y Suiza (1852), Francia y Cerde\u00f1a (1853) y Francia y Espa\u00f1a (1854); estos paises formaron la Union Telegrafica de Europa Occidental, con unas normas muy similares a la experiencia germanica. Tambien se firmo un acuerdo en el 1852 entre Francia, Prusia y Belgica que tenia la peculiaridad de que reconocia el derecho a usar los servicios del telegrafo internacional y al secreto de los telegramas, como precursor del derecho a la intimidad y al secreto de las telecomunicaciones. Este acuerdo fue despues ratificado por Suiza, Espa\u00f1a, Cerde\u00f1a, Portugal, Turquia, Dinamarca, Suecia y Noruega, los Estados Pontificios, Rusia, las Dos Sicilias y Luxemburgo. Para unificar por completo el servicio telegrafico en Europa, se firmo en Paris en 1865 del primer Convenio Telegrafico Internacional.  La telecomunicacion posee una regulacion legislativa y normativa muy especifica, asi como organismos reguladores que velan por el cumplimiento de dichas regulaciones, pero que ademas se haya intimamente ligada con el modelo economico del sector. Esto se debe a que de forma tradicional las telecomunicaciones eran un sector monopolizado por los distintos Estados, que se concebia como un servicio publico \u2014servicio universal\u2014, pero que en los ultimos a\u00f1os esta sufriendo un proceso de reconversion a un mercado libre de competencia perfecta, lo que ha generado una situacion transitoria de competencia regulada. Ademas, el caracter internacional de las redes de telecomunicacion obliga a establecer condiciones comunes de tarificacion e interconexion.  Una gran parte de las comunicaciones se llevan a cabo mediante tecnologias sin cables, esto es, mediante ondas electromagneticas que se propagan por todo el medio que nos rodea. Pero la peculiaridad es que a diferencia de un medio guiado como un cable, en el que la excitacion electromagnetica es contenida por el propio material y su aislamiento; en el caso de las comunicaciones por radio solo existe un medio que es compartido, por lo que existe un gran riesgo de interferencias entre las distintas transmisiones. Para ello, la administracion gestiona el uso y acceso a este recurso, que se puede considerar escaso a pesar de su gran dimension. Asi, se establecen limitaciones en la manera en la que cada persona o empresa puede llevar a cabo transmisiones por el aire, siendo incluso necesario en la mayoria de ocasiones algun tipo de licencia o el pago de tasas. De hecho, existen muy pocas bandas de frecuencia de acceso libre sin licencia, aunque su distribucion varia segun el pais. Algunas bandas libres son:  Desde el punto de vista tecnico lo que se hace es dividir el medio de transmision, el aire, en diferentes ventanas o slots de frecuencia. De esta manera, estas ventanas se reparten entre los interesados, siendo necesario en la mayoria de los casos cumplir una serie de requisitos y el pago de determinadas tasas. Ademas, se limita la potencia de la antena utilizada con el fin de que la emision de una antena no interfiera las de alrededor.  La administracion publica suele tener un organismo especifico, un organismo regulador, que se encargue de regular la forma en la que los agentes interesados realizan sus transmisiones. Ademas sirve de intermediario entre las empresas que prestan servicios de telecomunicacion, como los proveedores de servicios de Internet o los operadores de telefonia movil, y sus clientes.  El mercado de las telecomunicaciones es un mercado altamente especializado y moderno, debido a la juventud de los conocimientos y tecnologias en los que se basa. Su evolucion a lo largo de estos poco mas de dos siglos de historia se ha marcado por el rapido crecimiento del numero de tecnologias implicadas, servicios prestados y usuarios. Ademas, se ha evolucionado desde un contexto altamente estatizado y un marcado caracter de infraestructura basica y servicio publico, mediante un proceso de liberalizacion, a un mercado libre pero que sigue regulado por la legislacion de cada estado con el mismo caracter de servicio publico. Mencion aparte merecen los Estados Unidos, donde el sector siempre ha sido sostenido y gestionado por la iniciativa privada, llegando incluso a legalizarse monopolios en manos privadas.  Una de las muchas maneras en la que se estudia el mercado generado por la telecomunicacion \u2014a menudo llamado 'macrosector de las telecomunicaciones'\u2014 es dividiendolo en los siguientes sectores:\u200b  La telecomunicacion permite el intercambio de informacion entre distintos sistemas que tipicamente podran estar basados en tecnologias muy distintas e incluso incompatibles entre si. Ademas, existen muchos fabricantes de equipos, componentes e instrumental que compiten en un mercado comun para ofrecer ideas y tecnologias propias que mejoren los productos existentes y conseguir asi mas cuota de mercado. Se presenta asi un evidente problema de compatibilidad entre los distintos sistemas que pueden ser conectados entre si; asi como entre los productos de los distintos fabricantes si estos trataran de imponer su propio producto con tecnologias y caracteristicas propias. En los actuales sistemas de comunicacion, que tienden a la globalizacion de su uso y extension, esta discordancia seria un inconveniente muy grande tanto para los usuarios que usan los servicios de telecomunicacion como para los profesionales que dise\u00f1an e implementan estos servicios y las empresas proveedoras de estos.  La normalizacion o estandarizacion consiste precisamente en crear un conjunto de reglas que permitan a la industria fabricar equipos compatibles entre si y con los estandares de calidad y seguridad que demanda tanto los estados como la sociedad. En el caso concreto de la telecomunicacion, el objetivo principal de la normalizacion es definir como y con que 'lenguaje' se comunican los distintos sistemas. Las consecuencias inmediatas de la normalizacion, ademas de la posibilidad de implementar sistemas heterogeneos, es que la investigacion, desarrollo e innovacion de nuevas tecnologias se convierte en una tarea, que si bien sigue siendo competitiva, se desarrolla de forma paralela y centrada en una linea de desarrollo comun. Este fenomeno provoca que se acelere el ritmo con el que aparece nueva tecnologia, y por tanto una mayor obsolescencia  y un menor ciclo de vida de esta; y el abaratamiento de la fabricacion.  La normalizacion en las telecomunicaciones esta muy asociada a los Organismos Internacionales de Normalizacion:  Finalmente, cabe mencionar otros grupos de normalizacion de gran importancia como son el Grupo de Trabajo en Ingenieria de Internet (IETF) o consorcios privados como el World Wide Web Consortium (W3C). Ademas, cuando se comenzo a desarrollar la red Internet (nacida de la red ARPANET de los Estados Unidos), los miembros que formaban parte de los grupos de investigacion se comunicaban a traves de informes tecnicos que llevaban el nombre de RFC (Request For Comments, solicitud de comentarios es castellano). Estos informes tecnicos daban (y siguen dando) lugar a normas que quedan numeradas segun el orden cronologico de creacion. Los RFCs establecen por ejemplo las normas para el funcionamiento del protocolo IP, del protocolo UDP, del correo electronico, por nombrar solo algunos ejemplos.  Las tecnologias de las que hace uso las telecomunicaciones tiene una incidencia en la salud de las personas.  En la actualidad, casi todas las telecomunicaciones se realizan usando fenomenos electromagneticos, excepto las que se realizan por correo postal, mensajeros o palomas mensajeras. Estas comunicaciones pueden realizarse por medios de transmision guiados o no guiados. Los medios de transmision guiados son los cables, que no tienen mayor incidencia en la salud que la que pueda producir la toxicidad de sus materiales, por ejemplo. Son los medios no guiados, que usan el entorno abierto como medio, los que pueden reportar un mayor riesgo para la salud.  Tanto la energia electrica como la magnetica son dos manifestaciones de la energia electromagnetica; por lo que de la misma manera que una corriente electrica puede llegar a ser perjudicial para la salud, encontrarse inmerso en un campo electromagnetico tambien puede serlo; todo depende de como de energetico sea ese campo. En el caso concreto de las telecomunicaciones, que usan formas de radiacion no ionizante, los factores que hay que tener en cuenta son la potencia de la antena que genera el campo electromagnetico y la distancia a esta. La potencia representa la energia emitida por unidad de tiempo, mientras que la distancia reduce los efectos del campo con un factor cuadratico \u2014como en el caso del sonido\u2014, por lo que al estar a n metros de la antena, los efectos del campo se reducen n2 veces.  En este sentido, las tecnologias de uso cotidiano se presuponen seguras para el cuerpo humano, pues se dise\u00f1an para serlo. Los estados limitan la potencia que una antena pueda emitir para que no llegue a ser perjudicial para la salud. Asi, por ejemplo, en Espa\u00f1a la limitacion de potencia viene recogida en el Cuadro Nacional de Atribucion de Frecuencias (CNAF) y la distancia de seguridad esta regulada en el Real Decreto 1066/2001, de 28 de septiembre, por el que se aprueba el Reglamento que establece condiciones de proteccion del dominio publico radioelectrico, restricciones a las emisiones radioelectricas y medidas de proteccion sanitaria frente a emisiones radioelectricas. Sin embargo, son los efectos a largo plazo, o las exposiciones a muchos campos electromagneticos de distinta naturaleza, lo que es objeto de estudio hoy en dia. Ciertas instalaciones si que son inseguras sin lugar a dudas, como una antena emisora de amplitud modulada que da servicio de radio a todo un pais o una estacion de radar, pero se encuentran debidamente se\u00f1alizadas. ","snippet":"Una telecomunicacion es toda transmision y recepcion de se\u00f1ales de cualquier naturaleza, tipicamente electromagneticas, que contengan signos, sonidos, imagenes o, en definitiva, cualquier tipo de info","enlaces_salientes":["Telecomunicaci%C3%B3n","Telecomunicaci%C3%B3n","Telecomunicaci%C3%B3n","Antena","Nikola_Tesla","Se%C3%B1al","Ondas_electromagn%C3%A9ticas","Escritura","Sonido","Imagen","Informaci%C3%B3n","Comunicaci%C3%B3n","Sistema","Ingenier%C3%ADa_de_telecomunicaciones","Infraestructura_urbana","Edad_Contempor%C3%A1nea","Revoluci%C3%B3n_Francesa","Globalizaci%C3%B3n","Sociedad_de_la_informaci%C3%B3n","Sociedad_del_conocimiento","Comercio","Empresa","Medio_de_comunicaci%C3%B3n_de_masas","Sociedad_de_masas","Radio_(medio_de_comunicaci%C3%B3n)","Televisi%C3%B3n","Tel%C3%A9fono","Telefon%C3%ADa_m%C3%B3vil","Datos","Redes_inform%C3%A1ticas","Internet","Radioayuda","Telemetr%C3%ADa","Convergencia_tecnol%C3%B3gica","Tecnolog%C3%ADas_de_la_informaci%C3%B3n_y_la_comunicaci%C3%B3n","Inform%C3%A1tica","Electr%C3%B3nica","Telem%C3%A1tica","Ingenier%C3%ADa_inform%C3%A1tica","Ingenier%C3%ADa_el%C3%A9ctrica","Ingenier%C3%ADa_de_telecomunicaciones","Idioma_franc%C3%A9s","%C3%89douard_Estauni%C3%A9","Lat%C3%ADn","Prefijo","Idioma_griego","Telegraf%C3%ADa","Telefon%C3%ADa","Pr%C3%A9stamo_ling%C3%BC%C3%ADstico","Madrid","Telefon%C3%ADa","Telegraf%C3%ADa","Radiotelegraf%C3%ADa","Radiotelefon%C3%ADa","Manuel_Allendesalazar_y_Mu%C3%B1oz_de_Salazar","Desastre_de_Annual","Antonio_Castilla_L%C3%B3pez","Constituci%C3%B3n","Uni%C3%B3n_Internacional_de_Telecomunicaciones","1932","Metonimia","Luc-Olivier_Merson","Fil%C3%ADpides#La_historia_de_Her.C3.B3doto","Her%C3%B3doto","Fil%C3%ADpides","Atenas","Esparta","Historia_de_las_telecomunicaciones","Guerra","Comercio","Teor%C3%ADa_de_la_informaci%C3%B3n","Siglo_XX","Civilizaci%C3%B3n","Mensajero","Sumeria","Persia","Egipcia","Antigua_Roma","Correo_postal","Almenara_(fuego)","Se%C3%B1al_de_humo","Tambor","Cuerno_(aer%C3%B3fono)","Bramadera","Dramaturgo","Antigua_Grecia","Esquilo","Agamen%C3%B3n_(obra)","Argos_(Grecia)","Troya","Historiador","Antigua_Grecia","Polibio","Tel%C3%A9grafo_hidr%C3%A1ulico","Eneas_el_T%C3%A1ctico","Siglo_IV_a._C.","Clepsidra","Emisor","Receptor_(comunicaci%C3%B3n)","Edad_Contempor%C3%A1nea","Correo_postal","Tel%C3%A9grafo_%C3%B3ptico","Robert_Hooke","1684","Royal_Society","Siglo_XIX","Francia","Revoluci%C3%B3n_francesa","Claude_Chappe","Par%C3%ADs","Lille","Cond%C3%A9-sur-l%27Escaut","Reino_de_Gran_Breta%C3%B1a","Abraham_Louis_Breguet","Agust%C3%ADn_de_Betancourt","Jos%C3%A9_Mar%C3%ADa_Math%C3%A9_Aragua","Espa%C3%B1a","Tel%C3%A9grafo_hidr%C3%A1ulico","Eneas_el_T%C3%A1ctico","Tel%C3%A9grafo_hidr%C3%A1ulico","Eneas_el_T%C3%A1ctico","Bramadera","Apache","Bramadera","Apache","Cuerno_(aer%C3%B3fono)","Cultura_moche","Siglo_III","Cuerno_(aer%C3%B3fono)","Cultura_moche","Siglo_III","Francia","Tel%C3%A9grafo_%C3%B3ptico","Francia","Tel%C3%A9grafo_%C3%B3ptico","Pila_voltaica","1729","Stephen_Gray","Electricidad","Siglo_XIX","Alessandro_Volta","Royal_Society","Corriente_continua","Pila_voltaica","Historia_de_la_electricidad","Alemania","Samuel_Thomas_von_S%C3%B6mmerring","Francesc_Salv%C3%A0_i_Campillo","Electr%C3%B3lisis","Hidr%C3%B3geno","Tel%C3%A9grafo","Telegraf%C3%ADa","Tel%C3%A9grafo_el%C3%A9ctrico","Siglo_XIX","Imperio_ruso","Pavel_Schilling","Galvan%C3%B3metro","Johann_Carl_Friedrich_Gauss","Wilhelm_Eduard_Weber","Universidad_de_Gotinga","Gotinga","Magnet%C3%B3metro","Patente","William_Fothergill_Cooke","Charles_Wheatstone","Estaci%C3%B3n_de_Euston","Camden_Town","Estaci%C3%B3n_de_Paddington","Londres","British_Telecom","Inglaterra","Europa","Monarqu%C3%ADa_de_Julio","Imperio_austr%C3%ADaco","B%C3%A9lgica","Unificaci%C3%B3n_de_Italia","Suiza","Imperio_ruso","Pintor","Samuel_Morse","Alfred_Vail","Estadounidense","Electroim%C3%A1n","Universidad_de_Nueva_York","D%C3%B3lar_de_los_Estados_Unidos","Washington_D._C.","Baltimore","Estados_Unidos","1861","1865","Guerra_de_Secesi%C3%B3n","Aerost%C3%A1tica","Ferrocarril","Barco_de_vapor","Western_Union","Associated_Press","Patente","David_Edward_Hughes","%C3%89mile_Baudot","Tomas_Edison","Europa","Inglaterra","Espa%C3%B1a","1865","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Conferencia_de_Londres","Antonomasia","Historia_de_la_telegraf%C3%ADa_argentina","Pa%C3%ADses_Bajos","1976","Conmutaci%C3%B3n_(redes_de_comunicaci%C3%B3n)","Sistema_de_conmutaci%C3%B3n_Rotary","Tel%C3%A9fono","Siglo_XIX","Tel%C3%A9fono","Telefon%C3%ADa","Robert_Hooke","1796","Antonio_Meucci","Johann_Philipp_Reis","Elisha_Gray","Alexander_Graham_Bell","Telefon%C3%ADa","Autor%C3%ADa","Patente","1856","Antonio_Meucci","Idioma_italiano","Idioma_alem%C3%A1n","Johann_Philipp_Reis","1862","Cuero","1864","Idioma_franc%C3%A9s","Patente","Estados_Unidos","Alexander_Graham_Bell","1876","1893","Estados_Unidos","Estados_Unidos","Elisha_Gray","Thomas_Alva_Edison","Western_Union","Monopolio","AT%26T","Bell_Telephone_Company","Estados_Unidos","Sordomudo","O%C3%ADdo","Telegraf%C3%ADa_arm%C3%B3nica","Nota_(sonido)","Gardiner_Greene_Hubbard","Thomas_A._Watson","1875","14_de_febrero","1876","10_de_marzo","D%C3%A9cada_de_1870","P%C3%A1nico_de_1873","Western_Union","Exposici%C3%B3n_Universal_de_Filadelfia_(1876)","1877","Bell_Telephone_Company","Theodore_Newton_Vail","Alfred_Vail","Western_Union","Thomas_Alva_Edison","Ringtone","Rutherford_B._Hayes","1879","Corte_Suprema_de_los_Estados_Unidos","Western_Union","D%C3%B3lar_de_los_Estados_Unidos","AT%26T","Monopolio","Europa","Infraestructuras","Estado","Laboratorios_Bell","Western_Union","Departamento_de_Justicia_de_los_Estados_Unidos","Baby_Bells","1984","Conmutaci%C3%B3n_(redes_de_comunicaci%C3%B3n)","Tivadar_Pusk%C3%A1s","Cable_submarino","Frontera","Frontera_natural","Medios_de_transmisi%C3%B3n","Hierro","Cobre","Ensayo_y_error","1847","Werner_von_Siemens","Gutapercha","Paso_de_Calais","Canal_de_la_Mancha","Francia","Inglaterra","Remolcador","1850","Mm","C%C3%A1%C3%B1amo","Galvanizado","1852","Gales","Escocia","Irlanda_(isla)","B%C3%A9lgica","Dinamarca","Mar_del_Norte","C%C3%B3rcega","Cerde%C3%B1a","Italia","C%C3%B3rcega","Tasmania","Australia","1860","Inglaterra","India","Canal_de_Suez","Cable_telegr%C3%A1fico_transatl%C3%A1ntico","Gutapercha","Irlanda","Braza_(unidad)","Queenstown","Isla_de_Valentia","1858","Valentia","Irlanda","Bah%C3%ADa_de_Trinity","Isla_de_Valentia","Cyrus_West_Field","Guerra_de_Secesi%C3%B3n","1865","Great_Eastern","1866","Fibra_%C3%B3ptica","Exposici%C3%B3n_Universal","Belle_%C3%89poque","Positivismo","Cientificismo","Burgues%C3%ADa","Clase_media","Aristocracia","Exposici%C3%B3n_Universal","Ferrocarril","Hermanos_Lumi%C3%A8re","Ronald_Ross","Malaria","Henri_Becquerel","Marie_Curie","Pierre_Curie","Radiactividad","Aviaci%C3%B3n","Estados_Unidos","Hermanos_Wright","Heinrich_Rudolf_Hertz","Ecuaciones_de_Maxwell","A%C3%B1os_1880","Augusto_Righi","Radiocomunicaci%C3%B3n","Edouard_Branly","Nikola_Tesla","Aleksandr_Step%C3%A1novich_Popov","Guillermo_Marconi","Edouard_Branly","Cohesor","Nikola_Tesla","Guerra_de_las_corrientes","Oliver_Joseph_Lodge","Royal_Institution","Londres","Aleksandr_Step%C3%A1novich_Popov","D%C3%ADa_de_la_Radio","Guillermo_Marconi","Cohesor","William_Henry_Preece","Royal_Mail","Compa%C3%B1%C3%ADa_Marconi","Telefunken","Siemens_AG","AEG","Siglo_XX","Teletipo","C%C3%B3digo_Baudot","Rel%C3%A9","Madrid","3_de_septiembre","1932","M%C3%B3dem","Computadora","Inform%C3%A1tica","Sat%C3%A9lite_de_comunicaciones","Conmutaci%C3%B3n_de_paquetes","Redes_de_computadoras","ARPANET","Internet","CCITT","Conmutaci%C3%B3n_de_circuitos","Organizaci%C3%B3n_Internacional_para_la_Estandarizaci%C3%B3n","Modelo_OSI","Redes_de_%C3%A1rea_local","A%C3%B1os_1980","Ordenador_personal","A%C3%B1os_1990","Internet","Fibra_%C3%B3ptica","Siglo_XXI","Comunicaci%C3%B3n_inal%C3%A1mbrica","Redes_inal%C3%A1mbricas","F%C3%ADsico","James_Clerk_Maxwell","Onda_electromagn%C3%A9tica","Ecuaciones_de_Maxwell","Transformada_de_Fourier","Ingeniero","Jean-Baptiste_Joseph_Fourier","Espectro_de_frecuencias","Ingenier%C3%ADa_de_telecomunicaciones","Modelo_cient%C3%ADfico","Sistema","Informaci%C3%B3n","Comunicaci%C3%B3n","Implementaci%C3%B3n","Matem%C3%A1ticas","Ciencia_formal","Modelo_cient%C3%ADfico","%C3%81lgebra","C%C3%A1lculo","C%C3%A1lculo_diferencial","Estad%C3%ADstica","Transformada_de_Fourier","Transformada_de_Laplace","F%C3%ADsica","Electromagnetismo","F%C3%ADsico","Escocia","James_Clerk_Maxwell","1873","Onda_electromagn%C3%A9tica","Electricidad","Magnetismo","Ecuaciones_de_Maxwell","Teor%C3%ADa_de_la_informaci%C3%B3n","Ancho_de_banda","Relaci%C3%B3n_se%C3%B1al-ruido","Laboratorios_Bell","Claude_E._Shannon","1948","Teor%C3%ADa_de_sistemas","Teor%C3%ADa_de_control","Interdisciplinariedad","Teor%C3%ADa_de_sistemas","Teor%C3%ADa_de_control","Automatizaci%C3%B3n_industrial","Teor%C3%ADa_de_colas","Calidad_de_servicio","Inform%C3%A1tica","Programaci%C3%B3n","Protocolo_de_comunicaciones","Simulaci%C3%B3n","Electr%C3%B3nica","Circuito_electr%C3%B3nico","Circuito_anal%C3%B3gico","Circuito_digital","Circuito_integrado","Procesamiento_digital_de_se%C3%B1ales","Filtro_electr%C3%B3nico","Informaci%C3%B3n","Comunicaci%C3%B3n","Lenguaje","Comunicaci%C3%B3n","Informaci%C3%B3n","T%C3%A9cnica","Funci%C3%B3n_f%C3%A1tica","Lenguaje","Fuentes_de_informaci%C3%B3n","Sonido","Imagen","Dato","Biomedicina","Meteorolog%C3%ADa","Se%C3%B1al_anal%C3%B3gica","Se%C3%B1al_digital","Procesado_de_se%C3%B1al","Tiempo","Frecuencia","Eficiencia","Ancho_de_banda","Tasa_de_transferencia","Interferencia","Compresi%C3%B3n_de_datos","Computadora","Digitalizaci%C3%B3n","Muestreo_digital","Interpolaci%C3%B3n","Teorema_de_muestreo_de_Nyquist-Shannon","Teor%C3%ADa_de_la_informaci%C3%B3n","Frecuencia","Ancho_de_banda","Hercio","Segundo","Cuantificaci%C3%B3n_digital","Discreto","Codificaci%C3%B3n_digital","Sistema_binario","Lenguaje","Protocolo_de_comunicaci%C3%B3n","Idioma","Sistema_de_transmisi%C3%B3n","Teor%C3%ADa_de_sistemas","Teor%C3%ADa_de_control","Teor%C3%ADa_de_colas","Sistema","Medio_de_transmisi%C3%B3n","Emisor","Antena","Computadora","Tel%C3%A9fono","Receptor_(comunicaci%C3%B3n)","Radio_(receptor)","Televisor","Medio_de_transmisi%C3%B3n","Repetidor","Amplificador","Conmutador_(dispositivo_de_red)","Trama_de_red","Red_de_computadoras","Router","Idioma_ingl%C3%A9s","Trama_de_red","TCP/IP","Filtro_electr%C3%B3nico","Acceso_m%C3%BAltiple_por_divisi%C3%B3n_de_frecuencia","Radio_(receptor)","Televisor","Teor%C3%ADa_de_sistemas","Teor%C3%ADa_de_control","Teor%C3%ADa_de_colas","Calidad_de_servicio","Factores_de_producci%C3%B3n","C%C3%B3digos_detectores_y_correctores_de_error","Sistema_de_tiempo_real","Calidad_de_servicio","Ruido_impulsivo","Ruido_de_Johnson-Nyquist","Tiempo_de_propagaci%C3%B3n","Funci%C3%B3n_de_transferencia","Sistema_LTI","Eco","Medio_de_transmisi%C3%B3n","Informaci%C3%B3n","Sistema_de_transmisi%C3%B3n","Ondas_electromagn%C3%A9ticas","Canal_de_comunicaci%C3%B3n","Vac%C3%ADo","Atenuaci%C3%B3n","Ruido_(f%C3%ADsica)","Distorsi%C3%B3n","Retardo","Magnitud_f%C3%ADsica","Onda_sonora","Sonido","Cable","Cable_bifilar","Cable_de_par_trenzado","Cable_coaxial","Fibra_%C3%B3ptica","Cables","Metal","Cobre","Tel%C3%A9grafo","Interferencia","Cortocircuito","Aislamiento_el%C3%A9ctrico","Pl%C3%A1stico","Cobre","Electromagnetismo","Cable_submarino","Par_trenzado","Alexander_Graham_Bell","1881","Trenza","Helicoidal","Antena","Radiaci%C3%B3n","Shielded_twisted_pair","Unshielded_twisted_pair","Cable_coaxial","Fibra_%C3%B3ptica","Transparente","Opaco","Vidrio","Pl%C3%A1sticos","Luz","Electricidad","Vidrio","Radiofrecuencia","Radiocomunicaci%C3%B3n","Antena","Sat%C3%A9lite_de_comunicaciones","Radiocomunicaci%C3%B3n_por_microondas","Campo_electromagn%C3%A9tico","Electromagnetismo","Siglo_XIX","Comunicaci%C3%B3n_inal%C3%A1mbrica","1901","Guillermo_Marconi","Nikola_Tesla","Radiocomunicaci%C3%B3n","Hundimiento_del_Titanic","1912","Primera_Guerra_Mundial","1914","Radiocomunicaci%C3%B3n","Radiofrecuencia","Espectro_de_frecuencias","Antena","Voltaje","Ondas_electromagn%C3%A9ticas","Radio_(medio_de_comunicaci%C3%B3n)","Televisi%C3%B3n","Telefon%C3%ADa_m%C3%B3vil","Radioafici%C3%B3n","MHz","GHz","UHF","SHF","Frecuencia_extremadamente_alta","Microonda","Ancho_de_banda","Bandas_de_frecuencia","Informativo_televisivo","Televisi%C3%B3n","IEEE_802.11","Wi-Fi","Radiocomunicaci%C3%B3n","Exploraci%C3%B3n_espacial","Sondas_espaciales","Unidad_astron%C3%B3mica","Voyager","Red_del_Espacio_Profundo","Bandas_de_frecuencia","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Hz","Km","Frecuencia_extremadamente_baja","Super_baja_frecuencia","Ultra_baja_frecuencia","Muy_baja_frecuencia","KHz","Baja_frecuencia","Media_frecuencia","Metro","Alta_frecuencia","MHz","Muy_alta_frecuencia","Ultra_alta_frecuencia","Mm","Super_alta_frecuencia","GHz","Frecuencia_extremadamente_alta","Sat%C3%A9lite_de_comunicaciones","Telstar_1","1962","Sat%C3%A9lite_artificial","Sat%C3%A9lite_geos%C3%ADncrono","Red_Telef%C3%B3nica_Conmutada","Tel%C3%A9fono_satelital","Televisi%C3%B3n_por_sat%C3%A9lite","Internet_por_sat%C3%A9lite","Pa%C3%ADses_Bajos","1947","Segunda_guerra_mundial","Electromec%C3%A1nica","Conmutaci%C3%B3n_(redes_de_comunicaci%C3%B3n)","Modulaci%C3%B3n_(telecomunicaci%C3%B3n)","Multiplexaci%C3%B3n","Complejidad","Usuario","Red_telef%C3%B3nica_conmutada","Bucle_de_abonado","Cable_de_par_trenzado","Telefon%C3%ADa","ADSL","IPTV","Conmutaci%C3%B3n_(redes_de_comunicaci%C3%B3n)","Terminal_(inform%C3%A1tica)","Conmutaci%C3%B3n_de_circuitos","Sistema_de_conmutaci%C3%B3n_Rotary","Conmutaci%C3%B3n_de_paquetes","Paquete_de_red","Router","Correo_postal","Modulaci%C3%B3n_(telecomunicaci%C3%B3n)","Onda_electromagn%C3%A9tica","Onda_portadora","Antena","Longitud_de_onda","Frecuencia","Distorsi%C3%B3n","Radiodifusi%C3%B3n","AM","FM","Acceso_m%C3%BAltiple","Multiplexaci%C3%B3n","Multiplexaci%C3%B3n_por_divisi%C3%B3n_de_tiempo","Telefon%C3%ADa_m%C3%B3vil","Sistema_global_para_las_comunicaciones_m%C3%B3viles","Multiplexaci%C3%B3n_por_divisi%C3%B3n_de_frecuencia","Bandas_de_frecuencia","Espectro_de_frecuencias","Frecuencia","Filtro_electr%C3%B3nico","Radiodifusi%C3%B3n","FM","Red_de_telecomunicaci%C3%B3n","Servicio_de_telecomunicaci%C3%B3n","Conmutaci%C3%B3n_(redes_de_comunicaci%C3%B3n)","Multiplexaci%C3%B3n","Radiodifusi%C3%B3n","Bien_p%C3%BAblico","Topolog%C3%ADa_de_red","Usuario_(inform%C3%A1tica)","Nodo_(inform%C3%A1tica)","Enlace_de_telecomunicaci%C3%B3n","Correo_postal","Buz%C3%B3n","Cartero","Oficina_de_Correos","Servicio_de_telecomunicaci%C3%B3n","Correo_postal","Carta_documento","Burofax","Cadenas_de_televisi%C3%B3n","Torre_de_telecomunicaciones_(desambiguaci%C3%B3n)","Canal_de_televisi%C3%B3n","V%C3%ADdeo_bajo_demanda","Televisi%C3%B3n","Teletexto","Red_Telef%C3%B3nica_Conmutada","Telefon%C3%ADa_m%C3%B3vil","Red_de_%C3%A1rea_local","Red_de_%C3%A1rea_amplia","Econom%C3%ADa","Emergencia_(desastre)","Guerra","Red_telegr%C3%A1fica","Teletipo","Paloma_mensajera","Sem%C3%A1foro_(comunicaci%C3%B3n)","Red_Telef%C3%B3nica_Conmutada","Administraci%C3%B3n_p%C3%BAblica","Tel%C3%A9fono","Bucle_de_abonado","Central_telef%C3%B3nica","Conmutaci%C3%B3n_de_circuitos","Sistema_de_conmutaci%C3%B3n_Rotary","Central_telef%C3%B3nica_digital","Computadoras","Red_de_computadoras","Red_de_%C3%A1rea_local","Impresora","Servidor","Ethernet","Token_Ring","Cable_de_par_trenzado","Cable_coaxial","Red_de_%C3%A1rea_amplia","Proveedor_de_servicios_de_Internet","Radio_(medio_de_comunicaci%C3%B3n)","Televisi%C3%B3n","Radio_(medio_de_comunicaci%C3%B3n)","Televisi%C3%B3n","Peri%C3%B3dico","Medio_de_comunicaci%C3%B3n_de_masas","Broadcasting","Atm%C3%B3sfera","Multiplexaci%C3%B3n_en_frecuencia","Filtro_electr%C3%B3nico","Modulaci%C3%B3n_(telecomunicaci%C3%B3n)","Televisi%C3%B3n_anal%C3%B3gica","TDT","Televisi%C3%B3n_por_sat%C3%A9lite","AM","FM","Televisi%C3%B3n_por_cable","Fibra_%C3%B3ptica","Cable_coaxial","IPTV","L%C3%ADnea_de_abonado_digital","Multiplexaci%C3%B3n_por_divisi%C3%B3n_de_c%C3%B3digo","Cu%C3%A1druple_play","Triple_play","L%C3%ADnea_de_abonado_digital","Banda_ancha","Proveedor_de_servicios_de_Internet","Calidad_de_servicio","L%C3%ADnea_de_abonado_digital","FTTx","Hybrid_Fibre_Coaxial","Telefon%C3%ADa_m%C3%B3vil_3G","WiMAX","Triple_play","Internet_Protocol","VoIP","Terminal_IP","IPTV","Cu%C3%A1druple_play","Convergencia_tecnol%C3%B3gica","TIC","Red_de_siguiente_generaci%C3%B3n","Telem%C3%A1tica","Internet","TCP/IP","Sistema_inform%C3%A1tico","Internet","Red_de_telecomunicaci%C3%B3n","Red_de_computadoras","Protocolo_de_comunicaciones","Familia_de_protocolos_de_Internet","Internet_Protocol","Direcci%C3%B3n_IP","Transmission_Control_Protocol","HTTP","SMTP","SSH","File_Transfer_Protocol","World_Wide_Web","Hipertexto","Correo_electr%C3%B3nico","SMTP","File_Transfer_Protocol","Peer-to-peer","Chat","Internet_Relay_Chat","Mensajer%C3%ADa_instant%C3%A1nea","Telefon%C3%ADa","VoIP","Televisi%C3%B3n","IPTV","Grupo_de_noticias","NNTP","Administraci%C3%B3n_remota","SSH","Telnet","Juegos_en_l%C3%ADnea","Proveedor_de_servicios_de_Internet","Intranet","Cajero_autom%C3%A1tico","Internet2","Red_del_Espacio_Profundo","Historia_de_las_telecomunicaciones","Edad_Contempor%C3%A1nea","Infraestructura_urbana","Estados_Unidos","Woodrow_Wilson","Conferencia_de_Paz_de_Par%C3%ADs_(1919)","1919","Otto_von_Bismarck","Alemania","Centralismo","Estado","Estados_Unidos","Rebeli%C3%B3n_de_junio","Curzio_Malaparte","1931","Le%C3%B3n_Trotski","Duma","Golpe_de_Estado_de_mayo_de_1926","Segunda_Rep%C3%BAblica_Polaca","La_Sanjurjada","Segunda_Rep%C3%BAblica_Espa%C3%B1ola","Medio_de_comunicaci%C3%B3n_de_masas","Peri%C3%B3dico","Emilio_Castelar","8_de_enero","1815","Reino_Unido_de_Gran_Breta%C3%B1a_e_Irlanda","Andrew_Jackson","Nueva_Orleans","Guerra_anglo-estadounidense_de_1812","Batalla_de_Nueva_Orleans","Tratado_de_Gante","Oc%C3%A9ano_Atl%C3%A1ntico","Guerra","Tel%C3%A9grafo_%C3%B3ptico","Claude_Chappe","Revoluci%C3%B3n_francesa","Tel%C3%A9grafo","Guerra_de_Crimea","1853","1856","Varna_(Bulgaria)","Pen%C3%ADnsula_de_Crimea","Rebeli%C3%B3n_en_la_India_de_1857","1857","Calcuta","India","Unificaci%C3%B3n_de_Italia#La_segunda_guerra_de_la_independencia_(1859-61)","1859","Segundo_Imperio_franc%C3%A9s","Reino_de_Cerde%C3%B1a","Imperio_austriaco","Guerra_de_Secesi%C3%B3n","Estados_Unidos","1861","1865","Aerost%C3%A1tica","Ferrocarril","Barco_de_vapor","Primera_Guerra_Mundial","1914","1918","Telegraf%C3%ADa_sin_hilos","Radiocomunicaci%C3%B3n","Segunda_Guerra_Mundial","1939","1945","Radiodifusi%C3%B3n","Guerra_moderna","Guiado_de_misiles","Veh%C3%ADculo_a%C3%A9reo_de_combate_no_tripulado","Guerra_electr%C3%B3nica","Guerra_inform%C3%A1tica","Guerra_de_la_informaci%C3%B3n","Guerra_centrada_en_redes","Tel%C3%A9fono_rojo","Guerra_Fr%C3%ADa","Estados_Unidos","Uni%C3%B3n_Sovi%C3%A9tica","Teletipo","Econom%C3%ADa","Finanzas","Agente_econ%C3%B3mico","1815","Nathan_Mayer_Rothschild","Batalla_de_Waterloo","Paloma_mensajera","Especulaci%C3%B3n_(econom%C3%ADa)","Bono_(finanzas)","Inglaterra","M%C3%A9todo_justo_a_tiempo","OECD","PIB","Infraestructuras","Energ%C3%ADa","Transporte","Comunicaci%C3%B3n","Sociedad_del_conocimiento","Sociedad_de_la_informaci%C3%B3n","Sociedad_de_masas","Sociedad_industrial","Sociedad_posindustrial","Edad_Contempor%C3%A1nea","Medio_de_comunicaci%C3%B3n_de_masas","Sociolog%C3%ADa","Daniel_Bell","Historia","Lenguaje","Escritura","Administraci%C3%B3n_p%C3%BAblica","Biblioteca","Imprenta","Sociedad_industrial","Libro","Peri%C3%B3dico","Sociedad_posindustrial","Globalizaci%C3%B3n","Informaci%C3%B3n","Conocimiento","Creatividad","Clase_social","Sociedad_de_clases","Aldea_global","Canad%C3%A1","Marshall_McLuhan","Ecolog%C3%ADa","Desarrollo_sustentable","Democracia","Relativismo","Liderazgo","Norma_social","Igualdad_social","Efecto_mariposa","Teor%C3%ADa_del_caos","Globalizaci%C3%B3n","Tecnolog%C3%ADas_de_la_informaci%C3%B3n_y_la_comunicaci%C3%B3n","Cooperaci%C3%B3n_internacional","ONU","Siglo_XIX","Confederaci%C3%B3n_Germ%C3%A1nica","Alemania","Prusia","Imperio_austr%C3%ADaco","3_de_octubre","1949","Berl%C3%ADn","Viena","Ferrocarril","Prusia","Reino_de_Sajonia","Imperio_austr%C3%ADaco","Reino_de_Baviera","1850","Prusia","Imperio_austr%C3%ADaco","Reino_de_Sajonia","Reino_de_Baviera","Pa%C3%ADses_Bajos","1872","1851","Segunda_Rep%C3%BAblica_Francesa","B%C3%A9lgica","1851","Segundo_Imperio_franc%C3%A9s","Suiza","1852","Segundo_Imperio_franc%C3%A9s","Cerde%C3%B1a","1853","Segundo_Imperio_franc%C3%A9s","Reinado_de_Isabel_II_de_Espa%C3%B1a","1854","1852","Segundo_Imperio_franc%C3%A9s","Prusia","B%C3%A9lgica","Secreto_de_la_correspondencia","Ratificaci%C3%B3n","Suiza","Espa%C3%B1a","Cerde%C3%B1a","Reino_de_Portugal","Imperio_otomano","Dinamarca","Uni%C3%B3n_entre_Suecia_y_Noruega","Estados_Pontificios","Imperio_Ruso","Reino_de_las_Dos_Sicilias","Luxemburgo","Europa","Par%C3%ADs","1865","Monopolio","Servicio_p%C3%BAblico","Mercado_libre","Competencia_perfecta","Administraci%C3%B3n_p%C3%BAblica","Licencia","Tributo","Bandas_de_frecuencia","Banda_ISM","Horno_microondas","Tel%C3%A9fono_inal%C3%A1mbrico","WLAN","Wi-Fi","HIPERLAN","WPAN","Bluetooth","ZigBee","GHz","PMR446","Walkie-talkie","UHF","MHz","Cent%C3%ADmetro","Estados_Unidos","Family_Radio_Service","Banda_ciudadana","HF","MHz","Metro","Tributo","Licencia","Banda_ciudadana#La_Banda_Ciudadana_en_los_distintos_pa\u00edses","Bandas_de_frecuencia_(radioaficionados)","Radioafici%C3%B3n","HF","Banda_de_80m","Banda_de_40m","Banda_de_30m","Banda_de_20m","Banda_de_17m","Banda_de_15m","Banda_de_12m","Banda_de_10m","VHF","Banda_de_6m","Banda_de_2m","UHF","Banda_de_70cm","Banda_de_23cm","Bandas_de_frecuencia","Espectro_de_frecuencias","Proveedor_de_servicios_de_Internet","Operador_de_telefon%C3%ADa_m%C3%B3vil","Intervencionismo","Infraestructura_urbana","Servicio_p%C3%BAblico","Liberalizaci%C3%B3n","Mercado_libre","Estados_Unidos","Monopolio","Normalizaci%C3%B3n","Informaci%C3%B3n","Tecnolog%C3%ADa","Cuota_de_mercado","Globalizaci%C3%B3n","Normalizaci%C3%B3n","Industria","Estado","Sociedad","Protocolo_de_comunicaciones","Investigaci%C3%B3n,_desarrollo_e_innovaci%C3%B3n","Competencia_(econom%C3%ADa)","Obsolescencia","Ciclo_de_vida_del_producto","Fabricaci%C3%B3n","Normalizaci%C3%B3n#Organismos_Internacionales_de_Normalizaci\u00f3n","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Idioma_ingl%C3%A9s","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Organizaci%C3%B3n_de_Naciones_Unidas","Sector_de_Radiocomunicaciones_de_la_UIT","Sector_de_Normalizaci%C3%B3n_de_las_Telecomunicaciones_de_la_UIT","Sector_de_Desarrollo_de_las_Telecomunicaciones_de_la_UIT","Sector_de_Normalizaci%C3%B3n_de_las_Telecomunicaciones_de_la_UIT#Recomendaciones_y_Series","V.90","M%C3%B3dem","Kbps","H.323","VoIP","Fibra_%C3%B3ptica#Fibra_monomodo","Organizaci%C3%B3n_Internacional_para_la_Estandarizaci%C3%B3n","Idioma_ingl%C3%A9s","Instituto_Argentino_de_Normalizaci%C3%B3n_y_Certificaci%C3%B3n","Asociaci%C3%B3n_Espa%C3%B1ola_de_Normalizaci%C3%B3n_y_Certificaci%C3%B3n","Comit%C3%A9_Europeo_de_Normalizaci%C3%B3n","IEEE","Espa%C3%B1a","Hispanoam%C3%A9rica","Idioma_espa%C3%B1ol","IEEE_802","Ethernet","Wi-Fi","WiMAX","IETF","World_Wide_Web_Consortium","Radiaci%C3%B3n_electromagn%C3%A9tica_y_salud","Electromagnetismo","Correo_postal","Mensajero","Paloma_mensajera","Energ%C3%ADa_el%C3%A9ctrica","Magnetismo","Energ%C3%ADa_electromagn%C3%A9tica","Corriente_el%C3%A9ctrica","Campo_electromagn%C3%A9tico","Radiaci%C3%B3n_no_ionizante","Antena","Potencia_(f%C3%ADsica)","Sonido","Cuadro_Nacional_de_Atribuci%C3%B3n_de_Frecuencias_(Espa%C3%B1a)","Amplitud_modulada","Radar","Radiaci%C3%B3n_de_tel%C3%A9fonos_m%C3%B3viles_y_salud","Dispositivos_electr%C3%B3nicos_inal%C3%A1mbricos_y_salud","Telemedicina","Ingenier%C3%ADa_de_telecomunicaci%C3%B3n","Ingenier%C3%ADa_electr%C3%B3nica","R%C3%A9gimen_jur%C3%ADdico_del_sector_de_las_telecomunicaciones_(Espa%C3%B1a)","Instituto_Federal_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Era_de_la_m%C3%A1quina","Fran%C3%A7ois-Napol%C3%A9on-Marie_Moigno","Estados_Unidos","2002","C%C3%A1mara_de_Representantes_de_los_Estados_Unidos","Idioma_ingl%C3%A9s","Canad%C3%A1","2002","C%C3%A1mara_de_los_Comunes_de_Canad%C3%A1","Alexander_Graham_Bell","Alemania","Francis_Bacon","Daniel_Bell","Diccionario_Espa%C3%B1ol_de_Ingenier%C3%ADa","Real_Academia_de_Ingenier%C3%ADa_de_Espa%C3%B1a","Espa%C3%B1a","Fernando_Bar%C3%B3n","Uni%C3%B3n_Internacional_de_Telecomunicaciones","UPM","Harold_Innis","UPM","Daniel_Bell","Universidad_de_Barcelona","ISSN","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Universidad_de_Barcelona","ISSN","Universidad_de_Barcelona","ISSN","ISBN","Universidad_de_Barcelona","ISSN","Universidad_de_Barcelona","ISSN","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","ISBN","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","ISBN","Uni%C3%B3n_Internacional_de_Telecomunicaciones","ISBN","Uni%C3%B3n_Internacional_de_Telecomunicaciones","ISBN","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","Uni%C3%B3n_Internacional_de_Telecomunicaciones","ISBN","Universidad_de_Barcelona","ISSN","Uni%C3%B3n_Internacional_de_Telecomunicaciones","ISSN","Universidad_del_Pa%C3%ADs_Vasco","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","National_Archives_and_Records_Administration","Art_%26_Architecture_Thesaurus","Historical_Dictionary_of_Switzerland","Enciclopedia_Brit%C3%A1nica","Enciclopedia_Treccani","Medical_Subject_Headings"]}
{"url":"Octal","titulo":"Sistema octal","contenido":"El sistema octal es el sistema de numeracion posicional cuya base es igual 8, utilizando los digitos indio arabigos: 0, 1, 2, 3, 4, 5, 6, 7. En informatica a veces se utiliza la numeracion octal en vez de la hexadecimal. Tiene la ventaja de que no requiere utilizar otros simbolos diferentes de los digitos. Sin embargo, para trabajar con bytes o conjuntos de ellos, asumiendo que un byte es una palabra de 8 bits, suele ser mas comodo el sistema hexadecimal, por cuanto todo byte asi definido es completamente representable por dos digitos hexadecimales.  El sistema de numeracion octal es un sistema de numeracion en base 8, una base que es potencia exacta de 2 o de la numeracion binaria. Esta caracteristica hace que la conversion a binario o viceversa sea bastante simple. El sistema octal usa 8 digitos (0, 1, 2, 3, 4, 5, 6, 7) y cada digito tiene el mismo valor que en el sistema de numeracion decimal.  El teorema fundamental aplicado al sistema octal seria el siguiente:  Como el sistema de numeracion octal usa la notacion posicional entonces para el numero 3452,32 tenemos que: 2*80 + 5*81 + 4*82 + 3*83 + 3*8-1 + 2*8-2 = 2 + 40 + 4*64 + 3*512 + 3*0,125 + 2*0,015625 = 2 + 40 + 256 + 1536 + 0,375 + 0,03125 = 1834 + 0,40625d  Entonces, 3452,32q = 1834,40625d; mejor aun: 3452,32(8).  El sub indice \"q\" indica numero octal, se usa la letra q para evitar confusion entre la letra 'o' y el numero 0. En informatica, a veces se utiliza la numeracion octal en vez de la hexadecimal. Tiene la ventaja de que no requiere utilizar otros simbolos diferentes de los digitos. Es posible que la numeracion octal se usara en el pasado en lugar de la decimal, por ejemplo, para contar los espacios interdigitales o los dedos distintos de los pulgares.  Es utilizado como una forma abreviada de representar numeros binarios que emplean caracteres de seis bits. Cada tres bits (medio caracter) es convertido en un unico digito octal (del griego okto 'ocho').  La numeracion octal es tan buena como la binaria y la hexadecimal para operar con fracciones, puesto que el unico factor primo para sus bases es 2. Todas las fracciones que tengan un denominador distinto de una potencia de 2 tendran un desarrollo octal periodico.  Para poder convertir un numero en base decimal a base octal se divide dicho numero entre 8, dejando el residuo y dividiendo el cociente sucesivamente entre 8 hasta obtener cociente 0, luego los restos de las divisiones leidos en orden inverso indican el numero en octal.  Ejemplo:  Escribir en octal del numero decimal 730  730\u00f78= 91.25  91=cociente  8 x 91= 728  730 - 728= 2  2= residuo  91\u00f78= 11.375  11=cociente  8 x 11= 88  91-88= 3  3= residuo  11\u00f78= 1  1= cociente  8 x 1= 8  11-8= 3  3= residuo  1\u00f78= 0  0=cociente  8 x 0 = 0  1 - 0=1  1= residuo  octal del numero decimal 730= 1332  Escribir en octal el numero decimal 179  179\u00f78= 22  22= cociente  8 x 22= 176  179-176= 3  3= residuo  22\u00f78= 2  2=cociente  8x2= 16  22-16= 6  6= residuo  2\u00f78= 0  0= cociente  8x0= 0  2-0= 2  2= residuo  El octal del numero decimal 179= 263  Para pasar de binario a octal, solo hay que agrupar de 3 en 3 los digitos binarios, asi, el numero binario 1001010 (74 en decimal), lo agrupariamos como 1 / 001 / 010. como al primer digito le hacen falta dos numeros para que se cumpla la regla de 3 en 3  le agregamos 2 ceros, de modo que quedaria  (001) (001) (010)  despues obtenemos el numero en decimal de cada uno de los parentesis de los numeros en binario con la siguiente formula:  de derecha a izquierda visualiza un numero del 0 al 2 en la parte superior del numero binario,  para indicar la posicion del binario en el parentesis:  210<<<  1. (001) posicion 0 para el binario 1, posicion 1 para el binario 0, posicion 2 para el binario 0  210<<<  2. (001)posicion 0 para el binario 1, posicion 1 para el binario 0, posicion 2 para el binario 0  210<<<  3. (010)posicion 0 para el binario 0, posicion 1 para el binario 1, posicion 2 para el binario 0  Despues se multiplica cada numero binario por 2 elevado a la posicion del numero binario y cada resultado se suma:  001= 1  001= 1  010= 2  De modo que el numero binario  1001010  en octal es 112. ","snippet":"El sistema octal es el sistema de numeracion posicional cuya base es igual 8, utilizando los digitos indio arabigos: 0, 1, 2, 3, 4, 5, 6, 7. En informatica a veces se utiliza la numeracion octal en ve","enlaces_salientes":["Sistema_octal","Sistema_octal","Sistema_octal","Sistema_de_numeraci%C3%B3n","Ocho","Inform%C3%A1tica","Sistema_hexadecimal","Byte","Palabra_(computaci%C3%B3n)","Bit","Sistema_hexadecimal","Sistema_hexadecimal","Sistema_de_numeraci%C3%B3n_decimal","Notaci%C3%B3n_posicional","Sistema_binario","Griego_antiguo","N%C3%BAmero_decimal","Sistema_de_numeraci%C3%B3n","Sistema_hexadecimal","TI_Programmer","Control_de_autoridades"]}
{"url":"Hexadecimal","titulo":"Sistema hexadecimal","contenido":"El sistema hexadecimal (abreviado hex.) es el sistema de numeracion posicional que tiene como base el 16.  Su uso actual esta muy vinculado a la informatica y ciencias de la computacion donde las operaciones de la CPU suelen usar el byte u octeto como unidad basica de memoria, debido a que un byte representa 2 8 } valores posibles, y esto puede representarse como 2 8 = 2 4 \u22c5 2 4 = 16 \u22c5 16 = =2^{4}\\cdot 2^{4}=16\\cdot 16=} 1 \u22c5 16 2 + 0 \u22c5 16 1 + 0 \u22c5 16 0 +0\\cdot 16^{1}+0\\cdot 16^{0}} , que equivale al numero en base 16 100 16 } ; dos digitos hexadecimales corresponden exactamente a un byte.  En principio, dado que el sistema usual de numeracion es de base decimal y, por ello, solo se dispone de diez digitos, se adopto la convencion de usar las seis primeras letras del alfabeto latino para suplir los digitos que faltan. El conjunto de simbolos es el siguiente:   S = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , A , B , C , D , E , F } ,\\mathrm {B} ,\\mathrm {C} ,\\mathrm {D} ,\\mathrm {E} ,\\mathrm {F} \\}\\,}  Se debe notar que las letras corresponden a los siguientes valores numericos decimales:  En ocasiones se emplean letras minusculas en lugar de mayusculas. Como en cualquier sistema de numeracion posicional, el valor numerico de cada digito es alterado dependiendo de su posicion en la cadena de digitos, quedando multiplicado por una cierta potencia de la base del sistema, que en este caso es 16. Por ejemplo: 3E0A16 = 3\u00d7163 + E\u00d7162 + 0\u00d7161 + A\u00d7160 = 3\u00d74096 + 14\u00d7256 + 0\u00d716 + 10\u00d71 = 15882.  El sistema hexadecimal actual fue introducido en el ambito de la computacion por primera vez por IBM en 1963. Una representacion anterior, con 0-9 y u-z, fue usada en 1956 por la computadora Bendix G-15.  Como el unico factor primo de 16 es 2, todas las fracciones que no tengan una potencia de 2 en el denominador tendran un desarrollo hexadecimal periodico.  Existe un sistema para convertir numeros fraccionarios a hexadecimal de una forma mas mecanica. Se trata de convertir la parte entera con el procedimiento habitual y convertir la parte decimal aplicando sucesivas multiplicaciones por 16 hasta convertir el resultado en un numero entero.  Por ejemplo: 0,06640625 en base decimal.  Multiplicado por 16: 1,0625, el primer decimal sera 1. Volvemos a multiplicar por 16 la parte decimal del anterior resultado: 1. Por lo tanto el siguiente decimal sera un 1.Resultado: 0,11 en base hexadecimal. Como el ultimo resultado se trata de un entero, hemos acabado la conversion.  Hay ocasiones en las que no llegamos nunca a obtener un numero entero, en ese caso tendremos un desarrollo hexadecimal periodico.  En el sistema hexadecimal, al igual que en el sistema decimal, binario y octal, se pueden hacer diversas operaciones matematicas. Entre ellas se encuentra la resta entre dos numeros en sistema hexadecimal, la que se puede hacer con el metodo de complemento a 15 o tambien utilizando el complemento a 16. Ademas de estas, debemos manejar adecuadamente la suma en sistema hexadecimal, explicada a continuacion:  En este caso la respuesta obtenida, 16, no esta entre el 0 y el 15, por lo que tenemos que restarle 16. Por lo tanto, la respuesta obtenida sera 10 (sistema hexadecimal).  Hay que tener cuidado de utilizar correctamente las letras, ya que operar a la vez con letras y numeros puede crear confusiones.    Ocurre lo mismo que en el ejemplo anterior.    La respuesta es 20 y no esta entre el 0 y el 15, por lo que tenemos que restarle 16. Por lo tanto, la respuesta obtenida sera 14 (sistema hexadecimal).  Hay que tener cuidado de utilizar correctamente las letras, ya que operar a la vez con letras y numeros puede crear confusiones.     La respuesta es 29 y no esta entre el 0 y el 15, por lo que tenemos que restarle 16. Por lo tanto, la respuesta obtenida sera 1D (sistema hexadecimal).  Hay que tener cuidado de utilizar correctamente las letras, ya que operar a la vez con letras y numeros puede crear confusiones.  Ten en cuenta que puedes comprobar los resultados utilizando calculadora cientifica  Como podemos hacer la resta de dos numeros hexadecimales utilizando el complemento a 15. Para ello tendremos que sumar al minuendo el complemento a quince del sustraendo, y finalmente sumarle el bit de overflow (bit que se desborda).  Para entender la resta en complemento a 15 lo analizaremos con un ejemplo. Esta es la resta que tenemos que resolver:  Primero tenemos que hacer que el minuendo y el sustraendo tengan la misma cantidad de numeros. Para ello, a\u00f1adiremos ceros al sustraendo hasta que sean suficientes.  Despues, crearemos un nuevo numero con la misma cantidad de numeros que el nuevo sustraendo. Como en el sistema hexadecimal el mayor numero que tenemos es el 15, que corresponde a la letra F, tendremos que escribir la F tantas veces como numeros tiene el sustraendo.  La resta se hace siguiendo las normas generales de la resta comun. La diferencia obtenida se denomina el complemento a 15. Recuerda el valor correspondiente a cada letra al operar.  Ahora tendremos que sumar el minuendo y el complemento a 15 utilizando la suma en sistema hexadecimal, mencionada anteriormente.  Con la suma obtenemos el resultado 1A41E0, pero no es la respuesta final. Te habras dado cuenta de que este nuevo numero tiene mas cifras que los numeros iniciales que teniamos que restar. Tenemos que quitar el numero de la izquierda (en este caso, el 1) y sumarlo.  La respuesta es A41E1.  Ten en cuenta que puedes comprobar los resultados utilizando una calculadora cientifica.  Tambien podemos hacer la resta de dos numeros hexadecimales utilizando el complemento a 16, siguiendo un proceso similar que en el caso del complemento a 15. Para resolver la resta, tendremos que sumar al minuendo el complemento a dieciseis del sustraendo.  Para entender la resta en complemento a 16 lo analizaremos con el ejemplo anterior. Esta es la resta que tenemos que resolver:  Primero tenemos que hacer que el minuendo y el sustraendo tengan la misma cantidad de numeros, al igual que ocurre en el proceso del complemento a 15.  Para ello, a\u00f1adiremos ceros al sustraendo hasta que sean suficientes.  Despues, crearemos un nuevo numero con la misma cantidad de numeros que el nuevo sustraendo.  Como en el sistema hexadecimal el mayor numero que tenemos es el 15, que corresponde a la letra F, tendremos que escribir la F tantas veces como numeros tiene el sustraendo.  La resta se hace siguiendo las normas generales de la resta comun.  Ahora tenemos que sumarle 1 a la diferencia obtenida. Este paso es muy importante, ya que es la diferencia entre hacer la resta en complemento a 15 o 16, y se suele olvidar facilmente. Ademas, recuerda que estas sumando en sistema hexadecimal, siguiendo el mismo proceso explicado anteriormente.  A la diferencia obtenida y sumarle uno le denominaremos el complemento a 16.  Ahora tendremos que sumar el minuendo y el complemento a 16  Con la suma obtenemos el resultado 1A41E1.  Te habras dado cuenta de que este nuevo numero tiene mas cifras que los numeros iniciales que teniamos que restas, cosa imposible en una resta (que la diferencia sea mayor que el minuendo y el sustraendo). Por eso, y estando en complemento a 16, tendremos que despreciar (eliminar) el numero de la izquierda. En este caso es el 1.  La respuesta, por lo tanto, es A41E1.  En ambos casos la respuesta obtenida debera ser la misma, ya que hemos resuelto la misma resta en sistema hexadecimal. Por lo tanto, podremos comprobar que hemos operado bien comparando las respuestas obtenidas en complemento a 15 y en complemento a 16 para una misma resta.  Ademas, ten en cuenta que puedes comprobar los resultados utilizando una calculadora cientifica.  El algoritmo para la multiplicacion hexadecimal de dos cantidades de varias cifras es el mismo que en el sistema decimal. Sin embargo, la tabla de multiplicar que se debe usar debe incluir todas las multiplicaciones entre dos numeros menores que la base: ","snippet":"El sistema hexadecimal (abreviado hex.) es el sistema de numeracion posicional que tiene como base el 16.  Su uso actual esta muy vinculado a la informatica y ciencias de la computacion donde las oper","enlaces_salientes":["Sistema_hexadecimal","Sistema_hexadecimal","Sistema_hexadecimal","Sistema_sexagesimal","Sistema_de_numeraci%C3%B3n_posicional","Inform%C3%A1tica","Ciencias_de_la_computaci%C3%B3n","Unidad_central_de_procesamiento","Byte","Memoria_(inform%C3%A1tica)","Sistema_de_numeraci%C3%B3n_decimal","IBM","1963","1956","Bendix_G-15","Factorizaci%C3%B3n","Sistema_binario","Sistema_octal","Nibble","Control_de_autoridades"]}
{"url":"C%C3%B3digo_BCD","titulo":"Decimal codificado en binario","contenido":"En sistemas de computacion, Binary-Coded Decimal (BCD) o Decimal codificado en binario es un estandar para representar numeros decimales en el sistema binario, en donde cada digito decimal es codificado con una secuencia de 4 bits. Con esta codificacion especial de los digitos decimales en el sistema binario, se pueden realizar operaciones aritmeticas como suma, resta, multiplicacion y division.  Cada digito decimal tiene una representacion binaria codificada con 4 bits:    Los numeros decimales, se codifican en BCD con los bits que representan sus digitos. Por ejemplo, la codificacion en BCD del numero decimal 59237 es:  La representacion anterior (en BCD) es diferente de la representacion del mismo numero decimal en binario puro:  En BCD cada cifra que representa un digito decimal (0, 1,...8 y 9) se representa con su equivalente binario en cuatro bits (nibble o cuarteto) (esto es asi porque es el numero de bits necesario para representar el nueve, el numero mas alto que se puede representar en BCD). En la siguiente tabla se muestran los codigos BCD mas empleados:  Como se observa, con el BCD solo se utilizan 10 de las 16 posibles combinaciones que se pueden formar con numeros de 4 bits, por lo que el sistema pierde capacidad de representacion, aunque se facilita la compresion de los numeros. Esto es porque el BCD solo se usa para representar cifras, no numeros en su totalidad. Esto quiere decir que para numeros de mas de una cifra hacen falta dos numeros BCD.  Desde que los sistemas informaticos empezaron a almacenar los datos en conjuntos de ocho bits (octeto), hay dos maneras comunes de almacenar los datos BCD:  De este modo, el numero 127 seria representado como (11110001, 11110010, 11110111) en el EBCDIC o (11000001, 00100111) en el BCD empaquetado.  El BCD sigue siendo ampliamente utilizado para almacenar datos, en aritmetica binaria o en electronica. Los numeros se pueden mostrar facilmente en visualizadores de siete segmentos enviando cada cuarteto BCD a un visualizador. La BIOS de un ordenador personal almacena generalmente la fecha y la hora en formato BCD; probablemente por razones historicas se evito la necesidad de su conversion en ASCII.  La ventaja del codigo BCD frente a la representacion binaria clasica es que no hay limite para el tama\u00f1o de un numero. Los numeros que se representan en formato binario estan generalmente limitados por el numero mayor que se pueda representar con 8, 16, 32 o 64 bits. Por el contrario, utilizando BCD, a\u00f1adir un nuevo digito solo implica a\u00f1adir una nueva secuencia de 4 bits.  La conversion de numeros decimales a exceso 3 (XS3) se realiza de la siguiente forma:  Ejemplo: Transformar el decimal 67 a XS3  Tomamos cada digito y le sumamos 3: 29=  6+3=9  7+3=10 32,000  Ahora cada cantidad es transformada a binario:  9=1001  10= 1010  Por lo que el resultado de la conversion a XS3 sera el numero 10011010x100011010  El BCD es muy comun en sistemas electronicos donde se debe mostrar un valor numerico, especialmente en los sistemas digitales no programados (sin microprocesador o microcontrolador).  Utilizando el codigo BCD, se simplifica la manipulacion de los datos numericos que deben ser mostrados por ejemplo en un visualizador de siete segmentos. Esto lleva a su vez una simplificacion en el dise\u00f1o fisico del circuito (hardware). Si la cantidad numerica fuera almacenada y manipulada en binario natural, el circuito seria mucho mas complejo que si se utiliza el BCD. Hay un programa que se llama b1411 que sirve para dividir al sistema binario en dos combinaciones. Una por ejemplo es la de sistemas digitales.  IBM utilizo los terminos decimal codificado en binario y BCD, para el codigo binario de seis bits con el que se podian representar numeros, letras mayusculas, y caracteres especiales. Una variante del BCD fue utilizada en la mayoria de las primeras computadoras de IBM, incluyendo IBM1620 e IBM 1400. Con la introduccion del System/360, el BCD fue substituido por el EBCDIC, de ocho bits.  Las posiciones de los bits, en el BCD de seis bits, generalmente fueron etiquetadas como B, A, 8, 4, 2 y 1. Para codificar los digitos numericos, A y B eran cero. La letra A fue codificada como (B, A, 1), etcetera.  En 1972, el Tribunal Supremo de Estados Unidos anulo la decision de una instancia mas baja de la corte que habia permitido una patente para convertir numeros codificados BCD a binario en una computadora (vease Gottschalk v Benson  en ingles). Este fue uno de los primeros casos importantes en la determinacion de la patentabilidad del software y de los algoritmos. ","snippet":"En sistemas de computacion, Binary-Coded Decimal (BCD) o Decimal codificado en binario es un estandar para representar numeros decimales en el sistema binario, en donde cada digito decimal es codifica","enlaces_salientes":["Decimal_codificado_en_binario","Decimal_codificado_en_binario","Decimal_codificado_en_binario","Sistema_de_computaci%C3%B3n","Sistema_de_numeraci%C3%B3n_decimal","Sistema_binario","Bit","Bit","Nibble","C%C3%B3digo_Aiken","Exceso_3","Bit","Bit","Byte","EBCDIC","Visualizador_de_siete_segmentos","BIOS","Ordenador_personal","C%C3%B3digo_ASCII","Sistema_binario","Bit","Sistema_digital","Microprocesador","Microcontrolador","Visualizador_de_siete_segmentos","Hardware","IBM","C%C3%B3digo_binario","IBM_1400","System/360","EBCDIC","C%C3%B3digo_binario","C%C3%B3digo_biquinario","Sistema_binario","C%C3%B3digo_Gray","BCD_(6-bit)","Control_de_autoridades"]}
{"url":"Complemento_a_9","titulo":"Complemento a 9","contenido":"El complemento a 9, o sea a la base-1, se usa para representar numeros negativos. De esta forma, una resta se puede transformar en una suma:  *Lo que esta entre parentesis es la representacion del sustraendo en C-9.  Para transformar un numero en C-9 debe reemplazarse cada digito por lo que le falta para llegar a 9. Por ejemplo:  Se debe recordar que a la izquierda de un numero convencional podemos poner ceros, en el caso de C-9 debemos poner nueves asi:  Si en el resultado de la suma aparece un acarreo, este se debe sumar al resultado y si aparecen nueves, eso indica que el resultado es negativo y debe ser complementado para obtener el resultado final:  123 + 932 = 1055 (existe acarreo = 1)  00145 + 99765 = 99910 (no hay acarreo, el resultado es negativo)   ","snippet":"El complemento a 9, o sea a la base-1, se usa para representar numeros negativos. De esta forma, una resta se puede transformar en una suma:  *Lo que esta entre parentesis es la representacion del sus","enlaces_salientes":["Complemento_a_9","Complemento_a_9","Complemento_a_9","N%C3%BAmero_negativo","Resta","Suma","Acarreo","Control_de_autoridades"]}
{"url":"C%C3%B3digo_Aiken","titulo":"Codigo Aiken","contenido":"El codigo Aiken (tambien conocido como codigo 2421)\u200b\u200b es un codigo decimal complementario de codificacion binaria (BCD). Se asigna un grupo de cuatro bits a los digitos decimales del 0 al 9 segun la siguiente tabla. El codigo fue desarrollado por Howard Hathaway Aiken y aun hoy se utiliza en relojes digitales, calculadoras de bolsillo y dispositivos similares.  El codigo Aiken difiere del codigo BCD estandar 8421 en que el codigo Aiken no pondera el cuarto digito con 8 como en el codigo BCD estandar, sino con 2.  Se obtiene la siguiente ponderacion para el codigo Aiken: 2-4-2-1.  Se podria pensar que los codigos dobles son posibles para un numero, por ejemplo 1011 y 0101 podrian representar el 5. Sin embargo, aqui uno se asegura de que los digitos del 0 al 4 sean complementarios de los numeros del 5 al 9. ","snippet":"El codigo Aiken (tambien conocido como codigo 2421)\u200b\u200b es un codigo decimal complementario de codificacion binaria (BCD). Se asigna un grupo de cuatro bits a los digitos decimales del 0 al 9 segun la s","enlaces_salientes":["C%C3%B3digo_Aiken","C%C3%B3digo_Aiken","C%C3%B3digo_Aiken","Howard_H_Aiken","Exceso-3","C%C3%B3digo_Gray","C%C3%B3digo_Gray","Library_of_Congress_Control_Number","Springer_Verlag","ISBN","Library_of_Congress_Control_Number","Institute_of_Radio_Engineers","ISSN","Digital_object_identifier","Control_de_autoridades"]}
{"url":"Conjunto_(desambiguaci%C3%B3n)","titulo":"Conjunto (desambiguacion)","contenido":"En matematicas, un conjunto es una coleccion de objetos considerada como un objeto en si por compartir una cualidad en comun, por extension y con el mismo significado se utiliza el termino en otros campos: ","snippet":"En matematicas, un conjunto es una coleccion de objetos considerada como un objeto en si por compartir una cualidad en comun, por extension y con el mismo significado se utiliza el termino en otros ca","enlaces_salientes":["Conjunto_(desambiguaci%C3%B3n)","Conjunto_(desambiguaci%C3%B3n)","Conjunto_(desambiguaci%C3%B3n)","Matem%C3%A1tica","Conjunto","Conjunto_arqueol%C3%B3gico","Excavaciones_arqueol%C3%B3gicas","Conjunto_(programaci%C3%B3n)","Conjunto_de_caracteres","Conjunto_hist%C3%B3rico-art%C3%ADstico","Conjunto_de_instrucciones","Conjunto_musical","Conjuntos_num%C3%A9ricos","Conjunto_vocal"]}
{"url":"Pol%C3%ADgonos","titulo":"Poligono","contenido":"En geometria, un poligono es una figura geometrica plana compuesta por una secuencia finita  de segmentos rectos consecutivos que encierran una region en el plano.\u200b Estos segmentos son llamados lados, y los puntos en que se intersecan se llaman vertices. El poligono es el caso bidimensional del politopo.  Un poligono simple es aquel que no se interseca a si mismo. Los matematicos a menudo solo se preocupan por las cadenas poligonales que delimitan los poligonos simples y suelen definir un poligono en consecuencia. Un limite poligonal puede cruzarse sobre si mismo, creando  poligonos estrella y otros poligonos auto-intersecantes.  La palabra poligono deriva del griego antiguo \u03c0\u03bf\u03bb\u03c5\u03b3\u03c9\u03bd\u03bf\u03c2 (polugonos), a su vez formado por \u03c0\u03bf\u03bb\u03c5 (polu) \u2018muchos\u2019 y \u03b3\u03c9\u03bd\u03b1 (gonia) \u2018angulo\u2019,\u200b\u200b\u200b aunque hoy en dia los poligonos son usualmente entendidos por el numero de sus lados.  La nocion geometrica elemental ha sido adaptada de distintas maneras para servir a propositos especificos. A matematicos a menudo les interesan solo las lineas poligonales cerradas y los poligonos simples (aquellos en los cuales sus lados solo se intersecan en los vertices), y pueden definir un poligono de acuerdo a ello. Es requisito geometrico que dos lados que se intersecan en un vertice formen un angulo no llano (distinto a 180\u00b0), ya que de otra manera los segmentos se considerarian partes de un unico lado; sin embargo, esos vertices podrian permitirse algunas veces por cuestiones practicas. En el ambito de la computacion, la definicion de poligono ha sido ligeramente alterada debido a la manera en que las figuras son almacenadas y manipuladas en la computacion grafica para la generacion de imagenes.  La definicion del poligono depende del uso que se le quiera dar, asi por ejemplo para hacer referencia a una region del plano se tiene:  Para hacer referencia al estudio euclidiano de las longitudes de los lados de un poligono, se tiene:  Se denomina linea poligonal o linea quebrada al conjunto de segmentos, s 1 , \u2026 , s n ,\\dots ,s_{n}} , unidos sucesivamente por sus extremos donde el extremo de cada uno es origen del siguiente, tal que dos segmentos sucesivos no estan alineados, en tal caso se considera ambos como un unico segmento.\u200b\u200b  Sean P i } y P i + 1 } los extremos de s i } , entonces:  Ejemplo de una linea poligonal de seis segmentos:    Vease tambien  La definicion y su aplicacion del concepto de grafo de la teoria de grafos.  La definicion de simplex usada en topologia algebraica.  En un poligono se distinguen los siguientes elementos geometricos:  En un poligono regular se puede distinguir, ademas:  Los vertices son n  Como cada diagonal esta contada dos veces se tiene que el numero de diagonales sale de:  Existen varias clasificaciones posibles de los poligonos. Para ver una clasificacion basada en su numero de lados, vea la tabla inferior.   Regulares   Irregulares  Concavos  Complejos  Segun las propiedades que cumpla el contorno del poligono, es posible realizar las siguientes clasificaciones.  Poligono simple, concavo e irregular.  Poligono complejo, no convexo e irregular.  Poligono convexo y regular (equilatero y equiangulo).  Poligono estrellado.  Los poligonos tienen un nombre especial para designar el numero de lados del mismo. Los nombres mas comunes estan en la siguiente tabla:\u200b  \u2022 Agudo \u2022 Equilatero \u2022 Ideal \u2022 Isosceles \u2022 de Kepler \u2022 Obtuso \u2022 Rectangulo  \u2022 Antiparalelogramo \u2022 Bicentrico \u2022 Cruzado \u2022 Ciclico \u2022 Equidiagonal \u2022 Tangencial \u2022 Extangential \u2022 Armonico \u2022 Ortodiagonal \u2022 Paralelogramo \u2022 Cuadrado \u2022 Rectangulo \u2022 Rombo \u2022 Deltoide \u2022\u00a0Deltoide recto \u2022 Trapecio \u2022 Trapecio isosceles \u2022 Trapecio tangencial  \u2022 Monogono (1) \u2022 Digono (2) \u2022 Triangulo (3) \u2022 Cuadrilatero (4) \u2022 Pentagono (5) \u2022 Hexagono (6) \u2022 Heptagono (7) \u2022 Octagono (8) \u2022 Eneagono (9) \u2022 Decagono (10)  \u2022 Endecagono (11) \u2022 Dodecagono (12) \u2022 Tridecagono (13) \u2022 Tetradecagono (14) \u2022 Pentadecagono (15) \u2022 Hexadecagono (16) \u2022 Heptadecagono (17) \u2022 Octadecagono (18) \u2022 Eneadecagono (19) \u2022 Isodecagono (20)  \u2022 Icositriagono (23) \u2022 Icositetragono (24) \u2022 Triacontagono (30) \u2022 Tetracontagono (40) \u2022 Pentacontagono (50) \u2022 Hectagono (100) \u2022 257-gono \u2022 Chiliagono (1000) \u2022 Miriagono (10.000) \u2022 65537-gono \u2022 Megagono (1.000.000) \u2022\u00a0Apeirogono (\u221e)  \u2022 Estrella pentagonal \u2022 Hexagrama \u2022 Heptagrama \u2022 Octagrama \u2022 Eneagrama \u2022 Decagrama \u2022 Endecagrama \u2022 Dodecagrama  \u2022 Reinhardt \u2022 Reuleaux  \u2022 Concavo \u2022 Convexo \u2022 Ciclico \u2022 Equiangular \u2022 Equilatero \u2022 Infinito oblicuo \u2022 Isogonal \u2022 Isotoxal \u2022 Magico \u2022 Pseudotriangulo \u2022 Regular \u2022 Simple \u2022 Alabeado \u2022 Estrellado \u2022 Tangencial ","snippet":"En geometria, un poligono es una figura geometrica plana compuesta por una secuencia finita  de segmentos rectos consecutivos que encierran una region en el plano.\u200b Estos segmentos son llamados lados,","enlaces_salientes":["Pol%C3%ADgono","Pol%C3%ADgono","Pol%C3%ADgono","Geometr%C3%ADa","Figura_geom%C3%A9trica","Segmento","Plano_(geometr%C3%ADa)","Bidimensional","Politopo","Pol%C3%ADgono_simple","Estrella_(figura_geom%C3%A9trica)","Griego_antiguo","Computaci%C3%B3n_gr%C3%A1fica","Segmento","Grafo","Teor%C3%ADa_de_grafos","S%C3%ADmplex","Topolog%C3%ADa_algebraica","Segmento","V%C3%A9rtice_(geometr%C3%ADa)","Intersecci%C3%B3n_(geometr%C3%ADa)","Diagonal","%C3%81ngulo_interior","%C3%81ngulo_exterior","Pol%C3%ADgono_regular","Centro_(geometr%C3%ADa)","Apotema","Diagonal","Per%C3%ADmetro","Semiper%C3%ADmetro","Diagonal","Pol%C3%ADgono_simple","Pol%C3%ADgono_convexo","Pol%C3%ADgono_regular","Pol%C3%ADgono_irregular","Pol%C3%ADgono_c%C3%B3ncavo","Pol%C3%ADgono_complejo","Pol%C3%ADgono_simple","Pol%C3%ADgono_complejo","Pol%C3%ADgono_convexo","Pol%C3%ADgono_c%C3%B3ncavo","Pol%C3%ADgono_equil%C3%A1tero","Pol%C3%ADgono_equiangular","Pol%C3%ADgono_regular","Pol%C3%ADgono_c%C3%ADclico","Circunferencia","Coordenadas_cartesianas","Pol%C3%ADgono_alabeado","Plano_(geometr%C3%ADa)","Estrella_(figura_geom%C3%A9trica)","Teorema_de_Pick","Pol%C3%ADgono_Mon%C3%B3tono","Tr%C3%ADgono","Tri%C3%A1ngulo","Tetr%C3%A1gono","Cuadr%C3%A1ngulo","Cuadril%C3%A1tero","Pent%C3%A1gono","Hex%C3%A1gono","Hept%C3%A1gono","Oct%C3%B3gono","Oct%C3%A1gono","Ene%C3%A1gono","Non%C3%A1gono","Dec%C3%A1gono","Endec%C3%A1gono","Undec%C3%A1gono","Dodec%C3%A1gono","Tridec%C3%A1gono","Tetradec%C3%A1gono","Pentadec%C3%A1gono","Pentedec%C3%A1gono","Hexadec%C3%A1gono","Heptadec%C3%A1gono","Octodec%C3%A1gono","Octadec%C3%A1gono","Eneadec%C3%A1gono","Nonadec%C3%A1gono","Isodec%C3%A1gono","Icos%C3%A1gono","Icositri%C3%A1gono","Icositetr%C3%A1gono","Icosikaipent%C3%A1gono","Triacont%C3%A1gono","Tetracont%C3%A1gono","Pentacont%C3%A1gono","Hect%C3%A1gono","Chili%C3%A1gono","Kili%C3%A1gono","Miri%C3%A1gono","Meg%C3%A1gono","Apeir%C3%B3gono","Infinito","Tri%C3%A1ngulo","Tri%C3%A1ngulos_agudos_y_obtusos","Tri%C3%A1ngulo_equil%C3%A1tero","Tri%C3%A1ngulo_ideal","Tri%C3%A1ngulo_is%C3%B3sceles","Tri%C3%A1ngulo_de_Kepler","Tri%C3%A1ngulos_agudos_y_obtusos","Tri%C3%A1ngulo_rect%C3%A1ngulo","Cuadril%C3%A1tero","Antiparalelogramo","Cuadril%C3%A1tero_bic%C3%A9ntrico","Cuadril%C3%A1tero","Cuadril%C3%A1tero_c%C3%ADclico","Cuadril%C3%A1tero_equidiagonal","Cuadril%C3%A1tero_circunscrito","Cuadril%C3%A1tero_extangencial","Cuadril%C3%A1tero_arm%C3%B3nico","Cuadril%C3%A1tero_ortodiagonal","Paralelogramo","Cuadrado","Rect%C3%A1ngulo","Rombo","Deltoide","Deltoide_recto","Trapecio_(geometr%C3%ADa)","Trapecio_is%C3%B3sceles","Trapecio_tangencial","Mon%C3%B3gono","D%C3%ADgono","Tri%C3%A1ngulo","Cuadril%C3%A1tero","Pent%C3%A1gono","Hex%C3%A1gono","Hept%C3%A1gono","Oct%C3%B3gono","Ene%C3%A1gono","Dec%C3%A1gono","Endec%C3%A1gono","Dodec%C3%A1gono","Tridec%C3%A1gono","Tetradec%C3%A1gono","Pentadec%C3%A1gono","Hexadec%C3%A1gono","Heptadec%C3%A1gono","Octodec%C3%A1gono","Eneadec%C3%A1gono","Isodec%C3%A1gono","Icositri%C3%A1gono","Icositetr%C3%A1gono","Triacont%C3%A1gono","Tetracont%C3%A1gono","Pentacont%C3%A1gono","Hect%C3%A1gono","257-gono","Chili%C3%A1gono","Miri%C3%A1gono","65537-gono","Meg%C3%A1gono","Apeir%C3%B3gono","Estrella_(figura_geom%C3%A9trica)","Estrella_pentagonal","Hexagrama","Heptagrama","Octagrama","Eneagrama","Decagrama_(geometr%C3%ADa)","Endecagrama","Dodecagrama","Pol%C3%ADgono_de_Reinhardt","Pol%C3%ADgono_de_Reuleaux","Pol%C3%ADgono_c%C3%B3ncavo","Pol%C3%ADgono_convexo","Circunferencia_circunscrita","Pol%C3%ADgono_equiangular","Pol%C3%ADgono_equil%C3%A1tero","Pol%C3%ADgono_infinito_oblicuo","Figura_isogonal","Figura_isotoxal","Pol%C3%ADgono_m%C3%A1gico","Pseudotri%C3%A1ngulo","Pol%C3%ADgono_regular","Pol%C3%ADgono_simple","Pol%C3%ADgono_alabeado","Pol%C3%ADgono_estrellado","Pol%C3%ADgono_tangencial","Figura_geom%C3%A9trica","Poliedro","Politopo","Regla_y_comp%C3%A1s","Triangulaci%C3%B3n_de_un_pol%C3%ADgono","Pol%C3%ADgono_regular","Pol%C3%ADgono_equil%C3%A1tero","Pol%C3%ADgono_construible","Estrella_(figura_geom%C3%A9trica)","Circunferencia_circunscrita","Teselaci%C3%B3n","F%C3%B3rmula_del_%C3%A1rea_de_Gauss","Teorema_de_Pick","ISBN","ISBN","ISBN","ISBN","Eric_W._Weisstein","MathWorld","Wolfram_Research","YouTube","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Art_%26_Architecture_Thesaurus","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Pol%C3%ADgono_regular","titulo":"Poligono regular","contenido":"En geometria plana, se denomina poligono regular a un poligono cuyos lados y angulos interiores son iguales entre si. Los poligonos regulares de tres y cuatro lados se denominan triangulo equilatero y cuadrado, respectivamente. Para poligonos de mas lados, se a\u00f1ade el adjetivo regular (pentagono regular, hexagono regular, octagono regular, etc). Solo algunos poligonos regulares pueden ser construidos con regla y compas.\u200b    Observacion: A medida que crece el numero de lados de un poligono regular, se asemeja mas a una circunferencia.  Existen diversas formulas para calcular el area de un poligono regular, dependiendo de los elementos conocidos.  El area de   un poligono regular, conociendo el perimetro y la apotema es:  O de otro modo  el area es igual al producto de apotema: a por semiperimetro: p.  Sabiendo que:  Ademas \u03b4 = \u03c0 n {n}}\\ } , ya que es la mitad de un angulo central (esto en radianes).  Observando la imagen, es posible deducir que:  Sustituyendo el lado:  Finalmente:  Con esta formula se puede averiguar el area con el numero de lados y la apotema, sin necesidad de recurrir al perimetro.  Un poligono queda perfectamente definido por su numero de lados n, y el radio r, por tanto podemos determinar cual es su area, a la vista de la figura, tenemos que:  donde el angulo central es:  sabiendo que el area de un poligono es:  y sustituyendo el valor del lado y la apotema calculados antes, tenemos:  ordenando tenemos:  sabiendo que:  resulta:  o lo que es lo mismo:  Con esta expresion podemos calcular el area del poligono, conociendo solamente el numero de lados y su radio, lo que resulta util en muchos casos.  si queremos expresar el area en funcion del lado, podemos calcularlo de la siguiente manera:  Sea \u03c6 el angulo formado por el Lado \"L\" y el radio \"r\":  El valor de la apotema en funcion del lado sera, por la definicion de la tangente:  Despejando la apotema tenemos:  Sustituimos la apotema por su valor:  Se puede ver en el dibujo que tan \u2061 ( \u03b4 ) = 1 tan \u2061 ( \u03c6 ) }} y la formula puede escribirse tambien como A p = n \u22c5 L 2 4 \u22c5 tan \u2061 ( 180 o n ) =}{4\\cdot \\tan \\left(}{n}}\\right)}}} .  Con lo que conociendo el numero de lados del poligono regular y la longitud del lado podemos calcular su superficie.  La apotema, a , de un poligono regular de n lados de longitud L viene dada por  O bien, en funcion del circunradio, R ,  La sagita, s , de un poligono regular de n lados de longitud L viene dada por  O bien, en funcion del circunradio,  Para determinar el numero de diagonales Nd, de un poligono de n vertices realizaremos el siguiente razonamiento:  Segun el razonamiento tendremos que:  La diagonal mas peque\u00f1a de un poligono regular es la que une dos vertices alternos, para determinar su longitud, partimos del angulos central y del radio, el radio que pasa por el vertice intermedio, corta a la diagonal en el punto A, este radio y la diagonal son perpendiculares en A.  Esto es el triangulo VAC es rectangulo en A, por tanto:  que resulta:  de donde deducimos que:  Sabiendo el valor del angulo central:  La diagonal mas peque\u00f1a de un poligono regular, solo depende del radio y del numero de lados, siendo tanto mayor cuanto mayor sea el radio y disminuyendo de longitud cuando aumenta el numero de lados del poligono.  En general la longitud de las diagonales de un poligono regular viene dada por la relacion de recurrencia  En una circunferencia de radio establecido, puede construirse un poligono regular inscrito y circunscrito con n lados a regla y compas en algunos casos de poligonos, y se utilizan softwares CAD para mayor precision. Tomando como referencia el segundo teorema de Tales y el teorema de Pitagoras, es posible relacionar todos los parametros de un poligono regular sea inscrito y circunscrito con un triangulo rectangulo. Esto se cumple cuando el angulo theta opuesto al lado del poligono inscrito o circunscrito, cumple con el siguiente criterio: \u03b8 = 180\u00b0/n , siendo n el numero de lados del poligono y debe ser un numero entero mayor que 2. ","snippet":"En geometria plana, se denomina poligono regular a un poligono cuyos lados y angulos interiores son iguales entre si. Los poligonos regulares de tres y cuatro lados se denominan triangulo equilatero y","enlaces_salientes":["Pol%C3%ADgono_regular","Pol%C3%ADgono_regular","Pol%C3%ADgono_regular","Geometr%C3%ADa","Pol%C3%ADgono","Segmento","%C3%81ngulo_interior","Congruencia_(geometr%C3%ADa)","Tri%C3%A1ngulo_equil%C3%A1tero","Cuadrado","Regla_y_comp%C3%A1s","Lado_(Geometr%C3%ADa)","V%C3%A9rtice_(geometr%C3%ADa)","Centro_(geometr%C3%ADa)","Radio_(geometr%C3%ADa)","Apotema","Diagonal","Per%C3%ADmetro","Semiper%C3%ADmetro","Sagita_(geometr%C3%ADa)","Pol%C3%ADgono_equil%C3%A1tero","%C3%81ngulo#\u00c1ngulos_respecto_de_una_circunferencia","Grado_sexagesimal","Radi%C3%A1n","%C3%81ngulo_interior","%C3%81ngulo_exterior_de_un_pol%C3%ADgono","%C3%81ngulo_exterior_de_un_pol%C3%ADgono","Tri%C3%A1ngulo_equil%C3%A1tero","Cuadrado","Pent%C3%A1gono","Hex%C3%A1gono","Hept%C3%A1gono","Oct%C3%A1gono","Ene%C3%A1gono","Dec%C3%A1gono","Undec%C3%A1gono","Dodec%C3%A1gono","Tridec%C3%A1gono","Tetradec%C3%A1gono","F%C3%B3rmula_(expresi%C3%B3n)","%C3%81rea_(geometr%C3%ADa)","Tangente_(trigonometr%C3%ADa)","Apotema","Flecha_(geometr%C3%ADa)","Teorema_de_Tales","Teorema_de_Pit%C3%A1goras","Pol%C3%ADgono","Pol%C3%ADgono_equil%C3%A1tero","Estrella_(figura_geom%C3%A9trica)","Regla_y_comp%C3%A1s","Trigonometr%C3%ADa","Eric_W._Weisstein","MathWorld","Wolfram_Research","ISSN","ISBN","ISBN","ISBN","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Personas","titulo":"Persona","contenido":"El concepto de persona (del latin persona, \u2018mascara del actor\u2019, \u2018personaje teatral\u2019, este del etrusco \u03c6ersu [phersu], y este del griego \u03c0\u03c1o\u03c3\u03c9\u03c0\u03bf\u03bd [prosopon])\u200b es principalmente filosofico, aunque tambien en sociologia y psicologia se expresa como la singularidad de cada individuo de la especie humana,\u200b\u200b\u200b en contraposicion al concepto filosofico de \u00abnaturaleza humana\u00bb que aborda lo supuestamente comun que hay en ellos. Sin embargo, en Etica y en Derecho no solo existen personas de la especie humana.\u200b  El significado actual de persona tiene su origen en las controversias cristologicas de los siglos\u00a0IV y V. En el transcurso del debate entre las diferentes escuelas teologicas, se desarrollaron conceptos hasta entonces no conocidos. Se trataba de disponer de herramientas de pensamiento filosofico, sobre las que mantener un debate intelectual honesto y riguroso acerca de los dogmas referidos al \u039bo\u03b3\u03bf\u03c2 (Logos: \u00abPalabra\u00bb), y que permitiesen esclarecer sus diferencias o similitudes con Dios Padre. Para ello, la filosofia tomo prestado del teatro griego el termino \u03c0\u03c1\u03bf\u03c3\u03c9\u03c0\u03bf\u03bd [prosopon], y lo convirtio en un termino filosofico, definiendo al \u039bo\u03b3\u03bf\u03c2 (Logos) como Persona divina.Por afinidad, el concepto fue posteriormente aplicado al Espiritu Santo, a los angeles y a los hombres.  Aunque el concepto mas comun de \u00abpersona\u00bb es el de \u2018ser dotado de razon, consciente de si mismo y poseedor de una identidad propia\u2019, su significado puede tratarse desde diferentes perspectivas.  Rationalis naturae individua substantia (\u00absubstancia individual de naturaleza racional\u00bb) es la definicion clasica de Boecio que se caracteriza por tres notas: la sustancialidad, la individualidad y la racionalidad. En este sentido persona no es un nombre generico ya que indica un \u00abquien\u00bb y no un \u00abque\u00bb; tampoco designa una naturaleza comun sino incomunicabilidad. Por su parte Tomas de Aquino se refiere a la persona con la sentencia persona significat id quod est perfectissimum in tota natura, scilicet subsistens in rationali natura (\u00abpersona significa lo mas perfecto de toda la naturaleza, es decir, el subsistente de naturaleza racional\u00bb)\u200b insistiendo asi en la incomunicabilidad en el modo de existir. Para Tomas de Aquino la distincion entre persona y naturaleza es la del todo y la parte, pues la naturaleza lo es de la persona, que es la que realmente subsiste. Ser persona es ser abierto a la trascendencia, a un mas alla del mundo, es decir a Dios. Del estudio de la nocion de persona surge la Antropologia filosofica.  En la modernidad tiene lugar un vuelco psicologico en la concepcion de persona. El primer paso se da como consecuencia del nominalismo pero se observa ya con claridad en Descartes que no habla de persona sino de \u00abyo\u00bb. En la misma linea, para Locke persona ya no es un concepto metafisico pues no indica un ser o modo de ser, sino un estado en el que se encuentra a veces un ser. Por su parte, Kant denomina a la persona como aquel ser que es un fin en si mismo. Si bien en Kant se vuelve a un concepto ontologico, no se trata de un ser abierto a la trascendencia, sino autonomo.  Por su parte, el existencialismo vuelve a poner atencion en la relevancia de este concepto. Para Kierkegaard, la persona no es solipsista mas bien la salida de uno mismo \u2014saltando al vacio\u2014 como entrega a Dios. Para Heidegger la persona como Dasein (el ahi del ser) no es ni una cosa, ni un objeto ni una sustancia sino que se define existencialmente por el sentimiento de la angustia cerrado a la trascendencia.  En el siglo\u00a0XX, diversos pensadores \u2014algunos de inspiracion cristiana y en concreto tomista\u2014 centraron su atencion en la nocion de persona dando lugar al llamado personalismo; entre ellos destacan: G. Marcel, M. Buber, M. Scheler, J. Maritain, E. Mounier, Von Hildebrand, R. Guardini, K. Wojty\u0142a, E. Levinas, etc. Leonardo Polo ha sugerido una interesante nocion de persona como \u00abcaracter de ademas\u00bb a partir de una ampliacion de los trascendentales del ser hacia lo que el llama Antropologia Trascendental proponiendo la libertad y la co-existencia como trascendentales personales distintos de los metafisicos.  Desde la optica sociologica puede definirse persona como un ser sociable que vive y se desarrolla en sociedad, pero al mismo tiempo nunca deja de actuar con un caracter individual. Es decir somos \u201cyo\u201d y \u201cnosotros\u201d al mismo tiempo. Por eso algunos pensadores como Aristoteles definen al hombre como \u201canimal sociable\u201d y por tanto su naturaleza es ser social.  Si nos atenemos a la fisiologia, se puede identificar a la persona como un ser o individuo de la especie humana; como un hombre o mujer dotado/a de un conjunto de caracteristicas fisicas unicas que le permite diferenciarse de los demas.  Desde el punto de vista psicologico, persona designa a un ser concreto, abarcando tanto sus aspectos fisicos como psiquicos para definir su caracter singular y unico. Percibe e interpreta el estado de animo, el caracter y la forma de actuar de las personas, ademas estudia las cualidades y facultades que tiene la persona, como la razon, los sentimientos y los valores que lo distingue de los demas seres.  Son varias las dificultades del estudio de la persona humana estimadas insalvables para la psicologia. Recordemos solo las mayores: la persona no es ni un objeto ni una manifestacion susceptible de ser objetivada, sino manantial o estructura de actos; no es una realidad fenomenica ni una suma de cualidades, sino unidad singular inabarcable; no es formacion hecha, definitiva, sino proceso concreto que termina solo con la muerte; por ultimo, los actos que origina y que constituyen su realidad no se prestan a la reflexion psicologica, pues se dan de manera inmediata y concreta, sobre todo en la participacion amorosa. ","snippet":"El concepto de persona (del latin persona, \u2018mascara del actor\u2019, \u2018personaje teatral\u2019, este del etrusco \u03c6ersu [phersu], y este del griego \u03c0\u03c1o\u03c3\u03c9\u03c0\u03bf\u03bd [prosopon])\u200b es principalmente filosofico, aunque tambi","enlaces_salientes":["Persona","Persona","Persona","Persona_(desambiguaci%C3%B3n)","Lat%C3%ADn","Personaje","Idioma_etrusco","Griego_antiguo","Individuo","Homo_sapiens","%C3%89tica","Derecho","Cristolog%C3%ADa","Logos","Palabra","Dios","Esp%C3%ADritu_Santo","%C3%81ngel","Raz%C3%B3n","Boecio","Sustancia_(Arist%C3%B3teles)","Tom%C3%A1s_de_Aquino","Antropolog%C3%ADa_filos%C3%B3fica","Nominalismo","Ren%C3%A9_Descartes","John_Locke","Immanuel_Kant","Existencialismo","S%C3%B8ren_Kierkegaard","Solipsismo","Martin_Heidegger","Tomismo","Personalismo","Gabriel_Marcel","Martin_Buber","Max_Scheler","Jacques_Maritain","Emmanuel_Mounier","Dietrich_von_Hildebrand","Romano_Guardini","Juan_Pablo_II","Emmanuel_L%C3%A9vinas","Leonardo_Polo","Sociolog%C3%ADa","Arist%C3%B3teles","Fisiolog%C3%ADa","Psicolog%C3%ADa","Homo_sapiens","Persona_(arquetipo)","Persona_f%C3%ADsica","Persona_jur%C3%ADdica","Persona_no_humana","Personaje","Sujeto_de_derecho_internacional","Sujeto_(filosof%C3%ADa)","ISBN","Wikcionario","Diccionario_de_la_lengua_espa%C3%B1ola","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel","Art_%26_Architecture_Thesaurus","Enciclopedia_Brit%C3%A1nica","Medical_Subject_Headings"]}
{"url":"Color","titulo":"Color","contenido":"El color es la impresion producida por un tono de luz en los organos visuales, o mas especificamente, es una percepcion visual que se genera en el cerebro de los humanos y otros animales al interpretar las se\u00f1ales nerviosas que le envian los fotorreceptores en la retina del ojo, que a su vez interpretan y distinguen las distintas longitudes de onda que captan de la parte visible del espectro electromagnetico. Es estudiado por la ciencia del color.\u200b  Para observar el color debe de haber luz, cuando la luz se refleja los colores rebotan del objeto.  Todo cuerpo iluminado absorbe una parte de las ondas electromagneticas y refleja las restantes. Las ondas reflejadas son captadas por el ojo e interpretadas en el cerebro como distintos colores segun las longitudes de ondas correspondientes.  El ojo humano solo percibe las longitudes de onda cuando la iluminacion es abundante. Con poca luz se ve en blanco y negro. En la superposicion de colores luz (denominada \"sintesis aditiva de color\"), el color blanco resulta de la suma de todos los colores luz, mientras que el negro es la ausencia de luz. En la mezcla de los colores primarios en la sintesis sustractiva de color, (pigmentos amarillo, cian y magenta); el blanco solo se da si el pigmento o el soporte son de ese color, reflejando toda la luz blanca, mientras que el negro es resultado de la superposicion completa de los colores cian, magenta y amarillo y verde y una mezcla que en cierta medida logra absorber todas las longitudes de onda de la luz.  La luz blanca puede ser descompuesta en todos los colores del espectro visible por medio de un prisma (dispersion refractiva). En la naturaleza esta descomposicion da lugar al arcoiris.  En el arte de la pintura, el dise\u00f1o grafico, el dise\u00f1o visual, la fotografia, la imprenta y en la television, la teoria del color es un grupo de reglas basicas en la mezcla de colores para conseguir el efecto deseado combinando colores de luz o pigmento. El color negro se puede producir combinando los colores luz secundarios: cian, mezcla de verde y azul, magenta, mezcla de azul y rojo, amarillo, mezcla de rojo y verde; y mientras que combinando los colores luz primarios: rojo, verde y azul se produce el color blanco.  En resumen la combinacion de los colores luz secundarios (cian, magenta, amarillo) sustraen luz, como su nombre lo indica, y se obtiene el color negro. Y la combinacion de los colores luz primarios (verde, rojo, azul) suman luz, y se obtiene el color blanco.  La vision es el sentido de la percepcion que consiste en la habilidad de detectar la luz y de interpretarla. Es propia de los animales teniendo estos un sistema dedicado a ella llamado sistema visual. La primera parte del sistema visual se encarga de formar la imagen optica del estimulo visual en la retina (sistema optico), donde sus celulas son las responsables de procesar la informacion. Las primeras en intervenir son los fotorreceptores, los cuales capturan la luz que incide sobre ellos. Los hay de dos tipos: los conos y los bastones. Otras celulas de la retina se encargan de transformar dicha luz en impulsos electroquimicos y en transportarlos hasta el nervio optico. Desde alli, se proyectan al cerebro. En el cerebro se realiza el proceso de formar los colores y reconstruir las distancias, movimientos, formas de los objetos observados y distincion de los colores.  La percepcion del color en el ojo humano se produce en las celulas sensibles de la retina que reaccionan de forma distinta a la luz segun su longitud de onda. Los bastones perciben las tonalidades de oscuridad, y solo permiten distinguir las distintas tonalidades de grises entre el negro y el blanco. Los conos son medidores de cuantos de luz, radiaciones electromagneticas, que se transforma en informacion de impulsos electricos que mas tarde daran lugar a impresiones opticas. Hay tres clases de conos, cada uno de ellos posee un fotopigmento opsina que solo detecta unas longitudes de onda concretas, que transformadas en el cerebro se corresponden aproximadamente a los colores azul, rojo y verde, es decir, los tres colores primarios con cuya combinacion podemos percibir toda la gama de colores. En el sistema de la tricromatica los tres grupos de conos combinados permiten cubrir el espectro completo de luz visible y son los siguientes:  Esta actividad retiniana ya es cerebral, puesto que los fotorreceptores, aunque simples, son celulas neuronales. La informacion de los conos y bastones es procesada por otras celulas situadas inmediatamente a continuacion y conectadas detras de ellos (horizontales, bipolares, amacrinas y ganglionares). El procesamiento en estas celulas es el origen de dos dimensiones o canales de pares antagonicos cromaticos: rojo-verde, azul-amarillo y de una dimension acromatica o canal de claroscuro. Dicho de otra manera, estas celulas se excitan o inhiben ante la mayor intensidad de la se\u00f1al del rojo frente a la del verde, y del azul frente a la combinacion de rojo y verde (amarillo), generando ademas un trayecto acromatico de informacion relativa a la luminosidad.  La informacion de este procesamiento se traslada, a traves del nervio optico, a los nucleos geniculados laterales (situados a izquierda y derecha del talamo), donde la actividad neuronal es especifica respecto a la sugerencia del color y del claroscuro. Esta informacion precisa se transfiere al cortex visual por las vias denominadas radiaciones opticas. La percepcion del color es consecuencia de la actividad de las neuronas complejas del area de la corteza visual V4/V8, especifica para el color. Esta actividad determina que las cualidades vivenciales de la vision del color puedan ser referidas mediante los atributos: luminosidad, tono y saturacion.  Se denomina vision fotopica a la que tiene lugar con buenas condiciones de iluminacion. Esta vision posibilita la correcta interpretacion del color por el cerebro.  Muchos primates de origen africano (catarrinos), como el ser humano, comparten las caracteristicas geneticas descritas: por eso se dice que tenemos percepcion tricromatica. Sin embargo, los primates de origen sudamericano unicamente tienen dos genes para la percepcion del color. Existen pruebas que confirman que la aparicion de este tercer gen fue debida a una mutacion que duplico uno de los dos originales. Posiblemente esta mutacion este relacionada con la capacidad para distinguir los frutos maduros de los que no lo estan, debido a la evolucion natural.  En el reino animal los mamiferos no suelen diferenciar bien los colores, las aves en cambio, si; aunque suelen tener preferencia por los colores rojizos. Los insectos, por el contrario, suelen tener una mejor percepcion de los azules e incluso ultravioletas. Por regla general los animales nocturnos ven en blanco y negro. Algunas enfermedades como el daltonismo o la acromatopsia impiden ver bien los colores. Vease tambien: Percepcion del color.  Un tema siempre presente es el interes por entender como se genera la coloracion y cual es funcion del color en los seres vivos procesos producto de la interaccion de pigmentos biologicos, color estructural y bioluminiscencia.\u200b  Dentro del espectro electromagnetico se constituyen todos los posibles niveles de energia de la luz. Hablar de energia es equivalente a hablar de longitud de onda; por ello, el espectro electromagnetico abarca todas las longitudes de onda que la luz puede tener. De todo el espectro, la porcion que el ser humano es capaz de percibir es muy peque\u00f1a en comparacion con todas las existentes. Esta region, denominada espectro visible, comprende longitudes de onda desde los 380\u00a0nm hasta los 780\u00a0nm (1\u00a0nm = 1 nanometro = 0,000001\u00a0mm). La luz de cada una de estas longitudes de onda es percibida en el cerebro humano como un color diferente. Por eso, en la descomposicion de la luz blanca en todas sus longitudes de onda, mediante un prisma o por la lluvia en el arcoiris, el cerebro percibe todos los colores.  Por tanto, del Espectro visible, que es la parte del espectro electromagnetico de la luz solar que podemos notar, cada longitud de onda es percibida en el cerebro como un color diferente.  Newton uso por primera vez la palabra espectro (del latin, \"apariencia\" o \"aparicion\") en 1671 al describir sus experimentos en optica. Newton observo que cuando un estrecho haz de luz solar incide sobre un prisma de vidrio triangular con un angulo, una parte se refleja y otra pasa a traves del vidrio y se desintegra en diferentes bandas de colores. Tambien Newton hizo converger esos mismos rayos de color en una segunda lente para formar nuevamente luz blanca. Demostro que la luz solar tiene todos los colores del arcoiris.  Cuando llueve y hay sol, cada gota de lluvia se comporta de igual manera que el prisma de Newton y de la union de millones de gotas de agua se forma el fenomeno del arcoiris.\u200b  A pesar de que el espectro es continuo y por lo tanto, no hay cantidades vacias entre uno y otro color, se puede establecer la siguiente aproximacion:\u200b\u200b  Cuando la luz incide sobre un objeto, su superficie absorbe ciertas longitudes de onda y refleja otras. Solo las longitudes de onda reflejadas podran ser vistas por el ojo y por tanto en el cerebro solo se percibiran esos colores. Es un proceso diferente a luz natural que tiene todas las longitudes de onda, alli todo el proceso nada mas tiene que ver con luz, ahora en los colores que percibimos en un objeto hay que tener en cuenta tambien el objeto en si, que tiene capacidad de absorber ciertas longitudes de onda y reflejar las demas.  Consideremos una manzana \"roja\". Cuando es vista bajo una luz blanca, parece roja. Pero esto no significa que emita luz roja, que seria el caso una sintesis aditiva. Si lo hiciese, seriamos capaces de verla en la oscuridad. En lugar de eso, absorbe algunas de las longitudes de onda que componen la luz blanca, reflejando solo aquellas que el humano ve como rojas. Los humanos ven la manzana roja debido al funcionamiento particular de su ojo y a la interpretacion que hace el cerebro de la informacion que le llega del ojo.  Un pigmento o un tinte es un material que cambia el color de la luz que refleja debido a que selectivamente absorben ciertas ondas luminosas. La luz blanca es aproximadamente igual a una mezcla de todo el espectro visible de luz. Cuando esta luz se encuentra con un pigmento, algunas ondas son absorbidas por los enlaces quimicos y sustituyentes del pigmento, mientras otras son reflejadas. Este nuevo espectro de luz reflejado crea la apariencia del color. Por ejemplo, un pigmento azul ultramar refleja la luz azul, y absorbe los demas colores.  La apariencia de los pigmentos o tintes esta intimamente ligada a la luz que reciben. La luz solar tiene una temperatura de color alta y un espectro relativamente uniforme, y es considerada un estandar para la luz blanca. La luz artificial, por su parte, tiende a tener grandes variaciones en algunas partes de su espectro. Vistos bajo estas condiciones, los pigmentos o tintes lucen de diferentes colores.  Los tintes sirven para colorear materiales, como los tejidos, mientras que los pigmentos sirven para cubrir una superficie, como puede ser un cuadro. Desde las glaciaciones los humanos empleaban plantas y partes de animales para lograr tintes naturales con los que coloreaban sus tejidos. Luego los pintores han preparado sus propios pigmentos. Desde 1856 aparecieron los tintes sinteticos.\u200b  Durante varios siglos, los artistas han intentado entender las variaciones de los colores y han experimentado con mezclas para asi obtener o sintetizar la mayor gama posible para sus obras; por lo que se concluyo que existe un numero peque\u00f1o de colores -a los que se llamo colores primarios o \"primitivos\"- con cuya mezcla se penso que se podria obtener todos los demas colores existentes y se propuso varias teorias. Sin embargo, a pesar de que la existencia de los colores primarios esta comprobada, se debio esperar a que la ciencia defina en que consiste la fisica de la luz y la parte biologica de su percepcion, para asi definir exactamente cuales son los verdaderos colores primarios.  Los colores primarios dependen de la fuente del color, ya que puede ser una fuente luminosa que emite una luz con un color determinado o puede tratarse de un objeto que absorbe una parte y refleja otra de la luz que recibe y que es lo que vemos e interpretamos. Tomando en cuenta estas dos fuentes de color, se puede resumir los modelos mas difundidos para la sintesis del color del siguiente modo:  De estos tipos de sintesis, la columna de la derecha donde se representa a la coloracion tradicional, es parte del conocimiento empirico y no cientifico, ya que en realidad sus colores primarios no pueden considerarse como los verdaderos porque, a pesar de la creencia popular, con la mezcla de los mismos no es posible sintetizar toda la gama de colores. Los colores secundarios asi obtenidos son limitados, en especial el morado y el verde, los cuales se presentan opacos y con tendencia hacia tonos grisaceos. Es por esto que en la actualidad los profesionales, tanto los artistas plasticos como los pintores decorativos, tienden a reemplazar a colores primarios como el azul y el rojo, por el cian o azul cian y por el magenta o rojo magenta, obteniendo mejores resultados.\u200b  Se llama sintesis aditiva a obtener un color de luz determinado por la suma de otros colores. Thomas Young partiendo del descubrimiento de Newton que la suma de los colores del espectro visible formaba luz blanca realizo un experimento con linternas con los seis colores del espectro visible, proyectando estos focos y superponiendolos llego a un nuevo descubrimiento: para formar los seis colores del espectro solo hacian falta tres colores y ademas sumando los tres se formaba luz blanca.\u200b  El proceso de reproduccion aditiva normalmente utiliza luz roja, verde y azul para producir el resto de los colores. Combinando uno de estos colores primarios con otro en proporciones iguales produce los colores aditivos secundarios, mas claros que los anteriores: cian, magenta y amarillo. Variando la intensidad de cada luz de color finalmente deja ver el espectro completo de estas tres luces. La ausencia de los tres da el negro, y la suma de los tres da el blanco. Estos tres colores se corresponden con los tres picos de sensibilidad de los tres receptores de color en nuestros ojos.  Los colores primarios no son una propiedad fundamental de la luz, sino un concepto biologico, basado en la respuesta fisiologica del ojo humano a la luz. Un ojo humano normal solo contiene tres tipos de receptores, llamados conos. Estos responden a zonas del espectro que corresponden con longitudes de onda especificas de luz roja, verde y azul. Las personas y los miembros de otras especies que tienen estos tres tipos de receptores se llaman tricromatas. Aunque la sensibilidad maxima de los conos no se produce exactamente en las frecuencias roja, verde y azul, son los colores que se eligen para definirlos como primarios, porque con ellos es posible estimular los tres receptores de color de manera casi independiente, proporcionando una amplia gama de color. Para generar rangos de color optimos para otras especies aparte de los seres humanos se tendrian que usar otros colores primarios aditivos. Por ejemplo, para las especies conocidas como tetracromatas, con cuatro receptores de color distintos, se utilizarian cuatro colores primarios (como los humanos solo pueden ver hasta 400 nanometros (violeta), pero los tetracromatas pueden ver parte del ultravioleta, hasta los 300 nanometros aproximadamente, este cuarto color primario estaria situado en este rango y probablemente seria un violeta espectral puro, en lugar del violeta que vemos). Muchas aves y marsupiales son tetracromatas, y se ha sugerido que algunas mujeres nacen tambien tetracromatas,\u200b\u200b con un receptor extra para el amarillo. Por otro lado, la mayoria de los mamiferos tienen solo dos tipos de receptor de color y por lo tanto son dicromatas; para ellos, solo hay dos colores primarios.  Las televisiones, los monitores de ordenador y las pantallas de los telefonos celulares, son las aplicaciones practicas mas comunes de la sintesis aditiva.  Rojo  Verde  Amarillo  Verde  Azul  Cian  Azul  Rojo  Magenta  Azul  Rojo  Verde  Blanco  Todo lo que no es color aditivo es color sustractivo. En otras palabras, todo lo que no es luz directa es luz reflejada en un objeto, la primera se basa en la sintesis aditiva de color, la segunda en la sintesis sustractiva de color.  La sintesis sustractiva explica la teoria de la mezcla de pigmentos y tintes para crear color. El color que parece que tiene un determinado objeto depende de que partes del espectro electromagnetico son reflejadas por el, o dicho a la inversa, que partes del espectro son absorbidas.  Se llama sintesis sustractiva porque a la energia de radiacion se le sustrae algo por absorcion. En la sintesis sustractiva el color de partida siempre suele ser el color acromatico blanco, el que aporta la luz (en el caso de una fotografia el papel blanco, si hablamos de un cuadro es el lienzo blanco), es un elemento imprescindible para que las capas de color puedan poner en juego sus capacidades de absorcion. En la sintesis sustractiva los colores primarios son el amarillo, el magenta y el cian, cada uno de estos colores tiene la mision de absorber el campo de radiacion de cada tipo de conos. Actuan como filtros, el amarillo, no deja pasar las ondas que forman el azul, el magenta no deja pasar el verde y el cian no permite pasar al rojo.\u200b  En los sistemas de reproduccion de color segun la sintesis sustractiva, la cantidad de color de cada filtro puede variar del 0% al 100%. Cuanto mayor es la cantidad de color mayor es la absorcion y menos la parte reflejada, si de un color no existe nada, de ese campo de radiaciones pasara todo. Por ello, a cada capa de color le corresponde modular un color sensacion del organo de la vista: al amarillo le corresponde modular el azul, al magenta el verde y al cian el rojo.\u200b  Asi mezclando sobre un papel blanco cian al 100% y magenta al 100%, no dejaran pasar el color rojo y el verde con lo que el resultado es el color azul. De igual manera el magenta y el amarillo formaran el rojo, mientras el cian y el amarillo forman el verde. El azul, verde y rojo son colores secundarios en la sintesis sustractiva y son mas oscuros que los primarios. En las mezclas sustractivas se parte de tres primarios claros y segun se mezcla los nuevos colores se van oscureciendo, al mezclar estamos restando luz. Los tres primarios mezclados dan el negro.\u200b  La aplicacion practica de la sintesis sustractiva es la impresion en color, fotografia a color y la pintura.  Cian  Magenta  Azul  Magenta  Amarillo  Rojo  Cian  Amarillo  Verde  Cian  Amarillo  Magenta  Negro  En la impresion en color, las tintas que se usan principalmente como primarios son el cian, magenta y amarillo. Como se ha dicho, el Cian es el opuesto al rojo, lo que significa que actua como un filtro que absorbe dicho color. La cantidad de cian aplicada a un papel controlara cuanto rojo mostrara. Magenta es el opuesto al verde y amarillo el opuesto al azul. Con este conocimiento se puede afirmar que hay infinitas combinaciones posibles de colores. Asi es como las reproducciones de ilustraciones son producidas en grandes cantidades, aunque por varias razones tambien suele usarse una tinta negra. Esta mezcla de cian, magenta, amarillo y negro se llama modelo de color CMYK. CMYK es un ejemplo de espacio de colores sustractivos, o una gama entera de espacios de color.  El origen de los nombres magenta y cian procede de las peliculas de color inventadas en 1936 por Agfa y Kodak. El color se reproducia mediante un sistema de tres peliculas, una sensible al amarillo, otro sensible a un rojo purpura y una tercera a un azul claro. Estas casas comerciales decidieron dar el nombre de magenta al rojo purpura y cian al azul claro. Estos nombres fueron admitidos como definitivos en la decada de 1950 en las normas DIN que definieron los colores basicos de impresion.\u200b  Aunque los dos extremos del espectro visible, el rojo y el violeta, son diferentes en longitud de onda, visualmente tienen algunas similitudes, Newton propuso que la banda recta de colores espectrales se distribuyese en una forma circular uniendo los extremos del espectro visible. Este fue el primer circulo cromatico, un intento de fijar las similitudes y diferencias entre los distintos matices de color. Muchos estudiosos admitieron el circulo de Newton para explicar las relaciones entre los diferentes colores. Los colores que estan juntos corresponden a longitud de onda similar.\u200b  Desde un punto de vista teorico un circulo cromatico de doce colores estaria formado por los tres primarios, entre ellos se situarian los tres secundarios y entre cada secundario y primario el terciario que se origina de su union. Asi en actividades de sintesis aditiva, se pueden distribuir los tres primarios, rojo, verde y azul uniformemente separados en el circulo; en medio entre cada dos primarios, el secundario que forman ellos dos; entre cada primario y secundario se pondria el terciario que se origina en su mezcla. Asi tenemos un circulo cromatico de sintesis aditiva de doce colores. Se puede hacer lo mismo con los tres primarios de sintesis sustractiva y llegariamos a un circulo cromatico equivalente.\u200b  El circulo cromatico suele representarse como una rueda dividida en doce partes. Los colores primarios se colocan de modo que uno de ellos este en la porcion superior central y los otros dos en la cuarta porcion a partir de esta, de modo que si unimos los tres con unas lineas imaginarias formarian un triangulo equilatero con la base horizontal. Entre dos colores primarios se colocan tres tonos secundarios de modo que en la porcion central entre ellos corresponderia a una mezcla de cantidades iguales de ambos primarios y el color mas cercano a cada primario seria la mezcla del secundario central mas el primario adyacente.  Los circulos cromaticos actuales utilizados por los artistas se basan en el modelo CMY, si bien los colores primarios utilizados en pintura difieren de las tintas de proceso en imprenta en su intensidad. Los pigmentos utilizados en pintura, tanto en oleo como acrilico y otras tecnicas pictoricas suelen ser el azul de ftalocianina (PB15 en notacion Color Index) como cian, el magenta de quinacridona (PV19 en notacion Color Index) y algun amarillo arilida o bien de cadmio que presente un tono amarillo neutro (existen varios pigmentos validos o mezclas de ellos utilizables como primarios amarillos). Varias casas poseen juegos de colores primarios recomendados que suelen venderse juntos y reciben nombres especiales en los catalogos, tales como \u00abazul primario\u00bb o \u00abrojo primario\u00bb junto al \u00abamarillo primario\u00bb, pese a que ni el azul ni el rojo propiamente dichos son en realidad colores primarios segun el modelo CMYK utilizado en la actualidad.  No obstante, como los propios nombres dados por los fabricantes a sus colores primarios evidencian, existe una tradicion todavia anclada en el modelo RYB y que ocasionalmente se encuentra todavia en libros y en cursos orientados a aficionados a la pintura. Pero la ense\u00f1anza reglada, tanto en escuelas de arte como en la universidad, y los textos de referencia importantes ya han abandonado tal modelo hace decadas. La prueba la tenemos en los colores orientados a la ense\u00f1anza artistica de diferentes fabricantes, que sin excepcion utilizan un modelo de color basado en CMYK, que ademas de los tres colores primarios CMY incluyen negro y blanco como juego basico para el estudiante.  El blanco y el negro no suelen considerarse colores y no aparecen en un circulo cromatico, pues el blanco es la presencia de todos los colores y el negro la ausencia total de color. Sin embargo, tambien se les llama colores neutros: el negro y el blanco al combinarse forman el gris, el cual tambien se marca en escalas; esto forma un circulo propio llamado \"circulo cromatico en escala de grises\" o \"circulo de grises\".  En el circulo cromatico se llaman colores complementarios o colores opuestos a los pares de colores ubicados diametralmente opuestos en la circunferencia, unidos por su diametro. Al situar juntos y no mezclados colores complementarios el contraste que se logra es maximo.  La denominacion complementario depende en gran medida del modelo de circulo cromatico empleado. Asi en el circulo cromatico natural (sistemas RGB, CMY), el complementario del color verde es el color magenta, el del azul es el amarillo y del rojo el cian. En el circulo cromatico tradicional (RYB), el amarillo es el complementario del violeta y el naranja el complementario del azul.  Hoy, los cientificos saben que el conjunto correcto es el de los modelos RGB y CMY. En la teoria del color actual, dos colores se denominan complementarios si, al ser mezclados en una proporcion dada el resultado de la mezcla es un color neutral (gris, blanco, o negro).  El grado en que uno o dos de los tres colores primarios RGB (esta clasificacion es referente a los colores basicos en la composicion luminosa de una pantalla informatica R=Red, G=Green, B=Blue, con los que se componen por medio de adicion luminica, distinta a la clasificacion de los colores basicos o primarios de la pintura, en la que se mezclan por adicion de pigmentos matericos o fisicos) predominan en un color. A medida que las cantidades de RGB se igualan, el color va perdiendo saturacion hasta convertirse en gris o blanco.  Estas 3 propiedades combinadas entre si son capaces de sintetizar toda la gama de colores existente, por un camino diferente del de la combinacion de los colores primarios aditivos (RGB). Esto constituye la base de la sintesis del color de los modelos HSL y HSV.  La saturacion bien entendida tiene que ver con la cantidad de materia que se aplica sobre una superficie, por ende saturar significa colmar una superficie con pigmento. El agregado de gris a los colores como forma de saturar no hace otra cosa que obtener un nuevo color producto de la mezcla. Puede probarse por experimentacion. Por ende un color, inclusive al que se le agregara gris, puede saturar una superficie con mayor o menor efectividad dependiendo de la tecnica utilizada y de la calidad de los materiales con los que se ha fabricado. Por ejemplo, la tecnica de acuarela tiene menor capacidad para saturar que la del acrilico.  En su libro Teoria de los colores, el poeta y cientifico aleman Johann Wolfgang von Goethe propuso un circulo de color simetrico, el cual comprende el establecido por el matematico y fisico ingles Isaac Newton y los espectros complementarios. En contraste, el circulo de color de Newton, con siete angulos de color desiguales y subtendidos, no exponia la simetria y la complementariedad que Goethe considero como caracteristica esencial del color. Para Newton, solo los colores espectrales podian considerarse como fundamentales. El enfoque mas empirico de Goethe le permitio admitir el papel esencial del color magenta, que no es espectral, en un circulo de color. Posteriormente, los estudios de la percepcion del color definieron el estandar CIE 1931, el cual es un modelo perceptual que permite representar colores primarios con precision y convertirlos a cada modelo de color de forma apropiada\u200b.  La teoria del color propuesta por el quimico y filosofo aleman Wilhelm Ostwald consta de cuatro sensaciones cromaticas elementales (amarillo, rojo, azul y verde) y dos sensaciones acromaticas intermedias.  Un espacio de color define un modelo de composicion del color. Por lo general un espacio de color lo define una base de N vectores (por ejemplo, el espacio RGB lo forman 3 vectores: rojo, verde y azul), cuya combinacion lineal genera todo el espacio de color. Los espacios de color mas generales intentan englobar la mayor cantidad posible de los colores visibles por el ojo humano, aunque existen espacios de color que intentan aislar tan solo un subconjunto de ellos.  'Existen espacios o modelos de color de:'  De los cuales, los espacios de color de tres dimensiones son los mas extendidos y los mas utilizados. Entonces, un color se especifica usando tres coordenadas, o atributos, que representan su posicion dentro de un espacio de color especifico. Estas coordenadas no nos dicen cual es el color, sino que muestran donde se encuentra un color dentro de un espacio de color en particular.  Para representar y cuantificar cada color se usan diferentes modelos:  En la sintesis aditiva usada en pantallas y monitores, el modelo de color RGB (del ingles Red-rojo, Green-verde, Blue-azul), cada color se representa mediante la mezcla de los tres colores luz primarios, en terminos de intensidad de cada color primario con que se forma. Para indicar con que proporcion mezclamos cada color, se asigna un valor a cada uno de los colores primarios, de manera que el valor 0 significa que no interviene en la mezcla y la intensidad de cada una de las componentes se mide segun una escala que va del 0 al 255 (cada pixel 16x16=256). Por lo tanto, el rojo se obtiene con (255,0,0), el verde con (0,255,0) y el azul con (0,0,255). La ausencia de color \u2014lo que conocemos como color negro\u2014 se obtiene cuando los tres componentes son 0, (0,0,0). La combinacion de dos colores a nivel maximo, 255, con un tercero en nivel 0 da lugar a los tres colores secundarios. De esta forma el amarillo es (255,255,0), el cyan (0,255,255) y el magenta (255,0,255). El color blanco se forma con los tres colores primarios a su maximo nivel (255,255,255).  Se debe tener en cuenta que solamente con unos colores \u00abprimarios\u00bb ficticios se pueden llegar a conseguir todos los colores posibles. Estos colores primarios son conceptos idealizados utilizados en modelos de color matematicos que no representan las sensaciones de color reales o incluso los impulsos nerviosos reales o procesos cerebrales. En otras palabras, todos los colores \u00abprimarios\u00bb perfectos son completamente imaginarios, lo que implica que todos los colores primarios que se utilizan en las mezclas son incompletos o imperfectos.  Existe tambien el espacio derivado RGBA, que a\u00f1ade el canal alfa (de transparencia) al espacio RGB original.  En el modelo de color RYB, el rojo, el amarillo y el azul se consideran colores primarios, y en teoria, el resto de colores puros (color materia) puede ser creados mezclando pintura roja, amarilla y azul. A pesar de su obsolescencia e imprecision, mucha gente aprende algo sobre este modelo en los estudios de educacion primaria, mezclando pintura o lapices de colores con estos colores primarios.  Este modelo tradicional es aun utilizado en general en conceptos de arte y pintura tradicionales, pero ha sido totalmente dejado de lado en la mezcla industrial de pigmentos de pintura. Aun siendo usado como guia para la mezcla de pigmentos, el modelo tradicional no representa con precision los colores que resultan de mezclar los tres colores tradicional primarios, puesto que el azul y el rojo son tonalidades verdaderamente secundarias. A pesar de la imprecision de este modelo \u2013su correccion es el  modelo CMYK\u2013, se sigue utilizando en las artes visuales, el dise\u00f1o grafico y otras disciplinas afines, por tradicion del modelo original de Goethe de 1810 y otros autores anteriores.  El sistema de representacion de colores HTML, tambien de sintesis aditiva, usado en las paginas web, se descompone tambien de la misma forma en los tres colores primarios aditivos: Rojo-Verde-Azul. La intensidad de cada una de las componentes se mide tambien en una escala que va del 0 al 255. Sin embargo utiliza la numeracion hexadecimal, lo que le permite representar el numero 255 en base decimal con solo dos digitos en base hexadecimal. En el sistema de codificacion hexadecimal, ademas de los numeros del 0 al 9 se utilizan seis letras con un valor numerico equivalente; a=10, b=11, c=12, d=13, e=14 y f=15. La correspondencia entre la numeracion hexadecimal y la decimal u ordinaria viene dada por la siguiente formula:  La intensidad maxima es ff, que se corresponde con (15*16)+15= 255 en decimal, y la nula es 00, tambien 0 en decimal. De esta manera, cualquier color queda definido por tres pares de digitos.  CMY trabaja mediante la absorcion de la luz (colores secundarios).  En la mezcla sustractiva en la impresion de colores se utiliza el modelo de color CMYK (acronimo de Cyan, Magenta, Yellow-amarillo y Key-negro). La mezcla de colores CMY es sustractiva y al imprimir conjuntamente cyan, magenta y amarillo sobre fondo blanco resulta el color negro. Por varias razones, el negro generado al mezclar los colores primarios sustractivos no es adecuado y se emplea tambien la tinta negra como color inicial ademas de los tres colores primarios sustractivos amarillo, magenta y cyan. El modelo CMYK se basa en la absorcion de la luz por un objeto: el color que presenta un objeto corresponde a la parte de la luz que incide sobre este y se refleja no siendo absorbida por el objeto, en este caso el papel blanco.  Los colores que se ven son la parte de luz que no es absorbida. En CMY, magenta mas amarillo producen rojo, magenta mas cian producen azul, cian mas amarillo generan verde y la combinacion de cian, magenta y amarillo forman negro.  El negro generado por la mezcla de colores primarios sustractivos no es tan denso como el color negro puro (uno que absorbe todo el espectro visible). Es por esto que al CMY original se ha a\u00f1adido un canal clave (key), que normalmente es el canal negro (black), para formar el espacio CMYK o CMYB. Actualmente las impresoras de cuatro colores utilizan un cartucho negro ademas de los colores primarios de este espacio, lo cual genera un mejor contraste. Sin embargo el color que una persona ve en una pantalla de computador difiere del mismo color en una impresora, debido a que los modelos RGB y CMY son distintos. El color en RGB esta hecho por la reflexion o emision de luz, mientras que el CMY, mediante la absorcion de esta.  Fue una recodificacion de color realizada para la norma de television cromatica estadounidense NTSC, que debia ser compatible con la television en blanco y negro. Los nombres de los componentes de este modelo son Y por luminancia (luminance), I fase (in-phase) y Q cuadratura (quadrature). La primera es la se\u00f1al monocromatica de la television en blanco y negro y las dos ultimas generan el tinte y saturacion del color. Los parametros I y Q son nombrados en relacion con el metodo de modulacion utilizado para codificar la se\u00f1al portadora. Los valores de las se\u00f1ales RGB son sumados para producir una unica se\u00f1al Y\u2019 que representa la iluminacion o brillo general de un punto en particular. La se\u00f1al I es creada al restar el Y' de la se\u00f1al azul de los valores RGB originales y luego el Q se realiza restando la se\u00f1al Y' del rojo.  Son modelos de sintesis aditiva basados en las propiedades del color. Sus codigos son coordenadas cilindricas que se desarrollaron en los a\u00f1os 1970 para la computacion grafica y se usa hoy para la edicion digital de imagenes. Los parametros son H=matiz o tono (del ingles hue), S=saturacion (saturation), V=valor (value) y L=luminosidad (lightness). Se pueden representar geometricamente mediante conos, cilindros o cubos, y su numeracion es la siguiente:  Es un espacio cilindrico, pero normalmente asociado a un cono o cono hexagonal, debido a que es un subconjunto visible del espacio original con valores validos de RGB.  El uso de ciertos colores impacta gradualmente en el estado de animo de las personas, muchos de ellos son utilizados con esa intencion en lugares especificos, por ejemplo en los restaurantes es muy comun que se utilice decoracion de color naranja ya que abre el apetito, en los hospitales se usa colores neutros para dar tranquilidad a los pacientes, y para las entrevistas de trabajo es recomendable llevar ropa de colores oscuros, ya que da la impresion de ser una persona responsable y dedicada; asi como los colores en la ropa nos pueden favorecer y hacer lucir el rostro mas radiantes o mas opacos; estos son algunos ejemplos de la relacion entre los colores y las emociones.[cita\u00a0requerida]  Los ocho colores elementales corresponden a las ocho posibilidades extremas de percepcion del organo de la vista. Las posibilidades ultimas de sensibilidad de color que es capaz de captar el ojo humano. Estos resultan de las combinaciones que pueden realizar los tres tipos de conos del ojo, o lo que es lo mismo las posibilidades que ofrecen de combinarse los tres primarios. Estas ocho posibilidades son los tres colores primarios, los tres secundarios que resultan de la combinacion de dos primarios, mas los dos colores acromaticos, el blanco que es percibido como la combinacion de los tres primarios (sintesis aditiva: colores luz) y el negro es la ausencia de los tres.\u200b  Rojo  Verde  Azul  Amarillo  Cian  Magenta  Blanco  Negro  Por tanto, colores tradicionales como el violeta, el naranja o el marron no son colores elementales.  Cada color determinado esta originado por una mezcla o combinacion de diversas longitudes de onda. El matiz es la cualidad que permite diferenciar un color de otro: permite clasificarlo en terminos de rojizo, verdoso, azulado, etc. Se refiere a la ligera variacion que existe entre un color y el color contiguo en el circulo cromatico (o dicho de otra forma la ligera variacion en el espectro visible). Asi un verde azulado o a un verde amarillo son matices del verde cuando la longitud de onda dominante en la mezcla de longitudes de onda es la que corresponde al verde, y hablaremos de un matiz del azul cuando tenemos un azul verdoso o un azul magenta donde la longitud de onda dominante de la mezcla corresponda al azul.\u200b  Color rojo de una rosa  El amarillo del girasol  Violeta de unas violetas  Fucsia en unas fucsias  Color magenta de un cardo  Naranja de la fruta homonima naranja  Color lima en limas o limones  El color de la mora es un referente del morado  Color oliva de unas olivas  Granate dentro de una granada  El azul de unas gitanillas  Color rosa de una rosa  El blanco de los cartuchos  Rojo vivo de una anemona  Color lavanda de una lavanda  Colores turquesa y plata en la turquesa y la plata  Color ambar del ambar  El granate de un granate  Las esmeraldas dan varios tonos de esmeralda  Color cafe del grano y la taza de cafe  Verde vivo de un loro macho  Los tonos del cielo son un referente para el celeste  El mar tiene una tonalidad similar al azul ultramar  El mar en las Bahamas es cian, turquesa y esmeralda  Los siguientes son los principales colores del circulo cromatico y sus derivados oscuros (hacia el negro), agrisados (semisaturados o hacia el gris) y claros (hacia el blanco):  Son aquellos que no poseen colorido, es decir, que su saturacion es igual a 0. En conjunto conforman la escala de grises, la cual va desde el blanco hasta el negro. Poseen un equilibrio o igualdad entre los colores primarios que lo componen. Entre los principales tenemos:  No existe una homologia completa entre las distintas lenguas que cubra completamente la paleta del color. Algunas lenguas ni siquiera poseian el concepto. Platon consideraba que existian cuatro colores basicos: el blanco, el negro, el rojo y el brillante, algo que para nosotros no es ni siquiera un color, y definio tambien al color como: \u00abuna emanacion de las figuras, proporcionado a la vista y, por tanto, perceptible\u00bb;\u200b William Ewart Gladstone (1809-1898), quien no solo fue un gran politico, sino un experto helenista, estudio el color en Homero (quien describia el mar como \"vino oscuro\" y el cielo \"como bronce\") y conto que los colores mas citados en sus obras eran el negro (200 veces) y el blanco (100); el rojo solo 15 y el verde y el amarillo menos de diez. No se mencionaban nada ni el azul, ni el indigo, ni el a\u00f1il. Y no habia tampoco mencion alguna del color azul en el resto de los autores griegos.  El filosofo y linguista aleman Lazarus Geiger encontro que tampoco en muchas otras civilizaciones antiguas se conocia el color azul: en el Coran, en antiguas historias chinas, en la version antigua de la Biblia hebrea, en las sagas islandesas y hasta en los Vedas indios no aparece el color del cielo. La unica cultura antigua que sabia representar el color azul fue la egipcia, e incluso asi les costo mucho fabricar el pigmento de forma sintetica, pues no se encuentra facilmente en la naturaleza (por ejemplo, no hay flores azules: las primeras las fabricaron los humanos).  Guy Deutscher descubrio con diversos experimentos que, en general, el color del cielo es el ultimo que suelen aprender los ni\u00f1os. Para los pueblos antiguos el cielo era blanco, y, el mar, negro. Por otra parte, las denominaciones de los colores antiguos fue evolucionando con la lengua y, por ejemplo, el color negro entre los hebreos (kajol) paso a significar azul con el tiempo, y lo mismo ocurrio con el color kuanos de los griegos, que en Homero significa negro y en la actualidad azul.\u200b  Esta nocion de que los conceptos y el lenguaje limitan la percepcion cognitiva se llama relativismo linguistico, y describe las maneras en que diferentes culturas pueden tener dificultades para recordar o retener informacion sobre los objetos o conceptos para los que carecen de identificacion de idioma. Y, aunque la tribu Himba de Namibia no posee palabra alguna para el azul, si saben distinguir matices del color verde que a nosotros nos cuesta notar.\u200b Existen tambien diferencias biologicas entre los sexos humanos en cuanto a la percepcion del color: el naranja puede parecer mas rojizo para los hombres que las mujeres, y el verde siempre aparece mas brillante para las mujeres que para los hombres, que siempre ven un tono mas amarillento, entre otras disimilitudes.\u200b ","snippet":"El color es la impresion producida por un tono de luz en los organos visuales, o mas especificamente, es una percepcion visual que se genera en el cerebro de los humanos y otros animales al interpreta","enlaces_salientes":["Color","Color","Color","Color_(desambiguaci%C3%B3n)","L%C3%A1pices_de_colores","Luz","Ojos","Percepci%C3%B3n","Cerebro","Excitabilidad_neuronal","Fotorreceptor","Retina","Ojo","Longitud_de_onda","Espectro_electromagn%C3%A9tico","Radiaci%C3%B3n_electromagn%C3%A9tica","Ojo","Longitud_de_onda","Ojo","Blanco_(color)","Negro_(color)","S%C3%ADntesis_aditiva_de_color","Blanco_(color)","S%C3%ADntesis_sustractiva_de_color","Espectro_visible","Prisma_(%C3%B3ptica)","Dispersi%C3%B3n_refractiva","Arco%C3%ADris","Arte","Pintura_art%C3%ADstica","Dise%C3%B1o_gr%C3%A1fico","Dise%C3%B1o_visual","Fotograf%C3%ADa","Imprenta","Televisi%C3%B3n","Luz","Pigmento","Cian_(color)","Magenta","Amarillo","Rojo","Verde","Azul","Cian_(color)","Magenta","Amarillo","Verde","Rojo","Azul","Cono_(c%C3%A9lula)","Cono_(c%C3%A9lula)","Bast%C3%B3n_(c%C3%A9lula)","Visi%C3%B3n","Luz","Animalia","Sistema_%C3%B3ptico","Cono_(c%C3%A9lula)","Bast%C3%B3n_(c%C3%A9lula)","Nervio_%C3%B3ptico","Cerebro","Percepci%C3%B3n_del_color","Ojo_humano","Retina","Longitud_de_onda","Oscuridad","Fotopigmento","Opsina","Colores_primarios","Tricromatismo","Nm","Visi%C3%B3n_fot%C3%B3pica","Cerebro","Primates","Catarrinos","Mutaci%C3%B3n","Aves","Daltonismo","Acromatopsia","Percepci%C3%B3n_del_color","Color_en_los_seres_vivos","Pigmentos_biol%C3%B3gicos","Coloraci%C3%B3n_estructural","Bioluminiscencia","Espectro_visible","Espectro_electromagn%C3%A9tico","Energ%C3%ADa","Longitud_de_onda","Espectro_visible","Cerebro","Prisma_(%C3%B3ptica)","Arco%C3%ADris","Luz_solar","Lat%C3%ADn","%C3%93ptica","Luz_solar","Prisma_(%C3%B3ptica)","Vidrio","%C3%81ngulo","Reflexi%C3%B3n_(f%C3%ADsica)","Arco%C3%ADris","Violeta_(color)","Azul","Cian_(color)","Verde","Amarillo","Naranja_(color)","Rojo","Absorci%C3%B3n_(radiaci%C3%B3n_electromagn%C3%A9tica)","Longitud_de_onda","Reflexi%C3%B3n_(f%C3%ADsica)","Manzana","Rojo","S%C3%ADntesis_aditiva_de_color","Ojo","Cerebro","Azul_ultramar","Reflexi%C3%B3n_(f%C3%ADsica)","Blanco_(color)","Espectro_visible","Enlace_qu%C3%ADmico","Sustituyente","Azul_ultramar","Luz_solar","Temperatura_de_color","Colores_primarios","S%C3%ADntesis_aditiva_de_color","S%C3%ADntesis_sustractiva_de_color","Modelo_de_color_RYB","Conocimiento_emp%C3%ADrico","RGB","HSV","CMY","CMYK","RYB","Colores_primarios","Rojo","Verde","Azul","Cian_(color)","Magenta","Amarillo","Azul","Rojo","Amarillo","Colores_secundarios","Verde","Naranja_(color)","P%C3%BArpura","Televisor","Monitor_de_computadora","Proyector_de_cine","Impresi%C3%B3n","Fotograf%C3%ADa_en_color","Pintura","Modelo_tradicional_de_coloraci%C3%B3n","Conocimiento_emp%C3%ADrico","Conocimiento_cient%C3%ADfico","Cian_(color)","Magenta","Color_primario","S%C3%ADntesis_aditiva_de_color","Thomas_Young","Pantalla_de_proyecci%C3%B3n","Rojo","Verde","Azul","Cian_(color)","Magenta","Amarillo","Negro_(color)","Blanco_(color)","Ojo","Cono_(c%C3%A9lula)","Tricromatismo","Gama_de_color","Tetracromatismo","Nan%C3%B3metro","Violeta_(color)","Radiaci%C3%B3n_ultravioleta","Violeta_(color)","Aves","Marsupialia","Amarillo","P%C3%ADxel","Televisi%C3%B3n","Monitor_de_computadora","Tel%C3%A9fonos_celulares","Rojo","Verde","Amarillo","Verde","Azul","Cian_(color)","Azul","Rojo","Magenta","Azul","Rojo","Verde","Blanco_(color)","Color_primario","S%C3%ADntesis_sustractiva_de_color","S%C3%ADntesis_aditiva_de_color","S%C3%ADntesis_sustractiva_de_color","Teor%C3%ADa","Espectro_electromagn%C3%A9tico","Colores_primarios","CMY","Impresi%C3%B3n","Fotograf%C3%ADa_a_color","Pintura","Cian_(color)","Magenta","Azul","Magenta","Amarillo","Rojo","Cian_(color)","Amarillo","Verde","Cian_(color)","Amarillo","Magenta","Negro_(color)","Cian_(color)","Magenta","Amarillo","Verde","Azul","Producci%C3%B3n_en_cadena","Negro_(color)","Modelo_de_color_CMYK","Rojo_p%C3%BArpura","RGB","RYB","Color_primario","Color_secundario","Color_terciario","C%C3%ADrculo_crom%C3%A1tico","Colores_neutros","Gris","Escala_de_grises","Colores_complementarios","RGB","CMY","Verde","Magenta","Azul","Amarillo","Rojo","Cian_(color)","RYB","Violeta_(color)","Naranja_(color)","Teor%C3%ADa_del_color","Modelo_de_color_HSL","Modelo_de_color_HSV","Tono_(color)","Saturaci%C3%B3n_(color)","Luminosidad_(color)","Valor_(color)","Modelo_de_color_HSL","Modelo_de_color_HSV","Teor%C3%ADa_de_los_colores","Johann_Wolfgang_von_Goethe","Teor%C3%ADa_de_los_colores","Johann_Wolfgang_von_Goethe","Isaac_Newton","Magenta","Espacio_de_color_CIE_1931","Wilhelm_Ostwald","Degradado","Modelo_de_color_CMYK","RGB","Vector_(matem%C3%A1tica)","Combinaci%C3%B3n_lineal","Dimensi%C3%B3n","P%C3%BArpura","Col_lombarda","Colores_HTML","Modelo_de_color_RGB","CMYK","HSV","Modelo_de_color_RGB","RGB","Color_primario","Matem%C3%A1ticas","Cerebro","Canal_(imagen_digital)","Espacio_de_color_sRGB","C%C3%ADrculo_crom%C3%A1tico","Carm%C3%ADn","Modelo_tradicional_de_coloraci%C3%B3n","Modelo_de_color_RYB","Rojo","Amarillo","Azul","Colores_primarios","Modelo_de_color_CMYK","Artes_visuales","Dise%C3%B1o_gr%C3%A1fico","Colores_web","Numeraci%C3%B3n_hexadecimal","Modelo_de_color_CMYK","Modelo_de_color_CMYK","Luz","Impresora","Modelo_de_color_CMYK","Blanco_(color)","Absorci%C3%B3n_(%C3%B3ptica)","Luz","NTSC","Coordenadas_cil%C3%ADndricas","Computaci%C3%B3n_gr%C3%A1fica","Edici%C3%B3n_digital_de_im%C3%A1genes","HSV","HSL","Matiz_(color)","C%C3%ADrculo_crom%C3%A1tico","Modelo_de_color_HSV#Saturaci\u00f3n","Valor_(color)","Luminosidad_(color)","Modelo_de_color_HSV","Matiz_(color)","Frecuencia","Espectro_visible","Modelo_de_color_HSV#Saturaci\u00f3n","Valor_(color)","Colores_an%C3%A1logos","Colores_complementarios","Colores_monocrom%C3%A1ticos","Psicolog%C3%ADa_del_color","Rojo","Verde","Azul","Amarillo","Cian_(color)","Magenta","Blanco","Negro_(color)","Tono_(color)","C%C3%ADrculo_crom%C3%A1tico","Azul_verde","Verde_amarillo","Azul_verde","Colores_web","Colorante","Indicador_de_pH","Esmalte_(her%C3%A1ldica)","Rojo","Rosa","Amarillo","Girasol","Violeta_(color)","Viola_cornuta","Fucsia","Fuchsia","Magenta","Carduus_nutans","Naranja_(color)","Naranja_(fruta)","Lima_(color)","Lima_(fruta)","Mora_(fruta)","Morado","Verde_oliva","Aceituna","Granate_(color)","Granada_(fruto)","Azul","Gentiana_verna","Rosa_(color)","Rosa","Blanco_(color)","Zantedeschia_aethiopica","Anemone_coronaria","Lavanda_(color)","Lavanda","Turquesa_(color)","Plata_(color)","Turquesa","Plata","%C3%81mbar_(color)","%C3%81mbar","Granate_(color)","Granate_(mineral)","Esmeralda","Esmeralda_(color)","Caf%C3%A9_(color)","Caf%C3%A9","Verde","Eclectus_roratus","Celeste_(color)","Azul_ultramar","Bahamas","Cian_(color)","Turquesa_(color)","Esmeralda_(color)","C%C3%ADrculo_crom%C3%A1tico","Rojo","Rojo_naranja","Naranja_(color)","%C3%81mbar_(color)","Amarillo","Lima_(color)","Verde","Verde_cian","Cian_(color)","Cer%C3%BAleo","Azur","Azul","Violeta_(color)","Magenta","Fucsia","Granate_(color)","Caoba_(color)","Rojo_indio","Marr%C3%B3n","Marr%C3%B3n_dorado","Verde_oliva","Aguacate_(color)","Verde","Esmeralda_(color)","Viridi%C3%A1n","Azul_verde","A%C3%B1il","Azul_cobalto","Azul_marino","Azul_p%C3%BArpura","P%C3%BArpura","Morado","Vino_(color)","Lacre_(color)","Cobre_(color)","Marr%C3%B3n#Canela_o_canelo","Ocre","Dorado_(color)","Chartreuse_(color)","Verde_manzana","Verde_bosque","Verde_mar","Turquesa_(color)","Azul_acero","Zafiro_(color)","Amatista_(color)","Purp%C3%BAreo","Murasaki_(color)","Fandango_(color)","Rojo_violeta","Coral_(color)","Salm%C3%B3n_(color)","Mel%C3%B3n_(color)","Crema_(color)","Ma%C3%ADz_(color)","T%C3%A9_verde_(color)","Verde","Menta_(color)","Aguamarina_(color)","Celeste_(color)","B%C3%ADgaro_(color)","Azul_aciano","Lavanda_(color)","Lila_(color)","Malva_(color)","Rosa_(color)","Acrom%C3%A1tico","Saturaci%C3%B3n_(color)","Escala_de_grises","Negro_(color)","Azabache","Plomo_(color)","Gris","Plata_(color)","Gris_ceniza","Blanco_(color)","Plat%C3%B3n","William_Ewart_Gladstone","Homero","Lazarus_Geiger","Cor%C3%A1n","Biblia","Sagas","Vedas","Relativismo_ling%C3%BC%C3%ADstico","Himba","Namibia","Arco%C3%ADris","Armon%C3%ADa_crom%C3%A1tica","Color_en_el_arte","Colores_lit%C3%BArgicos","Colores_panafricanos","Colores_pan%C3%A1rabes","Colores_paneslavos","Colores_pol%C3%ADticos","Colores_web","Cromatolog%C3%ADa_iconoling%C3%BC%C3%ADstica","Daltonismo","Espectro_visible","Fotometr%C3%ADa_(%C3%B3ptica)","Modelo_de_color_CMYK","Modelo_de_color_HSV","Modelo_tradicional_de_coloraci%C3%B3n","Morfolog%C3%ADa_(dise%C3%B1o)","Percepci%C3%B3n_del_color","Psicolog%C3%ADa_del_color","RAL","RGB","Sinestesia","S%C3%ADntesis_aditiva_de_color","S%C3%ADntesis_sustractiva_de_color","Teor%C3%ADa_del_color","Tetracromatismo","Tono_(color)","Tricolor","PubMed_Central","PubMed_Identifier","Digital_object_identifier","Wayback_Machine","ISBN","Wikcionario","Diccionario_de_la_lengua_espa%C3%B1ola","Wayback_Machine","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Art_%26_Architecture_Thesaurus","Enciclopedia_Brit%C3%A1nica","Medical_Subject_Headings"]}
{"url":"Elemento_de_un_conjunto","titulo":"Elemento de un conjunto","contenido":"En teoria de conjuntos, un elemento o miembro de un conjunto (o familia de conjuntos) es un objeto que forma parte de ese conjunto (o familia).  Al escribir A = { 1 , 2 , 3 , 4 } } , estamos diciendo que los elementos del conjunto A son los numeros 1, 2, 3 y 4. Un grupo de elementos de A seria, por ejemplo, { 1 , 2 } } , el cual es un subconjunto de A .  Los elementos pueden ser conjuntos en si mismos. Por ejemplo, consideremos el conjunto B = { 1 , 2 , { 3 , 4 } } \\}} . Los elementos de B no son 1, 2, 3, y 4; en efecto, B tiene solo tres elementos: 1, 2 y el conjunto { 3 , 4 } } .  Los elementos de un conjunto pueden ser cualquier cosa. Por ejemplo, C = { r o j o , v e r d e , a z u l } rojo} ,\\mathrm verde} ,\\mathrm azul} \\}} , es el conjunto cuyos elementos son los colores rojo, verde y azul.  La relacion \u00abes un elemento de\u00bb, tambien llamada miembro del conjunto, se denota mediante el simbolo \u2208 , y al escribir  estamos diciendo que x es un elemento de A .  El simbolo \u2208 fue utilizado por primera vez por Giuseppe Peano en el a\u00f1o 1889 en su obra Arithmetices principia, nova methodo exposita, donde escribio (ver imagen abajo a la derecha)  Signum \u2208 significat est. Ita a \u2208 b legitur a est quoddam b ; \u2026  lo que aignifica  El simbolo \u2208 significa es. Asi, a \u2208 b se lee a es un cierto b ; ...  El simbolo es la letra griega epsilon minuscula (\u03b5) estilizada, la primera letra de la palabra \u03b5\u03c3\u03c4, la tercera persona del signgular del verbo \"ser\" en griego antiguo.  Originalmente, la relacion x \u2208 A se leia \u00ab x es un cierto A \u00bb. A dia de hoy esta formulacion subsiste en cierta medida, por ejemplo cuando traducimos n \u2208 N } como \u00ab n es un cierto entero natural\u00bb.  Hoy en dia, se suele leer o escribir \u00ab x es un elemento de A \u00bb, \u00ab x es un miembro de A \u00bb, \u00ab x pertenece a A \u00bb, \u00ab x es en A \u00bb, \u00ab x reside en A \u00bb, \u00ab A incluye x \u00bb, o \u00ab A contiene x \u00bb.  No obstante lo anterior, los terminos \u00ab A incluye x \u00bb y \u00ab A contiene x \u00bb son ambiguos, porque algunos autores tambien los usan para referirse a que \u00ab x es un subconjunto de A \u00bb.\u200b El logico George Boolos es enfatico al aclarar que la palabra \u00abcontiene\u00bb debe usarse solo para pertenencia de elementos, e \u00abincluye\u00bb solo para relaciones de subconjuntos.\u200b  Sean x un elemento y A , B conjuntos:  Para la relacion \u2208 , la relacion inversa \u2208 T }} puede ser escrita como   A \u220b x  y significa \" A tiene a x como elemento\".  La negacion de la relacion se denota \u2208 :   x \u2208 A  significa que x no es un elemento de A .  El numero de elementos en un conjunto particular es una propiedad conocida como cardinalidad, que informalmente se conoce como el tama\u00f1o de un conjunto. Para los ejemplos anteriores, la cardinalidad del conjunto A es 4, mientras que la de B y C es 3. Un conjunto finito es aquel con un numero finito de elementos, mientras que uno infinito, uno con una cantidad infinita de elementos. Los ejemplos de arriba son todos de conjuntos finitos. Un ejemplo de conjunto infinito es el conjunto de los numeros naturales, N = { 1 , 2 , 3 , 4 \u2026 } =\\{1,2,3,4\\ldots \\}} .  Usando los conjuntos definidos arriba:  podemos decir que:  No podemos decir respecto al conjunto B, que: ","snippet":"En teoria de conjuntos, un elemento o miembro de un conjunto (o familia de conjuntos) es un objeto que forma parte de ese conjunto (o familia).  Al escribir A = { 1 , 2 , 3 , 4 } } , estamos diciendo ","enlaces_salientes":["Elemento_de_un_conjunto","Elemento_de_un_conjunto","Elemento_de_un_conjunto","Teor%C3%ADa_de_conjuntos","Conjunto","Familia_de_conjuntos","Subconjunto","Subconjunto","Giuseppe_Peano","Relaci%C3%B3n_binaria","Giuseppe_Peano","%CE%95","Subconjunto","George_Boolos","Conjunto","Relaci%C3%B3n_inversa","Conectiva_l%C3%B3gica","N%C3%BAmero_cardinal","Conjunto_finito","Conjunto_infinito","N%C3%BAmero_natural","Conjunto_vac%C3%ADo","N%C3%BAmero_primo","ISBN","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Arco%C3%ADris","titulo":"Arcoiris","contenido":"Un arcoiris\u200b\u200b o arco iris es un fenomeno optico y meteorologico que causa la aparicion en la atmosfera terrestre de un arco multicolor, a veces, doble, por la descomposicion de la luz solar en el espectro visible. Se produce por refraccion, cuando la luz atraviesa gotas de agua. Esta formado por arcos concentricos de colores, sin solucion de continuidad entre ellos, con el rojo hacia la parte exterior y el violeta hacia el interior. A altitud suficiente, por ejemplo cuando se viaja en avion, el arcoiris se puede observar en forma de circulo completo.  Cuando se observa un arcoiris doble, el arco secundario rodea al primario. Su intensidad es mas tenue y el orden de los colores esta invertido.  Para los colores vistos por el ojo humano, la secuencia mas comunmente citada y recordada es la de Isaac Newton, definida por siete colores fundamentales: rojo, naranja, amarillo, verde, azul, indigo y violeta. Una lectura cuidadosa del trabajo de Newton indica que el color que llamo azul es lo que actualmente llamariamos cian.\u200b  El erudito griego clasico Aristoteles (384-322 a.\u00a0C.) fue el primero en dedicar una atencion seria al arcoiris.\u200b Segun Raymond L. Lee y Alistair B. Fraser, \u00abA pesar de sus muchas fallas y su atractivo para la numerologia pitagorica, la explicacion cualitativa de Aristoteles mostro una inventiva y una coherencia relativa que no tuvo parangon durante siglos. Despues de la muerte de Aristoteles, gran parte de las teorias sobre el arcoiris consistieron en reacciones a su trabajo, aunque no todas ellas fueron acriticas\u00bb.\u200b  En el Libro I de Naturales Quaestiones  (c. 65 d.\u00a0C.), el filosofo romano Seneca el Joven analiza ampliamente varias teorias sobre la formacion del arcoiris, incluidas las de Aristoteles. Observa que los arcoiris aparecen siempre opuestos al sol, que aparecen en el agua rociada por un remero, en el agua escupida por un batidor sobre la ropa estirada por pinzas o en el agua pulverizada traves de un peque\u00f1o orificio en una tuberia reventada. Incluso hablaba de arcoiris producidos por peque\u00f1as varillas (virgulae) de vidrio, anticipandose a las experiencias de Newton con los prismas. Tenia en cuenta dos teorias: una, que el arcoiris era producido por el sol reflejandose en cada gota de agua; y la otra, que era producido por el sol reflejandose en una nube con forma de espejo concavo; favorecia la segunda. Tambien analizaba otros fenomenos relacionados con el arcoiris: las misteriosas \"virgas\" (varillas), los halos y la parhelia.\u200b  Segun Huseyin Gazi Topdemir, el fisico arabe y polimata Ibn al-Haytham (Alhazen; 965-1039), intento proporcionar una explicacion cientifica del fenomeno del arcoiris. En su Maqala fi al-Hala wa Qaws Quzah [Sobre el arcoiris y el halo], al-Haytham \u00abexplico la formacion del arcoiris como una imagen, que se forma en un espejo concavo. Si los rayos de luz provenientes de una fuente de luz mas lejana reflejan a cualquier punto en el eje del espejo concavo, forman circulos concentricos en ese punto. Cuando se supone que el sol como una fuente de luz mas lejana, el ojo del espectador como un punto en el eje del espejo y una nube como una superficie reflectante , entonces se puede observar que los circulos concentricos se estan formando en el eje\u00bb.\u200b No pudo verificar esto porque su teoria de que \u00abla luz del sol es reflejada por una nube antes de llegar al ojo\u00bb no permitia una posible verificacion experimental.\u200b Esta explicacion fue repetida por Averroes,[cita\u00a0requerida] y, aunque incorrecta, proporciono la base para las explicaciones correctas dadas mas tarde por Kamal al-Din al-Farisi en 1309 e, independientemente, por Teodorico de Freiberg (ca. 1250 - ca. 1311)[cita\u00a0requerida] \u2014ambos habian estudiado el Libro de Optica de al-Haytham.\u200b  Un contemporaneo de Ibn al-Haytham, el filosofo y erudito persa Ibn Sina (Avicena, 980-1037), proporciono una explicacion alternativa: \u00abque el arco no se forma en la nube oscura sino mas bien en la niebla muy fina que se encuentra entre la nube y el sol o el observador. La nube, pensaba, sirve simplemente como fondo de esta sustancia delgada, al igual que cuando se coloca un revestimiento de mercurio sobre la superficie posterior del vidrio en un espejo. Ibn Sina cambiaria el lugar no solo del arco, sino tambien de la formacion del color, sosteniendo que la iridiscencia es simplemente una sensacion subjetiva en el ojo\u00bb.\u200b Esta explicacion, sin embargo, tambien era incorrecta.[cita\u00a0requerida] El relato de Ibn Sina aceptaba muchos de los argumentos de Aristoteles sobre el arcoiris.\u200b  En la China de la dinastia Song (960-1279), un polimata y funcionario erudito llamado Shen Kuo (1031-1095) planteo la hipotesis \u2014como habia hecho antes un tal Sun Sikong (1015-1076)\u2014 de que los arcoiris se formaban por un fenomeno de la luz solar al encontrarse gotas de lluvia en el aire.\u200b Paul Dong se\u00f1ala que la explicacion de Shen del arcoiris como un fenomeno de refraccion atmosferica \u00abesta basicamente de acuerdo con los principios cientificos modernos\u00bb.\u200b  Segun Nader El-Bizri, el astronomo persa Qutb al-Din al-Shirazi (1236-1311), dio una explicacion bastante precisa del fenomeno del arcoiris. Esta fue elaborada por su alumno, Kamal al-Din al-Farisi  (1267-1319), quien dio una explicacion mas satisfactoria matematicamente del arcoiris. \u00abPropuso un modelo en el que el rayo de luz del sol era refractado dos veces por una gota de agua, ocurriendo uno o mas reflejos entre las dos refracciones\u00bb. Se realizo un experimento con una esfera de vidrio llena de agua y al-Farisi mostro que las refracciones adicionales debidas al vidrio podian ignorarse en su modelo.\u200b \u200b Como se\u00f1alo en su  Kitab Tanqih al-Manazir  [La revision de la Optica], al-Farisi uso un gran recipiente de vidrio transparente en forma de esfera, que se lleno con agua, para tener un modelo experimental a gran escala de una gota de lluvia. Luego coloco ese modelo en una camara oscura que tenia una apertura controlada para dejar pasar la luz. Proyecto luz en la esfera y finalmente dedujo a traves de varios ensayos y observaciones detalladas de los reflejos y las refracciones de la luz que los colores del arcoiris eran fenomenos de descomposicion de la luz.  En Europa, el Libro de Optica de Ibn al-Haytham fue traducido al latin y estudiado por Robert Grosseteste. Su trabajo sobre la luz fue continuado por Roger Bacon, quien escribio en su  Opus Majus  de 1268 sobre experimentos con luz brillando a traves de cristales y gotas de agua que mostraban los colores del arcoiris.\u200b Ademas, Bacon fue el primero en calcular el tama\u00f1o angular del arcoiris. Afirmo que la cima del arcoiris no puede aparecer a mas de 42\u00b0 sobre el horizonte.\u200b Se sabe que Teodorico de Freiberg dio una explicacion teorica precisa tanto del arcoiris primario como del secundario en 1307 (que luego fue desarrollada por Antonius de Demini en 1611[cita\u00a0requerida]). Explico el arcoiris primario, se\u00f1alando que \u00abcuando la luz del sol cae sobre gotas individuales de humedad, los rayos experimentan dos refracciones (al entrar y salir) y un reflejo (en la parte posterior de la gota) antes de la transmision al ojo del observador\u00bb.\u200b\u200b Explico el arcoiris secundario a traves de un analisis similar que involucraba dos refracciones y dos reflejos.  Rene Descartes, en su tratado de 1637, Discurso del metodo, avanzo aun mas en esta explicacion. Sabiendo que el tama\u00f1o de las gotas de lluvia no parecia afectar el arcoiris observado, experimento con el paso de rayos de luz a traves de una gran esfera de vidrio llena de agua. Al medir los angulos en los que emergian los rayos, concluyo que el arco primario era causado por un unico reflejo interno dentro de la gota de lluvia y que el arco secundario podria ser causado por dos reflejos internos. Apoyo esta conclusion con una derivacion de la ley de refraccion (posterior a, pero independientemente de la ley de Snell) y calculo correctamente los angulos para ambos arcos. Sin embargo, su explicacion de los colores se baso en una version mecanica de la teoria tradicional de que los colores se producian mediante una modificacion de la luz blanca.\u200b\u200b  Isaac Newton demostro que la luz blanca estaba compuesta por la luz de todos los colores del arcoiris, que un prisma de vidrio podia separar en el espectro completo de colores \u2014 descomposicion de la luz blanca\u2014, rechazando la teoria de que los colores se producian mediante una modificacion de la luz blanca. Tambien mostro que la luz roja se refractaba menos que la luz azul, lo que llevo a la primera explicacion cientifica de las principales caracteristicas del arcoiris.\u200b La teoria corpuscular de la luz de Newton fue incapaz de explicar los arcoiris supernumerarios, para los que no se encontro una explicacion satisfactoria hasta que Thomas Young se dio cuenta de que la luz se comportaba como una onda bajo ciertas condiciones y que podia interferir consigo misma.  El trabajo de Young, mas tarde elaborada en detalle por Richard Potter,  fue refinado en la decada de 1820 por George Biddell Airy, que explico que habia una dependencia entre fuerza de los colores del arcoiris y el tama\u00f1o de las gotas de agua..\u200b Las descripciones fisicas modernas del arcoiris se basan en la dispersion de Mie, obra publicada por Gustav Mie en 1908.\u200b Los avances en los metodos computacionales y en la teoria optica continuan conduciendo a una comprension mas completa de los arcoiris. Por ejemplo, Nussenzveig ofrece una vision general moderna.\u200b  Cuando la luz solar incide sobre las gotas de lluvia, estas se encargan de producir el efecto, pero en algunas mucho mas que en otras. Los rayos del Sol involucrados con la formacion del arcoiris salen de las gotas de lluvia con un angulo de aproximadamente 138 grados respecto de la direccion que llevaban antes de entrar en ellas. Este es el \u00abangulo del arcoiris\u00bb, descubierto por Rene Descartes en el a\u00f1o de 1637. Como el angulo de salida es de solo 138 grados, la luz no se refleja exactamente hacia su origen. Esto hace posible que el arcoiris sea visible para el observador, que no se suele encontrar exactamente entre el Sol y la lluvia. De manera que siempre, si se  esta frente a un arcoiris, el Sol estara detras.  Para ser mas precisos, es la luz amarilla la que es dispersada a 138\u00b0 de su trayectoria original. La luz de otros colores es dispersada en angulos algo distintos. La luz roja del arcoiris se dispersa en una direccion ligeramente menor que 138\u00b0, mientras que la luz violeta sale de las gotas de lluvia en un angulo un poco mayor.  Un rayo de luz solar, de los que forman un arcoiris, cambia su direccion tres veces mientras se mueve a traves de una gota de lluvia: Primero entra en la gota, lo cual ocasiona que se refracte ligeramente. Entonces se mueve hacia el extremo opuesto de la gota, y se refleja en la cara interna de la misma. Finalmente, vuelve a refractarse cuando sale de la gota de lluvia en forma de luz dispersa. La descomposicion en colores es posible porque cada longitud de onda se refracta con un angulo diferente, generando cada color del arcoiris.  La luz solar emerge de muchas gotas de lluvia a un tiempo. El efecto combinado es un mosaico de peque\u00f1os destellos de luz dispersados por muchas gotas de lluvia, distribuido como un arco en el cielo. Los diversos tama\u00f1os y formas de las gotas afectan la intensidad de los colores del arcoiris. Gotas peque\u00f1as hacen un arcoiris palido y de colores con tonalidades pastel; gotas grandes producen colores muy vivos. Ademas, las gotas grandes son aplastadas por la resistencia del aire mientras caen. Esta distorsion ocasiona que el \"final\" del arcoiris tenga colores mas intensos. Quizas sea esta la causa de la leyenda que sugiere la existencia de una olla que contiene oro resplandeciente en el final del arcoiris.  A veces, es posible ver tambien lo que se conoce como arcoiris secundario. El arcoiris primario, que se ha dado en llamar simplemente \u00abarcoiris\u00bb, es siempre un arco interior y mas proximo al observador que el arcoiris secundario. Si la luz que incide sobre la gota de agua realiza al menos dos refracciones y tres reflexiones internas se puede deducir su trayectoria. El resultado es la formacion de un arcoiris secundario de colores invertidos, mas debil y que queda por encima del primario. Su debilitamiento se debe a la luz que se refracta y sale al exterior en cada reflexion interna.  Los angulos que forman los rayos incidente y refractado hacia el ojo son mayores en el rayo secundario: 50\u00b0 para la luz roja y 54\u00b0 para la violeta. Ya se vio  que en la formacion del primario ese angulo era de 138\u00b0 para la luz roja, esto es, 42\u00b0 respecto al observador.  El orden de los colores en el arco secundario esta invertido debido a la doble reflexion interna. Teoricamente puede haber mas de tres reflexiones internas, que darian lugar a cuatro y cinco arcoiris. El tercero y cuarto estarian entre el observador y el sol y quizas nunca se puedan ver. El quinto se produce en la misma zona del primero y del segundo y no es perceptible porque es muy tenue. Es posible, en un experimento de laboratorio, demostrar que se pueden conseguir hasta 13 arcoiris visibles, aunque, logicamente su luminosidad se reduce considerablemente.  Es interesante se\u00f1alar que ninguna luz emerge en la region entre los arcoiris primario y secundario. Esto coincide con algunas observaciones, que se\u00f1alan que la region entre los dos arcos es muy oscura, mientras que en la parte exterior del arco secundario y en la parte interior del arco primario es visible una considerable cantidad de luz, lo cual se debe al reflejo de la luz blanca concentrada justo antes de su refraccion para formar el arcoiris. Esta zona oscura intermedia se debe a la intensidad de la cortina de agua, que absorbe toda la luz posible hacia el interior de la misma, por lo que el arco secundario es simplemente un reflejo del primario en direccion hacia el observador y es conocida como \u00abBanda de Alejandro\u00bb.[cita\u00a0requerida]  En algunas ocasiones, cuando los arcoiris primario y secundario son muy brillantes, se puede observar un tercero dentro del primario y un cuarto fuera del secundario. A estos arcos se les llama arcos supernumerarios y se deben a efectos especiales de interferencia luminosa.  Cuando alguien mira un arcoiris, lo que esta viendo en realidad es luz dispersada por ciertas gotas de lluvia. Otra persona que se encuentre al lado del primer observador vera luz dispersada por otras gotas. De manera que puede decirse que cada quien ve su propio arcoiris, distinto (hablando en un sentido estricto) del que ven todos los demas.  Es comun pretender estimar la posicion del arco, especialmente sus \"extremos\", es decir, alli donde desaparece por no existir gotas que descompongan la luz. Pero el arcoiris es, en realidad, un cono iris: todas las gotas situadas en la misma posicion respecto del espectador y del sol descomponen la luz de igual manera. Si existen solamente gotas lejanas, el espectador tendra la percepcion de que el arco se encuentra en una posicion determinada. En cambio, si unas gotas se encuentran proximas y otras alejadas, el espectador percibira que la situacion del arco es indeterminada.  Si las condiciones atmosfericas y el sitio de observacion son perfectos, entonces la lluvia y el Sol trabajan juntos para crear un anillo de luz completo, denominado arcoiris circular, como el que se vio el 6 de agosto de 2007 en la isla de Langkawi, Malasia.[cita\u00a0requerida] En los arcoiris normales el rojo es el color exterior, y el violeta el interior, pero en los circulares la variacion es la contraria.  Respecto de las condiciones para ver un arcoiris se reducen a que el observador tiene que estar localizado entre el sol y una lluvia de gotas esfericas (una lluvia uniforme). Es posible que el observador crea que la lluvia no es uniforme donde el se encuentra, pero si debe serlo desde donde localizaria el arcoiris. \u00bfY cuando son las gotas esfericas? Las gotas son esfericas cuando caen a una velocidad uniforme, constante. Esto es posible en condiciones de aceleracion gravitatoria contando con las fuerzas viscosas de oposicion del aire. Cuando se cumple que la velocidad de las gotas es uniforme, la gota adquiere un volumen maximo con la minima superficie (esfera). Unicamente en estas condiciones es posible la dispersion luminosa dentro de la gota y por tanto el arcoiris, aunque ligeras variaciones de la esfera puedan dar diversas variaciones en un arcoiris. Por lo tanto, la lluvia no debe ser torrencial, ni estar afectada por el viento. Es por ello que no siempre se contempla el arcoiris cuando hay lluvia y sol.  Es importante notar la altura del Sol cuando uno observa un arcoiris, pues es algo que ayuda a determinar que tanto alcanza uno a ver de el: cuanto mas bajo se encuentre el Sol, mas alta sera la cresta del arcoiris y viceversa. Alguien que pueda elevarse un poco sobre la superficie de la Tierra, se daria cuenta de que ciertos arcoiris continuan por debajo del horizonte. Quienes escalan monta\u00f1as altas han logrado ver en ocasiones una buena parte de arcoiris circulares completos. Pero ni siquiera las monta\u00f1as poseen la suficiente altura como para poder llegar a observar un arcoiris circular en su totalidad.  Los aviadores han informado algunas veces haber visto genuinos arcoiris circulares completos, los cuales curiosamente han pasado inadvertidos para los pasajeros de sus aeronaves. Esto puede deberse a que las ventanas de los viajeros son muy estrechas y ofrecen un campo de vision muy reducido, a diferencia del impresionante campo visual que tiene el piloto.  Segun el Antiguo Testamento, el arcoiris fue creado por Dios tras el Diluvio universal. En el relato biblico, este apareceria como muestra de la voluntad divina y para recordar a los hombres la promesa hecha por el propio Dios a Noe de que jamas volveria a destruir la tierra con un diluvio.  Otra antigua representacion del arcoiris se da en la epopeya de Gilgamesh, donde el arcoiris es el \u00abcollar de pedreria de la gran madre Ishtar\u00bb que levanta hacia el cielo como una promesa de que \u00abnunca olvidara estos dias de la gran inundacion\u00bb que destruyo a sus hijos.  Para los griegos, el arcoiris era una diosa mensajera entre el cielo y la tierra llamada Iris, hija de Taumante y la oceanide Electra.  Para los nordicos, el arcoiris o \u00abBifrost\u00bb era un puente que unia Midgard (el mundo de los hombres) y Asgard (el mundo de los dioses) custodiado por el dios Heimdall.  Para los incas, el arcoiris era considerado la personificacion del dios Kuychi. La figura de esta deidad se asociaba con el advenimiento de eventos beneficos y nefastos.  En torno al simbolo pacifista:  La extension de la preocupacion por la paz en el mundo, ha llevado a la busqueda de simbolos de caracter universal y ajenos a las principales culturas. En Italia en 1961 se empezo a utilizar, la bandera con los colores del arcoiris y la palabra \u00abpace\u00bb (paz en italiano). El movimiento \u00abPace da tutti i balconi\u00bb (Paz desde todos los balcones) promueve colgar dichas banderas en los balcones como forma de adherirse al deseo de paz. Se calcula que en Milan se colgaron mas de un millon de dichas banderas contra la Guerra de Irak.  En torno al simbolo de la bandera multicolor LGBT:  Con el progreso de movimientos sociales reivindicacionistas en el mundo, en la actualidad destacan los movimientos por los derechos de gais, lesbianas, bisexuales y transexuales (LGBT) que escogieron como simbolo la bandera del arcoiris, y eliminando el celeste. Fue promovido por el artista Gilbert Baker y nacio de la identificacion inicial de tales luchas sociales LGBT con el movimiento hippie en la decada de 1960, que usaba ese simbolo. Mas recientemente el arcoiris invertido de seis colores se afirmo con la utilizacion de la cancion de la cantante y actriz Judy Garland denominada \u00abOver the Rainbow\u00bb (Sobre el arcoiris) como tema de las movilizaciones LGBT \u2014particularmente en los Estados Unidos y el mundo occidental\u2014 por iniciativa del cantautor Rufus Wainwright'. ","snippet":"Un arcoiris\u200b\u200b o arco iris es un fenomeno optico y meteorologico que causa la aparicion en la atmosfera terrestre de un arco multicolor, a veces, doble, por la descomposicion de la luz solar en el espe","enlaces_salientes":["Arco%C3%ADris","Arco%C3%ADris","Arco%C3%ADris","Arco_iris_(desambiguaci%C3%B3n)","%C3%93ptica","Meteorolog%C3%ADa","Atm%C3%B3sfera_terrestre","Arco_(geometr%C3%ADa)","Luz_solar","Espectro_visible","Refracci%C3%B3n","Conc%C3%A9ntrico","Color","Soluci%C3%B3n_de_continuidad","Rojo","Violeta_(color)","Espectro_visible","Verona","Isaac_Newton","Rojo","Naranja_(color)","Amarillo","Verde","Azul","A%C3%B1il","Violeta_(color)","Cian","Arist%C3%B3teles","S%C3%A9neca_el_Joven","Parhelia","Polimata","Ibn_al-Haytham","Averroes","Teodorico_de_Freiberg","Avicena","Dinast%C3%ADa_Song","Shen_Kuo","Refracci%C3%B3n_atmosf%C3%A9rica","Qutb_al-Din_al-Shirazi","Robert_Grosseteste","Roger_Bacon","Opus_Majus","Teodorico_de_Freiberg","Ren%C3%A9_Descartes","Discurso_del_m%C3%A9todo","Ley_de_Snell","Isaac_Newton","Prisma_(%C3%B3ptica)","Dispersi%C3%B3n_refractiva","Thomas_Young","Interferencia","George_Biddell_Airy","Dispersi%C3%B3n_de_Mie","Gustav_Mie","Herch_Moys%C3%A9s_Nussenzveig","Autov%C3%ADa_del_Norte","Antelia","Ciudad_de_M%C3%A9xico","Antelia","Ciudad_de_Guatemala","Lluvia","Sol","%C3%81ngulo","Ren%C3%A9_Descartes","Refracci%C3%B3n","Longitud_de_onda","Arco_(geometr%C3%ADa)","Aire","Distorsi%C3%B3n","Lluvia","Sol","Toroide","Sol","Lluvia","Esfera","Altura_(astronom%C3%ADa)","Sol","Sol","Horizonte","Altitud","Campo_visual","Piloto_de_aviaci%C3%B3n","G%C3%A9nesis","Antiguo_Testamento","Dios_en_el_cristianismo","Diluvio_universal","No%C3%A9","G%C3%A9nesis","Biblia","Reina-Valera","Poema_de_Gilgamesh","Ishtar","Anu","Enlil","Iris_(mitolog%C3%ADa)","Taumante","Oce%C3%A1nide","Electra","Bifr%C3%B6st","Midgard","Asgard","Heimdal","Kuychi","Orgullo_gay","Bandera_arco%C3%ADris","Pacifismo","S%C3%ADmbolo","Italia","Idioma_italiano","Mil%C3%A1n","Guerra_de_Irak","LGBT","Gay","Lesbianismo","Bisexualidad","Transexualidad","Gilbert_Baker","Hippie","Judy_Garland","Over_the_Rainbow","Rufus_Wainwright","Espectro_visible","Difracci%C3%B3n_(f%C3%ADsica)","Halo_(fen%C3%B3meno_meteorol%C3%B3gico)","Cielo","Arco%C3%ADris_lunar","Arco_circunhorizontal","Aurora_polar","Bandera_arco%C3%ADris","Bandera_LGBT","Serpiente_Arco_Iris","Bifrost","Real_Academia_Espa%C3%B1ola","Asociaci%C3%B3n_de_Academias_de_la_Lengua_Espa%C3%B1ola","Innovaciones_en_la_ortograf%C3%ADa_espa%C3%B1ola_(2010)","Editorial_Espasa","ISBN","ISBN","ISBN","MacTutor_History_of_Mathematics_archive","Carl_Benjamin_Boyer","Digital_object_identifier","ISBN","ISBN","ISBN","Digital_object_identifier","Digital_object_identifier","Bibcode","ISSN","Digital_object_identifier","Bibcode","Wayback_Machine","Bibcode","Digital_object_identifier","Wikcionario","Wayback_Machine","Wayback_Machine","Control_de_autoridades","Biblioteca_Nacional_de_la_Dieta","National_Archives_and_Records_Administration","Art_%26_Architecture_Thesaurus","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Bernhard_Riemann","titulo":"Bernhard Riemann","contenido":"Georg Friedrich Bernhard Riemann (Breselenz, 17 de septiembre de 1826-Verbania, 20 de julio de 1866) fue un matematico aleman que realizo contribuciones muy importantes al analisis y la geometria diferencial, algunas de las cuales allanaron el camino para el desarrollo mas avanzado de la relatividad general. Su nombre esta conectado con la funcion zeta, la hipotesis de Riemann, la integral de Riemann, el lema de Riemann, las variedades de Riemann, las superficies de Riemann y la geometria de Riemann. A traves de sus contribuciones pioneras a la geometria diferencial, Riemann sento las bases de las matematicas de la relatividad general. Es considerado por muchos como uno de los mas grandes matematicos de todos los tiempos.\u200b\u200b  En 1840 Bernhard fue a Hanover a vivir con su abuela y a visitar el Lyceum. Despues de la muerte de su abuela en 1842 entro al Johanneum Luneburg. Desde peque\u00f1o demostro una fabulosa capacidad para el calculo unido a una timidez casi enfermiza. Durante sus estudios de secundaria aprendia tan rapido que enseguida adelantaba a todos sus profesores. Se cuenta tambien que Riemann hablaba con sus profesores para que la didactica en la ense\u00f1anza de las matematicas se adaptara a el. Es por ello por lo que muchos historiadores sugieren que padecia del Sindrome de Asperger.\u200b  En 1846 a la edad de 19, comenzo a estudiar filologia y teologia en la Universidad de Gottingen, su idea era complacer a su padre y poder ayudar a su familia haciendose pastor. Acudio a conferencias de Gauss sobre el Metodo de minimos cuadrados. En 1847 su padre reunio el dinero suficiente para que comenzara a estudiar matematicas.  En 1847 se traslado a Berlin, donde ense\u00f1aban Jacobi, Dirichlet y Steiner. En 1848 estallaron manifestaciones y movimientos obreros por toda Alemania, Riemann fue reclutado por las milicias de estudiantes, incluso ayudo a proteger al rey en su palacio de Berlin. Permanecio alli por dos a\u00f1os y volvio a Gottingen en 1849.  En 1859, tras haberse doctorado en matematicas ante Gauss en 1851, formulo por primera vez la hipotesis de Riemann el cual es uno de los mas famosos e importantes problemas sin resolver de las matematicas.  Riemann dio sus primeras conferencias en 1854, en las cuales fundo el campo de la geometria de Riemann. Lo ascendieron a profesor extraordinario en la universidad de Gottingen en 1857 y se hizo profesor ordinario en 1859. En 1862 se caso con Elise Koch. Murio de tuberculosis en su tercer viaje a Italia en Selasca.  En nuestro idioma, existe una edicion de escritos matematicos, fisicos y filosoficos de Riemann: Riemanniana Selecta, editada por J. Ferreiros (Madrid, CSIC, 2000; coleccion Clasicos del Pensamiento). Se incluyen los tres ultimos trabajos mencionados, ademas de otros materiales, precedidos por un estudio introductorio de unas 150 paginas.  Ademas de los distintos conceptos matematicos que llevan su nombre, se tiene que: ","snippet":"Georg Friedrich Bernhard Riemann (Breselenz, 17 de septiembre de 1826-Verbania, 20 de julio de 1866) fue un matematico aleman que realizo contribuciones muy importantes al analisis y la geometria dife","enlaces_salientes":["Bernhard_Riemann","Bernhard_Riemann","Bernhard_Riemann","17_de_septiembre","1826","Breselenz","Reino_de_Hannover","Alemania","Verbania","Reino_de_Italia_(1861-1946)","Tuberculosis","Alemanes","Luteranismo","Natanael_Cano","Universidad_de_Gotinga","Universidad_Humboldt_de_Berl%C3%ADn","Carl_Friedrich_Gauss","Ferdinand_Eisenstein","Moritz_Abraham_Stern","Matem%C3%A1tico","Geometr%C3%ADa_de_Riemann","Superficie_de_Riemann","Integraci%C3%B3n_de_Riemann","Funci%C3%B3n_zeta_de_Riemann","Variedad_de_Riemann","Tensor_m%C3%A9trico","Universidad_Humboldt_de_Berl%C3%ADn","Geometr%C3%ADa_de_Riemann","Academia_de_Ciencias_de_Gotinga","Academia_Prusiana_de_las_Ciencias","Academia_de_Ciencias_de_Baviera","Royal_Society","Breselenz","17_de_septiembre","1826","Verbania","20_de_julio","1866","Matem%C3%A1ticas","Alemania","An%C3%A1lisis_matem%C3%A1tico","Geometr%C3%ADa_diferencial","Relatividad_general","Funci%C3%B3n_zeta_de_Riemann","Hip%C3%B3tesis_de_Riemann","Integral_de_Riemann","Variedad_de_Riemann","Superficie_de_Riemann","Geometr%C3%ADa_de_Riemann","1840","Hannover","1842","L%C3%BCneburg","C%C3%A1lculo","S%C3%ADndrome_de_Asperger","1846","Filolog%C3%ADa","Teolog%C3%ADa","Universidad_de_G%C3%B6ttingen","Carl_Friedrich_Gauss","M%C3%A9todo_de_m%C3%ADnimos_cuadrados","1847","Matem%C3%A1ticas","1847","Berl%C3%ADn","Carl_Gustav_Jakob_Jacobi","Johann_Peter_Gustav_Lejeune_Dirichlet","Jakob_Steiner","1848","1849","1859","Carl_Friedrich_Gauss","Hip%C3%B3tesis_de_Riemann","1854","Geometr%C3%ADa_de_Riemann","1857","1859","1862","Italia","Verbania","Variable_compleja","1851","Cauchy","Superficie_de_Riemann","1854","Peter_Gustav_Lejeune_Dirichlet","Serie_de_Fourier","Integral_de_Riemann","Matem%C3%A1ticas","Funci%C3%B3n_(matem%C3%A1ticas)","Variable_(matem%C3%A1ticas)","N%C3%BAmero_real","1854","Gauss","Geometr%C3%ADa","Geometr%C3%ADa_euclidiana","Geometr%C3%ADas_no_eucl%C3%ADdeas","Geometr%C3%ADa_de_Riemann","Teor%C3%ADa_de_la_relatividad","Albert_Einstein","1859","Teor%C3%ADa_de_n%C3%BAmeros","N%C3%BAmeros_primos","Funci%C3%B3n_zeta_de_Riemann","Madrid","Consejo_Superior_de_Investigaciones_Cient%C3%ADficas","2000","Riemann_(cr%C3%A1ter)","Asteroide","(4167)_Riemann","Geometr%C3%ADa_de_Riemann","Quinto_postulado_de_Euclides","Nikol%C3%A1i_Lobachevski","Anamorfosis#La_representaci\u00f3n,_en_la_pintura,_del_espacio_curvo_de_Bernhard_Riemann","OCLC","JPL","John_Derbyshire","ISBN","ISBN","ISBN","MacTutor_History_of_Mathematics_archive","Universidad_de_Saint_Andrews","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Australia","Biblioteca_Nacional_de_Israel","CiNii","Syst%C3%A8me_universitaire_de_documentation","BIBSYS","Mathematics_Genealogy_Project","Istituto_Centrale_per_il_Catalogo_Unico","Deutsche_Biographie","Open_Library","Enciclopedia_Brit%C3%A1nica","Biblioteca_Virtual_Miguel_de_Cervantes"]}
{"url":"Homomorfismo","titulo":"Homomorfismo","contenido":"En matematicas, un homomorfismo (o a veces simplemente morfismo) desde un objeto matematico a otro con la misma estructura algebraica, es una funcion que preserva las operaciones definidas en dichos objetos.  Sean A = ( A , \u2218 1 , \u2026 , \u2218 k ) }=(A,\\circ _{1},\\ldots ,\\circ _{k})} y B = ( B , \u2217 1 , \u2026 , \u2217 k ) }=(B,*_{1},\\ldots ,*_{k})} dos sistemas algebraicos del mismo tipo, donde A , B son conjuntos y \u2218 1 , \u2026 , \u2218 k , \u2217 1 , \u2026 , \u2217 k ,\\ldots ,\\circ _{k},*_{1},\\ldots ,*_{k}} son las operaciones algebraicas definidas en dichos conjuntos.  Una funcion \u03d5 : A \u2192 B es un homomorfismo si verifica: \u03d5 ( \u2218 i ( a 1 , \u2026 , a n ) ) = \u2217 i ( \u03d5 ( a 1 ) , \u2026 , \u03d5 ( a n ) ) (a_{1},\\ldots ,a_{n}))=*_{i}(\\phi (a_{1}),\\ldots ,\\phi (a_{n}))} para cada i = 1,...,k y a 1 , \u2026 , a n \u2208 A ,\\ldots ,a_{n}\\in A} .  Por lo tanto, si ( G , \u2217 ) , ( H , \u22c5 ) son grupos, segun la definicion una funcion f : G \u2192 H es un homomorfismo de grupos si:  Puede probarse que si una funcion cumple la primera condicion entonces cumple las otras dos, de ahi que en la definicion clasica de homomorfismo de grupos no se pidan las otras condiciones.  Las transformaciones lineales son exactamente las funciones que cumplen esto (las condiciones 3 y 4 se deducen de 1 y 2). Por lo tanto, los homomorfismos de espacios vectoriales son las transformaciones lineales.  Las condiciones 3 y 4 se deducen de la primera, de ahi que en la definicion clasica no se pidan.  En el caso de anillos con unidad, tambien se exige f ( 1 R ) = 1 S )=1_{S}} . ","snippet":"En matematicas, un homomorfismo (o a veces simplemente morfismo) desde un objeto matematico a otro con la misma estructura algebraica, es una funcion que preserva las operaciones definidas en dichos o","enlaces_salientes":["Homomorfismo","Homomorfismo","Homomorfismo","Homeomorfismo","Matem%C3%A1ticas","Morfismo","Estructura_algebraica","Funci%C3%B3n_matem%C3%A1tica","Estructura_algebraica","Grupo_(matem%C3%A1tica)","Homomorfismo_de_grupos","Espacio_vectorial","Cuerpo_(matem%C3%A1ticas)","Transformaci%C3%B3n_lineal","Anillo_(matem%C3%A1tica)","Homomorfismo_de_anillos","M%C3%B3dulo_(matem%C3%A1tica)","Anillo_(matem%C3%A1tica)","Suprayectiva","Epimorfismo","Funci%C3%B3n_inyectiva","Monomorfismo","Biyecci%C3%B3n","Isomorfismo","Endomorfismo","Automorfismo","Morfismo","Eric_W._Weisstein","MathWorld","Wolfram_Research","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Estructura_matem%C3%A1tica","titulo":"Estructura matematica","contenido":"En varias ramas de las matematicas, una estructura es un conjunto con operaciones y relaciones, o de manera mas general, un tipo, consiste de objetos matematicos que de cierta manera se adjuntan o relacionan con el conjunto, facilitando su visualizacion o estudio, proporcionando significado a la coleccion.   Concretamente, una estructura matematica S es un conjunto   S = ( \u03bc , R 1 , R 2 , . . . R k ) ,R_{2},...R_{k})}   donde   \u03bc = { x , y , z , . . . } }   es el conjunto de objetos o elementos principales y R 1 , R 2 , . . . R k ,R_{2},...R_{k}} son relaciones entre estos elementos.\u200b Una estructura matematica, tambien es conocida como sistema matematico.  En ocasiones, un conjunto adquiere mas de una estructura de forma simultanea, lo cual permite estudiarlo de una mejor forma. Por ejemplo, un orden induce una topologia. Otro ejemplo es un conjunto que tenga la estructura de grupo y de espacio topologico, y cuando estas se relacionan de cierta forma especifica, el conjunto se convierte en un grupo topologico.  Los mapeos entre conjuntos que preservan estructura (de manera que las estructuras en el dominio correspondan a estructuras en el contradominio) son de especial interes en muchas areas de las matematicas. Ejemplos de ellos son los homomorfismos que preservan estructuras algebraicas, homeomorfismos que preservan estructuras topologicas y difeomorfismos que preservan estructuras diferenciales  Bourbaki sugiere una explicacion del concepto de \"estructura matematica\" en su libro \"Teoria de conjuntos\" (Capitulo 4. Estructuras) y luego define sobre esa base, un concepto muy general de isomorfismo.  El conjunto de numeros reales tiene varias estructuras estandar:  Existen relaciones entre ellas: ","snippet":"En varias ramas de las matematicas, una estructura es un conjunto con operaciones y relaciones, o de manera mas general, un tipo, consiste de objetos matematicos que de cierta manera se adjuntan o rel","enlaces_salientes":["Estructura_matem%C3%A1tica","Estructura_matem%C3%A1tica","Estructura_matem%C3%A1tica","Matem%C3%A1ticas","Conjunto","Relaci%C3%B3n_matem%C3%A1tica","Objeto_matem%C3%A1tico","Teor%C3%ADa_de_la_medida","Estructura_algebraica","Grupo_(matem%C3%A1tica)","Anillo_(matem%C3%A1tica)","Campo_(matem%C3%A1ticas)","Espacio_topol%C3%B3gico","Espacio_m%C3%A9trico","Teor%C3%ADa_del_orden","Relaci%C3%B3n_de_equivalencia","Teor%C3%ADa_de_categor%C3%ADas","N%C3%BAmero","Grupo_topol%C3%B3gico","Aplicaci%C3%B3n_(matem%C3%A1ticas)","Dominio_de_definici%C3%B3n","Contradominio","Homomorfismo","Homeomorfismo","Difeomorfismo","Nicolas_Bourbaki","Isomorfismo","N%C3%BAmero_real","Campo_(matem%C3%A1ticas)","Medida_de_Lebesgue","Espacio_m%C3%A9trico","Conjunto_abierto","Campo_ordenado","Grupo_de_Lie","Grupo_topol%C3%B3gico","%C3%81lgebra_abstracta","Estructura_algebraica","PlanetMath","Science_(journal)","Cambridge_University_Press","Control_de_autoridades","Gemeinsame_Normdatei"]}
{"url":"Palo_(naipe)","titulo":"Palo (naipes)","contenido":"El palo es cualquiera de las categorias en que se dividen las cartas de una baraja (como la baraja espa\u00f1ola o la francesa), y se representa por un simbolo. Es, junto con el numero, uno de los dos rasgos que diferencian a una carta de cualquier otra en toda la baraja.  En la baraja espa\u00f1ola, los palos son: oros, copas, espadas y bastos. Cada uno tiene en la pinta un cierto numero de interrupciones, que varia segun el palo (sin interrupciones si es oro, una interrupcion si es copa, dos si es espada y tres si es basto).  En la baraja francesa, los palos son diamantes, corazones (ambos rojos), treboles y picas (ambos negros). En estas cartas, la pinta esta debajo del numero de la carta y es el simbolo del palo (un trebol, etc.)  En el juego Mahjong, que se juega con fichas o tejas en lugar de cartas, la mayor parte de las mismas se dividen en tres palos: discos, bambues y caracteres. En cada uno de estos palos existen nueve valores unicos, de 1 a 9, y para cada palo y valor hay cuatro copias para un total de 36 fichas de cada palo. Asimismo, hay cuatro vientos, tres dragones, cuatro flores y cuatro estaciones. Hay cuatro copias de cada viento y dragon, y una sola para cada flor y estacion. En total, el juego de Mahjong consta de 144 fichas. ","snippet":"El palo es cualquiera de las categorias en que se dividen las cartas de una baraja (como la baraja espa\u00f1ola o la francesa), y se representa por un simbolo. Es, junto con el numero, uno de los dos rasg","enlaces_salientes":["Palo_(naipes)","Palo_(naipes)","Palo_(naipes)","Baraja","Baraja_espa%C3%B1ola","Baraja_francesa","Baraja_espa%C3%B1ola","Pinta_(naipes)","Baraja_francesa","Baraja_francesa","Baraja_alemana","Baraja_espa%C3%B1ola","Piacenza","N%C3%A1poles","Espa%C3%B1a","B%C3%A9rgamo","Unicode","Mahjong","Pala","Espada","Pala","Bridge_(juego)","Am%C3%A9rica_Latina","ISBN","Paul_Huson","ISBN","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Baraja_francesa","titulo":"Baraja francesa","contenido":"La baraja francesa es un conjunto de naipes o cartas, formado por 52 unidades repartidas en cuatro palos: corazones, diamantes, treboles y picas.  El origen de los simbolos de la baraja francesa no esta claro. Algunos consideran que es una adaptacion de los signos alemanes. Las bellotas y las hojas se habrian convertido en treboles y picas, respectivamente, mientras que los corazones se habrian mantenido y los cascabeles habrian sido sustituidos por los diamantes, que seria la aportacion original de Francia a los simbolos de los palos.  Otros creen en la influencia de la baraja espa\u00f1ola y del tarot. La forma de los calices o copas habria llevado a los corazones, los treboles serian una derivacion de las hojas de los bastos, las picas \u2014puntas de las lanzas\u2014 habrian sustituido como signo militar a las espadas, y los diamantes \u2014un simbolo de la riqueza\u2014, habrian sustituido a los oros. Sin embargo, el nombre frances de este ultimo palo, carreau, no tiene que ver con la riqueza y si con la forma del dibujo.  Independientemente de cual es su origen, las barajas con los simbolos franceses ya se usaban en los primeros decenios del siglo\u00a0XV. Algunos incluso atribuyen su invencion al caballero Etienne de Vignolles, mas conocido como La Hire, que murio en 1442.  El padre jesuita Menestrier (1631-1705), en un articulo publicado en 1702, en el Journal de Trevoux, expone que las primeras cartas francesas se fabricaron en Espa\u00f1a en 1392 para entretenimiento del rey Carlos III de Navarra, aquejado de ataques de melancolia, y que el juego simbolizaba la estructura feudal.  El as puede funcionar como carta de valor 1 y de valor mayor que la carta del rey R (K en la baraja inglesa), esto es catorce (once en blackjack), muy util en el BlackJack y a la hora de formar escaleras en el poker, dando en este juego las mayores probabilidades de ganar.  Cada uno de estos colores esta compuesto por trece cartas: Uno, Dos, Tres, Cuatro, Cinco, Seis, Siete, Ocho, Nueve, Diez, representadas por los numeros correspondientes, y las tres figuras, que se llaman Valet (V), Dame (D) y Roi (R).  En comparacion a otras barajas de la epoca, la francesa es original en la adopcion de la figura femenina, la Dame, como figura intermedia entre el Valet y el Roi, ya que tanto en la baraja alemana (Oberman) como en las italiana y espa\u00f1ola (caballo/caballero) esta figura es masculina. En realidad, la espa\u00f1ola tuvo reina anta\u00f1o; el problema es que los palos eran de 14 cartas, del 1 al 10, con cuatro figuras: sota, caballo, reina y rey, pero a la reina correspondia el numero 13, de mal aguero para los jugadores, se suprimio y quedo el rey como 13, por lo que tambien hubo que suprimir el 10. Sin embargo, la baraja del tarot todavia conservo las cuatro figuras. En cualquier caso, se eligio la reina en vez del caballo. No se sabe la causa de esta preferencia, quiza se deba a la influencia de las reinas francesas o a Juana de Arco, la heroina de la Guerra de los Cien A\u00f1os.  Ejemplo de una baraja francesa completa  Una curiosa singularidad de las figuras de la baraja francesa es que tienen nombres propios, aunque no siempre han sido los mismos, ya que han ido variando segun el gusto de la sociedad y los vaivenes de la historia. Las figuras tradicionales representan personajes considerados heroicos en la Edad Media.  Durante la Revolucion francesa, los reyes se convirtieron en ciudadanos y fueron representados por personajes clasicos (Solon, Platon, Caton, Bruto) o escritores franceses celebres (Moliere, Voltaire, La Fontaine, Rousseau); las damas fueron personificaciones de virtudes (Justicia, Prudencia, Union, Fuerza), y otros personajes como Anibal, Decio, Horacio y Escevola suplieron a los valets tradicionales. Tambien durante la epoca revolucionaria las figuras fueron sustituidas por cartas simbolicas (ley, libertad, providencia e igualdad), por las cuatro estaciones del a\u00f1o o los cuatro elementos de los griegos (agua, fuego, aire y tierra).  Con la restauracion monarquica posnapoleonica volvieron a utilizarse reyes (Carlomagno, San Luis, Francisco I y Enrique I), damas (Hildegarda, Blanca de Castilla, Margarita de Valois y Juana de Albret) y valets (Rolando, Bayard, Joinville y Crillon).  La literatura y la politica aportaron en el siglo\u00a0XIX su propia iconografia, es posible encontrar barajas cuyas figuras se inspiraron en novelas celebres como Los tres mosqueteros, e incluso una baraja en la que los reyes son Victor Hugo, Mac Mahon, Thiers y Jules Ferry.  Frecuentemente se confunde la baraja inglesa con la francesa, porque en cierto sentido son la misma. Los ingleses tomaron el modelo frances para crear su baraja, modificando algunos detalles. Por ejemplo, las figuras son mucho mas abstractas y no representan a ningun personaje como si ocurre con los naipes franceses (se dice que esto ocurrio por la poca habilidad de los dibujantes anglosajones). Las figuras de la baraja inglesa son de cuerpo entero y los franceses las hicieron simetricas para que pudieran ser vistas siempre sin necesidad de girar el naipe, con lo que los jugadores podrian saber quien tiene figuras. Tambien, se adaptaron las iniciales de los nombres de las figuras en ingles y el uno fue sustituido por la A de as. Y en tiempos modernos, las barajas inglesas incluyen la figura del joker o comodin.  Sin embargo, estrictamente hablando, la baraja que se usa para jugar al poquer, al bridge, al reihe o a la canasta es la francesa. ","snippet":"La baraja francesa es un conjunto de naipes o cartas, formado por 52 unidades repartidas en cuatro palos: corazones, diamantes, treboles y picas.  El origen de los simbolos de la baraja francesa no es","enlaces_salientes":["Baraja_francesa","Baraja_francesa","Baraja_francesa","Naipe","Coraz%C3%B3n_(naipe)","Diamante_(naipe)","Tr%C3%A9bol_(naipe)","Pica_(naipe)","Baraja_alemana","Baraja_espa%C3%B1ola","Tarot_(cartas)","%C3%89tienne_de_Vignolles","La_Hire","Memorias_de_Tr%C3%A9voux","Carlos_III_de_Navarra","Palo_(naipes)","As_(Naipe)","P%C3%B3ker","Baraja_espa%C3%B1ola","Tarot_(cartas)","Juana_de_Arco","Guerra_de_los_Cien_A%C3%B1os","As_(naipe)","Jota_(naipe)","Reina_(naipe)","Rey_(naipe)","Tr%C3%A9bol_(naipe)","As_de_tr%C3%A9boles","2_de_tr%C3%A9boles","3_de_tr%C3%A9boles","4_de_tr%C3%A9boles","5_de_tr%C3%A9boles","6_de_tr%C3%A9boles","7_de_tr%C3%A9boles","8_de_tr%C3%A9boles","9_de_tr%C3%A9boles","10_de_tr%C3%A9boles","Jota_de_tr%C3%A9boles","Reina_de_tr%C3%A9boles","Rey_de_tr%C3%A9boles","Diamante_(naipe)","As_de_diamantes","2_de_diamantes","3_de_diamantes","4_de_diamantes","5_de_diamantes","6_de_diamantes","7_de_diamantes","8_de_diamantes","9_de_diamantes","10_de_diamantes","Jota_de_diamantes","Reina_de_diamantes","Rey_de_diamantes","Coraz%C3%B3n_(naipe)","As_de_corazones","2_de_corazones","3_de_corazones","4_de_corazones","5_de_corazones","6_de_corazones","7_de_corazones","8_de_corazones","9_de_corazones","10_de_corazones","Jota_de_corazones","Reina_de_corazones","Rey_de_corazones","Pica_(naipe)","As_de_picas","2_de_picas","3_de_picas","4_de_picas","5_de_picas","6_de_picas","7_de_picas","8_de_picas","9_de_picas","10_de_picas","Jota_de_picas","Reina_de_picas","Rey_de_picas","Edad_Media","%C3%89tienne_de_Vignolles","Juana_de_Arco","Judit","Carlomagno","Carlos_VII_de_Francia","H%C3%A9ctor","Guerra_de_Troya","Raquel","Julio_C%C3%A9sar","Ogier_el_Dan%C3%A9s","Atenea","David","Lanzarote_del_Lago","Anagrama","Alejandro_Magno","Revoluci%C3%B3n_francesa","Sol%C3%B3n","Plat%C3%B3n","Cat%C3%B3n_el_Viejo","Marco_Junio_Bruto","Moli%C3%A8re","Voltaire","La_Fontaine","Rousseau","An%C3%ADbal","Publio_Decio_Mus_(c%C3%B3nsul_312_a._C.)","Horacios","Esc%C3%A9vola","Ley","Libertad","Decreto_judicial","Igualdad","Cuatro_elementos","Carlomagno","Luis_IX_de_Francia","Francisco_I_de_Francia","Enrique_I_de_Francia","Hildegarda","Blanca_de_Castilla","Margarita_de_Valois","Juana_de_Albret","Rolando","Bayard","Joinville_(desambiguaci%C3%B3n)","Crillon","Los_tres_mosqueteros","Victor_Hugo","Mac_Mahon","Adolphe_Thiers","Jules_Ferry","Baraja_inglesa","Baraja_inglesa","Comod%C3%ADn","P%C3%B3quer","Bridge_(juego)","Reihe_(juego_de_cartas)","Canasta_(juego)","Juego_de_naipes","Juego_de_baraja_de_colecci%C3%B3n","Juego_de_cartas_coleccionables","Tarot_(cartas)","Baraja_espa%C3%B1ola","Baraja_inglesa","Baraja_alemana","Baraja_italiana","Hanafuda","Diccionario_de_la_lengua_espa%C3%B1ola","Control_de_autoridades"]}
{"url":"Intenci%C3%B3n","titulo":"Intencion","contenido":"Intenciones son estados mentales en los que el agente se compromete a un curso de accion. Tener el plan de visitar el zoo ma\u00f1ana es un ejemplo de una intencion. El plan de accion es el contenido de la intencion mientras que el compromiso es la actitud hacia este contenido. Otros estados mentales pueden tener planes de accion como contenido, por ejemplo, cuando se admira un plan, pero difieren de intenciones, ya que no implican un compromiso practico para realizar este plan. Las intenciones exitosas provocan el curso de accion previsto, mientras que las intenciones fallidas no lo logran. Intenciones, como muchos otros estados mentales, tienen intencionalidad: representan posibles estados de cosas.  Las teorias de la intencion tratan de captar los rasgos caracteristicos de intenciones. La teoria de creencia y deseo es el enfoque tradicionalmente dominante. Segun una version simple de la misma, tener una intencion no es mas que tener el deseo de realizar una determinada accion y la creencia de que se va a realizar esta accion. Las teorias de creencia y deseo son frecuentemente criticadas por el hecho de que ni las creencias ni los deseos implican un compromiso practico para realizar una accion, lo que suele ilustrarse en varios contraejemplos. La teoria de evaluacion trata de superar este problema explicando intenciones en terminos de evaluaciones incondicionales. Esto significa que intenciones no solo presentan el curso de accion previsto como bueno en algun aspecto, como es el caso de los deseos, sino como bueno considerando todo. Este enfoque tiene problemas para explicar los casos de akrasia, es decir, que agentes no siempre tienen la intencion de hacer lo que ven como el mejor curso de accion. Una teoria estrechamente relacionada identifica intenciones no con evaluaciones incondicionales, sino con deseos predominantes. Afirma que la intencion de hacer algo consiste en desearlo con el mayor grado. Los opositores a este enfoque han articulado varios contraejemplos con el objetivo de demostrar que intenciones no siempre coinciden con el deseo mas fuerte del agente. Un enfoque diferente a las teorias mencionadas hasta ahora se debe a Elizabeth Anscombe y niega la distincion entre intenciones y acciones. Desde su punto de vista, tener la intencion de alcanzar un objetivo es ya una forma de actuar hacia ese objetivo y, por lo tanto, no es un estado mental distinto. Este relato tiene dificultades para explicar casos en los que intenciones y acciones parecen separarse, como cuando el agente actualmente no esta haciendo nada para realizar su plan o en el caso de acciones fallidas. La teoria de autorreferencialidad sugiere que intenciones son autorreferenciales, es decir, que no solo representan el curso de accion previsto, sino que tambien se representan a si mismas como la causa de la accion. Pero la afirmacion de que esto ocurre en el nivel del contenido de la intencion ha sido impugnada.  El termino \"intencion\" se refiere a un grupo de fenomenos relacionados. Por esta razon, los teoricos suelen distinguir varios tipos de intenciones para evitar malentendidos. La distincion mas discutida es la que existe entre las intenciones prospectivas y las inmediatas. Las intenciones prospectivas, tambien conocidas como \"prior intentions\", involucran planes para el futuro. Pueden subdividirse en funcion de la distancia a la que planean: las intenciones proximales involucran planes para lo que se quiere hacer de inmediato, mientras que las intenciones distales se refieren a un futuro mas remoto. Las intenciones inmediatas, por otro lado, son intenciones que guian al agente mientras realiza la accion en cuestion. Tambien se denominan \"intentions-in-action\". El termino \"intencion\" suele referirse a los medios o fines previstos que motivan al agente. Pero en algunos casos, puede referirse a efectos secundarios anticipados que no son ni medios ni fines para el agente. En este caso, a veces se utiliza el termino \"intencion oblicua\". Intenciones son racionalmente evaluables: son racionales o irracionales. Las intenciones conscientes son la forma paradigmatica de intencion: en ellas, el agente es consciente de sus objetivos. Sin embargo, se ha sugerido que acciones tambien pueden ser guiadas por intenciones inconscientes que el agente desconoce.  La formacion de intenciones a veces esta precedida por la deliberacion de cursos de accion alternativos prometedores y puede ocurrir en decisiones, en las que el agente elige entre estas alternativas. Intenciones son responsables de iniciar, mantener y terminar acciones y se utilizan con frecuencia para explicar por que personas realizan un determinado comportamiento. Comprender el comportamiento de los demas en terminos de intenciones ya ocurre en la primera infancia. Importante en este contexto es el papel de los gestos, el se\u00f1alamiento, la atencion y el movimiento ocular para comprender las intenciones de los demas y formar intenciones compartidas.\u200b\u200b\u200b\u200b\u200b En la filosofia de la accion, una pregunta central es si es cierto para todas las acciones intencionales que son causadas o acompa\u00f1adas por intenciones. La teoria de la accion razonada tiene como objetivo predecir el comportamiento basandose en como las actitudes preexistentes y las normas subjetivas determinan las intenciones conductuales.\u200b\u200b En la etica, el principio de intencion afirma que si una accion es moralmente permisible a veces depende de la intencion del agente para realizar esta accion.  Intenciones son estados mentales que involucran planes de accion con los que el agente se ha comprometido.\u200b\u200b\u200b\u200b Como planes de accion, pueden guiar el comportamiento. El plan de accion constituye el contenido de la intencion mientras que el compromiso es la actitud del agente hacia este contenido.\u200b\u200b El termino \"intencion\" puede usarse tanto para las intenciones prospectivas, que aun no se han ejecutado, cuanto para las intenciones que guian el comportamiento cuando esta ocurriendo, las llamadas intenciones inmediatas, como se discute a continuacion.\u200b\u200b\u200b\u200b\u200b La intencion de estudiar ma\u00f1ana es un ejemplo de intenciones prospectivas, mientras que tratar de ganar un juego anotando un tiro de tres puntos implica una intencion inmediata.  La psicologia popular explica el comportamiento humano sobre la base de estados mentales, como creencias, deseos e intenciones.\u200b\u200b Esta explicacion se basa en la idea de que los deseos motivan el comportamiento y las creencias dirigen el comportamiento hacia el objetivo deseado.\u200b Esto puede entenderse en terminos de cadenas causales, es decir, que deseos causan intenciones, intenciones causan acciones y acciones causan la realizacion del resultado deseado.\u200b  Intenciones, como varios otros estados mentales, pueden entenderse como constituidas por dos componentes: un contenido y una actitud hacia este contenido.\u200b Desde este punto de vista, el contenido de una intencion es el plan de accion en cuestion y la actitud implica un compromiso para ejecutar esta accion.\u200b Intenciones pueden compartir el mismo contenido con otros estados mentales, como creencias y deseos. Pero los diferentes estados mentales se distinguen entre si en relacion con sus actitudes.\u200b\u200b Admirar la idea de ayudar a los pobres, por ejemplo, es diferente de tener la intencion de ayudar a los pobres, aunque ambos estados comparten el mismo plan como su contenido.\u200b Una diferencia entre deseos e intenciones es que intenciones imponen mas restricciones a su contenido.\u200b Esto incluye que intenciones se dirigen a posibles cursos de accion, es decir, que involucran algo que el agente puede hacer o, al menos, piensa que puede hacer.\u200b\u200b\u200b\u200b Deseos, por otro lado, no involucran esta forma de restriccion.\u200b En este sentido, es posible desear un tiempo soleado para ma\u00f1ana, pero no tener la intencion de un tiempo soleado para ma\u00f1ana.  Un aspecto central de intenciones con respecto a la actitud hacia su contenido es que el agente se ha comprometido con el plan en cuestion. Esto es diferente de simplemente querer hacer algo y pensar que hacerlo seria bueno.\u200b\u200b A veces se argumenta que este compromiso consiste en un juicio total de que el curso de accion previsto es bueno.\u200b\u200b\u200b Desde este punto de vista, intenciones evaluan su curso de accion previsto como bueno considerando todo. Este aspecto contrasta con los deseos, que evaluan su objeto simplemente como bueno en algun sentido, sin embargo, dejan abierto si es malo en otro sentido.\u200b\u200b\u200b Alguien que todavia esta deliberando sobre si realizar una determinada accion, por ejemplo, todavia no se ha comprometido a realizarla y, por lo tanto, carece de la intencion correspondiente.\u200b\u200b Se ha argumentado que esta forma de compromiso o de estar decidido es exclusiva de las intenciones y no se encuentra en otros estados mentales como creencias o deseos. En este sentido, intenciones pueden estar basadas en o acompa\u00f1adas por creencias y deseos, pero no son reducibles a ellos.\u200b\u200b  Otro aspecto importante de intenciones es que tienen condiciones de satisfaccion, como creencias y deseos.\u200b\u200b Esto significa que intenciones son o exitosas o fallidas. Una intencion que produce la accion prevista es una intencion exitosa. Pero si el comportamiento producido no alcanza su objetivo, la intencion es fallida.\u200b\u200b El contenido de la intencion determina sus condiciones de satisfaccion. El exito generalmente no depende completamente del agente, ya que varios factores fuera del control y la conciencia del agente pueden influir en el exito de la accion intentada.\u200b  El significado del termino \"intencion\" es diferente del termino \"intencionalidad\", a pesar de que los dos estan estrechamente relacionados.\u200b\u200b  La intencionalidad es el termino mas general: se refiere al poder de las mentes para representar cosas, propiedades y estados de cosas. Las intenciones son una forma de intencionalidad, ya que sus contenidos representan posibles cursos de accion.\u200b  Pero hay otras formas de intencionalidad, como simples creencias o percepciones, que no involucran intenciones.\u200b El adjetivo \"intencional\" es ambiguo, ya que puede referirse tanto a las intenciones cuanto a la intencionalidad.\u200b  Las teorias de la intencion tratan de captar los rasgos caracteristicos de intenciones. Algunos relatos se centran mas en intenciones prospectivas o inmediatas, mientras que otros apuntan a proporcionar un relato unificado de estos diferentes tipos de intencion.\u200b  El enfoque tradicionalmente dominante reduce intenciones a creencias y deseos de accion.\u200b\u200b\u200b Un deseo de accion es un deseo de realizar una accion.\u200b Desde este punto de vista, tener la intencion de hacer deporte ma\u00f1ana es tener el deseo de hacer deporte ma\u00f1ana junto con la creencia de que uno hara deporte ma\u00f1ana.\u200b Algunos relatos tambien sostienen que esta creencia se basa en el deseo: uno cree que lo hara porque desea hacerlo.\u200b Una definicion similar ve las intenciones como \"expectativas autocumplidas que estan motivadas por un deseo de su cumplimiento y que se representan a si mismas como tales\".\u200b Una virtud importante de este enfoque es su simplicidad y su poder explicativo. Tambien consigue dar cuenta del hecho de que parece haber una estrecha relacion entre lo que se cree, lo que se desea y lo que se tiene intenciones de hacer. Pero en la literatura contemporanea se han presentado varios argumentos en contra de esta reduccion.\u200b\u200b\u200b A menudo adoptan la forma de contraejemplos, en los que hay tanto una creencia correspondiente como un deseo sin una intencion o una intencion sin uno de estos componentes.\u200b Esto a veces se explica en relacion con la idea de que intenciones implican una forma de compromiso sobre el curso de accion previsto por parte del agente.\u200b\u200b Pero este aspecto no esta presente en creencias y deseos por si mismos.\u200b Por ejemplo, al considerar si responder a un insulto a traves de represalias, el agente puede tener tanto el deseo de hacerlo como la creencia de que acabara haciendolo, basandose en como actuo en el pasado. Sin embargo, el agente aun puede carecer de la intencion correspondiente, ya que no esta completamente decidido.\u200b Tambien es posible tener la intencion de hacer algo sin creer que uno realmente lo hara, porque el agente tenia intenciones similares antes y tampoco actuo en consecuencia entonces o porque el agente no esta seguro de si tendra exito.\u200b\u200b Pero se ha argumentado que una relacion mas debil entre intenciones y creencias puede obtener, por ejemplo, que las intenciones implican la creencia de que existe la posibilidad de lograr lo que uno pretende.\u200b  Otra objecion se centra en la diferencia normativa entre creencias e intenciones.\u200b Esto es relevante para casos en los que el agente no actua de acuerdo con el curso de accion previsto, por ejemplo, debido a tener una voluntad debil. Este tipo de falla es diferente del mero error epistemico de predecir incorrectamente el propio comportamiento. Sin embargo, varias teorias de creencia y deseo son incapaces de explicar esta diferencia normativa.\u200b Otros argumentos se centran en las disimilitudes entre estos estados. Por ejemplo, uno puede desear cosas imposibles, pero no puede tener la intencion de hacer lo que piensa que es imposible. Y mientras que creencias pueden ser verdaderas o falsas, esto no se aplica a intenciones.\u200b  Otro enfoque prominente, debido a Donald Davidson, ve intenciones como actitudes evaluativas. Desde su punto de vista, deseos son actitudes evaluativas condicionales, mientras que intenciones son actitudes evaluativas incondicionales.\u200b\u200b\u200b Esto significa que deseos ven su objeto como positivo en cierto aspecto, mientras que intenciones ven su objeto como positivo en general o considerando todo. Asi, el agente puede tener el deseo de ir al gimnasio porque es saludable, mientras que su intencion de ir al gimnasio se basa en la evaluacion de que es bueno considerando todo.\u200b Esta teoria esta estrechamente relacionada con la teoria de creencia y deseo explicada anteriormente, ya que tambien incluye la idea de que creencias estan involucradas en intenciones. En este caso, la creencia en cuestion no es una creencia de que uno realizara la accion, sino una creencia de que la accion en cuestion es un medio para alcanzar el fin evaluado positivamente.\u200b\u200b  Esta teoria ha sido criticada con base en la idea de que hay una diferencia entre evaluar un curso de accion y comprometerse con un curso de accion. Esta diferencia es importante para explicar casos de akrasia, es decir, que personas no siempre hacen lo que creen que seria mejor hacer.\u200b\u200b\u200b\u200b\u200b\u200b Un ejemplo de akrasia es un autor que cree que lo mejor seria trabajar en su nuevo libro, pero acaba viendo la television en su lugar, a pesar de su actitud evaluativa incondicional a favor de trabajar. En este sentido, intenciones no pueden ser actitudes evaluativas incondicionales, ya que es posible tener la intencion de hacer una alternativa mientras se tiene una actitud evaluativa incondicional hacia otra alternativa.\u200b\u200b  Otra teoria se centra exclusivamente en la relacion entre intencion y deseo. Afirma que la intencion de hacer algo consiste en desearlo con el mayor grado.\u200b\u200b\u200b La afirmacion de que intenciones van acompa\u00f1adas de deseos es generalmente aceptada. Pero hay varios argumentos en contra de la afirmacion de que intenciones no son mas que deseos. Suelen centrarse en casos en los que personas tienen la intencion de hacer algo diferente de su deseo predominante.\u200b Por ejemplo, el agente puede tener la intencion de ir al gimnasio aunque tiene un deseo mucho mas fuerte de ir al pub en su lugar. Esto puede deberse a que el agente piense que ir al gimnasio es mejor aunque esto no este en sintonia con sus deseos.\u200b Otro contraejemplo proviene de casos en los que el agente aun no ha formado una intencion a pesar de que un deseo es predominante.\u200b Una teoria estrechamente relacionada entiende intenciones como disposiciones para actuar y deseos como disposiciones para formar intenciones, es decir, como disposiciones de orden superior para actuar.\u200b  La mayoria de las teorias de la intencion ven intenciones como estados mentales que estan estrechamente relacionados con acciones, pero pueden ocurrir sin la accion correspondiente en cuestion. Elizabeth Anscombe y sus seguidores proporcionan un relato alternativo que niega la distincion entre intenciones y acciones.\u200b\u200b\u200b Desde este punto de vista, tener la intencion de alcanzar un objetivo ya es una forma de actuar hacia este objetivo y, por lo tanto, no es un estado mental distinto. Esto significa que cuando uno tiene la intencion de visitar el zoo el proximo jueves, ya esta en camino de hacerlo.\u200b Un punto fuerte de esta teoria es que ofrece una explicacion unificada de intenciones: no necesita distinguir entre intenciones prospectivas e inmediatas, ya que todas las intenciones son intenciones inmediatas.\u200b\u200b  Un contraargumento obvio a esta posicion es que, en el ejemplo del zoo anterior, uno no esta haciendo nada actualmente para realizar este plan.\u200b Los defensores han rechazado este argumento tratando de dilucidar como incluso los pasos preparatorios minimos ya pueden considerarse parte de la accion.\u200b Tales pasos pueden incluir, por ejemplo, no hacer ningun otro plan que pueda interferir con el plan en cuestion, como planificar una cita diferente al mismo tiempo en un lugar diferente. Otra objecion se basa en la observacion de que no todas las intenciones tienen exito, es decir, que uno puede tener la intencion de hacer algo pero no hacerlo.\u200b Por ejemplo, uno puede tener la intencion de seguir la ruta mas corta a casa, pero tomar un giro equivocado y, por lo tanto, no realizar la accion correspondiente. En tales casos, se puede argumentar que la intencion estaba presente mientras que la accion estaba ausente, es decir, el agente tenia la intencion de tomar la ruta mas corta, sin embargo, no tomo la ruta mas corta. La posibilidad de que los dos se separen sugeriria que no son identicos.\u200b  La teoria de autorreferencialidad afirma que una caracteristica central de intenciones es que son autorreferenciales.\u200b Esto significa que intenciones no solo representan el curso de accion previsto, sino que tambien se representan a si mismas como la causa de la accion. Desde este punto de vista, la intencion de ir al gimnasio se representa a si misma como la causa de ir al gimnasio.\u200b\u200b\u200b\u200b Una motivacion importante para aceptar una teoria de autorreferencialidad es explicar un cierto tipo de caso: un caso en el que el comportamiento es exactamente como estaba previsto, pero la intencion no causo el comportamiento en absoluto o no lo causo de la manera correcta.\u200b\u200b Por ejemplo, el agente tiene la intencion de disparar a un intruso y luego se asusta por una sombra en movimiento, lo que hace que su dedo se mueva, disparando asi al intruso.\u200b A menudo se afirma que, en tales casos, el comportamiento en cuestion no constituye una accion intencional, es decir, que el agente no disparo al intruso intencionalmente, a pesar de tener la intencion de disparar al intruso y de disparar al intruso.\u200b Esta paradoja puede resolverse a traves de teorias de autorreferencialidad. El comportamiento en cuestion no es una accion intencional porque la intencion no se realizo correctamente: causar el comportamiento fue parte de la intencion pero no ocurrio de la manera correcta.\u200b\u200b Por lo general, se acepta que intenciones tienen que causar el comportamiento correspondiente de la manera correcta para que surjan acciones intencionales. Sin embargo, la afirmacion de que esto ocurre en el nivel del contenido de la intencion, es decir, que la intencion se representa a si misma como causante del comportamiento, a menudo es impugnada.\u200b\u200b\u200b\u200b En cambio, se ha argumentado que el contenido de intenciones consiste unicamente en el plan de accion correspondiente, sin representar la intencion en si misma y su relacion causal con la ejecucion de este plan.\u200b  Algunas dificultades para comprender intenciones se deben a diversas ambiguedades e inconsistencias en el uso del termino en el lenguaje ordinario. Por esta razon, los teoricos suelen distinguir varios tipos de intenciones para evitar malentendidos y especificar claramente lo que se investiga.\u200b  Una diferencia importante entre intenciones es la que existe entre las intenciones prospectivas y las inmediatas.\u200b\u200b\u200b Las intenciones prospectivas, tambien llamadas \"prior intentions\", implican una vision del futuro: son planes mantenidos por el agente para realizar algun tipo de accion en el futuro. Son diferentes de simplemente desear realizar esta accion, ya que el agente se ha comprometido a seguirlos cuando llegue el momento.\u200b\u200b\u200b En este sentido, a veces se sostiene que los deseos evaluan su objeto solo en relacion con un aspecto especifico, mientras que los compromisos en intenciones se basan en una evaluacion global. Desde este punto de vista, el curso de accion previsto se evalua no solo como bueno en un aspecto, sino como bueno considerando todo.\u200b\u200b\u200b En algunos casos, la intencion puede apuntar hacia un futuro muy lejano, como cuando un adolescente decide que quiere convertirse en presidente algun dia.\u200b En otros casos, la formacion de la intencion prospectiva solo precede ligeramente a la accion, como cuando el agente tiene la intencion de rascarse la espalda y lo hace de inmediato.\u200b El compromiso con el curso de accion es reversible. Entonces, si el agente encuentra buenas razones mas tarde para no seguir adelante, la intencion puede ser abandonada o reformulada. En este sentido, tener una intencion prospectiva de realizar una accion especifica no garantiza que esta accion se vaya a ejecutar realmente mas tarde.\u200b\u200b\u200b  Las intenciones inmediatas, tambien conocidas como \"intentions-in-action\", son intenciones que guian al agente mientras esta realizando la accion correspondiente.\u200b\u200b\u200b\u200b Estan estrechamente relacionadas con el sentido de agencia.\u200b\u200b\u200b El compromiso del agente con el curso de accion en cuestion consiste en su ejecucion activa del plan. Pero no todas las formas de comportamiento humano son intencionales. Levantar la mano puede ocurrir intencionalmente o no, por ejemplo, cuando un alumno quiere se\u00f1alar al profesor que tiene una pregunta, en contraste con un reflejo corporal involuntario.\u200b A menudo se sostiene que un aspecto central de las intenciones inmediatas es que el agente sabe lo que esta haciendo y por que lo esta haciendo.\u200b\u200b Esto significa que la accion va acompa\u00f1ada de una cierta forma de conocimiento que esta ausente en el comportamiento meramente util. Este aspecto se utiliza a veces para contrastar el comportamiento de humanos y animales.\u200b No existe un acuerdo general de que todas las acciones intencionales vayan acompa\u00f1adas de este tipo de conocimiento. Una razon para dudar de esto es que, incluso en el caso de las acciones intencionales, el agente no siempre es capaz de articular lo que esta haciendo y por que lo esta haciendo. Algunos defensores tratan de explicar esto sosteniendo que el conocimiento correspondiente esta alli, incluso si no es consciente.\u200b  Las intenciones prospectivas pueden clasificarse en funcion de la distancia a la que planifican. Las intenciones proximales implican planes para lo que uno quiere hacer inmediatamente, mientras que las intenciones distales planifican mas adelante.\u200b\u200b\u200b\u200b\u200b\u200b La misma intencion puede ser tanto proximal cuanto distal si se dirige tanto a lo que se hara ahora cuanto a lo que se hara mas adelante. Por ejemplo, decidir empezar a ver una pelicula ahora en una sola sesion implica una intencion que es a la vez proximal y distal.\u200b Esta distincion es importante, ya que muchos cursos de accion son demasiado complejos para representarlos de una vez con todo detalle. En cambio, por lo general, solo las intenciones proximales involucran representaciones detalladas, mientras que las intenciones distales pueden dejar su objeto vago hasta que se vuelva mas relevante para la tarea en cuestion. Pero las intenciones distales siguen desempe\u00f1ando un papel importante en guiar la formacion de intenciones proximales.\u200b Un plan simple para comprar baterias en la tienda de electronica cercana, por ejemplo, implica muchos pasos, como ponerse los zapatos, abrir la puerta, cerrarla y bloquearla, ir al semaforo, girar a la izquierda, etc. Estos pasos no se representan con todo detalle mientras el agente se pone los zapatos. Un aspecto central de este proceso es la capacidad del agente para monitorear el progreso en relacion con la intencion proximal y ajustar el comportamiento actual en consecuencia.\u200b De esta manera, la intencion tiene la capacidad de coordinar el comportamiento del agente a lo largo del tiempo. Aunque tanto las intenciones proximales cuanto las distales son relevantes para el sentido de agencia, se ha argumentado que las intenciones distales conducen a un sentido de agencia mas fuerte.\u200b  Las acciones intencionales realizadas por agentes suelen llevar consigo un gran numero de consecuencias mayores o menores. El agente generalmente es inconsciente de muchas de ellas. En relacion con estas consecuencias, el agente esta actuando de forma no intencional.\u200b Otras consecuencias son anticipadas por el agente. Algunas son motivacionales porque constituyen la razon del agente para realizar la accion. Un tercer tipo implica consecuencias de las que el agente es consciente, pero que no desempe\u00f1an un papel importante en la motivacion del agente. Estos son los objetos de las intenciones oblicuas: implican efectos secundarios que el agente soporta para realizar su intencion principal.\u200b\u200b\u200b\u200b\u200b Por ejemplo, Ted no sabe que fumar causa cancer de vejiga, pero sabe que le ayuda a lidiar con el estres y que causa cancer de pulmon. Su razon para fumar es lidiar con el estres. Aumentar su riesgo de cancer de pulmon es un efecto secundario que soporta. Entonces, cuando fuma, Ted aumenta su riesgo de cancer de vejiga de manera no intencional, su intencion motivacional es lidiar con el estres, mientras que aumentar su riesgo de cancer de pulmon es una intencion oblicua. Las intenciones motivacionales son la forma paradigmatica de intenciones y constituyen el foco principal de la literatura academica sobre intenciones.\u200b  Estas distinciones son relevantes para la moralidad y el derecho.\u200b\u200b  Cometer un delito sin intencion, por ejemplo, suele considerarse un delito menos grave que cometer el mismo delito intencionalmente.\u200b\u200b A menudo se habla de negligencia en contraste con tener malas intenciones. Por lo general, se sostiene que las consecuencias malas intencionadas oblicuamente tienen mas peso a nivel moral que las consecuencias malas no intencionadas.\u200b No hay consenso sobre si un comportamiento oblicuamente intencionado constituye una accion intencional, por ejemplo, si es correcto afirmar que los fumadores conscientes de los peligros da\u00f1an su salud intencionalmente.\u200b  Intenciones son racionalmente evaluables: son o racionales o irracionales. En este sentido, contrastan con estados mentales arracionales, como impulsos o experiencias de mareo, que estan fuera del dominio de la racionalidad.\u200b Se han propuesto varios criterios para la racionalidad de intenciones.\u200b\u200b Algunos sostienen que intenciones se basan en deseos y creencias y que, por lo tanto, su racionalidad depende de estos deseos y creencias.\u200b\u200b Desde este punto de vista, deseos presentan ciertas metas, creencias presentan los medios necesarios para alcanzar estas metas y intenciones constituyen compromisos para realizar los medios hacia estas metas. En este sentido, una intencion basada en estados irracionales es irracional en si misma.\u200b Por ejemplo, la intencion de curarse mediante el poder de cristales es irracional si se basa en una creencia irracional sobre el poder curativo de cristales. Pero la irracionalidad tambien puede surgir si dos intenciones no son consistentes entre si, es decir, si el agente tiene la intencion de realizar una accion y de realizar otra accion mientras cree que estas dos acciones son incompatibles entre si.\u200b\u200b Una forma de irracionalidad estrechamente relacionada se aplica a la relacion entre medios y fines. El llamado principio de coherencia medio-fin (principle of means-end coherence)  sostiene que es irracional tener la intencion de realizar una accion sin tener la intencion de realizar otra accion mientras se cree que esta ultima accion es necesaria para lograr la primera.\u200b\u200b\u200b Por ejemplo, seria irracional tener la intencion de volverse saludable si el agente piensa que hacer ejercicio es necesario para volverse saludable pero no esta dispuesto a ejercer.\u200b En tal caso, todavia puede ser racional que el agente desee estar saludable, sin embargo, la intencion correspondiente no lo es. Este principio se expresa en el proverbio \"quien quiere el fin, quiere los medios\".\u200b Tambien se ha sugerido que otros requisitos de racionalidad se refieren a la coherencia entre creencias y intenciones.\u200b  De especial importancia para la psicologia y el psicoanalisis es la diferencia entre intenciones conscientes e inconscientes.\u200b\u200b  Las intenciones inconscientes se utilizan a menudo para explicar casos en los que un agente se comporta de cierta manera sin ser consciente de esto.\u200b Esto es especialmente relevante si el comportamiento esta claramente dirigido a un objetivo, mientras el agente no tiene la intencion consciente de perseguir este objetivo o ni siquiera es consciente de tenerlo. Al principio, las intenciones inconscientes suelen ser atribuidas al agente por los espectadores y solo pueden ser reconocidas por el propio agente retrospectivamente.\u200b Pero esta forma de explicacion no siempre es concluyente, ya que, al menos en algunos casos, tambien hay otras explicaciones. Por ejemplo, algunos comportamientos pueden explicarse como la ejecucion de un habito ciego, que puede ocurrir sin conciencia ni intencion.\u200b  Varios ejemplos prominentes, debidos a Sigmund Freud, involucran lapsus linguae, como declarar que una reunion esta cerrada cuando uno tiene la intencion de abrirla.\u200b Freud ve tales fenomenos no como errores involuntarios, sino que les atribuye un significado mas profundo como expresiones de deseos inconscientes. Como ventana al inconsciente, interpretar las intenciones inconscientes detras de tales fenomenos y aumentar la conciencia del paciente sobre ellas son aspectos importantes del psicoanalisis freudiano.\u200b\u200b\u200b Pero no hay un acuerdo general sobre si este tipo de comportamiento debe considerarse como un comportamiento intencional.\u200b Las intenciones inconscientes tambien se utilizan a veces para explicar comportamiento aparentemente irracional. En este sentido, se ha afirmado que el lavado de manos excesivo visto en algunas personas con el trastorno obsesivo-compulsivo puede estar motivado por una intencion inconsciente de lavar la culpa, aunque la persona pueda citar razones muy diferentes cuando se le pregunta.\u200b\u200b  Los criticos de la nocion de \"intenciones inconscientes\" han planteado dudas sobre la evidencia empirica citada a favor de las intenciones inconscientes, que a menudo se basan en interpretaciones dependientes de varias suposiciones controvertidas.\u200b Otra linea de argumentacion se dirige contra el concepto de \"intencion inconsciente\" en si mismo.\u200b\u200b Segun este punto de vista, es incoherente hablar de los estados mentales en cuestion como intenciones inconscientes. La razon dada para esto es que la intencion de algo debe ir acompa\u00f1ada de alguna forma de autoconocimiento por parte del agente sobre lo que se pretende. Esto no seria posible si el estado mental es inconsciente.\u200b\u200b  En la literatura academica se encuentran varias otras distinciones entre tipos de intenciones. Las intenciones condicionales son intenciones de hacer algo solo en caso de que se cumpla una cierta condicion.\u200b Planear devolver un libro a una amiga con la condicion de que ella lo pida es un ejemplo de una intencion condicional. Tener la intencion incondicional de devolver el libro, por otro lado, implica planear devolverlo independientemente del comportamiento de la amiga.\u200b Las intenciones incondicionales son mas fuertes en el sentido de que el agente esta completamente comprometido con el curso de accion sin depender de la presencia de una condicion desencadenante.\u200b  Tambien se puede distinguir entre las intenciones que actuan como medios para otras intenciones y las intenciones de hacer algo por si mismo.\u200b\u200b Esto esta estrechamente relacionado con la diferencia entre deseos intrinsecos e instrumentales. Por ejemplo, una intencion de ir al supermercado puede basarse en otra intencion: la intencion de comer. Debido a esta dependencia, el agente no habria formado la intencion anterior si la ultima intencion hubiera estado ausente.\u200b En casos normales, la intencion instrumental desaparece si la intencion en la que se basa ya no existe. En el ejemplo anterior, el agente puede abandonar la intencion de ir al supermercado si su medico le recomienda que comience a ayunar. Pero hay casos especiales en los que la intencion instrumental persiste, lo que a veces se denomina inercia motivacional.\u200b  Intenciones pueden surgir de diferentes maneras. El tipo paradigmatico de formacion de intenciones ocurre a traves de la razon practica en forma de decisiones.\u200b En este caso, el agente considera varias alternativas y luego elige la mas favorable. Esta eleccion resulta en un compromiso con el plan de accion elegido y, por lo tanto, constituye la formacion de una intencion. A menudo, la eleccion en si misma esta precedida por deliberacion. La deliberacion consiste en formular cursos de accion prometedores y evaluar su valor considerando las razones a favor y en contra de ellos.\u200b Un ejemplo de este tipo de formacion de intenciones es un estudiante que esta despierto toda la noche pensando si quiere especializarse en ingles y finalmente decide hacerlo.\u200b\u200b Pero no todas las decisiones van precedidas de deliberacion y no todos los actos de deliberacion resultan en una decision. Otro tipo de formacion de intenciones ocurre sin tomar ninguna decision explicita. En tales casos, el agente simplemente se encuentra comprometido con el curso de accion correspondiente sin decidir conscientemente a favor o en contra de sus alternativas.\u200b Este es el caso de muchas acciones realizadas por habito. Por ejemplo, desbloquear habitualmente la puerta de la oficina por la ma\u00f1ana suele ser una accion intencional que ocurre sin una decision explicita previa para hacerlo.\u200b Se ha argumentado que decisiones pueden entenderse como un tipo de accion mental que consiste en resolver la incertidumbre sobre que hacer.\u200b Decisiones suelen verse como un cambio momentaneo de no tener la intencion a tenerla. Esto contrasta con la deliberacion, que normalmente se refiere a un proceso prolongado.\u200b Pero estas distinciones tecnicas no siempre se reflejan en el uso de los terminos en el lenguaje ordinario.\u200b  Intenciones tienen varias funciones psicologicas en la mente del agente. Algunos teoricos de intenciones incluso basan su definicion de intenciones en las funciones que ejecutan. Intenciones son responsables de iniciar, mantener y terminar acciones. En este sentido, estan estrechamente relacionadas con la motivacion.\u200b Tambien ayudan a guiar la accion y tratan de coordinar el comportamiento del agente a lo largo del tiempo.\u200b Una funcion similar de intenciones es coordinar el comportamiento propio con el de otros agentes, ya sea formando intenciones conjuntamente o reaccionando a las intenciones que otros ya tienen.\u200b Esto permite varias formas complejas de cooperacion. No todas las formas de comportamiento humano estan guiadas por intenciones. Esto se refiere, por ejemplo, a reflejos corporales como estornudar u otros procesos incontrolados como la digestion, que ocurren sin seguir un plan mental previamente elaborado. Intenciones estan intimamente relacionadas con la razon practica, es decir, con las razones por las que actuamos. Estas razones suelen explicarse en terminos de creencias y deseos.\u200b Por ejemplo, la razon del agente para cruzar una carretera puede consistir en su deseo de llegar al otro lado y su creencia de que esto se logra cruzandola.\u200b Debido a esta estrecha conexion con el comportamiento, intenciones se utilizan con frecuencia para explicar por que personas se involucran en cierto comportamiento. Tales explicaciones son a menudo teleologicas en el sentido de que citan el objetivo previsto como la razon del comportamiento.\u200b\u200b  Intenciones estan estrechamente relacionadas con otros estados mentales, como creencias y deseos.\u200b En general, se acepta que intenciones implican alguna forma de deseo: la accion prevista se considera buena o deseable en algun sentido.\u200b Este aspecto hace posible que intenciones motiven acciones. Se han sugerido varias formas de como intenciones se relacionan con creencias. Por un lado, parece imposible tener la intencion de hacer algo que uno cree que es imposible.\u200b Algunos relatos van mas alla y sugieren que intenciones implican la creencia de que uno realizara la accion en cuestion.\u200b\u200b\u200b Ademas de eso, se ha propuesto que creencias son necesarias para que intenciones conecten el comportamiento con el objetivo previsto. Desde este punto de vista, las intenciones implican la creencia de que el comportamiento previsto causaria el objetivo previsto.\u200b\u200b  En la filosofia de la accion, una pregunta central es como deben definirse acciones, es decir, en que se diferencian de otros tipos de eventos como un amanecer, la averia de un coche o la digestion. El enfoque mas comun a esta pregunta define acciones en terminos de intenciones.\u200b Segun Donald Davidson, una accion es un evento que es intencional bajo alguna descripcion. Desde este punto de vista, un aspecto central de acciones es que son causadas por un estado mental de un agente: su intencion.\u200b\u200b\u200b Otro aspecto importante es que esta causacion ocurre de la manera correcta, es decir, que la intencion causa el evento que planeo y que el evento es causado usando las habilidades del agente. Estos requisitos adicionales son necesarios para excluir las llamadas cadenas causales desviadas (wayward causal chains), es decir, casos en los que el comportamiento previsto ocurre, pero la intencion correspondiente no causo el comportamiento en absoluto o no lo causo de la manera correcta.\u200b\u200b\u200b\u200b  Algunos filosofos han rechazado este estrecho vinculo entre accion e intencion. Esta critica se basa en la idea de que una persona puede realizar una accion intencionalmente sin tener la intencion correspondiente de realizarla.\u200b\u200b\u200b Hacer algo intencionalmente suele asociarse a hacerlo por una razon. La pregunta entonces es si es posible hacer algo por una razon sin tener la correspondiente intencion.\u200b\u200b Esto es especialmente relevante para acciones simples que forman parte de rutinas mas grandes. Caminar al cine, por ejemplo, implica dar varios pasos. Segun este argumento, cada paso es una accion intencional, pero el agente no forma una intencion distinta para cada paso. En cambio, la mayoria de ellos no son representados explicitamente por la mente.\u200b Otro contraejemplo contra la tesis de que realizar una accion intencionalmente implica tener la intencion de realizarla se basa en la conciencia de efectos secundarios no intencionales, a veces denominados intenciones oblicuas.\u200b\u200b\u200b Un ejemplo consiste en un presidente que decide respaldar un nuevo proyecto para aumentar las ganancias a pesar de su impacto negativo en el medio ambiente. En este caso, se ha argumentado que el presidente da\u00f1a el medio ambiente intencionalmente sin la intencion de hacerlo.\u200b  Un experimento mental bien conocido sobre la relacion entre intencion y accion es el puzzle de la toxina debido a Gregory Kavka.\u200b\u200b\u200b Se trata de un multimillonario que ofrece al agente un millon de dolares por formar al final del dia la intencion de beber un frasco de toxina al dia siguiente. La toxina enferma a una persona por un dia, pero no tiene ningun efecto duradero aparte de esto. No importa si el agente realmente bebe la toxina al dia siguiente, lo unico que importa es que tenga la intencion de hacerlo al final de hoy.\u200b\u200b\u200b El puzzle se refiere a la cuestion de si es realmente posible formar esta intencion. La razon para dudar de esto es que una vez que el agente ha formado la intencion y recibido el dinero, ya no tiene ninguna razon para beber la toxina: este paso es opcional. Sin embargo, si sabe desde el principio que no va a beber la toxina, es muy cuestionable si realmente puede formar la intencion correspondiente.\u200b\u200b\u200b Esto esta estrechamente relacionado con la idea de que tener la intencion de hacer algo implica creer que uno lo hara.\u200b\u200b\u200b Pero ya que el agente no tiene ninguna razon para hacerlo una vez que ha recibido el dinero, no creeria que lo haria. Esto va en contra de la idea de que puede tener la intencion de hacerlo desde el principio.\u200b  Varios filosofos coinciden en que es imposible formar este tipo de intencion.\u200b Su objetivo suele ser encontrar un principio general que explique por que es asi. Varios relatos se centran en la idea de que la razon para realizar la accion esta ausente cuando llega el momento de realizarla.\u200b\u200b Asi, el agente tiene una razon para formar la intencion hoy, pero no una razon para realizar la accion ma\u00f1ana. Por lo tanto, la razon para formar la intencion es diferente de la razon para realizar la accion. Esto a veces se expresa diciendo que el agente tiene el \"tipo equivocado de razon\" (wrong type of reason) para formar la intencion. Por esta razon, es imposible formar la intencion porque el tipo correcto de razon para la intencion es derivado de la razon para la accion misma, que esta ausente.\u200b  Pero no todos estan de acuerdo en que formar la intencion es imposible. Segun la solucion racionalista, por ejemplo, es posible formar la intencion porque hay una razon decisiva para beber la toxina.\u200b La idea detras de este enfoque es que hay dos opciones hoy: (1) no formar la intencion y no beber la toxina o (2) formar la intencion y beber la toxina.\u200b Ya que la segunda opcion maximiza la utilidad, es racional seguirla y beber la toxina. La dificultad de este enfoque tiene que ver con explicar como el agente puede mantener su intencion de beber la toxina despues de haber recibido el dinero.\u200b  A menudo se sugiere que las intenciones del agente desempe\u00f1an un papel central en el valor moral de las acciones correspondientes.\u200b\u200b Esto a veces se denomina el \"principio de intencion\": la tesis de que si una accion es moralmente permisible a veces depende de la intencion del agente para realizar esta accion. Segun este punto de vista, un acto que de otro modo seria permisible puede ser impermisible si esta motivado por malas intenciones.\u200b Por ejemplo, un medico administra una sustancia letal a un paciente que sufre una enfermedad terminal y que da su consentimiento. Los defensores del principio de intencion pueden afirmar que depende de la intencion del medico si esta accion es permisible. Especificamente, se trata de si se hace con la intencion de aliviar el dolor del paciente o con la intencion de deshacerse de un enemigo despreciado. Los opositores pueden afirmar que la diferencia moral en cuestion solo se refiere a la evaluacion del medico como persona, pero no a su accion.\u200b\u200b Desde este punto de vista, hay una diferencia entre los valores morales de personas y de acciones: intenciones afectan al valor moral de personas pero no de acciones.\u200b\u200b Los consecuencialistas tambien suelen rechazar el principio de intencion.\u200b Sostienen que solo importan las consecuencias de una accion, pero no como fue motivada.\u200b\u200b Segun los utilitaristas, por ejemplo, una accion es correcta si produce el mayor bien para el mayor numero de personas.\u200b En algunos casos, incluso las acciones realizadas con malas intenciones pueden tener este efecto.  Immanuel Kant es un famoso defensor del principio de intencion. Para el, es fundamental que uno no solo actue exteriormente de acuerdo con su deber, lo que el denomina \"legalidad\" (Legalitat). En cambio, el agente tambien debe estar motivado interiormente por la intencion correcta, que el denomina \"moralidad\" (Moralitat).\u200b\u200b\u200b\u200b\u200b Desde este punto de vista, donar mucho dinero a organizaciones beneficas sigue siendo en cierto sentido moralmente defectuoso si se hace con la intencion de impresionar a otras personas. Segun Kant, la intencion principal siempre debe ser cumplir con el deber: la buena voluntad consiste en cumplir el deber por el deber.\u200b\u200b  El principio de doble efecto es un principio estrechamente relacionado. Establece que hay casos en los que el agente no debe tener la intencion de da\u00f1ar a otros, incluso si este da\u00f1o se utiliza como medio para un bien mayor. Pero en casos equivalentes, es permisible da\u00f1ar a otros si este da\u00f1o es un efecto secundario, o un doble efecto, pero no un medio.\u200b\u200b Desde este punto de vista, por ejemplo, el bombardeo de terror de una fabrica de municiones para debilitar la determinacion del enemigo matando a todos los civiles que trabajan en ella no es permisible. Pero el mismo ataque como un bombardeo tactico para reducir el suministro de municiones del enemigo es permisible, incluso si se previera la misma cantidad de muertes de civiles como efecto secundario.\u200b\u200b Muchos de los argumentos dirigidos al principio de intencion se aplican tambien al principio de doble efecto. Argumentos adicionales se centran en la dificultad de establecer una distincion general entre los medios intencionados y los efectos secundarios anticipados.\u200b\u200b ","snippet":"Intenciones son estados mentales en los que el agente se compromete a un curso de accion. Tener el plan de visitar el zoo ma\u00f1ana es un ejemplo de una intencion. El plan de accion es el contenido de la","enlaces_salientes":["Intenci%C3%B3n","Intenci%C3%B3n","Intenci%C3%B3n","Estados_mentales","Acci%C3%B3n_(filosof%C3%ADa)","Intencionalidad","Creencia","Deseo","Akrasia","Elizabeth_Anscombe","%C3%89tica","Estados_mentales","Triple_(baloncesto)","Psicolog%C3%ADa_popular","Comportamiento_humano","Intencionalidad","Creencia","Deseo","Donald_Davidson","Akrasia","Motivaci%C3%B3n#Fuerza_de_deseo_y_acci\u00f3n","Elizabeth_Anscombe","Sentido_de_agencia","Comportamiento_humano","Motivaci%C3%B3n","Racionalidad","Estado_mental#Racional,_irracional_y_arracional","Cristaloterapia","Psicolog%C3%ADa","Psicoan%C3%A1lisis","Conciencia","Inconsciente","Sigmund_Freud","Lapsus_linguae","Trastorno_obsesivo-compulsivo","Deseo#Intr\u00ednseco_e_instrumental","Decisi%C3%B3n","Deliberaci%C3%B3n","Mente","Motivaci%C3%B3n","Comportamiento_humano","Acci%C3%B3n_(filosof%C3%ADa)","Donald_Davidson","Habilidad","Moral","Suicidio_asistido","Immanuel_Kant","Principio_de_doble_efecto","PubMed_Central","PubMed_Identifier","Digital_object_identifier","PubMed_Identifier","Digital_object_identifier","Digital_object_identifier","PubMed_Identifier","Digital_object_identifier","PubMed_Central","PubMed_Identifier","Digital_object_identifier","Semantic_Scholar","Digital_object_identifier","ISSN","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","ISSN","ISSN","ISSN","Digital_object_identifier","ISSN","Digital_object_identifier","ISSN","Digital_object_identifier","ISSN","Digital_object_identifier","ISSN","Digital_object_identifier","ISSN","Digital_object_identifier","ISBN","Digital_object_identifier","Digital_object_identifier","ISSN","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","ISSN","Digital_object_identifier","ISSN","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","Semantic_Scholar","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","ISSN","JSTOR","ISSN","JSTOR","Digital_object_identifier","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Medical_Subject_Headings"]}
{"url":"Extensi%C3%B3n_(sem%C3%A1ntica)","titulo":"Definicion extensional","contenido":"En logica, filosofia del lenguaje y otras disciplinas que estudian los signos y el significado, la extension de una expresion es el conjunto de cosas a las cuales se aplica.\u200b Por ejemplo, la extension del predicado \"planetas del Sistema Solar\" es: Mercurio, Venus, Tierra, Marte, Jupiter, Saturno, Urano y Neptuno; y la extension del nombre \"Aristoteles\" es Aristoteles. La extension de las expresiones contrasta con su intension,\u200b que es lo que mas se suele asociar a la nocion de significado propiamente dicho.  La semantica estandar de la logica proposicional y la logica de predicados es extensional:\u200b a cada variable proposicional se le asigna un valor de verdad, a cada nombre se le asigna un elemento del dominio, y a cada predicado n-adico se le asigna una tupla de n elementos del dominio.\u200b  Esta semantica, sin embargo, tiene limitaciones: si dos expresiones tienen la misma extension (como por ejemplo, \"presidente de los Estados Unidos\" y \"Comandante en Jefe de las Fuerzas Armadas\"), entonces segun la semantica tienen el mismo significado, lo cual no parece ser el caso.\u200b  La definicion extensional guarda similitudes con la definicion ostensiva, en la que uno o mas de los miembros del conjunto (pero no necesariamente todos) son se\u00f1alados como ejemplos.  Una definicion extensional de una expresion es una lista exhaustiva de todo aquello a lo cual se aplica. Por ejemplo, para dar la definicion extensional del predicado \"planetas del Sistema Solar\", basta con listar los ocho planetas: Mercurio, Venus, Tierra, Marte, Jupiter, Saturno, Urano y Neptuno.  Las definiciones extensionales se utilizan cuando listar la extension de una expresion provee informacion mas util que otros tipos de definicion, o cuando hacerlo le dice al interesado suficiente sobre la naturaleza de esa expresion. En cambio, cuando enumerar la extension de una expresion resulta dificil (por ser muy larga) o imposible (por ser infinita, o por no saber cual es la extension), resulta natural intentar una definicion intensional. ","snippet":"En logica, filosofia del lenguaje y otras disciplinas que estudian los signos y el significado, la extension de una expresion es el conjunto de cosas a las cuales se aplica.\u200b Por ejemplo, la extension","enlaces_salientes":["Definici%C3%B3n_extensional","Definici%C3%B3n_extensional","Definici%C3%B3n_extensional","Extensi%C3%B3n","L%C3%B3gica","Filosof%C3%ADa_del_lenguaje","Significado","Arist%C3%B3teles","Intensi%C3%B3n","Sem%C3%A1ntica_formal","L%C3%B3gica_proposicional","L%C3%B3gica_de_predicados","Valor_de_verdad","Dominio_de_discurso","Tupla","Definici%C3%B3n_ostensiva","Definici%C3%B3n_intensional","Intensi%C3%B3n","Definici%C3%B3n_ostensiva","Axioma_de_extensionalidad","Sobre_el_sentido_y_la_referencia","Ted_Honderich","Oxford_University_Press","Cambridge_University_Press","Control_de_autoridades"]}
{"url":"Par%C3%A9ntesis","titulo":"Parentesis","contenido":"Los parentesis (en singular, parentesis) son signos de puntuacion que se usan por pares (por ello se denominan dobles, ya que existe uno de apertura y otro de cierre) y que encierran informacion, como pueden ser palabras o numeros.  Para distinguir ambos miembros de los parentesis en sentido estricto, se suele denominar \u00abparentesis que abre\u00bb, \u00abde apertura\u00bb o \u00abparentesis izquierdo\u00bb al primero, y \u00abparentesis que cierra\u00bb, \u00abde cierre\u00bb o \u00abparentesis derecho\u00bb al segundo. Los parentesis angulares son diferentes de los simbolos matematicos de desigualdad: los primeros son de angulo obtuso y los segundos, de angulo agudo.  En lenguaje, se usan los parentesis para separar o intercambiar un texto dentro de otro; habitualmente, tienen los siguientes usos:  En matematicas, los parentesis sirven para distintos objetivos:  En informatica, los parentesis pueden servir en la mayor parte de los lenguajes de programacion para forzar prioridades entre las operaciones de una expresion, de una forma analoga a su uso en matematica.  Es muy comun su uso como separador de variables en lo que respecta al lenguaje de programacion Python ademas de todos sus usos como codigo en si.  Los lenguajes de marcado como el HTML usan las cu\u00f1as < > para se\u00f1alar las etiquetas. Otras variantes, como el Wikitexto, utilizan corchetes [ ], cu\u00f1as < > y llaves { } para introducir, respectivamente, enlaces, referencias y plantillas.  Cuando la ocasion lo amerita, los parentesis angulares o \u00abcu\u00f1as\u00bb aparecen abarcando el texto de un globo de dialogo, mismo en el que un personaje habla otra lengua o idioma \u2014segun sea el caso\u2014, indicando asi una suerte de \u201ccuarta pared brechtiana\u201d, con la que se hace participar al lector en un efecto de intimidad y comprension dirigido unica y exclusivamente a el, puesto que pese a la diferencia linguistica denotada mediante la \u201ccu\u00f1a\u201d, se entiende su significado, mientras algunos personajes rodeando a quien asi se expresa no.  En los chats de Internet, es habitual el uso del parentesis en la formacion de emoticonos, unas curiosas combinaciones de diferentes signos de puntuacion, que por su semejanza con un rostro (girado 90\u00b0 a la izquierda) se utilizan para expresar emociones. Algunos ejemplos son:  Otras formas de encerrar informacion son los corchetes  El corchete rectangular, o simplemente, corchete, es un signo de puntuacion doble [ ] usado con relativa frecuencia, que se utiliza de forma similar a los parentesis que anexan informacion complementaria o aclaratoria.\u200b  Los corchetes se escriben pegados a la primera y la ultima palabra del periodo que enmarcan, y separados por un espacio de las palabras o signos que los preceden, aunque existen algunas excepciones; sin embargo, si al cierre de corchete le precede un signo de puntuacion, no se dejara espacio entre ambos.  Los corchetes caparazon tortuga \u3014 \u3015 son una variable poco conocida y usada del corchete en los sistemas de escritura. Su nombre se debe a la forma que se les dio inicialmente para los sistemas Unicode.  En la tabla de caracteres Unicode, \u3014 corresponde a U+3014, y \u3015 corresponde a U+3015.  La llave { } es un signo grafico constituido por dos lineas sinuosas que forman una peque\u00f1a punta en el centro. Se trata de un signo de los llamados dobles, ya que existe uno de apertura ({) y otro de cierre (}).  Se utiliza principalmente en cuadros sinopticos o esquemas, para abarcar varios elementos en lineas diferentes y que constituyan una enumeracion a partir de un concepto dado, generado por la apertura o cierre de llave. En estos casos se emplea el signo de apertura, aunque en esquemas complejos pueden combinarse ambos.  Tambien se suele utilizar en programacion. En este caso, se combinan ambos para cerrar listas de elementos.   ","snippet":"Los parentesis (en singular, parentesis) son signos de puntuacion que se usan por pares (por ello se denominan dobles, ya que existe uno de apertura y otro de cierre) y que encierran informacion, como","enlaces_salientes":["Par%C3%A9ntesis","Par%C3%A9ntesis","Par%C3%A9ntesis","Par%C3%A9ntesis_(pel%C3%ADcula)","Signo_ortogr%C3%A1fico","Signos_de_puntuaci%C3%B3n","Coma_(puntuaci%C3%B3n)","Punto_(puntuaci%C3%B3n)","Punto_y_coma","Dos_puntos","Signo_de_interrogaci%C3%B3n","Signo_de_exclamaci%C3%B3n","Puntos_suspensivos","Corchete","Comillas","Raya_(puntuaci%C3%B3n)","Signos_auxiliares","Acento_gr%C3%A1fico","Di%C3%A9resis","Ap%C3%B3strofo","Asterisco","Virgulilla","Guion_(signo_ortogr%C3%A1fico)","Llave_(signo_gr%C3%A1fico)","Barra_(tipograf%C3%ADa)","Calder%C3%B3n_(tipograf%C3%ADa)","P%C3%A1rrafo_(signo_ortogr%C3%A1fico)","Signo_de_puntuaci%C3%B3n","Palabra","N%C3%BAmero","Desigualdad_matem%C3%A1tica","%C3%81ngulo_obtuso","%C3%81ngulo_agudo","Matem%C3%A1ticas","Orden_de_evaluaci%C3%B3n","F%C3%B3rmula_(expresi%C3%B3n)","Funci%C3%B3n_matem%C3%A1tica","Intervalo_(matem%C3%A1tica)","Tupla","Inform%C3%A1tica","Lenguaje_de_programaci%C3%B3n","HTML","Etiqueta_(lenguaje_de_marcado)","Argumento_(inform%C3%A1tica)","Subrutina","C_(lenguaje_de_programaci%C3%B3n)","Forth","Fortran","COBOL","Vector_(inform%C3%A1tica)","Perl","Python","Cuarta_pared","Emoticono","Internet","Corchete","Signo_de_puntuaci%C3%B3n","Unicode","Llave_(signo_gr%C3%A1fico)","Wikcionario","Signo_de_puntuaci%C3%B3n","Python_Software_Foundation","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Dos_puntos","titulo":"Dos puntos","contenido":"Los dos puntos (:) son un signo ortografico de puntuacion que se representa como un punto  arriba de otro, y estan puestos en la parte inferior y superior de la linea de base tipografica respectivamente.  Su funcion es detener el discurso para llamar la atencion sobre lo que sigue, que siempre esta en estrecha relacion con el texto precedente. Representa una pausa mayor que la de la coma y menor que la del punto, por lo que su pausa es equivalente al punto y coma.  Este signo de puntuacion debe escribirse pegado a la palabra o el signo que los antecede, y separados por un espacio en blanco de la palabra o el signo que los sigue. En la mayoria de los casos, la primera letra de la palabra que sucede al signo se escribe con minuscula, sin embargo, hay unos cuantos casos donde se debe escribir con mayuscula.  Segun la Real Academia Espa\u00f1ola, \u00abes un signo de puntuacion que representa una pausa mayor que la de la coma y menor que la del punto. Detienen el discurso para llamar la atencion sobre lo que sigue, que siempre esta en estrecha relacion con el texto precedente. Se escriben pegados a la palabra o el signo que los antecede, y separados por un espacio de la palabra o el signo que los sigue\u00bb.\u200b  Al leerse dos puntos se debe hacer una pausa, mayor que la de la coma y menor que la del punto, debiendo tener en cuenta que el texto siguiente continua con la idea desarrollada. Su uso mas comun es en la enumeracion de caracter explicativo, junto con la reproduccion de citas o palabras textuales. No debe confundirse la dieresis (\u00a8), coloquialmente llamada \u00ablos dos puntos\u00bb que van, en algunos casos, sobre la letra u.  Tambien se utiliza en el encabezamiento de cartas y documentos (p. ej., Sr./Sra.). En este caso, la inicial de la siguiente palabra se escribe con mayuscula, en renglon aparte.  En matematicas, se utilizan los dos puntos como notacion para representar una division. Tambien se utiliza en logica como abreviatura de la locucion \u00abtal que\u00bb, siendo esta una alternativa al empleo de la barra inclinada (/), cuyo significado es el mismo. En este caso debe escribirse un espacio entre las cifras colindantes.\u200b  En funcion y conjuntos se usa para abreviar \u00abes\u00bb y \u00abrazon\u00bb. Ejemplo 1: La manera habitual de denotar una funcion f en conjuntos es \u00abf: A \u2192 B\u00bb que se lee \u00abf es A incluida en B\u00bb o \u00abf de A en B\u00bb.  Para indicar una escala 3:1 leido como tres a uno, mientras que \u00ab::\u00bb indica un proporcion 3:1\u00a0:: 15:5 tres a uno es proporcional a quince a cinco.  En braille espa\u00f1ol, presenta la disposicion de los puntos en los lugares 2 y 5. ","snippet":"Los dos puntos (:) son un signo ortografico de puntuacion que se representa como un punto  arriba de otro, y estan puestos en la parte inferior y superior de la linea de base tipografica respectivamen","enlaces_salientes":["Dos_puntos","Dos_puntos","Dos_puntos","Signo_ortogr%C3%A1fico","Signos_de_puntuaci%C3%B3n","Coma_(puntuaci%C3%B3n)","Punto_(puntuaci%C3%B3n)","Punto_y_coma","Signo_de_interrogaci%C3%B3n","Signo_de_exclamaci%C3%B3n","Puntos_suspensivos","Par%C3%A9ntesis","Corchete","Comillas","Raya_(puntuaci%C3%B3n)","Signos_auxiliares","Acento_gr%C3%A1fico","Di%C3%A9resis","Ap%C3%B3strofo","Asterisco","Virgulilla","Guion_(signo_ortogr%C3%A1fico)","Llave_(signo_gr%C3%A1fico)","Barra_(tipograf%C3%ADa)","Calder%C3%B3n_(tipograf%C3%ADa)","P%C3%A1rrafo_(signo_ortogr%C3%A1fico)","Signo_ortogr%C3%A1fico","Signo_de_puntuaci%C3%B3n","L%C3%ADnea_de_base_(tipograf%C3%ADa)","Coma_(puntuaci%C3%B3n)","Punto_(puntuaci%C3%B3n)","Punto_y_coma","Palabra","Espacio_(puntuaci%C3%B3n)","Min%C3%BAscula","May%C3%BAscula","Real_Academia_Espa%C3%B1ola","Di%C3%A9resis_(signo)","U","Matem%C3%A1ticas","Divisi%C3%B3n_(matem%C3%A1ticas)","L%C3%B3gica","Barra_(tipograf%C3%ADa)","Minuto","Hora","Biblia","G%C3%A9nesis","Braille_(lectura)","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Barra_vertical","titulo":"Pleca","contenido":"La pleca es un caracter usado en matematicas para representar el valor absoluto, el modulo, determinantes, como simbolo de \u00abtal que\u00bb o \u00abque cumple\u00bb y con indices como simbolo de rango; en lexicografia, para separar acepciones y subacepciones; y, en informatica, como operador de disyuncion \u00abo\u00bb o para tuberias. En este ultimo caso, tambien se denomina al caracter, por extension, tuberia.  El diccionario DRAE define pleca o barra vertical (en este sentido) como  En el Diccionario Clave\u200b se la define como  Es un signo que consiste en dos plecas dispuestas de forma paralela. La Real Academia Espa\u00f1ola hace uso de ella en el DRAE, y la define como doble barra vertical.  Aunque la barra vertical es accesible desde la mayoria de variantes de teclado, hay casos en los que dise\u00f1adores web, editores de Wikis, programadores informaticos y otras personas necesitan codificar la barra vertical \u2014normalmente porque se trata de un simbolo especial de su codigo fuente y necesitan mostrar el simbolo al usuario final.  El American Standard Code for Information Interchange (ASCII-1963), enunciado en 1963, es uno de los primeros y mas ampliamente utilizados mapas de caracteres, con solo 69 caracteres imprimibles. La barra vertical (\"|\") ocupa la posicion decimal 124 de ASCII-1963. La barra partida (\"\u00a6\") no forma parte del juego de caracteres ASCII en ninguna version pero un caracter separado que aparecio junto a la barra vertical en la familia de juegos de caracteres EBCDIC fue incluido en ISO 8859-1 y Unicode.   ","snippet":"La pleca es un caracter usado en matematicas para representar el valor absoluto, el modulo, determinantes, como simbolo de \u00abtal que\u00bb o \u00abque cumple\u00bb y con indices como simbolo de rango; en lexicografia","enlaces_salientes":["Pleca","Pleca","Pleca","Ideograma","Valor_absoluto","M%C3%B3dulo_(vector)","Determinante_(matem%C3%A1tica)","Acepci%C3%B3n","Disyunci%C3%B3n_l%C3%B3gica","Tuber%C3%ADa_(inform%C3%A1tica)","Diccionario","DRAE","Imprenta","Texto","Lexicograf%C3%ADa","Lexic%C3%B3n","Acepci%C3%B3n","Barra_(tipograf%C3%ADa)","Verso","En_l%C3%ADnea","Inform%C3%A1tica","Tuber%C3%ADa_(inform%C3%A1tica)","Paralelismo_(matem%C3%A1tica)","Real_Academia_Espa%C3%B1ola","DRAE","P%C3%A1rrafo","Fon%C3%A9tica","M%C3%A9trica","Matem%C3%A1ticas","Norma_vectorial","Lenguaje_de_programaci%C3%B3n","Disyunci%C3%B3n_l%C3%B3gica","Disposici%C3%B3n_del_teclado","Dise%C3%B1ador_web","C%C3%B3digo_fuente","Usuario_final","American_Standard_Code_for_Information_Interchange","1963","Conjunto_de_caracteres","EBCDIC","ISO_8859-1","Unicode","Unicode","UTF-8","ASCII","ISO/IEC_8859-1","EBCDIC","Creative_Commons","Control_de_autoridades"]}
{"url":"Barra_(tipograf%C3%ADa)","titulo":"Barra (tipografia)","contenido":"La barra (/) es un signo de puntuacion auxiliar que consiste en una linea diagonal que se traza de abajo arriba y de izquierda a derecha.\u200b  Junto con la arroba (@), la barra inversa (\\) y otros signos, ha presenciado un gran crecimiento de uso debido a su utilizacion en Internet.  Tambien es llamada por otros nombres: slash,[nota 1]\u200b barra oblicua, barra inclinada, barra diagonal, diagonal o barrita (no confundir con la pleca \"|\").  Segun indica el linguista Jose Martinez de Sousa, son incorrectos lo siguientes usos de la barra: ","snippet":"La barra (/) es un signo de puntuacion auxiliar que consiste en una linea diagonal que se traza de abajo arriba y de izquierda a derecha.\u200b  Junto con la arroba (@), la barra inversa (\\) y otros signos","enlaces_salientes":["Barra_(tipograf%C3%ADa)","Barra_(tipograf%C3%ADa)","Barra_(tipograf%C3%ADa)","Diagonal","Internet","Pleca","Punto_(puntuaci%C3%B3n)","Fecha","Par%C3%A9ntesis","Letra_redonda","Cursiva","Alfabeto_Fon%C3%A9tico_Internacional","Corchete","Pleca","Dos_puntos","Diccionario_panhisp%C3%A1nico_de_dudas","Progresi%C3%B3n_aritm%C3%A9tica","Inform%C3%A1tica","Unix","Directorio_ra%C3%ADz","Filesystem_Hierarchy_Standard","Microsoft_Windows","S%C3%ADmbolo_del_sistema","PowerShell","Jos%C3%A9_Mart%C3%ADnez_de_Sousa","Sistema_Internacional_de_Unidades","Y","Wayback_Machine","Creative_Commons","Control_de_autoridades"]}
{"url":"Axioma_de_extensionalidad","titulo":"Axioma de extensionalidad","contenido":"En teoria de conjuntos, el axioma de extensionalidad es un axioma que establece que dos conjuntos son iguales si y solo si tienen los mismos elementos.  El enunciado del axioma establece que si dos conjuntos tienen los mismos elementos entonces son identicos:  Axioma de extensionalidad  \u2200 A , B : \u2200 x , ( x \u2208 A \u2194 x \u2208 B ) \u21d2 A = B  La afirmacion reciproca \u2014dos conjuntos iguales tienen los mismos elementos\u2014 es un teorema logico. Un enunciado equivalente, utilizando la nocion de subconjunto, es:  Dados dos conjuntos, A y B, tales que cada uno es subconjunto del otro, A \u2286 B y B \u2286 A, entonces son iguales, A = B.  El axioma de extensionalidad constituye la definicion fundamental del concepto de conjunto como una coleccion abstracta de objetos. El axioma de extensionalidad asegura que los elementos x de un conjunto A son lo unico que lo define, es decir, los objetos que estan relacionados con el por la relacion de pertenencia, x \u2208 A. Esto contrasta con otras relaciones como por ejemplo, \u00abser un divisor primo\u00bb: los unicos divisores primos de 6 y de 12 son 2 y 3, pero ambos numeros son distintos, 6 = 12.  El axioma de extensionalidad (Ex) es completamente independiente del resto de axiomas de Zermelo-Fraenkel (ZF). La practica totalidad de los modelos que se construyen para ZF incluyen Ex, luego es consistente con el resto de axiomas. Por otro lado, a partir del modelo de los conjuntos hereditariamente finitos puede construirse otro donde conjuntos con los mismos elementos no sean identicos pero respetando el resto de axiomas, por lo que Ex no es derivable de estos. ","snippet":"En teoria de conjuntos, el axioma de extensionalidad es un axioma que establece que dos conjuntos son iguales si y solo si tienen los mismos elementos.  El enunciado del axioma establece que si dos co","enlaces_salientes":["Axioma_de_extensionalidad","Axioma_de_extensionalidad","Axioma_de_extensionalidad","Teor%C3%ADa_de_conjuntos","Axioma","Conjunto","Igualdad_matem%C3%A1tica","Si_y_solo_si","Elemento_de_un_conjunto","Subconjunto","Relaci%C3%B3n_binaria","Axiomas_de_Zermelo-Fraenkel","Teor%C3%ADa_de_modelos","Axiomas_de_Zermelo-Fraenkel","Digital_object_identifier","OCLC","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Vocales","titulo":"Vocal","contenido":"En fonetica, una vocal (del latin vocalis) o monoptongo es un sonido de una lengua natural hablada que se pronuncia con el tracto vocal abierto, no habiendo un aumento de la presion del aire en ningun punto mas arriba de la glotis, es decir, ni en la boca ni en la faringe. Esto contrasta con las consonantes, donde hay una obstruccion o cerrazon en algun punto del tracto vocal. Las vocales se consideran silabicas en el sentido de que forman el nucleo de una silaba; un sonido equivalente, abierto, pero que no forma el nucleo de una silaba, se denomina semivocal.  En todas las lenguas, las vocales forman el nucleo de las silabas, mientras que las consonantes forman el ataque o inicio y (en las lenguas que la tienen) la coda. Sin embargo, en algunas lenguas es posible formar nucleos silabicos mediante otros sonidos, como por ejemplo la l silabica de la palabra inglesa table [\u02c8te\u026a.bl] (el trazo bajo la l indica que es silabica y el punto separa silabas), o la r en la palabra serbia vrt [vrt] \u00abjardin\u00bb.  Existe un conflicto entre la definicion fonetica de 'vocal' (un sonido producido sin obstruccion del tracto vocal) y la definicion fonologica (un sonido que forma la cumbre, o pico, de una silaba).\u200b Las aproximantes [j] y [w] nos sirven para ilustrar dicho conflicto: ambas se producen practicamente sin obstruccion del tracto vocal (de modo que foneticamente se considerarian como vocales), pero aparecen en el limite de las silabas, como por ejemplo al principio de las palabras espa\u00f1olas 'yo' y 'hueso' (lo que sugeriria que fonologicamente son consonantes). El linguista estadounidense Kenneth Pike propuso los terminos 'vocoide', para vocales foneticas, y 'vocal', para vocales fonologicas.\u200b De acuerdo con esta terminologia, [j] y [w] se clasifican como vocoides, no como vocales.  La palabra \u00abvocal\u00bb, proviene del latin vocalis, que significa \u00abcon la voz\u00bb, ya que, en la mayoria de las lenguas, las palabras, y por tanto el discurso, son imposibles sin vocales (incluso en las lenguas que permiten palabras sin vocales, este tipo de palabras son una minoria). El termino \u00abvocal\u00bb se usa habitualmente para referirse tanto para los sonidos vocalicos como a los signos escritos que los representan.      Los rasgos articulatorios que distinguen los distintos sonidos vocalicos determinan su \u00abcualidad\u00bb vocalica. Daniel Jones desarrollo el sistema de vocales cardinales para describir las vocales de acuerdo con tres caracteristicas comunes \u00abaltura\u00bb (dimension vertical, tambien llamada \u00ababertura\u00bb), \u00ablocalizacion\u00bb (dimension horizontal) y \u00abredondeamiento\u00bb (posicion de los labios, tambien llamada \u00ablabializacion\u00bb). En el cuadro vocalico que se encuentra a la derecha, se indican estos tres parametros. Sin embargo, hay otros rasgos posibles, como la posicion del velo (nasalidad), tipo de vibracion vocal (fonacion) y posicion de la raiz de la lengua.  La altura vocalica recibe su nombre de la posicion vertical de la lengua en relacion con el paladar o a la abertura de los maxilares, aunque tambien es conocido como modo de articulacion. En las \u00abvocales altas\u00bb, como [i] y [u], la lengua se situa en la parte superior de la boca, mientras que en las \u00abvocales bajas\u00bb, como [a], la lengua se situa en la parte inferior. En el AFI se prefieren los terminos \u00abvocal cerrada\u00bb y \u00abvocal abierta\u00bb respectivamente, que describen la abertura relativa de la mandibula. Sin embargo, la altura vocalica es una cualidad mas bien acustica, no articulatoria, por lo que hoy en dia se define no por la altura de la lengua o la abertura de la mandibula, sino por la frecuencia relativa del primer formante (F1). Cuanto mas alto sea el valor F1, mas baja (mas abierta) sera la vocal; la altura, por tanto, es inversamente proporcional a F1.\u200b  Las vocales medias genuinas no contrastan con las semicerradas ni con las semiabiertas en ninguna lengua, y los simbolos [e \u00f8 \u0264 o] se usan habitualmente para representar vocales semicerradas o medias, como en el caso del espa\u00f1ol, donde [e] y [o] suelen representar vocales medias.  En ingles, por ejemplo, se contrastan seis alturas diferentes en las vocales, pero dichas alturas dependen de diferencias en localizacion, y muchas son partes de diptongos. En algunas variedades de aleman se contrastan cinco alturas vocalicas, independientemente de la duracion u otros parametros. El dialecto bavaro de Amstetten cuenta con 13 vocales largas, que distinguen cuatro alturas (cerrada, semicerrada, media y casi abierta) para las vocales anteriores no redondeadas, anteriores redondeadas y posteriores redondeadas, ademas de una vocal abierta central: /i e \u025b \u00e6/, /y \u00f8 \u0153 \u0276/, /u o \u0254 \u0252/, /a/. En general, el limite de contrastes de altura vocalica suele ser cuatro.  El parametro de altura vocalica parece ser el rasgo primario de las vocales, ya que todas las lenguas usan la altura contrastivamente. No hay otros parametros, como anterioridad-posterioridad o redondeamiento (ver mas abajo), que se empleen en todas las lenguas. Algunas lenguas tienen un sistema vocalico vertical, en las que, al menos en el nivel fonologico, solo se utiliza la altura para distinguir entre diferentes vocales.  La localizacion vocalica se refiere a la posicion de la lengua durante la articulacion de una vocal en relacion con el adelantamiento o retraso de la lengua en la boca. En las vocales anteriores, como [i], la lengua se situa hacia delante en la boca, mientras que en las vocales posteriores, como [u], la lengua se situa hacia atras. Sin embargo, las vocales se definen como anteriores o posteriores de acuerdo con la frecuencia relativa del segundo formante (F2), sin depender de la localizacion real de la articulacion. Cuanto mas alto es el valor F2, mas anterior es la vocal.  El Alfabeto Fonetico Internacional identifica cinco grados diferentes en la localizacion vocalica:  Aunque existen idiomas que conocen los cinco grados, como el ingles, no se conoce ninguna lengua que distinga los cinco tipos sin mas diferencias en altura o redondeamiento.  El redondeamiento o \u00ablabializacion\u00bb se refiere a si los labios estan redondeados o no. En la mayoria de las lenguas, el redondeamiento es un rasgo de refuerzo en las vocales posteriores medias o altas, y no es distintivo. En general, cuanto mas alta (cerrada) es una vocal, mas intenso sera el redondeamiento. Sin embargo, algunas lenguas tratan el redondeamiento y la localizacion por separado, como el frances o el aleman (con vocales anteriores redondeadas), la mayoria de lenguas uralicas (el estonio contrasta por redondeamiento la /o/ y las vocales anteriores), las lenguas turquicas (con una /u/ no redondeada), y los idiomas vietnamita y coreano (con vocales posteriores no redondeadas).  En cualquier caso, incluso en lenguas como el aleman o el vietnamita, suele existir una correlacion entre redondeamiento y localizacion: la vocales anteriores redondeadas tienden a ser menos anteriores que las anteriores no redondeadas, y las vocales posteriores no redondeadas tienen a ser menos atrasadas que las posteriores redondeadas. Es decir, la ubicacion de las vocales no redondeadas a la izquierda de las vocales redondeadas en el cuadro de vocales AFI refleja su posicion tipica.  Existen diferentes tipos de labializazion. En las vocales posteriores medias y altas redondeadas los labios suelen protuberar hacia fuera, este fenomeno se conoce como \u00abredondeamiento exolabial\u00bb, ya que las superficies internas de los labios estan visibles. Por otro lado, en las vocales anteriores medias y altas redondeadas, los labios suelen \u00abcomprimirse\u00bb, con los margenes de los labios hacia adentro y acercandose entre si. Este fenomeno se conoce como \u00abredondeamiento endolabial\u00bb. Sin embargo no todas las lenguas siguen este modelo. La /u/ del japones, por ejemplo, es una vocal posterior endolabial (comprimida). El sueco y el noruego son las unicas dos lenguas conocidas en las que este rasgo es pertinente (contrastivo), y cuentan con vocales cerradas anteriores redondeadas y vocales cerradas centrales redondeadas endolabiales y exolabiales, respectivamente. En muchos analisis foneticos, ambos se consideran tipos de redondeamiento, pero algunos fonetistas no creen que sean subgrupos de un unico fenomeno de redondeamiento, por lo que prefieren los terminos independientes \u00abredondeado\u00bb (exolabial), \u00abcomprimido\u00bb (endolabial) y \u00abdistendido\u00bb (no redondeado).  La nasalizacion se produce cuando parte del aire escapa a traves de la nariz. En las vocales nasales, el velo desciende y parte del aire viaja a traves de la cavidad nasal ademas de por la boca. Una vocal oral es una vocal en la que todo el aire escapa por la boca. El frances, el polaco, el portugues, el navajo y el guarani contrastan vocales orales y nasales.  La sonoridad se refiere a si las cuerdas vocales vibran o no durante la articulacion de una vocal. La mayoria de las lenguas cuentan exclusivamente con vocales sonoras, pero varias lenguas nativas americanas, como el cheyene y las lenguas totonacanas, oponen vocales sonoras y sordas. Las vocales son sordas cuando susurramos. En japones y en frances del Quebec, las vocales que se encuentran entre consonantes sordas a menudo se desonorizan.  Los sonidos sonoros (o \u00abvoz modal\u00bb), los sonidos laringalizados (o \u00abchirridos\u00bb) y los sonidos murmurados (\u00abmurmullos\u00bb) son tipos de fonacion que se usan contrastivamente en algunas lenguas. A menudo van ligados al tono o a distinciones de acento; en el idioma mon, las vocales pronunciadas en el tono alto se producen con voz laringalizada. En este tipo de casos, no esta claro si es el tono, el tipo de sonoridad o la combinacion de ambos, lo que se usa como contraste fonologico.  La raiz de la lengua adelantada (ATR por sus siglas en ingles) es un rasgo comun en gran parte del continente africano. El contraste entre la raiz de la lengua adelantada y retraida se asemeja acusticamente al contraste tenso/laxo, pero su articulacion es diferente. Las vocales ATR conllevan una tension perceptible en el tracto vocal.  Las vocales faringalizadas aparecen en algunas lenguas; el sedang hace uso de este contraste, al igual que las lenguas tungusas. La faringalizacion es similar en articulacion a la raiz de la lengua retraida, pero es acusticamente distinta.  Encontramos un mayor grado de faringalizacion en las lenguas caucasicas nororientales y en las lenguas joisanas, que podria denominarse epiglotalizada, ya que la obstruccion primaria se produce en la punta de la epiglotis.  El grado mas avanzado de faringalizacion se encuentra en las vocales estridentes de las lenguas joisanas, en las que la laringe se eleva y la faringe se obstruye, de modo que, en lugar de las cuerdas vocales, lo que vibra es la epiglotis o el cartilago aritenoide.  Hay que tener en cuenta que, en ocasiones, los terminos \u00abfaringalizada\u00bb, \u00abepiglotalizada\u00bb y \u00abestridente\u00bb se usan indistintamente.  Las vocales retroflejas se caracterizan por una posicion especial de la punta de la lengua, que se eleva hacia el paladar tomando una forma hueca que da a las vocales un timbre especifico. Esta vocales aparecen en lenguas como el ingles(girl, car) o en algunos dialectos del chino (fenomeno conocido como \u00ab\u513f\u5316\u97f3\u00bb, pinyin: erhuayin).  La tension se usa para describir la oposicion entre vocales tensas (como en el ingles leap, suit) y vocales laxas o relajadas (como en el ingles lip, soot). Tradicionalmente se pensaba que se trata del resultado de una tension muscular mayor, sin embargo los experimentos foneticos ha fracasado repetidamente en demostrarlo.  A diferencia de los otros rasgos de cualidad vocalica, la tension solo es aplicable en unas pocas lenguas que cuentan con esta oposicion (principalmente lenguas germanicas, como el ingles); mientras que las vocales de otras lenguas (como el espa\u00f1ol) no pueden ser descritas en relacion con la tension de ninguna manera significativa. En la literatura acerca del ingles, \u00abtensa\u00bb y \u00ablaxa\u00bb suelen usarse intercambiablemente con \u00ablarga\u00bb y \u00abbreve\u00bb respectivamente, ya que dichos rasgos van unidos en las variedades mas comunes de ingles. Sin embargo, esta equivalencia no puede aplicarse a todos los dialectos del ingles ni a otras lenguas.  En la mayoria de las lenguas germanicas, las vocales laxas solo pueden aparecer en silabas cerradas, mientras que las tensas pueden aparecer en cualquier silaba  La acustica de las vocales esta bastante bien estudiada. Las diferentes cualidades vocalicas se concretan en los analisis acusticos de vocales a traves de los valores relativos de los formantes, resonancias acusticas del tracto vocal que se muestran como bandas oscuras en un espectrograma. El tracto vocal actua como resonador, y la posicion de la mandibula, los labios y la lengua afecta a las caracteristicas de dicho resonador, dando lugar a diferentes valores formantes. La acustica de las vocales puede visualizarse haciendo uso de espectrogramas, que muestran la energia acustica en cada frecuencia y como esta cambia con el tiempo.  El primer formante, abreviado \u00abF1\u00bb, corresponde a la abertura vocalica (altura). Las vocales abiertas tienen frecuencias F1 altas, mientras que las vocales cerradas tienen frecuencias F1 bajas, como se puede observar en la ilustracion al margen. Las vocales [i] y [u] cuentan con primeros formantes bajos parecidos, mientras que [\u0251] lo tiene mas alto.  El segundo formante, \u00abF2\u00bb, corresponde a la localizacion vocalica. Las vocales posteriores tienen frecuencias F2 bajas, mientras que las anteriores tienen frecuencias F2 altas. Esto se puede ver claramente en la ilustracion al margen, donde la vocal anterior [i] tiene una frecuencia F2 mucho mas alta que las otras dos vocales. Sin embargo, en las vocales abiertas, la frecuencia F1 alta obliga tambien a una elevacion de la frecuencia F2, por tanto, una medida de localizacion vocalica alternativa es la \u00abdiferencia\u00bb entre el primer y el segundo formante. Por esta razon, hay quien prefiere trazarla como F1 vs. F2\u00a0\u2013\u00a0F1.  Diversos investigadores\u200b\u200b recomiendan el uso de trazados simples de F1 vs. F2. De hecho los analistas han utilizado este tipo de trazados para mostrar la cualidad de las vocales de una amplia variedad de lenguas, incluyendo la Received Pronounciation del ingles britanico,\u200b\u200b el ingles de la Reina,\u200b el ingles americano,\u200b el ingles de Singapur,\u200b el ingles de Brunei,\u200b el frison oriental,\u200b el kabardo,\u200b y varias lenguas indigenas de Australia.\u200b  Las vocales retroflejas se caracterizan por tener valores F3 rebajados.  Generalmente, el redondeamiento se consigue mediante una relacion compleja entre F2 y F3 que tiende a reforzar la posterioridad vocalica. Una de las consecuencias de esto es que las vocales posteriores suelen ser redondeadas, mientras que las anteriores suelen ser no redondeadas; otra es que las vocales redondeadas tienden a colocarse a la derecha de las no redondeadas en los cuadros vocalicos. Es decir, hay una razon para colocar los pares vocalicos de la manera en que se hace.  Los rasgos de prosodia vocalica se describen a menudo independientemente de la cualidad vocalica. En fonetica no lineal, se colocan en capas diferentes. Por lo general, se considera que los rasgos de prosodia vocalica no se aplican a la vocal en si, sino a la silaba, ya que algunas lenguas no oponen duracion vocalica y duracion silabica de forma independiente.  La entonacion abarca los cambios en altura musical, intensidad y velocidad de un enunciado en el tiempo. En las lenguas tonales, en la mayoria de los casos, el tono de una silaba lo lleva la vocal, lo que significa que la altura relativa que marca el tono se superpone en la vocal. Si, por ejemplo, una silaba tiene un tono alto, la altura de la vocal sera alta. en cambio, si la silaba tiene un tono descendente, entonces la altura de la vocal caera de alta a baja durante la pronunciacion de la vocal.  La cantidad vocalica, o duracion, se refiere a la duracion de la vocal. En algunos analisis este rasgo se describe como una caracteristica de la cualidad vocalica, no de la prosodia. El japones, el fines, el hungaro, el arabe y el latin tienen contraste fonologico bidireccional entre vocales breves y largas. El mixe cuenta con un contraste tridireccional entre vocales breves, semilargas y largas, y se sabe que esto sucede en otras lenguas, aunque no siempre como distincion fonologica. En el AFI las vocales largas se escriben como dos puntos triangulares, que consisten en dos triangulos equilateros apuntandose uno a otro en lugar de puntos redondos ([i\u02d0]). El simbolo AFI para las vocales semilargas es la parte superior del simbolo descrito ([i\u02d1]). En ocasiones se ha hablado de vocales mas largas, pero siempre estan divididas entre dos silabas.  Es necesario precisar que la cantidad de una vocal es una abstraccion gramatical, y puede haber mas cantidades pertinentes fonologicamente. Por ejemplo, en fines hay cinco diferentes duraciones fisicas, porque el acento se marca con duracion tanto en las vocales gramaticalmente breves como en las gramaticalmente largas. Sin embargo, en fines el acento no es lexico y siempre se situa en las primeras dos moras, sirviendo esta variacion para separar unas palabras de otras.  En lenguas no tonales, como el espa\u00f1ol, la entonacion incluye el acento lexico. Una silaba acentuada se pronuncia tipicamente con mayor altura, intensidad y cantidad que una silaba no acentuada. Por ejemplo, en la palabra \u00abintensidad\u00bb, la vocal representada por la letra \u00aba\u00bb esta acentuada, por lo que es mas larga y se pronuncia con mayor altura e intensidad que el resto de vocales.  Un sonido vocalico cuya cualidad no cambia a lo largo de la duracion de la vocal se llama monoptongo. A veces se denominan tambien vocales \u00abpuras\u00bb o \u00abestables\u00bb. Un sonido vocalico que se desliza de una cualidad a otra se denomina diptongo, y un sonido vocalico que se desliza sucesivamente a traves de tres cualidades es un triptongo.  Todas las lenguas tienen monoptongos y muchas lenguas tienen diptongos, pero los triptongos o los sonidos vocalicos que tienen incluso mas cualidades son relativamente raros. El espa\u00f1ol cuenta con los tres tipos: el sonido vocalico de \u00absol\u00bb es un monoptongo [o], el sonido vocalico de \u00abhoy\u00bb es un diptongo [oi], y el sonido vocalico de \u00abbuey\u00bb es un triptongo [\u03b2wei].  En fonologia, los diptongos y los triptongos se distinguen de secuencias de monoptongos dependiendo de si el sonido vocalico puede analizarse en diferentes fonemas o no.  El termino \u00abvocal\u00bb se usa a menudo para referirse a los simbolos que representan los sonidos vocalicos en el sistema de escritura de una lengua, especialmente si la lengua usa un alfabeto. En los sistemas de escritura basados en el alfabeto latino, las letras a, e, i, o, u, y, w, A, E, I, O, U, Y, W  se utilizan para representar vocales, aunque no todas estas letras representan vocales en todas las lenguas (algunas, particularmente y, w, se utilizan para representar aproximantes); ademas, existen extensiones del alfabeto latino que tienen diferentes letras para las vocales, como A, O, U, A, \u00c6, \u00d8 Y.  Los valores foneticos varian entre lenguas, y algunas lenguas usan I e Y para la consonante [j], por ejemplo la I inicial en rumano o la Y inicial en espa\u00f1ol (pero tambien como vocal en otras posiciones). En el alfabeto latino original no existia distincion escrita entre V y U, y la letra representaba la aproximante [w]  y las vocales [u] y [\u028a]. En gales moderno, la letra W representa los mismos sonidos. De forma similar, en creek, la letra V representa el fonema [\u0259]. No existe una correspondencia directa necesaria entre los sonidos vocalicos de una lengua y las letras para las vocales. Muchas lenguas que hacen uso del alfabeto latino tienen mas sonidos vocalicos de los que pueden representarse con las siete letras vocalicas estandar. En ingles, por ejemplo, cada una de las siete letras A E I O U Y W puede representar varios sonidos; mientras que la letra Y suele representarse vocal y la W suele aparecer en diptongos.  Otras lenguas hacen uso de combinaciones de letras vocalicas para representar otros sonidos vocalicos, como ocurre a menudo en ingles. Ademas, tambien hay lenguas que utilizan letras modificadas, como A en fines, o que a\u00f1aden diacriticos, como la dieresis, a las vocales con el mismo fin. Ciertas lenguas incluso han creado nuevas letras vocalicas modificando el alfabeto latino estandar de otras maneras, como las letras \u00e6 y \u00f8 que se encuentran en algunas lenguas nordicas. El Alfabeto Fonetico Internacional cuenta con 28 simbolos para representar el abanico de cualidades vocalicas basicas, y un conjunto de diacriticos para denotar variaciones de la vocal basica.  La importancia de las vocales a la hora de distinguir una palabra de otra varia entre lenguas. Los alfabetos usados para escribir las lenguas semiticas, como el alfabeto hebreo y el alfabeto arabe, no suelen marcar todas las vocales, ya que a menudo no son necesarias para identificar una palabra. Estos alfabetos se denominan abyades. Aunque es posible construir oraciones sencillas en espa\u00f1ol que pueden entenderse sin vocales escritas (\u00bfpds ntndr st?), escritos mas largos sin las vocales escritas pueden ser dificiles de entender (por ejemplo, \u00abps\u00bb podria ser \u00abpaso\u00bb, \u00abpeso\u00bb, \u00abpiso\u00bb, \u00abposo\u00bb, \u00abpesa\u00bb, \u00abpuso\u00bb, \u00abpase\u00bb, \u00abpaso\u00bb, \u00abpeso\u00bb, \u00abpise\u00bb, etc.)  En la mayoria de las lenguas, las vocales sirven principalmente para distinguir lexemas separados (\u00abpaso\u00bb y \u00abpeso\u00bb no son dos formas de una misma palabra), mas que diferentes formas inflexionales de un mismo lexema, como suele ocurrir en las lenguas semiticas. Las vocales son particularmente importantes para la estructura de las palabras en lenguas que cuentan con muy pocas consonantes, por ejemplo lenguas polinesias como el maori y el hawaiano, asi como en lenguas cuyos inventarios de vocales son mayores que los de consonantes.  Casi todas las lenguas tienen al menos tres vocales fonologicas, normalmente  [i], [a], [u], como en arabe clasico e inuktitut (o [\u00e6], [\u026a], [\u028a], como en quechua), aunque el adigueo y muchas lenguas sepik tienen un sistema vocalico vertical de [\u0268], [\u0259], [a]. Muy pocas lenguas tienen menos vocales, aunque se ha argumentado que algunas lenguas como el arrernte, el circasiano o lenguas ndu tienen solo dos, [\u0259] y [a], con una [\u0268] epentetica.  No es posible saber cual es la lengua que tiene mas vocales, ya que depende de como se contabilicen. Por ejemplo, las vocales largas, las nasales y varias fonaciones, podrian contarse por separado o no; de hecho, en ocasiones puede no estar claro si la fonacion pertenece a las vocales o a las consonantes de una lengua. Si ignoramos estos problemas y contamos solo las vocales con letras AFI ('cualidades vocalicas'), muy pocas lenguas tienen mas de diez. Las lenguas germanicas tienen algunos de los inventarios mas extensos, el dialecto de Amstetten del bavaro, por ejemplo, cuenta con trece vocales largas: [i\u02d0 y\u02d0 e\u02d0 \u00f8\u02d0 \u025b\u02d0 \u0153\u02d0 \u00e6\u02d0 \u0276\u02d0 a\u02d0 \u0252\u02d0 \u0254\u02d0 o\u02d0 u\u02d0]. Las lenguas mon-jemer del sudeste asiatico tienen tambien inventarios bastante grandes, como las once vocales del vietnamita: [i e \u025b \u00e6 \u0251 \u028c \u0254 \u0264 o \u026f u].  Una de las vocales mas comunes es [a]. Es practicamente universal tener al menos una vocal abierta, aunque por ejemplo en ingles la mayoria de los dialectos tienen una [\u00e6] y una [\u0251] (y a menudo una [\u0252]), pero no [a], y algunos hablantes de tagalo tienen [\u0250], en lugar de [a]. Tambien es extremadamente comun la [i], aunque el quileute tiene [e\u02d0], [\u00e6\u02d0], [a\u02d0], [o\u02d0] sin vocales cerradas, al menos cuando se pronuncian largas. La tercera vocal de los sistemas tipo arabe de tres vocales, /u/, es considerablemente menos comun; una gran parte de las lenguas de Norteamerica tienen sistemas de cuatro vocales [i], [e], [a], [o], como es el caso del nahuatl  Entretanto, podemos afirmar que el sistema mas comun es el pentavocalico simple [a], [e], [i], [o], [u] (carente de nasalizacion salvo excepciones) dandose en alrededor en la mitad de lenguas en el mundo, como por ejemplo el espa\u00f1ol, euskera, japones, griego etcetera.   ","snippet":"En fonetica, una vocal (del latin vocalis) o monoptongo es un sonido de una lengua natural hablada que se pronuncia con el tracto vocal abierto, no habiendo un aumento de la presion del aire en ningun","enlaces_salientes":["Vocal","Vocal","Vocal","Vocal_(canci%C3%B3n)","Espectrograma","Energ%C3%ADa_sonora","Fon%C3%A9tica","Sonido","Lengua_natural","Glotis","Consonante","S%C3%ADlaba","Semivocal","N%C3%BAcleo_sil%C3%A1bico","Consonante","Ataque_sil%C3%A1bico","Coda_(sil%C3%A1bica)","Idioma_ingl%C3%A9s","Idioma_serbio","Aproximante","Kenneth_Pike","Lat%C3%ADn","Vocal_anterior","Vocal_anterior","Vocal_central","Vocal_posterior","Vocal_posterior","Vocal_cerrada","Vocal_cerrada_anterior_no_redondeada","Vocal_cerrada_anterior_redondeada","Vocal_cerrada_central_no_redondeada","Vocal_cerrada_central_redondeada","Vocal_cerrada_posterior_no_redondeada","Vocal_cerrada_posterior_redondeada","Vocal_media_anterior_no_redondeada","Vocal_media_anterior_redondeada","Vocal_casi_cerrada_semianterior_no_redondeada","Vocal_casi_cerrada_semianterior_redondeada","Vocal_casi_cerrada_semiposterior_redondeada","Vocal_semicerrada_anterior_no_redondeada","Vocal_semicerrada_anterior_redondeada","Vocal_semicerrada_central_no_redondeada","Vocal_semicerrada_central_redondeada","Vocal_semicerrada_posterior_no_redondeada","Vocal_semicerrada_posterior_redondeada","Vocal_casi_cerrada_central_no_redondeada","Vocal_casi_cerrada_central_redondeada","Vocal_media_central","Vocal_media_posterior_no_redondeada","Vocal_media_posterior_redondeada","Vocal_semiabierta_anterior_no_redondeada","Vocal_semiabierta_anterior_redondeada","Vocal_semiabierta_central_no_redondeada","Vocal_semiabierta_central_redondeada","Vocal_semiabierta_posterior_no_redondeada","Vocal_semiabierta_posterior_redondeada","Vocal_casi_abierta_anterior_no_redondeada","Vocal_casi_abierta_central","Vocal_casi_abierta_central_redondeada","Vocal_abierta_central_no_redondeada","Vocal_abierta_central_redondeada","Vocal_abierta_anterior_no_redondeada","Vocal_abierta_anterior_redondeada","Vocal_abierta_posterior_no_redondeada","Vocal_abierta_posterior_redondeada","Vocal_casi_cerrada","Vocal_semicerrada","Vocal_media","Vocal_semiabierta","Vocal_casi_abierta","Vocal_abierta","Fon%C3%A9tica_articulatoria","Daniel_Jones_(fonetista)","Abertura_(fon%C3%A9tica)","Abertura","Maxilar","Alfabeto_Fon%C3%A9tico_Internacional","Formante","Vocal_cerrada","Vocal_casi_cerrada","Vocal_semicerrada","Vocal_intermedia","Vocal_semiabierta","Vocal_casi_abierta","Vocal_abierta","Diptongo","Idioma_alem%C3%A1n","Idioma_b%C3%A1varo","Formante","Alfabeto_Fon%C3%A9tico_Internacional","Vocal_anterior","Vocal_central","Vocal_posterior","Redondeamiento","Lenguas_ur%C3%A1licas","Idioma_estonio","Lenguas_t%C3%BArquicas","Idioma_vietnamita","Idioma_coreano","Idioma_japon%C3%A9s","Idioma_sueco","Idioma_noruego","Vocal_cerrada_anterior_redondeada","Vocal_cerrada_central_redondeada","Nasalizaci%C3%B3n","Nasalizaci%C3%B3n","Vocal_nasal","Velo_del_paladar","Idioma_franc%C3%A9s","Idioma_polaco","Idioma_portugu%C3%A9s","Idioma_navajo","Idioma_guaran%C3%AD","Fonaci%C3%B3n","Fonaci%C3%B3n","Cuerdas_vocales","Idioma_cheyene","Lenguas_totonacanas","Idioma_japon%C3%A9s","Franc%C3%A9s_del_Quebec","Sonidos_sonoros","Lengua_tonal","Idioma_mon","ATR_(rasgo_fon%C3%A9tico)","ATR_(rasgo_fon%C3%A9tico)","Lenguas_tunguses","Ac%C3%BAstica","Lenguas_cauc%C3%A1sicas_nororientales","Lenguas_joisanas","Laringe","Cart%C3%ADlago_aritenoide","Pinyin","Lenguas_germ%C3%A1nicas","Lenguas_germ%C3%A1nicas","S%C3%ADlaba","Fon%C3%A9tica","Resonancia_(mec%C3%A1nica)","Espectrograma","Resonador","Vocal_abierta","Vocal_cerrada","Vocal_posterior","Vocal_anterior","Prosodia","Entonaci%C3%B3n","S%C3%ADlaba","Entonaci%C3%B3n","Altura_musical","Enunciado","Lenguas_tonales","Idioma_mixe","Alfabeto_Fon%C3%A9tico_Internacional","Mora_(ling%C3%BC%C3%ADstica)","Acento_l%C3%A9xico","Monoptongo","Diptongo","Triptongo","Fonolog%C3%ADa","Fonema","Sistema_de_escritura","Sistema_de_escritura","Alfabeto","Alfabeto_latino","Aproximante","Idioma_gal%C3%A9s","Idioma_creek","Diacr%C3%ADtico","Di%C3%A9resis_(signo)","Lenguas_n%C3%B3rdicas","Alfabeto_Fon%C3%A9tico_Internacional","Lenguas_sem%C3%ADticas","Alfabeto_hebreo","Alfabeto_%C3%A1rabe","Abyad","Lexema","Lenguas_polinesias","Idioma_maor%C3%AD","Idioma_hawaiano","%C3%81rabe_cl%C3%A1sico","Idioma_inuktitut","Idioma_quechua","Idioma_adigu%C3%A9","Lenguas_sepik","Idioma_arrernte","Lenguas_cauc%C3%A1sicas_noroccidentales","Lenguas_ndu","Ep%C3%A9ntesis","Fonaci%C3%B3n","Lenguas_germ%C3%A1nicas","Amstetten","Idioma_b%C3%A1varo","Lenguas_mon-jemer","Idioma_vietnamita","Idioma_tagalo","Idioma_quileute","Idioma_nahuatl","Idioma_espa%C3%B1ol","Idioma_euskera","Idioma_japon%C3%A9s","Idioma_griego","Consonante","Fonolog%C3%ADa_del_espa%C3%B1ol","Cambridge_University_Press","Universidad_de_Cambridge","ISBN","ISSN","ISBN","ISBN","ISBN","ISBN","University_of_Chicago","ISBN","ISBN","ISBN","ISBN","ISBN","Wikcionario","Diccionario_de_la_lengua_espa%C3%B1ola","MP3","Wayback_Machine","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Syst%C3%A8me_universitaire_de_documentation","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Conjunto_vac%C3%ADo","titulo":"Conjunto vacio","contenido":"Desde principios del siglo\u00a0XX, en la matematica, particularmente en la teoria axiomatica de Conjuntos de ZF o la teoria intuitiva de conjuntos, el conjunto vacio es  el que no posee  elemento alguno. Puesto que lo unico que define a un conjunto es la propiedad que satisfacen sus elementos, el conjunto vacio es unico.  Algunas propiedades de los conjuntos son obviamente ciertas para el conjunto vacio. En una teoria axiomatica de conjuntos, la existencia de un conjunto vacio se postula.  El conjunto vacio es el conjunto que no tiene elementos.  El conjunto vacio es denotado por los simbolos:   \u2205 o \u00b4 \u2205 }}\\;\\emptyset \\,}  derivados de la letra \u00d8 de las lenguas danesa y noruega, entre otras. Esta notacion fue introducida por Andre Weil en 1939.\u200b Otra notacion comun para el conjunto vacio es la notacion extensiva, especificando sus elementos (ninguno) entre llaves:  El conjunto vacio \u2205 es el conjunto de todos los elementos x tal que x = x  Expresion analitica\u00a0:  Sea el conjunto en el espacio vectorial R S = { x \u2208 Z : x 2 \u2212 x \u2212 2 = 0 } . :x^{2}-x-2=0\\}.} .  Entonces S = \u2205 \u200b  Es necesario y legitimo hablar de \u00abel conjunto vacio\u00bb y no de \u00abun conjunto vacio\u00bb. El conjunto vacio posee ciertas propiedades:   A \u2286 \u2205 si y solo si A = \u2205 }\\;A=\\varnothing }   | \u2205 | = 0  Muchas afirmaciones sobre el conjunto vacio son trivialmente ciertas, debido a la siguiente propiedad:  Sea una propiedad expresada mediante un predicado (como \u00abser mortal\u00bb o \u00abser un numero primo\u00bb). Entonces todos los elementos del conjunto vacio poseen esa propiedad.  Este teorema es cierto porque el conjunto vacio no tiene elementos, y decir \u00abtodo hombre en \u2205 es inmortal\u00bb es lo mismo que afirmar que \u00abno hay ningun hombre mortal en \u2205\u00bb, y esto ultimo es trivialmente cierto. Ademas, el conjunto vacio actua como el cero en las operaciones del algebra de conjuntos:   \u2205 \u2286 A   A \u222a \u2205 = A   A \u2229 \u2205 = \u2205   A \u00d7 \u2205 = \u2205 \u00d7 A = \u2205  Adicionalmente, el conjunto potencia del conjunto vacio es el que contiene solo al mismo conjunto vacio, es decir, { \u2205 }. Por lo tanto, el numero cardinal de P ( \u2205 ) = { \u2205 } }(\\varnothing )=\\} es | P ( \u2205 ) | = 1 }(\\varnothing )|=1} .  Dado que el conjunto vacio no tiene miembros cuando se considera como un subconjunto de cualquier conjunto ordenado, cada miembro de ese conjunto sera un limite superior e inferior para el conjunto vacio. Por ejemplo, cuando se ve como un subconjunto de los numeros reales, con su orden habitual, representado por una recta numerica real, cada numero real es un limite superior e inferior para el conjunto vacio.\u200b Cuando se ve como un subconjunto de los valores reales extendidos formados al agregar dos \"numeros\" o \"puntos\" a los numeros reales (es decir, infinito negativo, denotado \u2212 \u221e , que se define como menor que cualquier otro numero real aumentado, y el infinito positivo , denotado por + \u221e , , que se define como mayor que cualquier otro numero real aumentado), obtenemos que:   sup \u2205 = min ( { \u2212 \u221e , + \u221e } \u222a R ) = \u2212 \u221e , \\cup \\mathbb {R} )=-\\infty ,} y inf \u2205 = max ( { \u2212 \u221e , + \u221e } \u222a R ) = + \u221e . \\cup \\mathbb {R} )=+\\infty .}  En otras palabras, el limite superior mas peque\u00f1o (sup o supremum) del conjunto vacio es infinito negativo, mientras que el limite inferior mas grande (inf o infimum) es infinito positivo. Por analogia con lo anterior, en el dominio de los valores reales extendidos, el infinito negativo es el elemento identico para los operadores maximo y supremo, mientras que el infinito positivo es el elemento identidad para los operadores minimo e infimo.  En cualquier espacio topologico X, el conjunto vacio es abierto por definicion, al igual que X. Dado que el complemento del conjunto abierto es cerrado, y el conjunto vacio y X son complementarios entre si, el conjunto vacio tambien es cerrado, lo que lo convierte en un conjunto abierto-cerrado. Ademas, el conjunto vacio es compacto por el hecho de que todo conjunto finito es compacto.  El cierre del conjunto vacio es vacio. Esto se conoce como \"preservacion de uniones nulas\".  Si A es un conjunto entonces hay exactamente una funcion f desde el \u2205 hacia A , que es una funcion vacia. Por lo tanto, el conjunto vacio es el unico objeto inicial de la categoria de conjunto y funcion.  Un conjunto vacio se puede convertir en un espacio topologico, llamado espacio vacio, de una sola manera: definiendo que el conjunto vacio sea abierto. Este espacio topologico vacio es un objeto inicial unico en la categoria de espacios topologicos con mapas continuos. De hecho, es un objeto inicial estricto: solo el conjunto vacio tiene una funcion de conjunto vacio.  En la construccion ordinal de von Neumann, 0 se define como el conjunto vacio, y el sucesor del ordinal se define como S ( \u03b1 ) = \u03b1 \u222a { \u03b1 } } . Entonces tenemos 0 = \u2205 , 1 = 0 \u222a { 0 } = { \u2205 } =\\} , 2 = 1 \u222a { 1 } = { \u2205 , { \u2205 } } =\\\\}} , y asi sucesivamente.\u200b La construccion de Von Neumann, junto con el axioma del infinito, que garantiza la existencia de al menos un conjunto infinito, puede usarse para construir el conjunto de numeros naturales, N 0 _{0}} , tal que se satisfagan los Axiomas de Peano de la aritmetica. ","snippet":"Desde principios del siglo\u00a0XX, en la matematica, particularmente en la teoria axiomatica de Conjuntos de ZF o la teoria intuitiva de conjuntos, el conjunto vacio es  el que no posee  elemento alguno. ","enlaces_salientes":["Conjunto_vac%C3%ADo","Conjunto_vac%C3%ADo","Conjunto_vac%C3%ADo","Matem%C3%A1ticas","Axiomas_de_Zermelo-Fraenkel","Conjunto","Elemento_de_un_conjunto","Trivial_(matem%C3%A1tica)","Teor%C3%ADa_axiom%C3%A1tica_de_conjuntos","%C3%98","Idioma_dan%C3%A9s","Idioma_noruego","Andr%C3%A9_Weil","Par%C3%A9ntesis","Subconjunto","N%C3%BAmero_cardinal","Conjunto_finito","Elemento_neutro","%C3%81lgebra_de_conjuntos","Uni%C3%B3n_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Producto_cartesiano","Conjunto_potencia","N%C3%BAmero_cardinal","Espacio_topol%C3%B3gico","Conjunto_abierto","Uni%C3%B3n_de_conjuntos","Axioma_del_infinito","Axiomas_de_Peano","%C3%81lgebra_de_conjuntos","Conjunto","Teor%C3%ADa_de_conjuntos","Suma_vac%C3%ADa","Producto_vac%C3%ADo","Andr%C3%A9_Weil","ISBN","Control_de_autoridades"]}
{"url":"Teor%C3%ADa_de_conjuntos#Teor.C3.ADa_axiom.C3.A1tica_de_conjuntos","titulo":"Teoria de conjuntos","contenido":"La teoria de conjuntos es una rama de la logica matematica que estudia las propiedades y relaciones de los conjuntos: colecciones abstractas de objetos, consideradas como objetos en si mismas. Los conjuntos y sus operaciones mas elementales son una herramienta basica que permite formular de cualquier otra teoria matematica.\u200b  La teoria de los conjuntos es lo suficientemente flexible y general como para construir el resto de objetos y estructuras de interes en matematicas: numeros, funciones, figuras geometricas, etc; gracias a las herramientas de la logica, permite estudiar los fundamentos.  Ademas, la propia teoria de conjuntos es objeto de estudio per se, no solo como herramienta auxiliar, en particular las propiedades y relaciones de los  conjuntos infinitos. En esta disciplina es habitual que se presenten casos de propiedades indemostrables o contradictorias, como la hipotesis del continuo o la existencia de algun cardinal inaccesible. Por esta razon, sus razonamientos y tecnicas se apoyan en gran medida en la logica matematica.\u200b  El desarrollo historico de la teoria de conjuntos se atribuye a Georg Cantor, que comenzo a investigar cuestiones conjuntistas (puras) del infinito en la segunda mitad del siglo\u00a0XIX, precedido por algunas ideas de Bernhard Bolzano e influido por Richard Dedekind. El descubrimiento de las paradojas de la teoria cantoriana de conjuntos, formalizada por Gottlob Frege, propicio los trabajos de Bertrand Russell, Ernst Zermelo y Abraham Fraenkel.\u200b  La teoria de conjuntos se emplea habitualmente como sistema fundacional de toda la matematica, en particular en la forma de la teoria de conjuntos de Zermelo-Fraenkel con el axioma de eleccion.\u200b Ademas de su papel fundacional, la teoria de conjuntos tambien proporciona el marco para desarrollar una teoria matematica del infinito, y tiene varias aplicaciones en informatica, filosofia y semantica formal. Su atractivo fundacional, junto con sus paradojas, sus implicaciones para el concepto de infinito y sus multiples aplicaciones han hecho de la teoria de conjuntos un area de gran interes para logicos y filosofos de la matematica. La investigacion contemporanea sobre la teoria de conjuntos abarca una amplia gama de temas, que van desde la estructura de la linea de numeros reales hasta el estudio de la consistencia del cardinal grande.  Los temas matematicos suelen surgir y evolucionar a traves de las interacciones entre muchos investigadores. Sin embargo, la Teoria de Conjuntos fue fundada por un solo articulo en 1874 por Georg Cantor: Sobre una propiedad de la coleccion de todos los numeros algebraicos reales.\u200b\u200b  Desde el siglo\u00a0V\u00a0a.\u00a0C., comenzando por el matematico griego Zenon de Elea en Occidente y los primeros matematicos indios en Oriente, los matematicos habian luchado con el concepto de infinito. Especialmente notable es el trabajo de Bernard Bolzano en la primera mitad del siglo\u00a0XIX.\u200b La comprension moderna del infinito comenzo en 1870-1874, y fue motivada por el trabajo de Cantor en analisis real.\u200b Un encuentro en 1872 entre Cantor y Richard Dedekind influyo en el pensamiento de Cantor, y culmino en el articulo de Cantor de 1874.  El trabajo de Cantor polarizo inicialmente a los matematicos de su epoca. Mientras que Karl Weierstrass y Dedekind apoyaban a Cantor, Leopold Kronecker, considerado ahora como el fundador del  constructivismo matematico, no lo hacia. La teoria de conjuntos cantoriana acabo por generalizarse, debido a la utilidad de los conceptos cantorianos, como la correspondencia uno a uno entre conjuntos, su demostracion de que hay mas numeros reales que enteros, y la \"infinidad de infinitos\" (el paraiso de Cantor) resultante de la operacion conjunto de potencias. Esta utilidad de la teoria de conjuntos condujo al articulo \"Mengenlehre\", aportado en 1898 por Arthur Schonflies a la enciclopedia de Klein.  La siguiente oleada de entusiasmo en la teoria de conjuntos se produjo alrededor de 1900, cuando se descubrio que algunas interpretaciones de la teoria de conjuntos cantoriana daban lugar a varias contradicciones, llamadas antinomias o paradojas. Bertrand Russell y Ernst Zermelo encontraron de forma independiente la paradoja mas sencilla y conocida, ahora llamada Paradoja de Russell: considere \"el conjunto de todos los conjuntos que no son miembros de si mismos\", lo que lleva a una contradiccion ya que debe ser un miembro de si mismo y no un miembro de si mismo. En 1899, el propio Cantor habia planteado la pregunta \"\u00bfCual es el numero cardinal del conjunto de todos los conjuntos?\", y obtuvo una paradoja relacionada. Russell utilizo su paradoja como tema en su revision de las matematicas continentales de 1903 en su obra Los principios de las matematicas.  En 1906, los lectores ingleses obtuvieron el libro Theory of Sets of Points \u200b por los esposos William Henry Young y Grace Chisholm Young, publicado por Cambridge University Press.  El impulso de la teoria de conjuntos fue tal que el debate sobre las paradojas no condujo a su abandono. Los trabajos de Zermelo en 1908 y los de Abraham Fraenkel y Thoralf Skolem en 1922 dieron lugar al conjunto de axiomas ZFC, que se convirtio en el conjunto de axiomas mas utilizado para la teoria de conjuntos. El trabajo de analistas, como el de Henri Lebesgue, demostro la gran utilidad matematica de la teoria de conjuntos, que desde entonces se ha convertido en un tejido de la matematica moderna. La teoria de conjuntos se utiliza comunmente como sistema fundacional, aunque en algunas areas -como la geometria algebraica y la topologia algebraica- se considera que la teoria de categorias es un fundamento preferible.  La teoria de conjuntos mas elemental es una de las herramientas basicas del lenguaje matematico. De hecho, toda la matematica moderna ha podido ser axiomatizada en terminos de conjuntos, razon por la cual el estudio formal de la teoria de conjuntos es basica a la hora de estudiar los fundamentos de las matematicas.  La idea inicial es que los conjuntos son entes abstractos que contienen elementos (otras entidades abstractas). Dados unos elementos, unos objetos matematicos como numeros o poligonos por ejemplo, puede imaginarse una coleccion determinada de estos objetos, un conjunto. Cada uno de estos elementos pertenece al conjunto, y esta nocion de pertenencia es la relacion relativa a conjuntos mas basica. Los propios conjuntos pueden imaginarse a su vez como elementos de otros conjuntos. La obtencion  de un elemento a a un conjunto A se indica como a \u2208 A . Una relacion entre conjuntos derivada de la relacion de pertenencia es la relacion de inclusion. Una subcoleccion de elementos B de un conjunto dado A es un subconjunto de A , y se indica como B \u2286 A ( B esta incluido en A ). Tambien se puede expresar esto escribiendo A \u2287 B (que se lee A contiene a B o A incluye a B ).\u200b   N \u2282 Z \u2282 Q \u2282 R \u2282 C \\subset \\mathbb {Z} \\subset \\mathbb {Q} \\subset \\mathbb {R} \\subset \\mathbb {C} }  Existen unas operaciones basicas que permiten manipular los conjuntos y sus elementos, similares a las operaciones aritmeticas, constituyendo el algebra de conjuntos:  Los conjuntos y las operaciones con conjuntos se pueden representar visualmente empleando los diagramas de Venn.\u200b  La teoria de conjuntos comienza con una relacion binaria fundamental entre un objeto o y un conjunto A. Si o es un miembro del conjunto (o elemento) de A, se utiliza la notacion o \u2208 A.\u200b Un conjunto se describe enumerando elementos separados por comas, o por una propiedad caracterizadora de sus elementos, entre llaves { }.\u200b Como los conjuntos son objetos, la relacion de pertenencia tambien puede relacionar conjuntos.  Una relacion binaria derivada entre dos conjuntos es la relacion de subconjunto, tambien llamada inclusion de conjuntos. Si todos los miembros del conjunto A son tambien miembros del conjunto B, entonces A es un subconjunto de B, denotado A \u2286 B.\u200b Por ejemplo, {1, 2} es un subconjunto de {1, 2, 3}, y tambien lo es {2} pero {1, 4} no lo es. Como implica esta definicion, un conjunto es un subconjunto de si mismo. Para los casos en que esta posibilidad no es adecuada o tendria sentido rechazarla, se define el termino subconjunto propio. A se llama subconjunto propio de B si y solo si A es un subconjunto de B, pero A no es igual a B. Ademas, 1, 2 y 3 son miembros (elementos) del conjunto {1, 2, 3}, pero no son subconjuntos del mismo; y a su vez, los subconjuntos, como {1}, no son miembros del conjunto {1, 2, 3}.  Un conjunto es puro si todos sus miembros son conjuntos, todos los miembros de sus miembros son conjuntos, y asi sucesivamente. Por ejemplo, el conjunto {{}} que contiene solo el conjunto vacio es un conjunto puro no vacio. En la teoria de conjuntos moderna, es comun restringir la atencion al universo de von Neumann de los conjuntos puros, y muchos sistemas de teoria axiomatica de conjuntos estan dise\u00f1ados para axiomatizar solo los conjuntos puros. Hay muchas ventajas tecnicas en esta restriccion, y se pierde poca generalidad, porque esencialmente todos los conceptos matematicos pueden ser modelados por conjuntos puros. Los conjuntos en el universo de von Neumann se organizan en una jerarquia acumulativa, basada en la profundidad de anidamiento de sus miembros, miembros de miembros, etc. A cada conjunto de esta jerarquia se le asigna (por recursion transfinita) un  numero ordinal a l p h a , conocido como su rango. El rango de un conjunto puro X se define como el  limite superior minimo de todos los  ordinales sucesores de los rangos de los miembros de X . Por ejemplo, al conjunto vacio se le asigna el rango 0, mientras que al conjunto  {{}}  que contiene solo el conjunto vacio se le asigna el rango 1. Para cada ordinal \u03b1 , se define el conjunto V \u03b1 } que consiste en todos los conjuntos puros con rango menor que \u03b1 . El universo entero de von Neumann se denomina V .  La teoria informal de conjuntos apela a la intuicion para determinar como se comportan los conjuntos. Sin embargo, es sencillo plantear cuestiones acerca de las propiedades de estos que llevan a contradiccion si se razona de esta manera, como la famosa paradoja de Russell. Historicamente esta fue una de las razones para el desarrollo de las teorias axiomaticas de conjuntos, siendo otra el interes en determinar exactamente que enunciados acerca de los conjuntos necesitan que se asuma el polemico axioma de eleccion para ser demostrados.  Las teorias axiomaticas de conjuntos son colecciones precisas de axiomas escogidos para poder derivar todas las propiedades de los conjuntos con el suficiente rigor matematico. Algunos ejemplos conocidos son:  La teoria de conjuntos es una de las principales areas de investigacion en matematicas, con muchos subcampos interrelacionados.  La \"teoria combinatoria de conjuntos\" se refiere a las extensiones de la  combinatoria finita a los conjuntos infinitos. Esto incluye el estudio de la aritmetica cardinal y el estudio de extensiones del teorema de Ramsey como el teorema de Erdos-Rado.  La teoria descriptiva de conjuntos es el estudio de los subconjuntos de la recta real y, mas generalmente, de los subconjuntos de los espacios polacos. Comienza con el estudio de las \u00abclases de puntos\u00bb en la jerarquia de Borel y se extiende al estudio de jerarquias mas complejas como la jerarquia proyectiva y la jerarquia de Wadge. Muchas propiedades de los conjuntos de Borel pueden establecerse en ZFC, pero demostrar que estas propiedades se mantienen para conjuntos mas complicados requiere axiomas adicionales relacionados con la determinacion y los cardinales grandes.  El campo de la teoria descriptiva efectiva de conjuntos se encuentra entre la teoria de conjuntos y la  teoria de la recursion. Incluye el estudio de las clases de puntos ligeros, y esta estrechamente relacionado con la teoria hiperaritmetica. En muchos casos, los resultados de la teoria de conjuntos descriptiva clasica tienen versiones efectivas; en algunos casos, los nuevos resultados se obtienen demostrando primero la version efectiva y luego extendiendola (\"relativizandola\") para hacerla mas ampliamente aplicable.  Un area reciente de investigacion se refiere a las relaciones de equivalencia de Borel y a las relaciones de equivalencia definibles mas complicadas. Esto tiene importantes aplicaciones al estudio de invariantes en muchos campos de las matematicas.  En la teoria de conjuntos tal y como la definio Cantor y la axiomatizaron Zermelo y Fraenkel, un objeto es miembro de un conjunto o no lo es. En la  teoria de conjuntos difusos esta condicion fue relajada por Lotfi A. Zadeh de modo que un objeto tiene un grado de pertenencia a un conjunto, un numero entre 0 y 1. Por ejemplo, el grado de pertenencia de una persona al conjunto de \"personas altas\" es mas flexible que una simple respuesta de si o no y puede ser un numero real como 0,75.  Un modelo interior de la teoria de conjuntos de Zermelo-Fraenkel (ZF) es una clase transitiva que incluye todos los ordinales y satisface todos los axiomas de ZF. El ejemplo canonico es el universo construible L desarrollado por Godel. Una de las razones por las que el estudio de los modelos internos es de interes es que puede utilizarse para demostrar resultados de consistencia. Por ejemplo, se puede demostrar que independientemente de si un modelo V de ZF satisface la hipotesis del continuo o el axioma de eleccion, el modelo interno L construido dentro del modelo original satisfara tanto la hipotesis del continuo generalizado como el axioma de eleccion. Asi, la suposicion de que ZF es consistente (tiene al menos un modelo) implica que ZF junto con estos dos principios es consistente.  El estudio de los modelos internos es comun en el estudio de la determinacion y de los grandes cardinales, especialmente cuando se consideran axiomas como el axioma de determinacion que contradicen el axioma de eleccion. Incluso si un modelo fijo de la teoria de conjuntos satisface el axioma de eleccion, es posible que un modelo interno no satisfaga el axioma de eleccion. Por ejemplo, la existencia de cardinales suficientemente grandes implica que hay un modelo interno que satisface el axioma de determinacion (y por tanto no satisface el axioma de eleccion).\u200b  Un cardinal grande es un numero cardinal con una propiedad extra. Se estudian muchas propiedades de este tipo, incluyendo cardinal inaccesibles, cardinal medibles, y muchas mas. Estas propiedades tipicamente implican que el numero cardinal debe ser muy grande, con la existencia de un cardinal con la propiedad especificada indemostrable en teoria de conjuntos de Zermelo-Fraenkel.  Determinacion se refiere al hecho de que, bajo los supuestos adecuados, ciertos juegos de dos jugadores con informacion perfecta estan determinados desde el principio en el sentido de que un jugador debe tener una estrategia ganadora. La existencia de estas estrategias tiene importantes consecuencias en la teoria descriptiva de conjuntos, ya que la suposicion de que una clase mas amplia de juegos esta determinada implica a menudo que una clase mas amplia de conjuntos tendra una propiedad topologica. El axioma de determinacion (AD) es un importante objeto de estudio; aunque es incompatible con el axioma de eleccion, AD implica que todos los subconjuntos de la recta real se comportan bien (en particular, medibles y con la propiedad de conjunto perfecto). La AD puede utilizarse para demostrar que los grados de Wadges tienen una estructura elegante.  Paul Cohen invento el metodo de forzamiento mientras buscaba una  modelo de ZFC en la que fallara la hipotesis del continuo, o un modelo de ZF en el que fallara el axioma de eleccion. El forzamiento adjunta a algun modelo dado de la teoria de conjuntos conjuntos adicionales para crear un modelo mas grande con propiedades determinadas (es decir, \"forzadas\") por la construccion y el modelo original. Por ejemplo, la construccion de Cohen une subconjuntos adicionales de los numeros naturales sin cambiar ninguno de los numeros cardinales del modelo original. El forzamiento es tambien uno de los dos metodos para demostrar la consistencia relativa por metodos finiticos, el otro metodo es el Modelo booleano valorado.  Un invariante cardinal es una propiedad de la linea real medida por un numero cardinal. Por ejemplo, un invariante bien estudiado es la menor cardinalidad de una coleccion de conjunto reducido de reales cuya union es toda la recta real. Se trata de invariantes en el sentido de que dos modelos isomorficos de la teoria de conjuntos deben dar el mismo cardinal para cada invariante. Se han estudiado muchos invariantes cardinales, y las relaciones entre ellos son a menudo complejas y estan relacionadas con axiomas de la teoria de conjuntos.  La topologia teorica de conjuntos estudia cuestiones de topologia general que son de naturaleza teorica de conjuntos o que requieren metodos avanzados de la teoria de conjuntos para su solucion. Muchos de estos teoremas son independientes de la ZFC, requiriendo axiomas mas fuertes para su demostracion. Un problema famoso es la espacio normal de Moore, una cuestion de topologia general que fue objeto de intensa investigacion. Finalmente se demostro que la respuesta a la cuestion del espacio normal de Moore es independiente de ZFC.  Desde los inicios de la teoria de conjuntos, algunos matematicos han objetado a la misma como  fundamento de las matematicas. La objecion mas comun a la teoria de conjuntos, una Kronecker expresada en los primeros a\u00f1os de la teoria de conjuntos, parte de la vision  constructivista de que las matematicas estan vagamente relacionadas con la computacion. Si se acepta este punto de vista, entonces el tratamiento de los conjuntos infinitos, tanto en la teoria informal de conjuntos como en la teoria axiomatica de conjuntos, introduce en las matematicas metodos y objetos que no son computables ni siquiera en principio. La viabilidad del constructivismo como fundamento sustitutivo de las matematicas aumento considerablemente con el influyente libro de Errett Bishop Foundations of Constructive Analysis.\u200b  Una objecion diferente planteada por Henri Poincare es que la definicion de conjuntos mediante los esquemas axiomaticos de especificacion y reemplazo, asi como el Axioma del conjunto potencia, introduce la Impredicatividad, un tipo de circularidad, en las definiciones de los objetos matematicos. El alcance de las matematicas fundadas en la predicatividad, aunque es menor que el de la teoria de Zermelo-Fraenkel comunmente aceptada, es mucho mayor que el de las matematicas constructivas, hasta el punto de que Solomon Feferman ha dicho que todo el analisis cientificamente aplicable puede desarrollarse, utilizando metodos predicativos.\u200b  Ludwig Wittgenstein condeno filosoficamente la teoria de conjuntos por sus connotaciones de platonismo matematico.\u200b Escribio que \"la teoria de conjuntos es erronea ya que se basa en el \"sinsentido\" del simbolismo ficticio, tiene \"modismos perniciosos\", y que no tiene sentido hablar de \"todos los numeros\".\u200b Wittgenstein identifico las matematicas con la deduccion humana algoritmica;\u200b la necesidad de un fundamento seguro para las matematicas le parecia un sinsentido.\u200b  Ademas, dado que el esfuerzo humano es necesariamente finito, la filosofia de Wittgenstein requeria un compromiso ontologico con el constructivismo radical y el finitismo.  Los enunciados metamatematicos -que, para Wittgenstein, incluian cualquier enunciado que cuantificara sobre dominios infinitos, y por tanto casi toda la teoria de conjuntos moderna- no son matematicas.\u200b  Pocos filosofos modernos han adoptado los puntos de vista de Wittgenstein despues de una espectacular metedura de pata en Observaciones sobre los fundamentos de las matematicas: Wittgenstein intento refutar los teoremas de incompletitud de Godel despues de haber leido solo el resumen.  Como se\u00f1alaron los revisores Kreisel, Bernays, Dummett, y Goodstein, muchas de sus criticas no se aplicaban al articulo en su totalidad. Solo recientemente filosofos como Crispin Wright han comenzado a rehabilitar los argumentos de Wittgenstein.\u200b  Los teoricos de la categoria han propuesto la teoria de los topos como una alternativa a la teoria axiomatica de conjuntos tradicional. La teoria de topos puede interpretar varias alternativas a dicha teoria, como el constructivismo, la teoria de conjuntos finitos y la teoria de conjuntos de la computable.\u200b\u200b Los topos tambien dan un marco natural para forzar y discutir la independencia de la eleccion de ZF, ademas de proporcionar el marco para la topologia sin sentido y el espacio de Stone.\u200b  Un area de investigacion activa es la de los fundamentos univalentes y relacionada con ella la Teoria de tipos homotopica. Dentro de la teoria de tipos de homotopia, un conjunto puede ser considerado como un tipo 0 de homotopia, con \u00abpropiedades universales\u00bb de los conjuntos que surgen de las propiedades inductivas y recursivas de los  tipos inductivos superiores. Principios como el Axioma de eleccion y la Principio del tercero excluido pueden ser formulados de una manera correspondiente a la formulacion clasica en la teoria de conjuntos o tal vez en un espectro de formas distintas unicas a la teoria de tipos. Algunos de estos principios pueden demostrarse como consecuencia de otros principios. La variedad de formulaciones de estos principios axiomaticos permite un analisis detallado de las formulaciones necesarias para derivar diversos resultados matematicos.\u200b\u200b ","snippet":"La teoria de conjuntos es una rama de la logica matematica que estudia las propiedades y relaciones de los conjuntos: colecciones abstractas de objetos, consideradas como objetos en si mismas. Los con","enlaces_salientes":["Teor%C3%ADa_de_conjuntos","Teor%C3%ADa_de_conjuntos","Teor%C3%ADa_de_conjuntos","Diagrama_de_Venn","Intersecci%C3%B3n_de_conjuntos","Conjunto","L%C3%B3gica_matem%C3%A1tica","Conjunto","N%C3%BAmero","Funci%C3%B3n_matem%C3%A1tica","Figura_geom%C3%A9trica","L%C3%B3gica_matem%C3%A1tica","Conjunto_infinito","Independencia_l%C3%B3gica","Consistencia_l%C3%B3gica","Hip%C3%B3tesis_del_continuo","Cardinal_inaccesible","Georg_Cantor","Infinito","Bernhard_Bolzano","Richard_Dedekind","Gottlob_Frege","Bertrand_Russell","Ernst_Zermelo","Abraham_Fraenkel","Axiomas_de_Zermelo-Fraenkel","Axioma_de_elecci%C3%B3n","Infinito","Inform%C3%A1tica","Filosof%C3%ADa","Sem%C3%A1ntica_formal","Paradojas","L%C3%B3gica","Filosof%C3%ADa_de_la_matem%C3%A1tica","N%C3%BAmeros_reales","Consistencia_(l%C3%B3gica)","Cardinal_grande","Georg_Cantor","Georg_Cantor","Zen%C3%B3n_de_Elea","Infinito","Bernard_Bolzano","An%C3%A1lisis_real","Richard_Dedekind","Karl_Weierstrass","Leopold_Kronecker","Constructivismo_(matem%C3%A1ticas)","Correspondencia_uno_a_uno","N%C3%BAmeros_reales","Antinomia","Paradoja","Bertrand_Russell","Ernst_Zermelo","Paradoja_de_Russell","N%C3%BAmero_cardinal","William_Henry_Young","Grace_Chisholm_Young","Cambridge_University_Press","Abraham_Fraenkel","ZFC","An%C3%A1lisis_real","Henri_Lebesgue","Geometr%C3%ADa_algebraica","Topolog%C3%ADa_algebraica","Teor%C3%ADa_de_categor%C3%ADas","Conjunto","N%C3%BAmero","Pol%C3%ADgonos","Relaci%C3%B3n_de_pertenencia","Subconjunto","Conjuntos_num%C3%A9ricos","N%C3%BAmeros_naturales","N%C3%BAmeros_enteros","N%C3%BAmeros_racionales","N%C3%BAmeros_reales","N%C3%BAmeros_complejos","Espacio_tridimensional","Recta","Plano_(geometr%C3%ADa)","%C3%81lgebra_de_conjuntos","%C3%81lgebra_de_Boole","Operaci%C3%B3n_binaria","Aritm%C3%A9tica#Operaciones_b\u00e1sicas","Uni%C3%B3n_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Diferencia_de_conjuntos","Complemento_de_un_conjunto","Conjunto_universal","Diferencia_sim%C3%A9trica","Producto_cartesiano","Pares_ordenados","Diagrama_de_Venn","Conjunto","%C3%81lgebra_de_conjuntos","Binaria","Subconjunto","Subconjunto_propio","Teor%C3%ADa_axiom%C3%A1tica_de_conjuntos","Recursi%C3%B3n_transfinita","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","Elemento_supremo_e_%C3%ADnfimo","Sucesor","Teor%C3%ADa_informal_de_conjuntos","Paradoja_de_Russell","Axioma_de_elecci%C3%B3n","Axioma","Rigor_matem%C3%A1tico","Axiomas_de_Zermelo-Fraenkel","Teor%C3%ADa_de_conjuntos_de_Von_Neumann-Bernays-G%C3%B6del","Teor%C3%ADa_de_conjuntos_de_Morse-Kelley","Combinatoria","N%C3%BAmero_cardinal","Teorema_de_Ramsey","Teor%C3%ADa_descriptiva_de_conjuntos","Recta_real","Teor%C3%ADa_de_la_computabilidad","Conjunto_difuso","Georg_Cantor","Conjunto_difuso","Lotfi_A._Zadeh","Clase_propia","Universo_construible","Hip%C3%B3tesis_del_continuo","Axioma_de_elecci%C3%B3n","Cardinal_grande","Cardinal_inaccesible","Teor%C3%ADa_de_conjuntos_de_Zermelo-Fraenkel","Forzado_(matem%C3%A1ticas)","Paul_Cohen","Forzado_(matem%C3%A1ticas)","Teor%C3%ADa_de_modelos","ZFC","Hip%C3%B3tesis_del_continuo","Axioma_de_elecci%C3%B3n","N%C3%BAmeros_naturales","N%C3%BAmeros_cardinales","Consistencia_(l%C3%B3gica)","Topolog%C3%ADa_general","Fundamentos_de_las_matem%C3%A1ticas","Leopold_Kronecker","Constructivismo_(matem%C3%A1ticas)","Teor%C3%ADa_informal_de_conjuntos","Henri_Poincar%C3%A9","Esquema_axiom%C3%A1tico_de_reemplazo","Axioma_del_conjunto_potencia","Impredicatividad","Definici%C3%B3n_circular","Solomon_Feferman","Ludwig_Wittgenstein","Platonismo_matem%C3%A1tico","Constructivismo_(matem%C3%A1ticas)","Finitismo","Paul_Bernays","Michael_Dummett","M%C3%A1quina_de_Turing","Teor%C3%ADa_de_tipos_homot%C3%B3pica","Teor%C3%ADa_de_tipos_homot%C3%B3pica","Axioma_de_elecci%C3%B3n","Principio_del_tercero_excluido","%C3%81lgebra_de_conjuntos","Teor%C3%ADa_de_axiom%C3%A1tica_de_conjuntos","Conjunto","Din%C3%A1mica_de_sistemas","Equipotencia","Teor%C3%ADa_de_grupos","Diagrama_de_Venn","ISBN","ISBN","ISBN","Journal_f%C3%BCr_die_reine_und_angewandte_Mathematik","Semantic_Scholar","Digital_object_identifier","ISBN","Bernard_Bolzano","ISBN","ISBN","Grace_Chisholm_Young","ISBN","OCLC","ISBN","OCLC","ISBN","Zentralblatt_MATH","ISBN","ISBN","Stanford_Encyclopedia_of_Philosophy","ISBN","L%C3%B3gica_filos%C3%B3fica","Digital_object_identifier","Clarendon_Press","ISBN","Saunders_Mac_Lane","ISBN","Instituto_de_Estudios_Avanzados","Stanford_Encyclopedia_of_Philosophy","Keith_Devlin","ISBN","ISBN","ISBN","ISBN","Oxford_University_Press","Dover_Publications","ISBN","Raymond_Smullyan","Dover_Publications","ISBN","ISBN","Internet_Encyclopedia_of_Philosophy","Encyclopaedia_of_Mathematics","ISBN","Encyclopaedia_of_Mathematics","ISBN","Walter_Rudin","YouTube","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Teor%C3%ADa_de_conjuntos#Teor\u00eda_axiom\u00e1tica_de_conjuntos","titulo":"Teoria de conjuntos","contenido":"La teoria de conjuntos es una rama de la logica matematica que estudia las propiedades y relaciones de los conjuntos: colecciones abstractas de objetos, consideradas como objetos en si mismas. Los conjuntos y sus operaciones mas elementales son una herramienta basica que permite formular de cualquier otra teoria matematica.\u200b  La teoria de los conjuntos es lo suficientemente flexible y general como para construir el resto de objetos y estructuras de interes en matematicas: numeros, funciones, figuras geometricas, etc; gracias a las herramientas de la logica, permite estudiar los fundamentos.  Ademas, la propia teoria de conjuntos es objeto de estudio per se, no solo como herramienta auxiliar, en particular las propiedades y relaciones de los  conjuntos infinitos. En esta disciplina es habitual que se presenten casos de propiedades indemostrables o contradictorias, como la hipotesis del continuo o la existencia de algun cardinal inaccesible. Por esta razon, sus razonamientos y tecnicas se apoyan en gran medida en la logica matematica.\u200b  El desarrollo historico de la teoria de conjuntos se atribuye a Georg Cantor, que comenzo a investigar cuestiones conjuntistas (puras) del infinito en la segunda mitad del siglo\u00a0XIX, precedido por algunas ideas de Bernhard Bolzano e influido por Richard Dedekind. El descubrimiento de las paradojas de la teoria cantoriana de conjuntos, formalizada por Gottlob Frege, propicio los trabajos de Bertrand Russell, Ernst Zermelo y Abraham Fraenkel.\u200b  La teoria de conjuntos se emplea habitualmente como sistema fundacional de toda la matematica, en particular en la forma de la teoria de conjuntos de Zermelo-Fraenkel con el axioma de eleccion.\u200b Ademas de su papel fundacional, la teoria de conjuntos tambien proporciona el marco para desarrollar una teoria matematica del infinito, y tiene varias aplicaciones en informatica, filosofia y semantica formal. Su atractivo fundacional, junto con sus paradojas, sus implicaciones para el concepto de infinito y sus multiples aplicaciones han hecho de la teoria de conjuntos un area de gran interes para logicos y filosofos de la matematica. La investigacion contemporanea sobre la teoria de conjuntos abarca una amplia gama de temas, que van desde la estructura de la linea de numeros reales hasta el estudio de la consistencia del cardinal grande.  Los temas matematicos suelen surgir y evolucionar a traves de las interacciones entre muchos investigadores. Sin embargo, la Teoria de Conjuntos fue fundada por un solo articulo en 1874 por Georg Cantor: Sobre una propiedad de la coleccion de todos los numeros algebraicos reales.\u200b\u200b  Desde el siglo\u00a0V\u00a0a.\u00a0C., comenzando por el matematico griego Zenon de Elea en Occidente y los primeros matematicos indios en Oriente, los matematicos habian luchado con el concepto de infinito. Especialmente notable es el trabajo de Bernard Bolzano en la primera mitad del siglo\u00a0XIX.\u200b La comprension moderna del infinito comenzo en 1870-1874, y fue motivada por el trabajo de Cantor en analisis real.\u200b Un encuentro en 1872 entre Cantor y Richard Dedekind influyo en el pensamiento de Cantor, y culmino en el articulo de Cantor de 1874.  El trabajo de Cantor polarizo inicialmente a los matematicos de su epoca. Mientras que Karl Weierstrass y Dedekind apoyaban a Cantor, Leopold Kronecker, considerado ahora como el fundador del  constructivismo matematico, no lo hacia. La teoria de conjuntos cantoriana acabo por generalizarse, debido a la utilidad de los conceptos cantorianos, como la correspondencia uno a uno entre conjuntos, su demostracion de que hay mas numeros reales que enteros, y la \"infinidad de infinitos\" (el paraiso de Cantor) resultante de la operacion conjunto de potencias. Esta utilidad de la teoria de conjuntos condujo al articulo \"Mengenlehre\", aportado en 1898 por Arthur Schonflies a la enciclopedia de Klein.  La siguiente oleada de entusiasmo en la teoria de conjuntos se produjo alrededor de 1900, cuando se descubrio que algunas interpretaciones de la teoria de conjuntos cantoriana daban lugar a varias contradicciones, llamadas antinomias o paradojas. Bertrand Russell y Ernst Zermelo encontraron de forma independiente la paradoja mas sencilla y conocida, ahora llamada Paradoja de Russell: considere \"el conjunto de todos los conjuntos que no son miembros de si mismos\", lo que lleva a una contradiccion ya que debe ser un miembro de si mismo y no un miembro de si mismo. En 1899, el propio Cantor habia planteado la pregunta \"\u00bfCual es el numero cardinal del conjunto de todos los conjuntos?\", y obtuvo una paradoja relacionada. Russell utilizo su paradoja como tema en su revision de las matematicas continentales de 1903 en su obra Los principios de las matematicas.  En 1906, los lectores ingleses obtuvieron el libro Theory of Sets of Points \u200b por los esposos William Henry Young y Grace Chisholm Young, publicado por Cambridge University Press.  El impulso de la teoria de conjuntos fue tal que el debate sobre las paradojas no condujo a su abandono. Los trabajos de Zermelo en 1908 y los de Abraham Fraenkel y Thoralf Skolem en 1922 dieron lugar al conjunto de axiomas ZFC, que se convirtio en el conjunto de axiomas mas utilizado para la teoria de conjuntos. El trabajo de analistas, como el de Henri Lebesgue, demostro la gran utilidad matematica de la teoria de conjuntos, que desde entonces se ha convertido en un tejido de la matematica moderna. La teoria de conjuntos se utiliza comunmente como sistema fundacional, aunque en algunas areas -como la geometria algebraica y la topologia algebraica- se considera que la teoria de categorias es un fundamento preferible.  La teoria de conjuntos mas elemental es una de las herramientas basicas del lenguaje matematico. De hecho, toda la matematica moderna ha podido ser axiomatizada en terminos de conjuntos, razon por la cual el estudio formal de la teoria de conjuntos es basica a la hora de estudiar los fundamentos de las matematicas.  La idea inicial es que los conjuntos son entes abstractos que contienen elementos (otras entidades abstractas). Dados unos elementos, unos objetos matematicos como numeros o poligonos por ejemplo, puede imaginarse una coleccion determinada de estos objetos, un conjunto. Cada uno de estos elementos pertenece al conjunto, y esta nocion de pertenencia es la relacion relativa a conjuntos mas basica. Los propios conjuntos pueden imaginarse a su vez como elementos de otros conjuntos. La obtencion  de un elemento a a un conjunto A se indica como a \u2208 A . Una relacion entre conjuntos derivada de la relacion de pertenencia es la relacion de inclusion. Una subcoleccion de elementos B de un conjunto dado A es un subconjunto de A , y se indica como B \u2286 A ( B esta incluido en A ). Tambien se puede expresar esto escribiendo A \u2287 B (que se lee A contiene a B o A incluye a B ).\u200b   N \u2282 Z \u2282 Q \u2282 R \u2282 C \\subset \\mathbb {Z} \\subset \\mathbb {Q} \\subset \\mathbb {R} \\subset \\mathbb {C} }  Existen unas operaciones basicas que permiten manipular los conjuntos y sus elementos, similares a las operaciones aritmeticas, constituyendo el algebra de conjuntos:  Los conjuntos y las operaciones con conjuntos se pueden representar visualmente empleando los diagramas de Venn.\u200b  La teoria de conjuntos comienza con una relacion binaria fundamental entre un objeto o y un conjunto A. Si o es un miembro del conjunto (o elemento) de A, se utiliza la notacion o \u2208 A.\u200b Un conjunto se describe enumerando elementos separados por comas, o por una propiedad caracterizadora de sus elementos, entre llaves { }.\u200b Como los conjuntos son objetos, la relacion de pertenencia tambien puede relacionar conjuntos.  Una relacion binaria derivada entre dos conjuntos es la relacion de subconjunto, tambien llamada inclusion de conjuntos. Si todos los miembros del conjunto A son tambien miembros del conjunto B, entonces A es un subconjunto de B, denotado A \u2286 B.\u200b Por ejemplo, {1, 2} es un subconjunto de {1, 2, 3}, y tambien lo es {2} pero {1, 4} no lo es. Como implica esta definicion, un conjunto es un subconjunto de si mismo. Para los casos en que esta posibilidad no es adecuada o tendria sentido rechazarla, se define el termino subconjunto propio. A se llama subconjunto propio de B si y solo si A es un subconjunto de B, pero A no es igual a B. Ademas, 1, 2 y 3 son miembros (elementos) del conjunto {1, 2, 3}, pero no son subconjuntos del mismo; y a su vez, los subconjuntos, como {1}, no son miembros del conjunto {1, 2, 3}.  Un conjunto es puro si todos sus miembros son conjuntos, todos los miembros de sus miembros son conjuntos, y asi sucesivamente. Por ejemplo, el conjunto {{}} que contiene solo el conjunto vacio es un conjunto puro no vacio. En la teoria de conjuntos moderna, es comun restringir la atencion al universo de von Neumann de los conjuntos puros, y muchos sistemas de teoria axiomatica de conjuntos estan dise\u00f1ados para axiomatizar solo los conjuntos puros. Hay muchas ventajas tecnicas en esta restriccion, y se pierde poca generalidad, porque esencialmente todos los conceptos matematicos pueden ser modelados por conjuntos puros. Los conjuntos en el universo de von Neumann se organizan en una jerarquia acumulativa, basada en la profundidad de anidamiento de sus miembros, miembros de miembros, etc. A cada conjunto de esta jerarquia se le asigna (por recursion transfinita) un  numero ordinal a l p h a , conocido como su rango. El rango de un conjunto puro X se define como el  limite superior minimo de todos los  ordinales sucesores de los rangos de los miembros de X . Por ejemplo, al conjunto vacio se le asigna el rango 0, mientras que al conjunto  {{}}  que contiene solo el conjunto vacio se le asigna el rango 1. Para cada ordinal \u03b1 , se define el conjunto V \u03b1 } que consiste en todos los conjuntos puros con rango menor que \u03b1 . El universo entero de von Neumann se denomina V .  La teoria informal de conjuntos apela a la intuicion para determinar como se comportan los conjuntos. Sin embargo, es sencillo plantear cuestiones acerca de las propiedades de estos que llevan a contradiccion si se razona de esta manera, como la famosa paradoja de Russell. Historicamente esta fue una de las razones para el desarrollo de las teorias axiomaticas de conjuntos, siendo otra el interes en determinar exactamente que enunciados acerca de los conjuntos necesitan que se asuma el polemico axioma de eleccion para ser demostrados.  Las teorias axiomaticas de conjuntos son colecciones precisas de axiomas escogidos para poder derivar todas las propiedades de los conjuntos con el suficiente rigor matematico. Algunos ejemplos conocidos son:  La teoria de conjuntos es una de las principales areas de investigacion en matematicas, con muchos subcampos interrelacionados.  La \"teoria combinatoria de conjuntos\" se refiere a las extensiones de la  combinatoria finita a los conjuntos infinitos. Esto incluye el estudio de la aritmetica cardinal y el estudio de extensiones del teorema de Ramsey como el teorema de Erdos-Rado.  La teoria descriptiva de conjuntos es el estudio de los subconjuntos de la recta real y, mas generalmente, de los subconjuntos de los espacios polacos. Comienza con el estudio de las \u00abclases de puntos\u00bb en la jerarquia de Borel y se extiende al estudio de jerarquias mas complejas como la jerarquia proyectiva y la jerarquia de Wadge. Muchas propiedades de los conjuntos de Borel pueden establecerse en ZFC, pero demostrar que estas propiedades se mantienen para conjuntos mas complicados requiere axiomas adicionales relacionados con la determinacion y los cardinales grandes.  El campo de la teoria descriptiva efectiva de conjuntos se encuentra entre la teoria de conjuntos y la  teoria de la recursion. Incluye el estudio de las clases de puntos ligeros, y esta estrechamente relacionado con la teoria hiperaritmetica. En muchos casos, los resultados de la teoria de conjuntos descriptiva clasica tienen versiones efectivas; en algunos casos, los nuevos resultados se obtienen demostrando primero la version efectiva y luego extendiendola (\"relativizandola\") para hacerla mas ampliamente aplicable.  Un area reciente de investigacion se refiere a las relaciones de equivalencia de Borel y a las relaciones de equivalencia definibles mas complicadas. Esto tiene importantes aplicaciones al estudio de invariantes en muchos campos de las matematicas.  En la teoria de conjuntos tal y como la definio Cantor y la axiomatizaron Zermelo y Fraenkel, un objeto es miembro de un conjunto o no lo es. En la  teoria de conjuntos difusos esta condicion fue relajada por Lotfi A. Zadeh de modo que un objeto tiene un grado de pertenencia a un conjunto, un numero entre 0 y 1. Por ejemplo, el grado de pertenencia de una persona al conjunto de \"personas altas\" es mas flexible que una simple respuesta de si o no y puede ser un numero real como 0,75.  Un modelo interior de la teoria de conjuntos de Zermelo-Fraenkel (ZF) es una clase transitiva que incluye todos los ordinales y satisface todos los axiomas de ZF. El ejemplo canonico es el universo construible L desarrollado por Godel. Una de las razones por las que el estudio de los modelos internos es de interes es que puede utilizarse para demostrar resultados de consistencia. Por ejemplo, se puede demostrar que independientemente de si un modelo V de ZF satisface la hipotesis del continuo o el axioma de eleccion, el modelo interno L construido dentro del modelo original satisfara tanto la hipotesis del continuo generalizado como el axioma de eleccion. Asi, la suposicion de que ZF es consistente (tiene al menos un modelo) implica que ZF junto con estos dos principios es consistente.  El estudio de los modelos internos es comun en el estudio de la determinacion y de los grandes cardinales, especialmente cuando se consideran axiomas como el axioma de determinacion que contradicen el axioma de eleccion. Incluso si un modelo fijo de la teoria de conjuntos satisface el axioma de eleccion, es posible que un modelo interno no satisfaga el axioma de eleccion. Por ejemplo, la existencia de cardinales suficientemente grandes implica que hay un modelo interno que satisface el axioma de determinacion (y por tanto no satisface el axioma de eleccion).\u200b  Un cardinal grande es un numero cardinal con una propiedad extra. Se estudian muchas propiedades de este tipo, incluyendo cardinal inaccesibles, cardinal medibles, y muchas mas. Estas propiedades tipicamente implican que el numero cardinal debe ser muy grande, con la existencia de un cardinal con la propiedad especificada indemostrable en teoria de conjuntos de Zermelo-Fraenkel.  Determinacion se refiere al hecho de que, bajo los supuestos adecuados, ciertos juegos de dos jugadores con informacion perfecta estan determinados desde el principio en el sentido de que un jugador debe tener una estrategia ganadora. La existencia de estas estrategias tiene importantes consecuencias en la teoria descriptiva de conjuntos, ya que la suposicion de que una clase mas amplia de juegos esta determinada implica a menudo que una clase mas amplia de conjuntos tendra una propiedad topologica. El axioma de determinacion (AD) es un importante objeto de estudio; aunque es incompatible con el axioma de eleccion, AD implica que todos los subconjuntos de la recta real se comportan bien (en particular, medibles y con la propiedad de conjunto perfecto). La AD puede utilizarse para demostrar que los grados de Wadges tienen una estructura elegante.  Paul Cohen invento el metodo de forzamiento mientras buscaba una  modelo de ZFC en la que fallara la hipotesis del continuo, o un modelo de ZF en el que fallara el axioma de eleccion. El forzamiento adjunta a algun modelo dado de la teoria de conjuntos conjuntos adicionales para crear un modelo mas grande con propiedades determinadas (es decir, \"forzadas\") por la construccion y el modelo original. Por ejemplo, la construccion de Cohen une subconjuntos adicionales de los numeros naturales sin cambiar ninguno de los numeros cardinales del modelo original. El forzamiento es tambien uno de los dos metodos para demostrar la consistencia relativa por metodos finiticos, el otro metodo es el Modelo booleano valorado.  Un invariante cardinal es una propiedad de la linea real medida por un numero cardinal. Por ejemplo, un invariante bien estudiado es la menor cardinalidad de una coleccion de conjunto reducido de reales cuya union es toda la recta real. Se trata de invariantes en el sentido de que dos modelos isomorficos de la teoria de conjuntos deben dar el mismo cardinal para cada invariante. Se han estudiado muchos invariantes cardinales, y las relaciones entre ellos son a menudo complejas y estan relacionadas con axiomas de la teoria de conjuntos.  La topologia teorica de conjuntos estudia cuestiones de topologia general que son de naturaleza teorica de conjuntos o que requieren metodos avanzados de la teoria de conjuntos para su solucion. Muchos de estos teoremas son independientes de la ZFC, requiriendo axiomas mas fuertes para su demostracion. Un problema famoso es la espacio normal de Moore, una cuestion de topologia general que fue objeto de intensa investigacion. Finalmente se demostro que la respuesta a la cuestion del espacio normal de Moore es independiente de ZFC.  Desde los inicios de la teoria de conjuntos, algunos matematicos han objetado a la misma como  fundamento de las matematicas. La objecion mas comun a la teoria de conjuntos, una Kronecker expresada en los primeros a\u00f1os de la teoria de conjuntos, parte de la vision  constructivista de que las matematicas estan vagamente relacionadas con la computacion. Si se acepta este punto de vista, entonces el tratamiento de los conjuntos infinitos, tanto en la teoria informal de conjuntos como en la teoria axiomatica de conjuntos, introduce en las matematicas metodos y objetos que no son computables ni siquiera en principio. La viabilidad del constructivismo como fundamento sustitutivo de las matematicas aumento considerablemente con el influyente libro de Errett Bishop Foundations of Constructive Analysis.\u200b  Una objecion diferente planteada por Henri Poincare es que la definicion de conjuntos mediante los esquemas axiomaticos de especificacion y reemplazo, asi como el Axioma del conjunto potencia, introduce la Impredicatividad, un tipo de circularidad, en las definiciones de los objetos matematicos. El alcance de las matematicas fundadas en la predicatividad, aunque es menor que el de la teoria de Zermelo-Fraenkel comunmente aceptada, es mucho mayor que el de las matematicas constructivas, hasta el punto de que Solomon Feferman ha dicho que todo el analisis cientificamente aplicable puede desarrollarse, utilizando metodos predicativos.\u200b  Ludwig Wittgenstein condeno filosoficamente la teoria de conjuntos por sus connotaciones de platonismo matematico.\u200b Escribio que \"la teoria de conjuntos es erronea ya que se basa en el \"sinsentido\" del simbolismo ficticio, tiene \"modismos perniciosos\", y que no tiene sentido hablar de \"todos los numeros\".\u200b Wittgenstein identifico las matematicas con la deduccion humana algoritmica;\u200b la necesidad de un fundamento seguro para las matematicas le parecia un sinsentido.\u200b  Ademas, dado que el esfuerzo humano es necesariamente finito, la filosofia de Wittgenstein requeria un compromiso ontologico con el constructivismo radical y el finitismo.  Los enunciados metamatematicos -que, para Wittgenstein, incluian cualquier enunciado que cuantificara sobre dominios infinitos, y por tanto casi toda la teoria de conjuntos moderna- no son matematicas.\u200b  Pocos filosofos modernos han adoptado los puntos de vista de Wittgenstein despues de una espectacular metedura de pata en Observaciones sobre los fundamentos de las matematicas: Wittgenstein intento refutar los teoremas de incompletitud de Godel despues de haber leido solo el resumen.  Como se\u00f1alaron los revisores Kreisel, Bernays, Dummett, y Goodstein, muchas de sus criticas no se aplicaban al articulo en su totalidad. Solo recientemente filosofos como Crispin Wright han comenzado a rehabilitar los argumentos de Wittgenstein.\u200b  Los teoricos de la categoria han propuesto la teoria de los topos como una alternativa a la teoria axiomatica de conjuntos tradicional. La teoria de topos puede interpretar varias alternativas a dicha teoria, como el constructivismo, la teoria de conjuntos finitos y la teoria de conjuntos de la computable.\u200b\u200b Los topos tambien dan un marco natural para forzar y discutir la independencia de la eleccion de ZF, ademas de proporcionar el marco para la topologia sin sentido y el espacio de Stone.\u200b  Un area de investigacion activa es la de los fundamentos univalentes y relacionada con ella la Teoria de tipos homotopica. Dentro de la teoria de tipos de homotopia, un conjunto puede ser considerado como un tipo 0 de homotopia, con \u00abpropiedades universales\u00bb de los conjuntos que surgen de las propiedades inductivas y recursivas de los  tipos inductivos superiores. Principios como el Axioma de eleccion y la Principio del tercero excluido pueden ser formulados de una manera correspondiente a la formulacion clasica en la teoria de conjuntos o tal vez en un espectro de formas distintas unicas a la teoria de tipos. Algunos de estos principios pueden demostrarse como consecuencia de otros principios. La variedad de formulaciones de estos principios axiomaticos permite un analisis detallado de las formulaciones necesarias para derivar diversos resultados matematicos.\u200b\u200b ","snippet":"La teoria de conjuntos es una rama de la logica matematica que estudia las propiedades y relaciones de los conjuntos: colecciones abstractas de objetos, consideradas como objetos en si mismas. Los con","enlaces_salientes":["Teor%C3%ADa_de_conjuntos","Teor%C3%ADa_de_conjuntos","Teor%C3%ADa_de_conjuntos","Diagrama_de_Venn","Intersecci%C3%B3n_de_conjuntos","Conjunto","L%C3%B3gica_matem%C3%A1tica","Conjunto","N%C3%BAmero","Funci%C3%B3n_matem%C3%A1tica","Figura_geom%C3%A9trica","L%C3%B3gica_matem%C3%A1tica","Conjunto_infinito","Independencia_l%C3%B3gica","Consistencia_l%C3%B3gica","Hip%C3%B3tesis_del_continuo","Cardinal_inaccesible","Georg_Cantor","Infinito","Bernhard_Bolzano","Richard_Dedekind","Gottlob_Frege","Bertrand_Russell","Ernst_Zermelo","Abraham_Fraenkel","Axiomas_de_Zermelo-Fraenkel","Axioma_de_elecci%C3%B3n","Infinito","Inform%C3%A1tica","Filosof%C3%ADa","Sem%C3%A1ntica_formal","Paradojas","L%C3%B3gica","Filosof%C3%ADa_de_la_matem%C3%A1tica","N%C3%BAmeros_reales","Consistencia_(l%C3%B3gica)","Cardinal_grande","Georg_Cantor","Georg_Cantor","Zen%C3%B3n_de_Elea","Infinito","Bernard_Bolzano","An%C3%A1lisis_real","Richard_Dedekind","Karl_Weierstrass","Leopold_Kronecker","Constructivismo_(matem%C3%A1ticas)","Correspondencia_uno_a_uno","N%C3%BAmeros_reales","Antinomia","Paradoja","Bertrand_Russell","Ernst_Zermelo","Paradoja_de_Russell","N%C3%BAmero_cardinal","William_Henry_Young","Grace_Chisholm_Young","Cambridge_University_Press","Abraham_Fraenkel","ZFC","An%C3%A1lisis_real","Henri_Lebesgue","Geometr%C3%ADa_algebraica","Topolog%C3%ADa_algebraica","Teor%C3%ADa_de_categor%C3%ADas","Conjunto","N%C3%BAmero","Pol%C3%ADgonos","Relaci%C3%B3n_de_pertenencia","Subconjunto","Conjuntos_num%C3%A9ricos","N%C3%BAmeros_naturales","N%C3%BAmeros_enteros","N%C3%BAmeros_racionales","N%C3%BAmeros_reales","N%C3%BAmeros_complejos","Espacio_tridimensional","Recta","Plano_(geometr%C3%ADa)","%C3%81lgebra_de_conjuntos","%C3%81lgebra_de_Boole","Operaci%C3%B3n_binaria","Aritm%C3%A9tica#Operaciones_b\u00e1sicas","Uni%C3%B3n_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Diferencia_de_conjuntos","Complemento_de_un_conjunto","Conjunto_universal","Diferencia_sim%C3%A9trica","Producto_cartesiano","Pares_ordenados","Diagrama_de_Venn","Conjunto","%C3%81lgebra_de_conjuntos","Binaria","Subconjunto","Subconjunto_propio","Teor%C3%ADa_axiom%C3%A1tica_de_conjuntos","Recursi%C3%B3n_transfinita","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","Elemento_supremo_e_%C3%ADnfimo","Sucesor","Teor%C3%ADa_informal_de_conjuntos","Paradoja_de_Russell","Axioma_de_elecci%C3%B3n","Axioma","Rigor_matem%C3%A1tico","Axiomas_de_Zermelo-Fraenkel","Teor%C3%ADa_de_conjuntos_de_Von_Neumann-Bernays-G%C3%B6del","Teor%C3%ADa_de_conjuntos_de_Morse-Kelley","Combinatoria","N%C3%BAmero_cardinal","Teorema_de_Ramsey","Teor%C3%ADa_descriptiva_de_conjuntos","Recta_real","Teor%C3%ADa_de_la_computabilidad","Conjunto_difuso","Georg_Cantor","Conjunto_difuso","Lotfi_A._Zadeh","Clase_propia","Universo_construible","Hip%C3%B3tesis_del_continuo","Axioma_de_elecci%C3%B3n","Cardinal_grande","Cardinal_inaccesible","Teor%C3%ADa_de_conjuntos_de_Zermelo-Fraenkel","Forzado_(matem%C3%A1ticas)","Paul_Cohen","Forzado_(matem%C3%A1ticas)","Teor%C3%ADa_de_modelos","ZFC","Hip%C3%B3tesis_del_continuo","Axioma_de_elecci%C3%B3n","N%C3%BAmeros_naturales","N%C3%BAmeros_cardinales","Consistencia_(l%C3%B3gica)","Topolog%C3%ADa_general","Fundamentos_de_las_matem%C3%A1ticas","Leopold_Kronecker","Constructivismo_(matem%C3%A1ticas)","Teor%C3%ADa_informal_de_conjuntos","Henri_Poincar%C3%A9","Esquema_axiom%C3%A1tico_de_reemplazo","Axioma_del_conjunto_potencia","Impredicatividad","Definici%C3%B3n_circular","Solomon_Feferman","Ludwig_Wittgenstein","Platonismo_matem%C3%A1tico","Constructivismo_(matem%C3%A1ticas)","Finitismo","Paul_Bernays","Michael_Dummett","M%C3%A1quina_de_Turing","Teor%C3%ADa_de_tipos_homot%C3%B3pica","Teor%C3%ADa_de_tipos_homot%C3%B3pica","Axioma_de_elecci%C3%B3n","Principio_del_tercero_excluido","%C3%81lgebra_de_conjuntos","Teor%C3%ADa_de_axiom%C3%A1tica_de_conjuntos","Conjunto","Din%C3%A1mica_de_sistemas","Equipotencia","Teor%C3%ADa_de_grupos","Diagrama_de_Venn","ISBN","ISBN","ISBN","Journal_f%C3%BCr_die_reine_und_angewandte_Mathematik","Semantic_Scholar","Digital_object_identifier","ISBN","Bernard_Bolzano","ISBN","ISBN","Grace_Chisholm_Young","ISBN","OCLC","ISBN","OCLC","ISBN","Zentralblatt_MATH","ISBN","ISBN","Stanford_Encyclopedia_of_Philosophy","ISBN","L%C3%B3gica_filos%C3%B3fica","Digital_object_identifier","Clarendon_Press","ISBN","Saunders_Mac_Lane","ISBN","Instituto_de_Estudios_Avanzados","Stanford_Encyclopedia_of_Philosophy","Keith_Devlin","ISBN","ISBN","ISBN","ISBN","Oxford_University_Press","Dover_Publications","ISBN","Raymond_Smullyan","Dover_Publications","ISBN","ISBN","Internet_Encyclopedia_of_Philosophy","Encyclopaedia_of_Mathematics","ISBN","Encyclopaedia_of_Mathematics","ISBN","Walter_Rudin","YouTube","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Subconjunto_propio","titulo":"Subconjunto","contenido":"A es subconjunto de otro conjunto B si todos los elementos de A pertenecen tambien a B. Decimos entonces que A \u00abesta contenido\u00bb dentro de B.  La diferencia entre los conjuntos es formado por elementos que pertenecen a uno y a los otros no. Otras maneras de decirlo son \u00abA esta incluido en B\u00bb, \u00abB incluye a A\u00bb,etc.  Es cierto que cada elemento de un conjunto A es un elemento de A (es una afirmacion tautologica). Por tanto se tiene el siguiente teorema:  Todo conjunto A es subconjunto de si mismo.  Asi, dados dos conjuntos A \u2286 B, cabe la posibilidad de que sean iguales, A = B.  Por otro lado, es posible tambien que A contenga algunos pero no todos los elementos de B:  Sea A un subconjunto de B tal que A = B. Entonces se dice que A es un subconjunto propio de B, y se denota por A \u2282 B. (A su vez, se dice que B es un superconjunto propio de A, B \u2283 A)  Es verdadero que todos los ejemplos de subconjunto mostrados arriba son de hecho subconjuntos propios.  Segun el autor, A \u2282 B y B \u2283 A subconjunto o subconjunto propio.\u200bSin embargo, es importante aclarar que existe una dieferencia entre subconjunto y subconjunto propio, pues el subconjunto abarca la definicion de subconjunto propio.  La totalidad de los subconjuntos de un conjunto dado A constituye el llamado conjunto potencia o conjunto partes de A:  El conjunto potencia de A es el conjunto formado por todos los subconjuntos de A:  Cuando el conjunto A tiene un numero finito de elementos, por ejemplo |A| = n, el conjunto potencia tambien es finito y tiene 2n elementos.  Por ejemplo, dado el conjunto A = {a, b}, su conjunto potencia es:  El conjunto vacio, denotado como \u2205, es subconjunto de cualquier conjunto.  Esto es debido a que \u00abtodo elemento de \u2205 lo es de A\u00bb significa lo mismo que \u00ab\u2205 no tiene ningun elemento que este en A\u00bb, y esto es cierto sea cual sea A ya que \u2205 no tiene elementos.  Si cada elemento de un conjunto A lo es de otro conjunto B, y cada elemento de B a su vez lo es de otro conjunto C, entonces cada miembro de A pertenece tambien a C, o sea:  Dados tres conjuntos A, B y C, si A es subconjunto de B y B es subconjunto de C, entonces A es subconjunto de C.  Ademas, si dos conjuntos son subconjuntos el uno del otro, entonces todos los miembros de uno lo son del otro y viceversa. Entonces, ambos conjuntos poseen los mismos elementos, y los conjuntos quedan definidos unicamente por sus elementos, luego:  Si A es subconjunto de B y B es subconjunto de A, entonces A = B.  La relacion de inclusion tiene las mismas propiedades que la relacion de orden no estricto: es reflexiva (A \u2286 A); transitiva (A \u2286 B y B \u2286 C implican A \u2286 C); y antisimetrica (A \u2282 B y B \u2282 A implican A = B). ","snippet":"A es subconjunto de otro conjunto B si todos los elementos de A pertenecen tambien a B. Decimos entonces que A \u00abesta contenido\u00bb dentro de B.  La diferencia entre los conjuntos es formado por elementos","enlaces_salientes":["Subconjunto","Subconjunto","Subconjunto","Diagrama_de_Euler","Mujer","Ser_humano","N%C3%BAmeros_pares","N%C3%BAmeros_naturales","Tautolog%C3%ADa","Conjunto_potencia","Conjunto_finito","Conjunto_vac%C3%ADo","Axioma_de_extensionalidad","Relaci%C3%B3n_de_orden","Relaci%C3%B3n_reflexiva","Relaci%C3%B3n_transitiva","Relaci%C3%B3n_antisim%C3%A9trica","ISBN","Teor%C3%ADa_de_conjuntos","Conjunto","Intersecci%C3%B3n_de_conjuntos","Uni%C3%B3n_de_conjuntos","Diferencia_de_conjuntos","Complemento_de_un_conjunto","Control_de_autoridades","Gemeinsame_Normdatei","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Conjuntos_disjuntos","titulo":"Conjuntos disjuntos","contenido":"En teoria de conjuntos, dos conjuntos son disjuntos o ajenos si no tienen ningun elemento en comun. En otras palabras, dos conjuntos son disjuntos si su interseccion es vacia.  Por ejemplo {1, 2, 3} y {a, b, c} son conjuntos disjuntos.  Dos conjuntos A y B son disjuntos si se cumple que ningun elemento de A lo es de B o viceversa:   x \u2208 A \u27f9 x \u2208 B , y x \u2208 B \u27f9 x \u2208 A }\\quad x\\in B\\implies x\\notin A}  Otra manera de expresarlo es mediante su interseccion, que esta formada por sus elementos en comun. La interseccion de dos conjuntos disjuntos A y B es vacia.   A \u2229 B = \u2205  En general, dada una coleccion de conjuntos A, B, C, etc. se dice que estos son disjuntos por pares o mutuamente disjuntos si dos conjuntos cualesquiera de la coleccion son disjuntos entre si. En terminos de una familia de conjuntos {Ai}i \u2208 I:   Si A i = A j , entonces A i \u2229 A j = \u2205 }A_{i}\\neq A_{j}}A_{i}\\cap A_{j}=\\varnothing }  Por ejemplo, la coleccion { {1}, {2}, {3} } es disjunta por pares. La familia { {1, 2}, {2, 3}, {4} } no lo es: a pesar de que no hay ningun elemento comun a todos los conjuntos de la misma, la pareja {1, 2} y {2, 3} no es disjunta. ","snippet":"En teoria de conjuntos, dos conjuntos son disjuntos o ajenos si no tienen ningun elemento en comun. En otras palabras, dos conjuntos son disjuntos si su interseccion es vacia.  Por ejemplo {1, 2, 3} y","enlaces_salientes":["Conjuntos_disjuntos","Conjuntos_disjuntos","Conjuntos_disjuntos","Familia_de_conjuntos","Conjunto","Teor%C3%ADa_de_conjuntos","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"N%C3%BAmeros_irracionales","titulo":"Numero irracional","contenido":"En matematicas, un numero irracional es un valor que no puede ser expresado como una fraccion m/n, donde m , n \u2208 Z } y n = 0 .\u200b Es cualquier numero real que no es racional, y su expresion decimal no es ni exacta ni periodica.\u200b  Un decimal infinito (es decir, con infinitas cifras) aperiodico, como \u221a7 = 2,64575131106459059050161... no puede representar un numero racional. A tales numeros se les nombra \"numeros irracionales\". Esta denominacion significa la imposibilidad de representar dicho numero como razon de dos numeros enteros.\u200b El numero pi \u03c0, numero e y el numero aureo (\u03c6) son otros ejemplos de numeros irracionales.\u200b  La primera prueba de la existencia de los numeros irracionales suele atribuirse a un Pitagorico (posiblemente Hipaso de Metaponto),\u200b quien probablemente los descubrio mientras identificaba los lados del pentagrama.\u200b El metodo pitagorico entonces vigente habria afirmado que debia existir alguna unidad indivisible suficientemente peque\u00f1a que pudiera encajar uniformemente tanto en una de estas longitudes como en la otra. Sin embargo, Hipaso, en el siglo\u00a0V\u00a0a.\u00a0C., fue capaz de deducir que en realidad no existia ninguna unidad de medida comun, y que la afirmacion de tal existencia era en realidad una contradiccion. Lo hizo demostrando que si la hipotenusa de un triangulo rectangulo isosceles era efectivamente comensurable con un cateto, entonces una de esas longitudes medidas en esa unidad de medida debia ser par e impar, lo cual es imposible. Su razonamiento es el siguiente:  Los  matematicos griegos denominaron a esta relacion de magnitudes inconmensurables alogos, o inexpresable. Hipaso, sin embargo, no fue alabado por sus esfuerzos: segun una leyenda, hizo su descubrimiento mientras estaba en el mar, y posteriormente fue arrojado por la borda por sus compa\u00f1eros pitagoricos \"... por haber producido un elemento en el universo que negaba la... doctrina de que todos los fenomenos en el universo pueden reducirse a numeros enteros y sus proporciones.\"\u200b Otra leyenda afirma que Hipaso fue simplemente exiliado por esta revelacion. Cualquiera que fuera la consecuencia para el propio Hipaso, su descubrimiento planteo un problema muy serio a las matematicas pitagoricas, ya que echo por tierra la suposicion de que el numero y la geometria eran inseparables\u2013un fundamento de su teoria.  El descubrimiento de los cocientes inconmensurables era indicativo de otro problema al que se enfrentaban los griegos: la relacion de lo discreto con lo continuo. Esto fue puesto de manifiesto por Zenon de Elea, que cuestiono la concepcion de que las cantidades son discretas y estan compuestas por un numero finito de unidades de un tama\u00f1o determinado. Las concepciones griegas anteriores dictaban que necesariamente debian serlo, pues \"los numeros enteros representan objetos discretos, y una razon conmensurable representa una relacion entre dos colecciones de objetos discretos\",\u200b pero Zenon descubrio que, de hecho, \"[las cantidades] en general no son colecciones discretas de unidades; por eso aparecen relaciones de [cantidades] inconmensurables... .[L]as cantidades son, en otras palabras, continuas\".\u200b Lo que esto significa es que, contrariamente a la concepcion popular de la epoca, no puede haber una unidad de medida indivisible y mas peque\u00f1a para ninguna cantidad. Que, de hecho, estas divisiones de la cantidad deben ser necesariamente infinito. Por ejemplo, consideremos un segmento de linea: este segmento puede dividirse por la mitad, esa mitad dividirse por la mitad, la mitad de la mitad por la mitad, y asi sucesivamente. Este proceso puede continuar infinitamente, ya que siempre hay otra mitad que dividir. Cuantas mas veces se divide el segmento por la mitad, mas se acerca la unidad de medida a cero, pero nunca llega exactamente a cero. Esto es precisamente lo que pretendia demostrar Zenon. Intento demostrarlo formulando las cuatro paradojas, que demostraban las contradicciones inherentes al pensamiento matematico de la epoca. Aunque las paradojas de Zenon demostraban con precision las deficiencias de las concepciones matematicas vigentes, no se consideraban una prueba de la alternativa. En la mente de los griegos, refutar la validez de un punto de vista no demostraba necesariamente la validez de otro, por lo que habia que seguir investigando.  El siguiente paso fue dado por Eudoxo de Cnido, que formalizo una nueva teoria de la proporcion que tenia en cuenta tanto las cantidades conmensurables como las inconmensurables. Su idea se basaba en la distincion entre magnitud y numero. Una magnitud \"...no era un numero, sino que representaba entidades como segmentos de linea, angulos, areas, volumenes y tiempo que podian variar, como diriamos, continuamente. Las magnitudes se oponian a los numeros, que saltaban de un valor a otro, como de 4 a 5\".\u200b Los numeros se componen de alguna unidad mas peque\u00f1a e indivisible, mientras que las magnitudes son infinitamente reducibles. Dado que no se asignaban valores cuantitativos a las magnitudes, Eudoxo pudo entonces dar cuenta tanto de las razones conmensurables como de las inconmensurables definiendo una razon en terminos de su magnitud, y la proporcion como una igualdad entre dos razones. Al eliminar los valores cuantitativos (numeros) de la ecuacion, evito la trampa de tener que expresar un numero irracional como un numero. \"La teoria de Eudoxo permitio a los matematicos griegos realizar enormes progresos en geometria al proporcionar el fundamento logico necesario para las proporciones inconmensurables\".\u200b Esta inconmensurabilidad se trata en los Elementos de Euclides, Libro X, Proposicion 9. No fue hasta que Eudoxo desarrollo una teoria de la proporcion que tenia en cuenta tanto los cocientes irracionales como los racionales cuando se creo un solido fundamento matematico de los numeros irracionales.\u200b.  Como resultado de la distincion entre numero y magnitud, la geometria se convirtio en el unico metodo que podia tener en cuenta las relaciones inconmensurables. Dado que los fundamentos numericos anteriores seguian siendo incompatibles con el concepto de inconmensurabilidad, el enfoque griego se alejo de aquellas concepciones numericas como el algebra y se centro casi exclusivamente en la geometria. De hecho, en muchos casos las concepciones algebraicas se reformularon en terminos geometricos. Esto puede explicar por que todavia concebimos x2 y x3 como x al cuadrado y x al cubo en lugar de x a la segunda potencia y x a la tercera potencia. Tambien fue crucial para el trabajo de Zenon con las magnitudes inconmensurables el enfoque fundamental en el razonamiento deductivo que resulto de la ruptura fundacional de la matematica griega anterior. La constatacion de que algun concepto basico de la teoria existente no concordaba con la realidad exigia una investigacion completa y exhaustiva de los axiomas y supuestos en los que se basaba dicha teoria. A partir de esta necesidad, Eudoxo desarrollo su metodo de agotamiento, una especie de reductio ad absurdum que \"...establecio la organizacion deductiva sobre la base de axiomas explicitos...\" asi como \"...reforzo la decision anterior de confiar en el razonamiento deductivo para la demostracion\".\u200b Este metodo de agotamiento es el primer paso en la creacion del calculo.  Teodoro de Cirene demostro la irracionalidad de la surdos de los numeros enteros hasta 17, pero se detuvo ahi probablemente porque el algebra que utilizo no podia aplicarse a la raiz cuadrada de 17.\u200b Dado que en la practica de medir la longitud de un segmento de recta solo puede producir como resultado un numero fraccionario, en un inicio, los griegos identificaron los numeros con las longitudes de los segmentos de recta.\u200b Al identificar del modo mencionado, surge la necesidad de considerar una clase de numeros mas amplia que la de los numeros fraccionarios. Se atribuye a Hipaso de Metaponto perteneciente a un grupo de matematicos pitagoricos de la existencia de segmentos de recta inconmensurables con respecto a un segmento que se toma como unidad en un sistema de medicion. Pues, existen segmentos de recta cuya longitud medida en este sistema no es un numero fraccionario.\u200b  Por ejemplo, en un cuadrado, la diagonal de este es inconmensurable con respecto a sus lados. Este hecho ocasiono una convulsion en el mundo cientifico antiguo. Provoco una ruptura entre la geometria y la aritmetica de aquella epoca, ya que esta ultima, por entonces, se sustentaba en la teoria de la proporcionalidad, la cual solo se aplica a magnitudes conmensurables.  Intentaron salvar el obstaculo distinguiendo entre el concepto de numero y el de longitud de un segmento de recta, y tomaron estos ultimos como elementos basicos para sus calculos. De tal modo, a los segmentos inconmensurables con respecto a la unidad tomada como patron de medida les asignaron un nuevo tipo de magnitud: los numeros irracionales, los cuales por largo tiempo no se reconocieron como verdaderos numeros.\u200b  No existe una notacion universal para indicarlos, como I } , que sea generalmente aceptada. Las razones son que el conjunto de Numeros Irracionales no constituye alguna estructura algebraica, como si lo son los naturales ( N } ), los enteros ( Z } ), los racionales ( Q } ), los reales ( R } ) y los complejos ( C } ), por un lado, y que la I } es tan apropiada para designar al conjunto de numeros irracionales como al conjunto de numeros imaginarios, lo cual puede crear confusion. Fuera de ello,   I := R \u2216 Q = { x \u2208 R | x \u2208 Q } :=\\mathbb {R} \\backslash \\mathbb {Q} =\\{x\\in \\mathbb {R} |x\\notin \\mathbb {Q} \\}}  Los numeros irracionales son los elementos de la recta real que cubren los vacios que dejan los numeros racionales, ya que muchas sucesiones de racionales tienen como limite un numero que no es un numero racional.  Los numeros irracionales son los elementos de la recta real que no pueden expresarse mediante el cociente de dos enteros y se caracterizan por poseer infinitas cifras decimales no periodicas. Puede definirse al numero irracional como una fraccion decimal no periodica infinita (Es mentira).\u200b En general, toda expresion en numeros decimales es solo una aproximacion en numeros racionales al numero irracional referido, y se dice con toda propiedad que el numero \u221a2 es aproximadamente igual a 1,4142135 en 7 decimales, o bien es igual a 1,4142135\u2026 donde los tres puntos hacen referencia a los decimales que faltan. Debido a ello, los numeros irracionales mas conocidos son identificados mediante simbolos:  Los numeros irracionales se clasifican en dos tipos:  Los numeros irracionales no son numerables, es decir, no pueden ponerse en biyeccion con el conjunto de los numeros naturales. Por extension, los numeros reales tampoco son numerables ya que incluyen el conjunto de los irracionales.  A+a=a a+d=b+a ","snippet":"En matematicas, un numero irracional es un valor que no puede ser expresado como una fraccion m/n, donde m , n \u2208 Z } y n = 0 .\u200b Es cualquier numero real que no es racional, y su expresion decimal no e","enlaces_salientes":["N%C3%BAmero_irracional","N%C3%BAmero_irracional","N%C3%BAmero_irracional","Matem%C3%A1ticas","N%C3%BAmero_real","N%C3%BAmero_racional","N%C3%BAmero_racional","N%C3%BAmero_pi","N%C3%BAmero_e","N%C3%BAmero_%C3%A1ureo","Pitagorismo","H%C3%ADpaso_de_Metaponto","Pentagrama","Hipotenusa","Tri%C3%A1ngulo_rect%C3%A1ngulo_is%C3%B3sceles","Conmensurabilidad","Teorema_de_Pit%C3%A1goras","Matem%C3%A1tica_griega","Zen%C3%B3n_de_Elea","Infinito","Paradojas_de_Zen%C3%B3n","Eudoxo_de_Cnido","M%C3%A9todo_de_agotamiento","Reductio_ad_absurdum","Teodoro_de_Cirene","Ra%C3%ADz_en%C3%A9sima","H%C3%ADpaso_de_Metaponto","Estructura_algebraica","N%C3%BAmero_natural","N%C3%BAmero_entero","N%C3%BAmero_racional","N%C3%BAmero_real","N%C3%BAmero_complejo","N%C3%BAmero_imaginario","L%C3%ADmite_de_una_sucesi%C3%B3n","N%C3%BAmero_pi","Circunferencia","Di%C3%A1metro","N%C3%BAmero_e","N%C3%BAmero_%C3%A1ureo","N%C3%BAmero_algebraico","Ecuaci%C3%B3n_algebraica","N%C3%BAmero_trascendente","Conjunto_numerable","Funci%C3%B3n_biyectiva","Teorema_de_Gelfond-Schneider","Medida_de_Lebesgue","ISBN","Morris_Kline","Washington._D.C.","La_Habana","Mosc%C3%BA","ISBN","Buenos_Aires","Organizaci%C3%B3n_de_los_Estados_Americanos","Wikcionario","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"N%C3%BAmero_transfinito","titulo":"Numero transfinito","contenido":"En la teoria de conjuntos, numero transfinito es el termino original que el matematico aleman Georg Cantor introdujo para referirse a numeros ordinales infinitos, que son mayores que cualquier numero natural.  En la terminologia moderna, al referirse a ordinales o cardinales, \u00abtransfinito\u00bb e \u00abinfinito\u00bb son sinonimos.\u200b En la terminologia moderna, los cardinales son un tipo especial de numero ordinal.  Al igual que con los numeros naturales, puede pensarse en los numeros transfinitos como cardinales u ordinales:  Asumiendo el axioma de eleccion, todo lo que puede demostrarse con los axiomas de Zermelo-Fraenkel es:  La hipotesis del continuo afirma que de hecho c = \u21351. Sin embargo, el trabajo de Kurt Godel y Paul Cohen demuestra que la hipotesis es independiente de dichos axiomas: no puede ser refutada o demostrada a partir de ellos. Es decir, usando los axiomas de Zermelo-Fraenkel (ZF) puede comprobarse que los tres cardinales anteriores cumplen \u2135 0 < \u2135 1 \u2264 c <\\aleph _{1}\\leq c} . La hipotesis del continuo afirma que de hecho c = \u2135 1 } . Godel probo en 1938 que esta hipotesis es consistente con los axiomas ZF, y por tanto puede ser tomado como un axioma nuevo para la teoria de conjuntos. Sin embargo, en 1963 Paul Cohen probo que la negacion de la hipotesis del continuo tambien es consistente con los axiomas ZF, lo cual prueba que dicha hipotesis es totalmente independiente de los axiomas ZF. Es decir, pueden construirse tanto \"teorias de conjuntos cantorianas\" (en las que la hipotesis del continuo es una afirmacion cierta), como \"teorias de conjuntos no cantorianas\" (en las que la hipotesis del continuo sea falsa). Esta situacion es similar a la de las geometrias no euclidianas.  Para los numeros transfinitos se pueden extender sin ambiguedad la suma, la multiplicacion y la potenciacion. Sean por ejemplo dos conjuntos disjuntos a = card ( A ) }(A)\\;} y b = card ( B ) }(B)\\;} , la suma y la multiplicacion puede construirse a partir del cardinal de la union y del producto cartesiano de estos dos conjuntos:   a + b := card ( A \u222a B ) a \u00d7 b := card ( A \u00d7 B ) }(A\\cup B)\\qquad a\\times b:=}(A\\times B)}  Es sencillo comprobar que estas operaciones estan bien definidas ya que:   \u2200 A \u00af , B \u00af : { a = card ( A \u00af ) b = card ( B \u00af ) A \u00af \u2229 B \u00af = \u2205 \u2192 { card ( A \u00af \u222a B \u00af ) = a + b card ( A \u00af \u00d7 B \u00af ) = a \u22c5 b },}:a=}(})\\\\b=}(})\\\\}\\cap }=\\varnothing \\end{cases}}\\to }(}\\cup })=a+b\\\\}(}\\times })=a\\cdot b\\end{cases}}}  Aunque la suma y la multiplicacion no presentan problemas, la resta y la division no estan definidas. A diferencia de lo que sucede con los cardinales finitos no pueden definirse sin ambiguedad operaciones equivalentes a la resta o la division. La resta y la division pueden introducirse entre los cardinales finitos gracias a que a partir del conjunto de los cardinales finitos, que coinciden con los numeros naturales N } , pueden construirse el conjunto de los enteros y de los racionales. La construccion de los enteros y los racionales es posible debido a que todo cardinal finito es regular respecto a la suma, es decir, para cualesquiera cardinales a, b y c > 0, finitos se cumple:   { a + c = b + c \u21d2 a = b a \u22c5 c = b \u22c5 c \u21d2 a = b a+c=b+c&\\Rightarrow a=b\\\\a\\cdot c=b\\cdot c&\\Rightarrow a=b\\end{cases}}}  Esas dos ultimas propiedades de hecho no se cumplen nunca cuando uno de los cardinales es transfinito, si max ( a , b ) > \u2135 0 } se tienen las siguientes igualdades:   a + b = max ( a , b ) a \u22c5 b := max ( a , b )  Los cardinales transfinitos dotados de la suma o la multiplicacion constituyen un monoide conmutativo. Debido a la falta de regularidad de los cardinales transfinitos no es aplicable el teorema de simetrizacion de un monoide que permitiria definir la resta y la division.   La potenciacion requiere construir un conjunto mas complicado, pero resulta igualmente bien definida. Si A y B son dos conjuntos cualesquiera y a = card ( A ) }(A)\\;} y b = card ( B ) }(B)\\;} se puede definir la exponenciacion a b \\;} como el cardinal del conjunto de funciones de B en A:  a b = card ( A B ) A B := { f | f : B \u2192 A } =}(A^{B})\\qquad A^{B}:=\\{f|f:B\\to A\\}}  Un caso particular interesante se da cuando a = 2, en este caso podemos por ejemplo A = {0,1}, y el conjunto AB se puede identificar naturalmente con el conjunto de partes de B o conjunto potencia.   2 b = card ( { 0 , 1 } B ) = card ( P ( B ) ) =}(\\{0,1\\}^{B})=}(}(B))}  La potenciacion tambien tiene propiedades de saturacion curiosas, asi para cardinales de tipo alef se tiene:   \u2135 \u03b1 \u2135 \u03b2 = { \u2135 \u03b1 \u2135 \u03b2 < \u2135 \u03b1 \u2135 \u03b2 + 1 \u2135 \u03b2 \u2265 \u2135 \u03b1 ^}=\\aleph _&\\aleph _<\\aleph _\\\\\\aleph _&\\aleph _\\geq \\aleph _\\end{cases}}}  Georg Cantor se percato de que era posible hablar de la cantidad de elementos de un conjunto infinito tal y como se habla de la cantidad de elementos de un conjunto finito. Es decir, encontro que era posible \u201cmedir\u201d el tama\u00f1o de un conjunto infinito y, de hecho, comparar el tama\u00f1o de dos conjuntos infinitos para encontrar que el de uno era \u201cmayor\u201d que el del otro, y elaboro una teoria hasta cierto punto rigurosa respecto de estas ideas: la teoria de numeros transfinitos.[cita\u00a0requerida]  Cantor argumentaba que el desprecio de los matematicos por el infinito y su naturaleza se debia a un abuso de este concepto. Lo que Cantor queria decir era que el termino infinito se aplicaba sin distincion a cualesquiera conjuntos no finitos, siendo que, de entre ellos, era posible tomar algunos que son, de alguna manera, medibles y de tama\u00f1os comparables. Las reflexiones y posterior estudio de Cantor acerca de todo esto comenzaron cuando, intuyendo este algun resultado no trivial, se pregunto si era posible poner en correspondencia uno a uno el conjunto de los numeros naturales con el conjunto de los numeros reales. Pronto pudo Cantor demostrar que no existia tal correspondencia, revelando asi una diferencia entre la infinitud de dos conjuntos infinitos, lo que constituyo, en definitiva, un resultado de mucho interes. Cantor probo tambien que, contrario a lo que pudiera pensarse, el conjunto de los numeros racionales, que tiene propiedad de densidad, se corresponde uno a uno con el conjunto de los numeros naturales.[cita\u00a0requerida]  Es facil dar un ejemplo de dos conjuntos que, uno teniendo todos los elementos del otro y mas, se corresponden uno a uno. Tomese, por ejemplo, el caso de los numeros naturales:[cita\u00a0requerida]   1 , 2 , 3 , 4 , \u2026  y tomemos ahora solo aquellos numeros que son el cuadrado de algun numero natural (claramente no todos los numeros naturales cumplen con esta caracteristica, por lo que se descartan muchos de ellos):   1 ( = 1 2 ) , 4 ( = 2 2 ) , 9 ( = 3 2 ) , 16 ( = 4 2 ) , \u2026 ),\\quad 4(=2^{2}),\\quad 9(=3^{2}),\\quad 16(=4^{2}),\\ldots }  Apenas es necesario explicar mas para percatarse de que existe una correspondencia uno a uno entre N } y su subconjunto   { n \u2208 N \u2223 ( \u2203 m \u2208 N ) m 2 = n } \\mid (\\exists m\\in \\mathbb {N} )\\ m^{2}=n\\}} .  Ademas, Cantor encontro que la medicion de un conjunto (ya sea finito o infinito) puede realizarse de dos maneras: una de ellas no considera nada mas que la cantidad de elementos de un conjunto, mientras que la otra toma en cuenta el orden de los elementos de un conjunto. De esta distincion surgen los numeros cardinales y los numeros ordinales, los cuales pueden ser tambien transfinitos. Para conjuntos finitos, estos dos conceptos son equivalentes. Sin embargo, los dos conceptos difieren en el momento de aplicarse a conjuntos infinitos.[cita\u00a0requerida]   ","snippet":"En la teoria de conjuntos, numero transfinito es el termino original que el matematico aleman Georg Cantor introdujo para referirse a numeros ordinales infinitos, que son mayores que cualquier numero ","enlaces_salientes":["N%C3%BAmero_transfinito","N%C3%BAmero_transfinito","N%C3%BAmero_transfinito","Teor%C3%ADa_de_conjuntos","Matem%C3%A1tico","Alemania","Georg_Cantor","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","Conjunto_infinito","N%C3%BAmero_natural","N%C3%BAmero_cardinal_(teor%C3%ADa_de_conjuntos)","Infinito","Sinonimia_(sem%C3%A1ntica)","N%C3%BAmeros_naturales","N%C3%BAmero_cardinal","N%C3%BAmero_ordinal_(matem%C3%A1ticas)","Primer_ordinal_infinito","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","N%C3%BAmeros_naturales","Teor%C3%ADa_de_conjuntos","Tipo_de_orden","Alef-0","Funci%C3%B3n_alef","N%C3%BAmero_cardinal_(teor%C3%ADa_de_conjuntos)","Axioma_de_elecci%C3%B3n","Numerable","Alef-1","Recta","N%C3%BAmeros_reales","Axioma_de_elecci%C3%B3n","Axiomas_de_Zermelo-Fraenkel","Hip%C3%B3tesis_del_continuo","Kurt_G%C3%B6del","Paul_Cohen","Independencia_l%C3%B3gica","Axiomas_de_Zermelo-Fraenkel","Hip%C3%B3tesis_del_continuo","Kurt_G%C3%B6del","1938","1963","Paul_Cohen","Geometr%C3%ADa_no_euclidiana","Suma","Multiplicaci%C3%B3n","Potenciaci%C3%B3n","N%C3%BAmeros_naturales","N%C3%BAmero_entero","N%C3%BAmero_racional","Monoide","Potenciaci%C3%B3n","Conjunto_potencia","Georg_Cantor","Conjunto_infinito","Conjunto_finito","N%C3%BAmeros_naturales","N%C3%BAmeros_reales","N%C3%BAmeros_racionales","N%C3%BAmeros_cardinales","N%C3%BAmeros_ordinales","Alef-0","Alef-1","Alef-2","Infinitesimal","Infinito","Conjunto_Dedekind-infinito","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Numero_real","titulo":"Numero real","contenido":" En matematicas, el conjunto de los numeros reales (denotado por R o por \u211d) incluye tanto los numeros racionales (positivos, negativos y el cero) como los numeros irracionales;\u200b y en otro enfoque, a los trascendentes y a los algebraicos. Los irracionales y los trascendentes\u200b no se pueden expresar mediante una fraccion de dos enteros con denominador no nulo; tienen infinitas cifras decimales aperiodicas, tales como 5 }} , \u03c0, o el numero real log \u2061 ( 2 ) , cuya trascendencia fue enunciada por Euler en el siglo\u00a0XVIII.\u200b  Los numeros reales pueden ser descritos y construidos de varias formas, algunas simples, aunque carentes del rigor necesario para los propositos formales de las matematicas, y otras mas complejas, pero con el rigor necesario para el trabajo matematico formal.  Durante los siglos siglo\u00a0XVI y siglo\u00a0XVII el calculo avanzo mucho aunque carecia de una base rigurosa, puesto que en el momento prescindian del rigor y fundamento logico, tan exigente en los enfoques teoricos de la actualidad, y se usaban expresiones como \u00abpeque\u00f1o\u00bb, \u00ablimite\u00bb, \u00abse acerca\u00bb sin una definicion precisa. Esto llevo a una serie de paradojas y problemas logicos que hicieron evidente la necesidad de crear una base rigurosa para la matematica, que consistio en definiciones formales y rigurosas (aunque ciertamente tecnicas) del concepto de numero real.\u200b En una seccion posterior se describiran dos de las definiciones precisas mas usuales actualmente: clases de equivalencia de sucesiones de Cauchy de numeros racionales y cortes de Dedekind.  Los egipcios dieron origen por primera vez a las fracciones comunes alrededor del a\u00f1o 1000\u00a0a.\u00a0C.; alrededor del 500\u00a0a.\u00a0C. un grupo de matematicos griegos liderados por Pitagoras se dio cuenta de la necesidad de los numeros irracionales. Los numeros negativos fueron ideados por matematicos indios cerca del 600, posiblemente reinventados en China poco despues, pero no se utilizaron en Europa hasta el siglo\u00a0XII, si bien a finales del XVIII Leonhard Euler descarto las soluciones negativas de las ecuaciones porque las consideraba irreales. En ese siglo, en el calculo se utilizaban numeros reales sin una definicion precisa, cosa que finalmente sucedio con la definicion rigurosa hecha por Georg Cantor en 1871.  En realidad, el estudio riguroso de la construccion total de los numeros reales exige tener amplios antecedentes de teoria de conjuntos y logica matematica. Fue lograda la construccion y sistematizacion de los numeros reales en el siglo\u00a0XIX por dos grandes matematicos europeos utilizando vias distintas: la teoria de conjuntos de Georg Cantor (encajamientos sucesivos, cardinales finitos e infinitos), por un lado, y el analisis matematico de Richard Dedekind (vecindades, entornos y cortaduras de Dedekind). Ambos matematicos lograron la sistematizacion de los numeros reales en la historia, no de manera espontanea, sino utilizando todos los avances previos en la materia: desde la antigua Grecia y pasando por matematicos como Descartes, Newton, Leibniz, Euler, Lagrange, Gauss, Riemann, Cauchy y Weierstrass.  Se sabe que los egipcios y babilonicos hacian uso de fracciones (numeros racionales) en la resolucion de problemas practicos. Sin embargo, fue con el desarrollo de la matematica griega cuando se considero el aspecto filosofico de numero. Los pitagoricos descubrieron que las relaciones armonicas entre las notas musicales correspondian a cocientes de numeros enteros,\u200b lo que les inspiro a buscar proporciones numericas en todas las demas cosas, y lo expresaron con la maxima \u00abtodo es numero\u00bb.  En la matematica griega, dos magnitudes son conmensurables si es posible encontrar una tercera tal que las primeras dos sean multiplos de la ultima, es decir, es posible encontrar una unidad comun para que las dos magnitudes tengan una medida entera. El principio pitagorico de que todo numero es un cociente de enteros, expresaba en esta forma que cualesquiera dos magnitudes deben ser conmensurables.  Sin embargo, el ambicioso proyecto pitagorico se tambaleo ante el problema de medir la diagonal de un cuadrado o la hipotenusa de un triangulo rectangulo, pues no es conmensurable respecto de los catetos. En notacion moderna, un triangulo rectangulo cuyos catetos miden 1, tiene una hipotenusa que mide raiz cuadrada de dos, 2 }} :  Si se supone que p o q tienen un dos en su descomposicion entonces estaria al cuadrado y por tanto seria una cantidad par en un lado de la igualdad cuando al otro lado es impar.  Surgio entonces una contradiccion: de acuerdo con el principio pitagorico todo numero es racional, pero la hipotenusa de un triangulo rectangulo isosceles no es conmensurable con los catetos. Ello implico que en adelante las magnitudes geometricas y las cantidades numericas tendrian que tratarse por separado, lo que tuvo consecuencias en el desarrollo de la matematica durante los dos milenios siguientes.\u200b  Los griegos desarrollaron una geometria basada en comparaciones (proporciones) de segmentos sin hacer referencia a valores numericos, usando diversas teorias para manejar el caso de medidas inconmensurables, como la teoria de proporciones de Eudoxo. Asi, los numeros irracionales permanecieron a partir de entonces excluidos de la aritmetica puesto que solo podian ser tratados mediante el metodo de infinitas aproximaciones. Por ejemplo, los pitagoricos encontraron (en notacion moderna) que si a\u2044b es una aproximacion a \u221a2 entonces p = a + 2b y q = a + b son tales que p\u2044q es una aproximacion mas precisa. Repitiendo el proceso nuevamente se obtienen mayores numeros que dan una mejor aproximacion.\u200b Dado que las longitudes que expresan los numeros irracionales podian ser obtenidas mediante procesos geometricos sencillos pero, aritmeticamente, solo mediante procesos de infinitas aproximaciones, origino que durante 2000 a\u00f1os la teoria de los numeros reales fuese esencialmente geometrica, identificando los numeros reales con los puntos de una linea recta.  Nuevos avances en el concepto de numero real esperaron hasta los siglos XVI y XVII , con el desarrollo de la notacion algebraica, lo que permitio la manipulacion y operacion de cantidades sin hacer referencia a segmentos y longitudes. Por ejemplo, se encontraron formulas para resolver ecuaciones de segundo y tercer grado de forma mecanica mediante algoritmos, los cuales incluian raices e incluso, en ocasiones, \u00abnumeros no reales\u00bb (lo que ahora conocemos como numeros complejos). Sin embargo, no existia aun un concepto formal de numero y se seguia dando primacia a la geometria como fundamento de toda la matematica. Incluso con el desarrollo de la geometria analitica este punto de vista se mantenia vigente, pues Descartes rechazaba la idea que la geometria pudiera fundamentarse en numeros, puesto que para el la nueva area era simplemente una herramienta para resolver problemas geometricos.  Posteriormente, la invencion del calculo abrio un periodo de grandes avances matematicos, con nuevos y poderosos metodos que permitieron por vez primera atacar los problemas relacionados con lo infinito mediante el concepto de limite. Asi, un numero irracional pudo ser entendido como el limite de una suma infinita de numeros racionales (por ejemplo, su expansion decimal). Como muestra, el numero \u03c0 puede estudiarse de forma algebraica (sin apelar a la intuicion geometrica) mediante la serie:   \u03c0 = 4 ( 1 \u2212 1 3 + 1 5 \u2212 1 7 + \u22ef ) = 4 \u2211 k = 0 \u221e ( \u2212 1 ) k 1 2 k + 1 {3}}+{5}}-{7}}+\\cdots \\right)=4\\sum _{k=0}^(-1)^{k}{2k+1}}}  entre muchas otras expresiones similares. Para entonces, el concepto intuitivo de numero real era ya el moderno, identificando sin problema un segmento con la medida de su longitud (racional o no). El calculo abrio el paso al analisis matematico, que estudia conceptos como continuidad, convergencia, etc. Pero el analisis no contaba con definiciones rigurosas y muchas de las demostraciones apelaban aun a la intuicion geometrica. Esto conllevo a una serie de paradojas e imprecisiones.  Los numeros reales se expresan con decimales que tienen una secuencia infinita de digitos a la derecha de la coma decimal, como por ejemplo 324,8232. Frecuentemente se a\u00f1aden tres puntos al final (324,823211247\u2026) indicando que hay mas digitos decimales, pero que se consideran sin importancia.  Las medidas en las ciencias fisicas son siempre una aproximacion a un numero real. No solo es mas conciso escribirlos con forma de fraccion decimal (es decir, numeros racionales que pueden ser escritos como proporciones, con un denominador exacto) sino que, en cualquier caso, cunde integramente el concepto y significado del numero real. En el analisis matematico los numeros reales son objeto principal de estudio. Puede decirse que los numeros reales son la herramienta de trabajo de las matematicas de la continuidad, como el calculo y el analisis matematico, mientras que los numeros enteros lo son de las matematicas discretas, en las que esta ausente la continuidad.  Se dice que un numero real es recursivo si sus digitos se pueden expresar por un algoritmo recursivo. Un numero no recursivo es aquel que es imposible de especificar explicitamente. Aun asi, la escuela rusa de constructivismo supone que todos los numeros reales son recursivos.  Los ordenadores solo pueden aproximarse a los numeros reales por numeros racionales; de todas maneras, algunos programas de ordenador pueden tratar un numero real de manera exacta usando su definicion algebraica (por ejemplo, \" 2 }} \") en vez de su respectiva aproximacion decimal.  Los matematicos usan el simbolo R } (o, de otra forma, R } , la letra \"R\" en negrita) para representar el conjunto de todos los numeros reales. La notacion matematica R n ^{n}} se refiere a un espacio de n dimensiones de los numeros reales; por ejemplo, un valor R 3 ^{3}} consiste de tres numeros reales y determina un lugar en un espacio de tres dimensiones.  En matematica, la palabra \u00abreal\u00bb se usa como adjetivo, con el significado de que el campo subyacente es el campo de los numeros reales. Por ejemplo, matriz real, funcion real, y Algebra de Lie real.  Un numero real puede ser un numero racional o un numero irracional. Los numeros racionales son aquellos que pueden expresarse como el cociente de dos numeros enteros, tal como 3/4, -21/3, 5, 0, 1/2, mientras que los irracionales son todos los demas. Los numeros racionales tambien pueden describirse como aquellos cuya representacion decimal es periodica despues de cierta cantidad de cifras, mientras que los irracionales tienen una expansion decimal aperiodica:  Los conjuntos de los numeros racionales e irracionales se designan mediante Q } e I } respectivamente.  Otra forma de clasificar los numeros reales es en algebraicos y trascendentes. Un numero es algebraico si existe un polinomio de coeficientes racionales que lo tiene por raiz y es trascendente en caso contrario. Obviamente, todos los numeros racionales son algebraicos: si p q {q}}} es un numero racional, con p entero y q natural, entonces es raiz de la ecuacion q x = p . Sin embargo, no todos los numeros algebraicos son racionales.  El conjunto de los numeros algebraicos se designa mediante A } .  Un numero real se dice computable si tiene una complejidad de Kolmogorov finita, es decir, si puede escribirse un programa informatico de extension finita que genere los digitos de dicho numero. Si un numero real no es computable se dice irreductible. Una definicion de numero irreductible es:  El conjunto de numeros reales computables se designa por R c o m p _}} . Obviamente los racionales y los algebraicos son numeros computables. De hecho se tiene la siguiente inclusion:   Q \u2282 A \u2282 R c o m p \\subset \\mathbb {A} \\subset \\mathbb {R} _}}  Ademas se tiene que todos estos conjuntos son numerables:   card | Q | = card | A | = card | R c o m p | = \u2135 0 }|\\mathbb {Q} |=}|\\mathbb {A} |=}|\\mathbb {R} _}|=\\aleph _{0}}  Esto implica que el conjunto de todos los numeros computables es un conjunto de medida nula.  Fue propuesto por el matematico aleman David Hilbert. En textos actuales de calculo y analisis matematico aparecen enunciados equivalentes al de Hilbert.\u200b  Existen diferentes formas de construir el conjunto de los numeros reales a partir de axiomas, siendo la caracterizacion mas comun, el conocido como metodo directo que introduce el sistema (\u211d, +,., \u2264), donde los elementos de \u211d se llaman numeros reales, + y. son dos operaciones en \u211d, \u2264 es una relacion de orden en \u211d.\u200b Se presenta una variante axiomatica, mediante las siguientes tres propiedades:  Un conjunto ( K , + , \u22c5 , \u2264 ) es el conjunto de los numeros reales si satisface las siguientes tres condiciones:  Las primeras dos condiciones definen el concepto de cuerpo ordenado, mientras que la tercera propiedad es de naturaleza topologica y es la que diferencia al conjunto de los numeros reales de todos los demas cuerpos ordenados. Hay que hacer notar que, en principio pueden existir diferentes conjuntos que satisfagan las mismas condiciones y que podrian ser diferentes al conjunto de los numeros reales, pero un teorema establece que si eso sucediera, ambas estructuras serian esencialmente la misma.  Cualquier cuerpo ordenado que cumpla las tres propiedades mencionadas es isomorfo al conjunto de los numeros reales.  En vista de lo anterior podemos hablar de el conjunto de los numeros reales (y no de un conjunto de numeros reales) y estableciendo su unicidad se puede usar el simbolo \u211d para representarlo.  Al enunciar la tercera propiedad en ocasiones se especifica que \u211d es completo en el sentido de Dedekind, pues existen otros axiomas que se pueden usar y que, asumiendo las primeras dos condiciones, todos son logicamente equivalentes. Algunos de estos son:  Cada una de las primeras dos propiedades mencionadas al inicio de la seccion corresponden a su vez a otra serie de axiomas, de modo que si se hace un desglose, puede caracterizarse el conjunto de los numeros reales como un conjunto que satisfaga la siguiente lista de axiomas.  Los axiomas del 1 al 15 corresponden a la estructura mas general de cuerpo ordenado. El ultimo axioma es el que distingue R } de otros cuerpos ordenados como Q } . Debe se\u00f1alarse que los axiomas 1 a 15 no constituyen una teoria categorica ya que puede demostrarse que admiten al menos un modelo no estandar diferente de los numeros reales, que es precisamente el modelo en el que se basa la construccion de los numeros hiperreales  Consideramos los numeros decimales como los conocemos intuitivamente. Sabemos que \u03c0 = 3 , 1415926535897932384626 \u2026 , es decir, el numero \u03c0 se expresa como el numero entero 3 y una secuencia infinita de digitos 1, 4, 1, 5, 9, 2, etc.  Un numero decimal se expresa entonces como x . d 1 d 2 d 3 d 4 \u2026 d_{2}d_{3}d_{4}\\dots } donde x es un numero entero y cada d i } es un elemento del conjunto { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } } . Ademas, consideramos que no existen las colas de 9.  Al conjunto de todos los numeros decimales donde x es un numero entero positivo se le denota por R + ^{+}} y se le llama el conjunto de los numeros reales positivos.  Al conjunto de todos los numeros decimales donde x es un numero entero negativo se le denota por R \u2212 ^{-}} y se le llama el conjunto de los numeros reales negativos.  Al numero decimal 0 , 00000 \u2026 se le llama cero.  Al conjunto R + \u222a R \u2212 \u222a { 0 , 00000 \u2026 } ^{+}\\cup \\mathbb {R} ^{-}\\cup \\{0,00000\\dots \\}} se le denota por R } y se le llama conjunto de numeros reales.  Se define la relacion de orden total de los numeros decimales como  Hay valores que no se pueden expresar como numeros racionales, tal es el caso de 2 }} . Sin embargo es claro que se puede aproximar 2 }} con numeros racionales tanto como se desee. Podemos entonces partir al conjunto de los numeros racionales en dos subconjuntos A y B de manera que en el conjunto A se encuentran todos los numeros racionales x < 2 }} y en B todos los numeros racionales tales que x > 2 }} .  Una cortadura de Dedekind es un par ordenado ( A , B ) que hace precisamente esto. Conceptualmente, la cortadura es el \"espacio\" que hay entre A y B . De esta manera es posible definir a 2 }} como ( A , B ) tal que A = { x \u2208 Q : x 2 < 2 } :x^{2}<2\\}} y B = { x \u2208 Q : x 2 > 2 } :x^{2}>2\\}} .  Es posible demostrar que B queda univocamente definido por A , de esta manera la cortadura ( A , B ) se reduce simplemente a A .  Tambien es demostrable que el conjunto de todas las cortaduras cumple con los axiomas de los numeros reales, de esta manera R } es el conjunto de todas las cortaduras de Dedekind. Esta es la primera construccion formal de los numeros reales bajo la teoria de conjuntos.  Un numero real r determina sobre la recta real una cortadura cuyas clases son A = { x / x \u2264 r } } y B = { x / x > r } } .\u200b  Las sucesiones de Cauchy retoman la idea de aproximar con numeros racionales un numero real.[cita\u00a0requerida] Tomese por ejemplo, la igualdad  Es claro que esta suma opera solo con los numeros racionales de la forma:  sin embargo, el resultado final es el numero irracional \u03c0 . Cada vez que se a\u00f1ade un termino, la expresion se aproxima mas y mas a \u03c0 .  Las sucesiones de Cauchy generalizan este concepto para definir a los numeros reales. Primero se define una sucesion de numeros racionales como una funcion f : N \u2192 Q \\rightarrow \\mathbb {Q} \\,} en la que se usa la notacion x n := f ( n ) :=f(n)} .  Una sucesion de Cauchy es una sucesion de numeros racionales donde sus elementos cada vez son menos diferentes. Mas formalmente, se define una sucesion de Cauchy como una sucesion de numeros racionales tales que para todo \u03f5 \u2208 Q + ^{+}} existe un n 0 \u2208 N \\in \\mathbb {N} } tal que para todo m , n \u2265 n 0 }} se cumple | x m \u2212 x n | < \u03f5 -x_{n}|<\\epsilon \\,} .  De esta manera es posible definir al numero real \u03c0 como la sucesion de numeros racionales:  Sea \u0393 el conjunto de las sucesiones de Cauchy en Q } . Sea la relacion \u223c definida en \u0393 por  Esta relacion \u223c es una relacion de equivalencia en el conjunto \u0393 de sucesiones de Cauchy definidas en Q } . Llamamos conjunto de los numeros reales al conjunto cociente \u0393 / \u223c } , en el que se puede definir una relacion de orden y una topologia. Se demuestra que Q } es isomorfo a un subconjunto de R } .\u200b  Sean a > 0 , b \u2208 R } cualesquiera. Entonces existe un numero natural n tal que n a > b ; esto expresa a su vez que lim n \u2192 \u221e b n = 0 {n}}=0} .\u200b  Con numeros reales pueden realizarse todo tipo de operaciones basicas con diversas excepciones importantes:  Estas restricciones tienen repercusiones en otras areas de las matematicas como el calculo: existen asintotas verticales en los lugares donde el denominador de una funcion racional tiende a cero, es decir, en aquellos valores de la variable en los que se presentaria una division entre cero, o no existe grafica real en aquellos valores de la variable en que resulten numeros negativos para raices de orden par, por mencionar un ejemplo de construccion de graficas en geometria analitica.  EL calculo con numeros reales suele llevar a resultados de numerosas cifras decimales que son inmanejables, haciendose necesario optar por aproximaciones que introducen errores.  Por ejemplo, el area de un circulo de 5 metros de radio dependera del valor que tomemos para el numero \u03c0:   A = \u03c0 \u22c5 r 2 } A = 25 \u03c0 m2  Asi, segun redondeemos \u03c0 a las decimas o centesimas:   A = 3.1 \u22c5 25 = 77.5 m2 A = 3.14 \u22c5 25 = 78.5 m2  Weisstein, Eric W. \u00abNumero real\u00bb.  En Weisstein, Eric W, ed. MathWorld (en ingles). Wolfram Research.   ","snippet":" En matematicas, el conjunto de los numeros reales (denotado por R o por \u211d) incluye tanto los numeros racionales (positivos, negativos y el cero) como los numeros irracionales;\u200b y en otro enfoque, a l","enlaces_salientes":["N%C3%BAmero_real","N%C3%BAmero_real","N%C3%BAmero_real","Recta_real","Correspondencia_matem%C3%A1tica","Biyecci%C3%B3n,_inyecci%C3%B3n_y_sobreyecci%C3%B3n","Matem%C3%A1ticas","Notaci%C3%B3n_matem%C3%A1tica","N%C3%BAmero_racional","Cero","N%C3%BAmero_irracional","N%C3%BAmero_trascendente","N%C3%BAmero_algebraico","Fracci%C3%B3n","Euler","C%C3%A1lculo_infinitesimal","Definici%C3%B3n_(matem%C3%A1tica)","Clases_de_equivalencia","Sucesi%C3%B3n_de_Cauchy","Cortes_de_Dedekind","Ojo_de_Horus","Antiguo_Egipto","Fracci%C3%B3n_egipcia","1000_a._C.","500_a._C.","Antigua_Grecia","Pit%C3%A1goras","N%C3%BAmero_irracional","N%C3%BAmero_negativo","India","600","China_(regi%C3%B3n)","Europa","Siglo_XVIII","Leonhard_Euler","An%C3%A1lisis_matem%C3%A1tico","Georg_Cantor","1871","Teor%C3%ADa_de_conjuntos","L%C3%B3gica_matem%C3%A1tica","Richard_Dedekind","Cortaduras_de_Dedekind","Ren%C3%A9_Descartes","Isaac_Newton","Leibniz","Euler","Joseph-Louis_de_Lagrange","Carl_Friedrich_Gauss","Bernhard_Riemann","Cauchy","Weierstrass","Matem%C3%A1ticas_en_el_Antiguo_Egipto","Matem%C3%A1tica_babil%C3%B3nica","Pitag%C3%B3ricos","Cuadrado","Tri%C3%A1ngulo_rect%C3%A1ngulo","Ra%C3%ADz_cuadrada_de_dos","Contradicci%C3%B3n","Tri%C3%A1ngulo","Proporcionalidad","Segmento","Aproximaci%C3%B3n","Siglo_XVI","Siglo_XVII","Ecuaci%C3%B3n","Algoritmo","N%C3%BAmero_complejo","Geometr%C3%ADa","Geometr%C3%ADa_anal%C3%ADtica","Ren%C3%A9_Descartes","C%C3%A1lculo_infinitesimal","L%C3%ADmite_de_una_funci%C3%B3n","An%C3%A1lisis_matem%C3%A1tico","F%C3%ADsica","Aproximaci%C3%B3n","Fracci%C3%B3n","N%C3%BAmero_racional","Proporcionalidad","Matem%C3%A1ticas_discretas","Constructivismo_(matem%C3%A1ticas)","R","Tabla_de_s%C3%ADmbolos_matem%C3%A1ticos","Matriz_(matem%C3%A1tica)","Funci%C3%B3n_real","%C3%81lgebra_de_Lie","N%C3%BAmero_racional","N%C3%BAmero_irracional","Cociente_(aritm%C3%A9tica)","N%C3%BAmero_algebraico","N%C3%BAmero_trascendente","Polinomio","N%C3%BAmero_computable","Complejidad_de_Kolmog%C3%B3rov","Conjunto_numerable","Teor%C3%ADa_de_la_medida","Axiomas_de_los_n%C3%BAmeros_reales","Cuerpo_(matem%C3%A1ticas)","Orden_total","Axioma_del_supremo","Supremo_(matem%C3%A1ticas)","Isomorfo","Sucesi%C3%B3n_de_Cauchy","Ley_de_tricotom%C3%ADa","Axioma_del_supremo","Teor%C3%ADa_(l%C3%B3gica)","Teor%C3%ADa_de_modelos","N%C3%BAmero_hiperreal","N%C3%BAmero_decimal","N%C3%BAmero_pi","N%C3%BAmero_entero","0,9_peri%C3%B3dico","Orden_total","Cortaduras_de_Dedekind","N%C3%BAmero_racional","Par_ordenado","Sistema_formal","Teor%C3%ADa_de_conjuntos","Sucesi%C3%B3n_de_Cauchy","Radicaci%C3%B3n","N%C3%BAmero_complejo","Divisi%C3%B3n_entre_cero","As%C3%ADntotas","Funci%C3%B3n_(matem%C3%A1tica)","Divisi%C3%B3n_entre_cero","Aproximaci%C3%B3n","Error_de_aproximaci%C3%B3n","N%C3%BAmero_decimal","%C3%81rea","C%C3%ADrculo","Metro","Radio_(geometr%C3%ADa)","N%C3%BAmero_%CF%80","Metro_cuadrado","Redondeo","N%C3%BAmero","N%C3%BAmero_complejo","N%C3%BAmero_racional","N%C3%BAmero_entero","N%C3%BAmero_natural","Cero","N%C3%BAmero_negativo","Fracci%C3%B3n","N%C3%BAmero_irracional","N%C3%BAmero_imaginario","ISBN","ISBN","Monocordio","Tono_(ac%C3%BAstica)","Octava","Cuarta","Quinta","ISBN","Eric_W._Weisstein","MathWorld","Wolfram_Research","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"%C3%81lef_(cardinales)","titulo":"Alef (cardinales)","contenido":"En la teoria de conjuntos, alef ( \u2135 , primera letra del alfabeto hebreo) es un signo empleado para referirse a ciertos numeros transfinitos que de hecho resultan ser numeros ordinales iniciales y por tanto numeros cardinales.\u200b Fueron introducidos por primera vez por el matematico Georg Cantor\u200b.  En el analisis matematico, aparecen frecuentemente alef 0 y alef 1, aunque pueden definirse numeros transfinitos arbitrariamente grandes, mas alla de estos dos. El cardinal alef 0 representa la cantidad de elementos de un conjunto infinito como el de los numeros naturales, y de hecho este cardinal es el numero transfinito mas peque\u00f1o. Georg Cantor, que inauguro la teoria de conjuntos, demostro que existian diferentes tipos de infinitos inconmensurables entre si, y por tanto, no todos los conjuntos infinitos eran equipotentes. Cantor demostro que el conjunto de los numeros reales tenia \"mas elementos\" que los numeros enteros (si bien ninguno de los dos conjuntos es finito, ambos diferian en su grado de \"infinidad\"). El numero de elementos de la recta real se represento como c }} o ( \u2135 1 ) )} .  Puede probarse rigurosamente que dada la clase formada por todos los numeros ordinales, existe un unico isomorfismo (de orden) entre esta clase y la clase de los cardinales transfinitos. Este isomorfismo, denotado como \u2135 , se emplea en teoria de conjuntos para construir cardinales transfinitos arbitrariamente grandes. Dicho isomorfismo es un epimorfismo (isomorfismo suprayectivo) y, por tanto,  matematicamente todos los cardinales transfinitos resultan ser un cardinal de tipo alef.  El mas peque\u00f1o de todos los numeros transfinitos (cardinales), y el mas simple de entender conceptualmente es \u2135 0 } (se lee como alef sub cero o alef cero). Este cardinal es el numero de elementos del conjunto de los numeros naturales. En analisis matematico puede definirse de manera sencilla e intuitiva la clase de conjuntos numerables (conjuntos cuyo cardinal es \u2135 0 } ). Cualquier conjunto que pueda ponerse en correspondencia biunivoca con los numeros naturales es un conjunto numerable. En terminos practicos, esto significa que los elementos de un conjunto numerable pueden \"etiquetarse\" como 1, 2, 3 ... de tal manera que a cada elemento de dicho conjunto le corresponda un numero natural (y nada mas que un numero natural).  Mas formalmente, dentro de la teoria axiomatica de conjuntos de Zermelo-Fraenkel, el axioma del infinito postula la existencia de un conjunto infinito que puede equipararse facilmente con los numeros naturales cuyo cardinal resulta ser \u2135 0 } .\u200b  En matematicas, se define \u2135 1 } como el menor cardinal mayor que \u2135 0 } , es decir, el menor cardinal mayor que el cardinal del conjunto de los numeros naturales. Es decir, \u2135 1 } es el sucesor de \u2135 0 } , lo cual se escribe \u2135 1 = \u2135 0 + =\\aleph _{0}^{+}} .  En analisis matematico, se interpreta usualmente al cardinal \u2135 1 } como la cantidad de numeros reales, asumiendo como cierta la hipotesis del continuo. Para justificar esto se parte del teorema de Cantor. Este teorema afirma que el cardinal de P ( N ) }(\\mathbb {N} )} es mayor que \u2135 0 } , donde card ( P ( N ) ) = card ( R ) }(}(\\mathbb {N} ))=}(\\mathbb {R} )} es el cardinal del conjunto potencia de los numeros naturales, que es exactamente el mismo que el cardinal de los numeros reales. Asi pues,   \u2135 0 < card ( R ) , <}(\\mathbb {R} ),}  lo que, considerando que card ( R ) = 2 \u2135 0 }(\\mathbb {R} )=2^}} , puede escribirse tambien asi:   \u2135 0 < 2 \u2135 0 <2^}}  En la teoria ZFC, el axioma de eleccion permite probar que   \u2135 1 \u2264 2 \u2135 0 , \\leq 2^},}  mientras que la hipotesis del continuo afirma que   \u2135 1 = 2 \u2135 0 =2^}} ,  es decir, que el cardinal de los numeros reales es exactamente \u2135 1 } . Sin embargo, los trabajos de Kurt Godel (1938) y Paul Cohen (1963) demostraron que de hecho la hipotesis del continuo es indecidible dentro de la axiomatica de Zermelo-Fraenkel (ZF) y por tanto la hipotesis del continuo no puede ser demostrada a partir de ZF (ni desconfirmada dentro de la teoria de conjuntos ordinaria dada por los axiomas ZF).  El teorema de Cantor sobre el conjunto potencia afirma que para cualquier conjunto A se cumple que:   card ( A ) < card ( P ( A ) ) }(A)<}(}(A))}  Esto abre la posibilidad de que existan cardinales transfinitos mayores que \u2135 1 } . La hipotesis del continuo generalizada de hecho permite ordenar los cardinales transfinitos de manera sencilla, ya que en esencia afirma que:   \u2200 n \u2265 0 : ( card ( A ) = \u2135 n \u2192 card ( P ( A ) ) = \u2135 n + 1 ) }(A)=\\aleph _{n}\\rightarrow }(}(A))=\\aleph _{n+1})}  El cardinal alef 2 ( \u2135 2 ) )} designa, asumiendo como valida la hipotesis del continuo generalizada, el cardinal transfinito del conjunto potencia de los numeros reales, y por tanto podria adoptarse como definicion tambien \u2135 2 = 2 \u2135 1 =2^}} , por tanto, la cantidad de posibles subconjuntos de numeros reales seria \u2135 2 } . Igualmente aceptando la hipotesis del continuo generalizada, puede demostrarse que \u2135 2 } tambien es el cardinal del conjunto de todas las funciones reales ya que:   \u2135 1 \u2135 1 = 2 \u2135 1 = \u2135 2 }^}=2^}=\\aleph _{2}}  Mientras que las funciones continuas tienen cardinal \u2135 1 } , ya que   \u2135 1 \u2135 0 = 2 \u2135 0 = \u2135 1 < \u2135 2 }^}=2^}=\\aleph _{1}<\\aleph _{2}} .  Esto ultimo se debe a que una funcion continua queda determinada si se especifica su valor sobre los numeros racionales, que son numerables y por tanto tienen \u2135 0 } como cardinal.  El conjunto de partes de cualquier espacio vectorial real o complejo de dimension finita tiene tambien cardinal \u2135 2 } . Demostrar esto. Si no asumo que es falso.  En matematica, se define \u2135 \u03c9 } como el cardinal singular (cardinal no regular) mas peque\u00f1o de todos. A diferencia de \u2135 \u03c9 } , los primeros cardinales transfinitos como \u2135 0 , \u2135 1 , \u2135 2 , \u2026 ,\\aleph _{1},\\aleph _{2},\\dots } son todos ellos cardinales regulares. Otra propiedad notoria de \u2135 \u03c9 } es que es un cardinal que no es sucesor de ningun otro (a diferencia de lo que pasa con \u2135 n , n \u2208 N , n \u2265 1 ,\\ n\\in N,n\\geq 1} ), ya que su indice \u03c9 es un ordinal limite. El hecho de que \u2135 \u03c9 } sea el cardinal singular mas peque\u00f1o posible significa que es el cardinal mas peque\u00f1o tal que su cofinalidad es menor que el propio cardinal, es decir:   c f ( \u2135 \u03c9 ) < \u2135 \u03c9 (\\aleph _)<\\aleph _}  Dado que el ordinal \u03c9 coincide con el cardinal \u2135 0 } (los dos signos representan el mismo conjunto), tecnicamente se podria escribir el cardinal \u2135 \u03c9 } como una aplicacion reiterada de la funcion alef, es decir:   \u2135 \u03c9 = \u2135 \u2135 0 =\\aleph _}}  Aunque esa manera de escribirlo no es tan comun.  En teoria de conjuntos, la funcion alef es el unico \u2208 -isomorfismo entre la clase de los ordinales O n } y la clase de los cardinales infinitos I C n } es decir:   \u2135 : O n \u2192 I C n \u2282 O n \\to \\mathrm {ICn} \\subset \\mathrm {On} }  Usualmente esta funcion se designa mediante \u2135 aunque es comun escribir su valor sobre un ordinal \u03b1 como \u2135 \u03b1 } mas que como \u2135 ( \u03b1 ) . Puede demostrarse que esta es una funcion normal, es decir, es una funcion monotona creciente y ademas continua (en el sentido de los ordinales). ","snippet":"En la teoria de conjuntos, alef ( \u2135 , primera letra del alfabeto hebreo) es un signo empleado para referirse a ciertos numeros transfinitos que de hecho resultan ser numeros ordinales iniciales y por ","enlaces_salientes":["%C3%81lef_(cardinales)","%C3%81lef_(cardinales)","%C3%81lef_(cardinales)","Teor%C3%ADa_de_conjuntos","Alfabeto_hebreo","N%C3%BAmero_transfinito","N%C3%BAmero_cardinal","Georg_Cantor","An%C3%A1lisis_matem%C3%A1tico","%C3%81lef_0","%C3%81lef_1","Conjunto_infinito","N%C3%BAmeros_naturales","Georg_Cantor","Teor%C3%ADa_de_conjuntos","N%C3%BAmeros_reales","Recta_real","Clase_(teor%C3%ADa_de_conjuntos)","Isomorfismo","Funci%C3%B3n_suprayectiva","Conjunto","An%C3%A1lisis_matem%C3%A1tico","Funci%C3%B3n_biyectiva","Teor%C3%ADa_axiom%C3%A1tica_de_conjuntos","Axioma_del_infinito","Conjunto_infinito","Matem%C3%A1ticas","Hip%C3%B3tesis_del_continuo","Teorema_de_Cantor","Conjunto_potencia","Teor%C3%ADa_axiom%C3%A1tica_de_conjuntos","Axioma_de_elecci%C3%B3n","Hip%C3%B3tesis_del_continuo","Kurt_G%C3%B6del","Paul_Cohen","Axiomas_de_Zermelo-Fraenkel","Hip%C3%B3tesis_del_continuo","Funci%C3%B3n_real","Funci%C3%B3n_continua","N%C3%BAmeros_racionales","Espacio_vectorial","N%C3%BAmero_cardinal","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","Cofinalidad","Funci%C3%B3n_%C3%A1lef","Teor%C3%ADa_de_conjuntos","Isomorfismo","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","N%C3%BAmero_cardinal_(teor%C3%ADa_de_conjuntos)","Funci%C3%B3n_mon%C3%B3tona","Funci%C3%B3n_continua#Funciones_continuas_sobre_los_n\u00fameros_ordinales","Infinito","Teor%C3%ADa_de_conjuntos","Georg_Cantor","N%C3%BAmeros_transfinitos","Hip%C3%B3tesis_del_continuo","Springer-Verlag","ISBN","Control_de_autoridades"]}
{"url":"Buen_orden","titulo":"Conjunto bien ordenado","contenido":"En teoria de conjuntos, un conjunto bien ordenado es un conjunto no vacio totalmente ordenado tal que todo subconjunto no vacio tiene un elemento minimo. Equivalentemente, puede decirse que un conjunto A es bien ordenado si es totalmente ordenado y bien fundado.  Si A es un conjunto totalmente ordenado se dice que n es el primer elemento o elemento minimo de A si satisface:  Intuitivamente se entiende que el elemento minimo es el mas peque\u00f1o de un conjunto.  El principio del buen orden es un lema que establece que todo conjunto que este formado unicamente por numeros naturales tiene un primer elemento. Es decir, que el conjunto de los numeros naturales es bien ordenado. El primer elemento de los numeros naturales es 0 .  Sea A \u2286 N } un conjunto no vacio. Si A no tiene elemento minimo, entonces existe un conjunto B = N \u2216 A \\setminus A} .  Luego entonces por el principio de induccion matematica, B = N } y A = \u2205 , pero eso contradice la suposicion de que A no era un conjunto vacio.  Por lo tanto, A debe tener elemento minimo.  Si (A, \u2264) es un conjunto bien ordenado, y B es un subconjunto de A con la relacion de orden inducida y f:A \u2192 B un isomorfismo, entonces para todo a \u2208 A, vale a \u2264 f(a).  Dado un numero ordinal (teoria de conjuntos) \u03b1, el conjunto de todos los numeros ordinales \u03b2 < \u03b1 es un conjunto bien ordenado. Asi N } es isomorfo al conjunto ordenado {\u03b2: \u03b2 < \u03c9}.  Para todo conjunto bien ordenado (A, \u2264) existe un unico numero ordinal \u03b1 tal que A es isomorfo al intervalo inicial de numeros ordinales {\u03b2: \u03b2 < \u03b1}. Ademas, en caso de que exista un isomorfismo de orden A \u2192 {\u03b2: \u03b2 < \u03b1}, es unico.  Este resultado significa que los conjuntos bien ordenados son clasificados hasta isomorfismo por los numeros ordinales. Aceptando el axioma de eleccion, se obtiene el siguiente teorema (que de hecho es equivalente):  Para todo conjunto A, existe una relacion de orden total \u2264 sobre A tal que (A, \u2264) esta bien ordenado.  Una generalizacion de la nocion de conjunto bien ordenado es la de conjunto bien fundado.   ","snippet":"En teoria de conjuntos, un conjunto bien ordenado es un conjunto no vacio totalmente ordenado tal que todo subconjunto no vacio tiene un elemento minimo. Equivalentemente, puede decirse que un conjunt","enlaces_salientes":["Conjunto_bien_ordenado","Conjunto_bien_ordenado","Conjunto_bien_ordenado","Teor%C3%ADa_de_conjuntos","Conjunto","Orden_total","Relaci%C3%B3n_bien_fundada","Orden_total","Principio_del_buen_orden","Lema_(matem%C3%A1ticas)","N%C3%BAmero_natural","Inducci%C3%B3n_matem%C3%A1tica","Conjunto_vac%C3%ADo","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","Isomorfismo","Isomorfismo_de_orden","Axioma_de_elecci%C3%B3n","Orden_total","Teor%C3%ADa_del_orden","Teor%C3%ADa_del_orden","Orden_total","Conjunto_parcialmente_ordenado","Conjunto_preordenado","Conjunto","Relaci%C3%B3n_binaria","Relaci%C3%B3n_reflexiva","Relaci%C3%B3n_transitiva","Relaci%C3%B3n_antisim%C3%A9trica","Relaci%C3%B3n_total","Relaci%C3%B3n_bien_fundada","Control_de_autoridades"]}
{"url":"%C3%81lgebra_de_conjuntos","titulo":"Algebra de conjuntos","contenido":"En matematicas,  algebra de conjutos\u200b\u200b\u200b es el estudio de  las operaciones basicas que pueden realizarse con conjuntos, como la union, interseccion y complementacion.  Un conjunto es una coleccion de objetos considerada como un objeto en si. Un conjunto esta definido unicamente por los elementos que lo componen, y no por la manera en la que se lo representa.  Existe una serie de relaciones basicas entre conjuntos y sus elementos:  El conjunto vacio es el conjunto sin ningun elemento, y se denota por \u2205 o por { } } . El conjunto universal es el conjunto que contiene todos los elementos posibles, dentro del contexto considerado. Por ejemplo, si se estudian los numeros naturales, el conjunto universal es el conjunto de todos ellos, N } . De manera general, el conjunto universal se denota por U .  En las matematicas, podemos hacer lo que queramos definir a un conjunto, por ser un concepto primitivo, pero hacemos abstraccion y lo pensamos como una coleccion desordenada de objetos, los objetos de un conjunto pueden ser cualquier cosa siempre que tengan una relacion entre ellos, a los objetos de un conjunto se les llama elementos  de dicho conjunto, por lo tanto un conjunto contiene a sus elementos. Se representan con una letra mayuscula y a los elementos o miembros de ese conjunto se les mete entre llaves corchetes o parentesis. ({,}).  Dos conjuntos se pueden combinar de muchas maneras distintas, por ejemplo, teniendo un conjunto de la gente que juega al futbol y otro de la gente que juega a baloncesto podemos hacer muchas combinaciones como el conjunto de personas que juegan a futbol o baloncesto, las que juegan a futbol y baloncesto, las que no juegan a baloncesto, etc.  Algunas de estas operaciones poseen propiedades similares a las operaciones con numeros naturales. Por ejemplo, la union y la interseccion son conmutativas y asociativas. El conjunto vacio es el elemento neutro de la union, y el elemento absorbente de la interseccion y del producto cartesiano. El conjunto universal es el elemento neutro de la interseccion y el elemento absorbente de la union.  Ademas, las operaciones de union, interseccion, diferencia y complemento son muy similares a las operaciones en un algebra de Boole, asi como a los conectores logicos de la logica proposicional.\u200b  Por lo tanto vamos a ver las distintas operaciones que hay en los conjuntos:  El simbolo del operador de esta operacion es: \u222a, y es llamado copa.  \u00a0Es correspondiente a la formacion de los elementos de dos conjuntos o incluso mas conjuntos que pueden, partiendo de esto conformar una nueva forma de conjunto, en la cual los elementos dentro de este correspondan a los elementos de los conjuntos originales. Cuando un elemento es repetido, forma parte de  una vez solamente; esto difiere del concepto de multiconjuntos en la concepcion tradicional de la suma, en la cual los elementos comunes se consideran tantas veces como se encuentren en la totalidad de los conjuntos.  Sean A y B dos conjuntos, la junta de ambos (A \u222a B) es el conjunto C el cual contiene a todos los elementos pertenecientes al conjunto A o al conjunto B.  Un elemento x pertenece a la junta de los conjuntos A y B si, y solo si, x pertenece al conjunto A o x pertenece al conjunto B, por lo tanto A \u222a B = { x / x \u2208 A \u2228 x \u2208 B } }  En el Diagrama de Venn que se muestra en la imagen de la derecha se puede observar como es de forma grafica, a continuacion pondre tambien algunos ejemplos practicos:  El simbolo del operador de esta operacion es: \u2229, y es llamado capa.  Sean A y B dos conjuntos, la coincidencia de ambos (A \u2229 B)  es el conjunto C el cual contiene los elementos que estan en A y que estan en B.  Un elemento x pertenece a la coincidencia de los conjuntos A y B si, y solo si, x pertenece al conjunto A y x pertenece al conjunto B a la vez, por lo tanto A \u2229 B = { x / x \u2208 A \u2227 x \u2208 B } } .  Se dice que dos conjuntos A y B son disjuntos cuando la coincidencia de ambos es el conjunto vacio. A \u2229 B= \u2205  El simbolo de esta operacion es: \\.  La diferencia consiste en eliminar de A todo elemento que este en B, tambien se puede denotar con el simbolo de la resta A-B, por lo tanto, la diferencia de los conjuntos A y B es el conjunto C que tiene a todos los elementos que estan en A, pero no en B.  Tambien se le puede llamar a la diferencia de A y B: complementario de B con respecto a A.  Por lo tanto, un elemento pertenece a la diferencia de A y B si, y solo si { x / x \u2208 A \u2227 x \u2208 B } }  El simbolo de esta operacion es: A\u2201, o tambien se suele representar con el simbolo A  Supongamos que U es el conjunto universal, en el cual se encuentran todos los elementos posibles, entonces el complementario de A con respecto a U se consigue restando a U todos los elementos de A.  El simbolo de esta operacion es: \u0394.  La diferencia simetrica de dos conjuntos A y B es otro conjunto el cual posee los elementos que o bien se encuentran en A, o bien se encuentran en B, pero no en los dos a la vez. A \u0394 B = C, donde C no tiene  En un conjunto los elementos estan desordenados y el orden es muy importante, por ello necesitamos algun tipo de estructura diferente para representar a los elementos ordenados, de ahi salen las n-tuplas ordenadas.  La n-tupla ordenada ( a 1 , a 2 , a 3 , \u2026 , a n ) ,a_{2},a_{3},\\dots ,a_{n})} es la coleccion ordenada donde su primer elemento es ( a 1 ) )} , ( a 2 ) )} es su segundo elemento, ... y ( a n ) )} el elemento n-esimo.  Se puede decir que dos n-tuplas ordenadas son iguales si, y solo si, cada elemento numerado de cada par es igual, o sea, ( a 1 , a 2 , a 3 , \u2026 , a n ) ,a_{2},a_{3},\\dots ,a_{n})} = ( b 1 , b 2 , b 3 , \u2026 , b n ) ,b_{2},b_{3},\\dots ,b_{n})} esto sucede si, y solo si ( a i ) )} = ( b i ) )} para i= 1,2,3,...,n. Las 2-tuplas se llaman pares ordenados (a,b) y (c,d), estos son iguales si, y solo si a=c y b=d.  Ahora haciendo referencia al producto cartesiano de dos conjuntos:  El simbolo de esta operacion es: \u00d7  El producto cartesiano de dos conjuntos A y B es el conjunto C, C = A \u00d7 B, donde los pares ordenados (a,b) estan formados por un primer elemento perteneciente a A y un segundo elemento perteneciente a B.   A \u00d7 B = { ( a , b ) / a \u2208 A \u2227 b \u2208 B } }  Es la generalizacion del resultado de las uniones de un numero arbitrario de conjuntos, es una tecnica muy importante que se usa principalmente en los problemas de enumeracion.   Sucede por ejemplo cuando queremos encontrar un cardinal de la union de dos conjuntos y para encontrar dicho numero de la union de dos conjuntos finitos A y B, hay que tener en cuenta que en A\u222aB cada elemento de A esta solo una vez en A, pero no en B, y viceversa, pero hay algunos elementos que pueden pertenecer a A y a B a la vez, por lo tanto el principio de inclusion-exclusion se basa en restar a la union de dos conjuntos finitos la interseccion de ambos.  Matematicamente: A\u222aB - A\u2229B  En matematicas, una identidad es la constatacion de que dos objetos que aparentemente son distintos por la forma en la que se representan, al final son lo mismo. Por lo tanto, una identidad es una igualdad entre dos expresiones, entre los conjuntos existen una serie de leyes de identidades, que les muestro a continuacion:  donde I es un conjunto indexado, posiblemente incontable.  Las operaciones de union y de interseccion tienen la propiedad asociativa, por lo tanto si tenemos tres conjuntos A, B y C...  La union de esos tres conjuntos es otro conjunto D el cual contiene todos aquellos elementos que estan al menos en uno de los conjuntos A, B o C. (A\u222aB\u222aC)  Un elemento x pertenece a la union de los conjuntos A, B y C si, y solo si, x pertenece al conjunto A o x pertenece al conjunto B o x pertenece al conjunto C, por lo tanto: A \u222a B \u222a C = { x / x \u2208 A \u2228 x \u2208 B \u2228 x \u2208 C } }  La interseccion de los conjuntos A, B y C queda como resultado otro conjunto D el cual tiene los elementos que estan estrictamente en A, en B y en C. (A\u2229B\u2229C)  Un elemento x pertenece a la interseccion de los conjuntos A, B y C si, y solo si, x pertenece al conjunto A, x pertenece al conjunto B y x pertenece al conjunto C, por lo tanto: A \u2229 B \u2229 C = { x / x \u2208 A \u2227 x \u2208 B \u2227 x \u2208 C } } ","snippet":"En matematicas,  algebra de conjutos\u200b\u200b\u200b es el estudio de  las operaciones basicas que pueden realizarse con conjuntos, como la union, interseccion y complementacion.  Un conjunto es una coleccion de o","enlaces_salientes":["%C3%81lgebra_de_conjuntos","%C3%81lgebra_de_conjuntos","%C3%81lgebra_de_conjuntos","Matem%C3%A1ticas","Operaci%C3%B3n_binaria","Conjuntos","Uni%C3%B3n_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Conjunto_complementario","Conjunto","Relaci%C3%B3n_matem%C3%A1tica","Relaci%C3%B3n_de_pertenencia","Principio_de_extensionalidad","Subconjunto","Conjunto_vac%C3%ADo","Conjunto_universal","N%C3%BAmero_natural","N%C3%BAmero_par","Representaci%C3%B3n_gr%C3%A1fica","Conjunto","Pol%C3%ADgonos","Elementos","Conjunto","Perteneciente","Matem%C3%A1ticas","Conjunto","Elementos","Elementos","Conjunto","Conmutatividad","Asociatividad_(%C3%A1lgebra)","Elemento_neutro","Uni%C3%B3n_de_conjuntos","Elemento_absorbente","Intersecci%C3%B3n_de_conjuntos","Producto_cartesiano","Conjunto_universal","%C3%81lgebra_de_Boole","Conectivas_l%C3%B3gicas","L%C3%B3gica_proposicional","Diagrama_de_Venn","Conjunto","Uni%C3%B3n_de_conjuntos","Conjunto","Diagrama_de_Venn","Diagrama_de_Venn","Intersecci%C3%B3n_de_conjuntos","Conjunto","Intersecci%C3%B3n_de_conjuntos","Disjuntos","Intersecci%C3%B3n_de_conjuntos","Conjunto_vac%C3%ADo","Diagrama_de_Venn","Diferencia_de_conjuntos","Conjunto","Diagrama_de_Venn","Complemento_de_un_conjunto","Conjunto","Diagrama_de_Venn","Diferencia_sim%C3%A9trica","Conjunto","Principio_de_inclusi%C3%B3n-exclusi%C3%B3n","Matem%C3%A1ticas","Identidad_(matem%C3%A1tica)","Identidad_(matem%C3%A1tica)","Igualdad_matem%C3%A1tica","Propiedad_asociativa","Teor%C3%ADa_de_conjuntos","Teor%C3%ADa_axiom%C3%A1tica_de_conjuntos","%C3%81lgebra_de_Boole","Din%C3%A1mica_de_sistemas","Diagrama_de_Venn","Conjunto","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","Internet_Archive","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Diferencia_de_conjuntos","titulo":"Diferencia de conjuntos","contenido":"En teoria de conjuntos, la diferencia de dos conjuntos es una operacion que da como resultado otro conjunto con los elementos del primer conjunto sin los elementos del segundo conjunto. Por ejemplo, la diferencia entre el conjunto de los numeros naturales, N } , y el conjunto de los numeros pares sin incluir el cero, P , es el conjunto de los numeros que no son pares, es decir, los impares, I :  Como no hay ningun elemento del conjunto P que no sea un numero natural, la diferencia P menos N no tiene ningun elemento, por lo que es el conjunto vacio. La diferencia entre dos conjuntos A y B se denota por A \\ B o A \u2212 B, por lo que: N \\ P = I, y tambien P \u2212 N = \u2205.  Dados dos conjuntos A y B, su diferencia es el conjunto que contiene algunos  elementos de A que no estan en B:  La diferencia de A menos B (o entre A y B) es otro conjunto A \\ B (o tambien A \u2212 B) cuyos elementos son todos aquellos elementos de A que no lo sean de B:   x \u2208 A \u2216 B si y s o \u00b4 lo si x \u2208 A pero x \u2208 B }}}}x\\in A}x\\notin B}  La diferencia entre A y B tambien se denomina complemento relativo de B en A, y se denota \u2201AB, cuando el segundo es un subconjunto del primero. Este nombre proviene de la relacion entre las operaciones de diferencia y complemento (ver mas abajo). La norma ISO da preferencia a la notacion cpero no se puedebarra invertida. [cita\u00a0requerida]  Ejemplo.  De la definicion de la diferencia de conjuntos, puede deducirse inmediatamente.  Estas igualdades son un caso particular de la siguiente propiedad:  La interseccion de dos conjuntos es la parte que tienen en comun, mientras que la diferencia es la parte que no comparten. Esto se traduce en la siguiente propiedad:  Dados dos conjuntos, su interseccion y su diferencia son disjuntos entre si, y su union es el primero de los conjuntos iniciales:  Esto quiere decir que la interseccion y la diferencia entre A y B son una (posible) particion de A.  La diferencia de conjuntos esta muy relacionada con el complemento de un conjunto:  El complemento de un conjunto es la diferencia entre el conjunto universal y el mismo:  Es por esto que la diferencia de dos conjuntos, A - B, se denomina tambien el complemento relativo de B respecto de A: A \\ B es el complemento absoluto de B, considerando a A como el conjunto universal . Las leyes de De Morgan y otras propiedades del complemento de un conjunto tienen entonces su contrapartida en la diferencia de conjuntos, si se tiene en cuenta que  Si se considera un conjunto universal, la diferencia entre dos conjuntos es la interseccion del primero con el complemento del segundo:  Tambien es de hacer notar que si: ","snippet":"En teoria de conjuntos, la diferencia de dos conjuntos es una operacion que da como resultado otro conjunto con los elementos del primer conjunto sin los elementos del segundo conjunto. Por ejemplo, l","enlaces_salientes":["Diferencia_de_conjuntos","Diferencia_de_conjuntos","Diferencia_de_conjuntos","Diferencia_sim%C3%A9trica","Teor%C3%ADa_de_conjuntos","Conjunto","Operaci%C3%B3n_binaria","N%C3%BAmeros_naturales","N%C3%BAmeros_pares","N%C3%BAmero_impar","Conjunto_vac%C3%ADo","Subconjunto","Complemento_de_un_conjunto","ISO","Barra_invertida","N%C3%BAmeros_naturales","N%C3%BAmero_par","N%C3%BAmero_primo","N%C3%BAmero_compuesto","N%C3%BAmero_impar","Conjunto_vac%C3%ADo","%C3%81lgebra_de_conjuntos","Elemento_neutro","Conjunto_vac%C3%ADo","Subconjunto","Conjuntos_disjuntos","Intersecci%C3%B3n_de_conjuntos","Partici%C3%B3n_(matem%C3%A1tica)","Complemento_de_un_conjunto","Conjunto_universal","Leyes_de_De_Morgan","%C3%81lgebra_de_conjuntos","Diferencia_sim%C3%A9trica","Conjunto","Teor%C3%ADa_de_conjuntos","ISBN","Control_de_autoridades","Gemeinsame_Normdatei"]}
{"url":"Complemento_de_un_conjunto","titulo":"Complemento de un conjunto","contenido":"El complemento de un conjunto o conjunto complementario es otro conjunto que contiene todos los elementos que no estan en el conjunto original. Para poder definirlo es necesario especificar que tipo de elementos se estan utilizando, o de otro modo, cual es el conjunto universal. Por ejemplo, si se habla de numeros naturales, el complementario del conjunto de los numeros primos P es el conjunto de los numeros no primos C, que esta formado por los numeros compuestos y el 1:  A su vez, el conjunto P es el complementario de C. El conjunto complementario se denota por una barra horizontal o por el superindice \u00ab\u2201\u00bb, por lo que se tiene: P\u2201 = C, y tambien C = P.  El conjunto complementario de A es la diferencia (o complementario relativo) entre el conjunto universal y A, por lo que ambas operaciones (complementario y diferencia) tienen propiedades similares.  Dado un conjunto A, su complementario es el conjunto formado por los elementos que no pertenecen a A:  El complementario de A es otro conjunto A\u2201 cuyos elementos son todos aquellos que no estan en A:   x \u2208 A \u2201 si y s o \u00b4 lo si x \u2208 A }}}}x\\notin A}  Esta definicion presupone que se ha especificado un conjunto universal U, pues de otro modo, en la afirmacion \u00abtodos los x que no estan en A\u00bb, la palabra \u00abtodos\u00bb es ambigua. Si se menciona explicitamente el conjunto universal U, entonces el complementario de A es el conjunto de todos los elementos de U que no estan en A, por lo que la relacion con la diferencia es clara:   A \u2201 = U \u2216 A =U\\setminus A}  Por otro lado, considerando un conjunto universal, la diferencia entre dos conjuntos puede expresarse utilizando la nocion de complementariedad:   A \u2216 B = A \u2229 B \u2201 }  Ejemplo.  Puesto que el conjunto universal contiene todos los elementos en consideracion, y el conjunto vacio no contiene a ninguno, se tiene lo siguiente:   U \u2201 = \u2205 , \u2205 \u2201 = U =\\varnothing }\\varnothing ^=U}  Puesto que la nocion de complementariedad esta relacionada con la negacion en logica, la primera posee propiedades similares a la segunda:  En tambien unas relaciones entre las operaciones de union e interseccion a traves del complemento:  Leyes de De Morgan Una Relacion binaria R se define como un subconjunto de un producto cartesiano X \u00d7 Y. La relacion complementaria R \u00af }} es el complemento del conjunto R en X \u00d7 Y. El complemento de la relacion R puede ser escrito como  Aqui, R es a menudo visto como una  matriz logica con filas representado los elementos de X, y las columnas los elementos de Y. La verdad de  aRb  corresponde a 1 en la fila  a , columna  b . Produciendo la relacion complementaria de \"R\" que corresponde a cambiar todos los 1 a 0 y los 0 a 1 para la matriz logica del complemento.  Junto con la composicion de relaciones y la relacion inversa , las relaciones complementarias y el algebra de conjuntos son la  operacion elemental de la logica algebraica ","snippet":"El complemento de un conjunto o conjunto complementario es otro conjunto que contiene todos los elementos que no estan en el conjunto original. Para poder definirlo es necesario especificar que tipo d","enlaces_salientes":["Complemento_de_un_conjunto","Complemento_de_un_conjunto","Complemento_de_un_conjunto","Conjunto_universal","N%C3%BAmeros_naturales","N%C3%BAmeros_primos","N%C3%BAmeros_compuestos","Uno","Super%C3%ADndice","Conjunto_diferencia","Conjunto","Conjunto_universal","Diferencia_de_conjuntos","Diferencia_de_conjuntos","Var%C3%B3n","Mujer","Ser_humano","N%C3%BAmeros_naturales","Conjunto_universal","Conjunto_vac%C3%ADo","Negaci%C3%B3n_l%C3%B3gica","L%C3%B3gica","Involuci%C3%B3n_(matem%C3%A1tica)","Conjuntos_disjuntos","Subconjunto","Uni%C3%B3n_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Leyes_de_De_Morgan","Relaci%C3%B3n_binaria","Producto_cartesiano","Matriz_booleana","Relaci%C3%B3n_inversa","%C3%81lgebra_de_conjuntos","Operaci%C3%B3n_matem%C3%A1tica","%C3%81lgebra_de_conjuntos","Conjunto","Teor%C3%ADa_de_conjuntos","Diferencia_de_conjuntos","Uni%C3%B3n_de_conjuntos","Diferencia_sim%C3%A9trica","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica","ISBN"]}
{"url":"Conjunto_universal","titulo":"Conjunto universal","contenido":"En matematicas, principalmente en teoria de conjuntos y logica de clases, un conjunto universal es un conjunto formado por todos los objetos de estudio en un contexto dado. Por ejemplo, en aritmetica los objetos de estudio son los numeros naturales, por lo que el conjunto universal para este caso puede ser el conjunto de los numeros naturales N. Al conjunto universal tambien se le denomina conjunto referencial, universo del discurso o clase universal, segun el contexto, y se denota habitualmente por U o V.  La eleccion de un conjunto universal se hace por conveniencia, para establecer una distincion clara entre los objetos matematicos, todos ellos en el conjunto universal; y los conjuntos formados por dichos objetos, todos ellos subconjuntos del conjunto universal. Escogido un conjunto universal, para cada conjunto de objetos existe su complementario, que contiene todos los elementos que no estan en dicho conjunto.  En teoria de conjuntos, los objetos matematicos estudiados incluyen a los propios conjuntos. El conjunto universal abarcaria entonces, no solo objetos simples como numeros, sino tambien conjuntos de numeros, conjuntos de conjuntos de numeros, etc. Sin embargo, en este caso suponer la existencia de un conjunto universal lleva una contradiccion conocida como la paradoja de Russell.  Una vez que se ha establecido un conjunto universal U de elementos de una cierta clase, se asume que todos los conjuntos A contienen elementos de esta clase, por lo que todos ellos son subconjuntos de U. Esto conlleva una serie de propiedades:  El conjunto universal es entonces el elemento absorbente de la union y el elemento neutro de la interseccion. Una vez definido un conjunto universal, puede definirse el conjunto complementario de otro, a partir de la operacion de diferencia de conjuntos:  Esto da lugar a las siguientes propiedades:  El complemento del conjunto universal es el conjunto vacio, y viceversa:  El concepto de conjunto universal se define como la coleccion de todos los objetos matematicos en estudio, sin considerar a los propios conjuntos de objetos. Por ejemplo, al trabajar con los numeros reales, el conjunto universal es el conjunto de todos los numeros reales R, en el que no esta incluido ningun conjunto de numeros reales, como el intervalo [0, 1] o los reales positivos R+.  En teoria de conjuntos, los objetos matematicos en estudio son los propios conjuntos, siendo los elementos de estos cualesquiera objetos matematicos u otros conjuntos incluso. En estas condiciones, no se puede definir un conjunto universal sin caer en una contradiccion, debido a la paradoja de Russell. Si dicho conjunto V existiera, entonces estaria perfectamente justificada la existencia de la llamada clase de Russell como un subconjunto de este:  Puesto que la existencia de R es contradictoria, tambien lo es la de V. Ademas, un conjunto universal tendria algunas propiedades inusuales como:  donde P(V) denota el conjunto potencia. Los axiomas habituales de la teoria de conjuntos evitan esta paradoja estableciendo una distincion entre conjuntos propiamente dichos y clases: colecciones de objetos que no necesariamente comparten todas las propiedades asociadas a los conjuntos. De este modo, V y R son clases pero no conjuntos. Otras teorias de conjuntos como NF si permiten la existencia de un verdadero conjunto universal, a cambio de complicar los axiomas. ","snippet":"En matematicas, principalmente en teoria de conjuntos y logica de clases, un conjunto universal es un conjunto formado por todos los objetos de estudio en un contexto dado. Por ejemplo, en aritmetica ","enlaces_salientes":["Conjunto_universal","Conjunto_universal","Conjunto_universal","Matem%C3%A1ticas","Teor%C3%ADa_de_conjuntos","L%C3%B3gica_de_clases","Conjunto","Aritm%C3%A9tica","N%C3%BAmeros_naturales","Subconjuntos","Conjunto_complementario","Paradoja_de_Russell","Subconjuntos","Uni%C3%B3n_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Elemento_absorbente","Elemento_neutro","Conjunto_complementario","Diferencia_de_conjuntos","Conjunto_vac%C3%ADo","Paradoja_de_Russell","Clase_(teor%C3%ADa_de_conjuntos)","N%C3%BAmeros_reales","Intervalo_(matem%C3%A1tica)","N%C3%BAmero_positivo","Teor%C3%ADa_de_conjuntos","Conjunto_potencia","Axiomas","Nuevos_Fundamentos","ISBN","Springer-Verlag","ISBN","ISBN","Conjunto","Teor%C3%ADa_de_conjuntos","%C3%81lgebra_de_conjuntos","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Diferencia_sim%C3%A9trica","titulo":"Diferencia simetrica","contenido":"En teoria de conjuntos, la diferencia simetrica de dos conjuntos es una operacion cuyo resultado es otro conjunto que contiene a aquellos elementos que pertenecen a cada uno de los conjuntos iniciales, pero no a ambos a la vez. Por ejemplo, la diferencia simetrica del conjunto de los numeros pares positivos P y el conjunto de los cuadrados perfectos C es un conjunto D que contiene los cuadrados impares y los pares no cuadrados:  Dados dos conjuntos A y B, su diferencia simetrica, A \u0394 B, es un conjunto que contiene los elementos de A y los de B, excepto los que son comunes a ambos:  La diferencia simetrica de dos conjuntos A y B es otro conjunto A \u0394 B cuyos elementos son todos los elementos de A o B, a excepcion de los elementos comunes a ambos:   x \u2208 A \u0394 B si y solo si, o bien x \u2208 A o bien x \u2208 B  Ejemplo.  La definicion de la diferencia simetrica puede reducirse facilmente a las operaciones de union, interseccion y diferencia:   A \u0394 B = ( A \u222a B ) \u2216 ( A \u2229 B ) = ( A \u2216 B ) \u222a ( B \u2216 A )  La diferencia simetrica es conmutativa y asociativa por lo que al tomar la diferencia simetrica de mas de dos conjuntos, el orden en el que se realizan las operaciones es irrelevante (ver mas abajo). Asi es que se puede definir la diferencia simetria de una familia de conjuntos finita:   A 1 \u25b3 A 2 \u25b3 \u2026 \u25b3 A n \u2261 ( A 1 \u25b3 ( A 2 \u25b3 ( \u2026 \u25b3 A n ) \u2026 ) \\ \\triangle \\,A_{2}\\ \\triangle \\,\\ldots \\ \\triangle \\,A_{n}\\equiv \\left(A_{1}\\ \\triangle \\,\\left(A_{2}\\ \\triangle \\,\\left(\\ldots \\ \\triangle \\,A_{n}\\right)\\right)\\right.}  Puede comprobarse que una definicion alternativa para esta diferencia de varios conjuntos es incluir solo los elementos que aparecen un numero impar de veces:   A 1 \u25b3 A 2 \u25b3 \u2026 \u25b3 A n = { a \u2208 \u222a 1 \u2264 i \u2264 n A i : el cardinal de { k : a \u2208 A k } es impar } \\ \\triangle \\,A_{2}\\ \\triangle \\,\\ldots \\ \\triangle \\,A_{n}=a\\in \\cup _{1\\leq i\\leq n}A_{i}:}\\{k:a\\in A_{k}\\}}}}  De la definicion de diferencia simetrica puede deducirse directamente:  La diferencia simetrica tiene propiedades semejantes a las operaciones con numeros:  Ademas, con respecto a la interseccion existe una ley distributiva:  Propiedad distributiva  A \u2229 ( B \u25b3 C ) = ( A \u2229 B ) \u25b3 ( A \u2229 C )  Las propiedades de la interseccion y la diferencia simetrica son similares a las del producto y la suma en Z2. Esto implica que el conjunto potencia de un conjunto dado X tiene estructura de anillo considerando estas dos operaciones. Este anillo se corresponde (es isomorfo) al anillo de las funciones de X con valores en Z2, con la suma y producto punto a punto. La correspondencia asigna a cada subconjunto de X su funcion caracteristica. ","snippet":"En teoria de conjuntos, la diferencia simetrica de dos conjuntos es una operacion cuyo resultado es otro conjunto que contiene a aquellos elementos que pertenecen a cada uno de los conjuntos iniciales","enlaces_salientes":["Diferencia_sim%C3%A9trica","Diferencia_sim%C3%A9trica","Diferencia_sim%C3%A9trica","Diferencia_de_conjuntos","Teor%C3%ADa_de_conjuntos","Conjunto","Operaci%C3%B3n_binaria","N%C3%BAmeros_pares","Cuadrado_perfecto","Impar","Pol%C3%ADgono","Pent%C3%A1gono","Pol%C3%ADgono_regular","Lado_(Geometr%C3%ADa)","Uni%C3%B3n_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Diferencia_de_conjuntos","Familia_de_conjuntos","Finito","%C3%81lgebra_de_conjuntos","Nilpotencia","Conjunto_vac%C3%ADo","Diferencia_de_conjuntos","Propiedad_asociativa","Propiedad_conmutativa","Elemento_neutro","Intersecci%C3%B3n_de_conjuntos","Propiedad_distributiva","Conjunto_potencia","Anillo_(%C3%A1lgebra)","%C3%81lgebra_de_conjuntos","Diferencia_de_conjuntos","Intersecci%C3%B3n_de_conjuntos","Encyclopaedia_of_mathematics","Control_de_autoridades"]}
{"url":"Pares_ordenados","titulo":"Par ordenado","contenido":"En matematicas, un par ordenado es una pareja de objetos matematicos, en la que se distingue un elemento y otro. El par ordenado cuyo primer elemento es a y cuyo segundo elemento es b se denota como (a, b).  Un par ordenado (a, b) no es el conjunto que contiene a los elementos a y b, denotado por {a, b}. Un conjunto esta definido unicamente por sus elementos, mientras que en un par ordenado el orden de estos es tambien parte de su definicion. Por ejemplo, los conjuntos {0, 1} y {1, 0} son identicos, pero los pares ordenados (0, 1) y (1, 0) son distintos.  Los pares ordenados tambien se denominan tuplas o vectores dimensionales. La nocion de una coleccion finita de objetos ordenada puede generalizarse a mas de dos objetos, dando lugar al concepto de n-tupla.  El producto cartesiano de conjuntos, las relaciones binarias, las coordenadas cartesianas, las fracciones y las funciones se definen en terminos de pares ordenados.  La propiedad caracteristica que define un par ordenado es la condicion para que dos de ellos sean identicos:  Dos pares ordenados (a, b) y (c, d) son identicos si y solo si coinciden sus primer y segundo elemento respectivamente:   ( a , b ) = ( c , d ) si y solo si a = c y b = d }\\ a=c\\ }\\ b=d\\!}  Los elementos de un par ordenado tambien se denominan componentes.  Dados dos conjuntos X e Y, la coleccion de todos los pares ordenados (x, y), formados con un primer elemento en X y un segundo elemento en Y, se denomina el producto cartesiano de X e Y, y se denota X \u00d7 Y. El producto cartesiano de conjuntos permite definir relaciones y funciones.  Es habitual trabajar con colecciones ordenadas de mas de dos objetos, sin mas que extender la definicion del par ordenado. Por ejemplo, un trio ordenado o terna ordenada es una terna de objetos matematicos en la que se distinguen un primer, segundo y tercer elemento. La propiedad principal de un trio ordenado es entonces:   ( a 1 , a 2 , a 3 ) = ( b 1 , b 2 , b 3 ) si y solo si a 1 = b 1 , a 2 = b 2 y a 3 = b 3 ,a_{2},a_{3})=(b_{1},b_{2},b_{3})}a_{1}=b_{1},\\ a_{2}=b_{2}}a_{3}=b_{3}}  En general se puede adoptar una definicion similar para un numero cualquiera de elementos n, dando lugar asi a una n-tupla.  La condicion de igualdad entre pares ordenados es su unica propiedad matematica relevante.\u200b Sin embargo, en teoria de conjuntos se construyen todos los objetos matematicos a partir de conjuntos: numeros, funciones, etc. En este contexto, se define par ordenado como un conjunto particular de tal manera que su relacion de igualdad sea la correcta.  La definicion conjuntista habitual, debida a Kuratowski, es:\u200b   ( a , b ) = { { a } , { a , b } } ,\\{a,b\\}\\}\\!}  Mediante el axioma de extensionalidad y el axioma del par puede demostrarse que este termino define un conjunto, con la propiedad caracteristica del par ordenado .\u200b  La definicion conjuntista de Kuratowski no es la unica existente en la literatura matematica: ","snippet":"En matematicas, un par ordenado es una pareja de objetos matematicos, en la que se distingue un elemento y otro. El par ordenado cuyo primer elemento es a y cuyo segundo elemento es b se denota como (","enlaces_salientes":["Par_ordenado","Par_ordenado","Par_ordenado","Punto_(geometr%C3%ADa)","Plano_(geometr%C3%ADa)","Matem%C3%A1ticas","Conjunto","Relaci%C3%B3n_de_orden","Definici%C3%B3n_(matem%C3%A1tica)","N-tupla","Producto_cartesiano","Relaci%C3%B3n_binaria","Coordenadas_cartesianas","Fracci%C3%B3n","Funci%C3%B3n_matem%C3%A1tica","Igualdad_matem%C3%A1tica","Producto_cartesiano","Relaci%C3%B3n_binaria","Funci%C3%B3n_matem%C3%A1tica","N-tupla","Teor%C3%ADa_de_conjuntos","Conjunto","Kazimierz_Kuratowski","Axioma_de_extensionalidad","Axioma_del_par","Felix_Hausdorff","Norbert_Wiener","Par_desordenado","ISBN","Norbert_Wiener","Cambridge_University_Press","Library_of_Congress_Control_Number","Kazimierz_Kuratowski","Control_de_autoridades","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Conjunto_de_Borel","titulo":"Conjunto de Borel","contenido":"Un conjunto de Borel es un elemento de la llamada \u03c3-algebra de Borel, la cual no es mas que la minima \u03c3-algebra que contiene a una topologia dada. Como caracterizacion alternativa, tambien se puede decir que un conjunto de Borel es cualquier conjunto obtenido mediante uniones e intersecciones numerables de conjuntos cerrados o abiertos en la topologia considerada.  Frecuentemente se dice el termino conjunto de Borel para referirse a un conjunto de la \u03c3-algebra asociada a la topologia metrica usual de R } .  Dados dos conjuntos A y B, se dice que A es un subconjunto de B si todos los elementos de A pertenecen a B. Toda vez que un conjunto X queda definido, quedan definidos tambien la coleccion formada por todos sus subconjuntos. Dicha coleccion se suele denotar por P(X) y contiene de manera trivial al propio X y al conjunto vacio.  Dados dos subconjuntos de X podemos calcular su union o su interseccion para obtener otro subconjunto de X. Asimismo, dado un conjunto A podemos considerar su complementario X-A. Toda coleccion de subconjuntos de X cerrada bajo uniones, intersecciones o complementos se llama un algebra. Si tambien es cerrada bajo uniones e intersecciones numerables se llama \u03c3-algebra.  Los conjuntos que pertenecen a una \u03c3-algebra no tienen por si mismos ninguna propiedad especial. Es su relacion con la coleccion de los conjuntos de la \u03c3-algebra lo que les hace especiales. ","snippet":"Un conjunto de Borel es un elemento de la llamada \u03c3-algebra de Borel, la cual no es mas que la minima \u03c3-algebra que contiene a una topologia dada. Como caracterizacion alternativa, tambien se puede de","enlaces_salientes":["Conjunto_de_Borel","Conjunto_de_Borel","Conjunto_de_Borel","%CE%A3-%C3%A1lgebra","%C3%89mile_Borel","Espacio_topol%C3%B3gico","Intersecci%C3%B3n_de_conjuntos","Conjunto_cerrado","Conjunto_abierto","Topolog%C3%ADa_usual","Subconjunto","Sigma-%C3%A1lgebra","Sigma-%C3%A1lgebra","Conjunto_abierto","Control_de_autoridades"]}
{"url":"Equipotencia","titulo":"Equipotencia","contenido":"En matematicas, dos conjuntos A y B son equipotentes o equinumerosos si existe una biyeccion entre ellos, es decir, si existe una funcion de A en B tal que para cada elemento y de B, existe exactamente un elemento x de A tal que f(x)=y.\u200b Los conjuntos equipotentes tienen el mismo cardinal (numero de elementos).\u200b El estudio de la cardinalidad suele denominarse equipotencia de conjuntos o equinumerosidad.  La expresion A y B son conjuntos equipotentes se denota:   A \u2248 B o A \u223c B , o | A | = | B | .  La definicion como biyeccion de equipotencia puede aplicarse para conjuntos tanto finitos como infinitos y permite determinar si dos conjuntos son del mismo tama\u00f1o incluso si son infinitos. Georg Cantor, el fundador de la teoria de conjuntos, demostro en 1874 que existen mas de un tipo de infinito, concretamente que la coleccion de los numeros naturales y la coleccion de los numeros reales, a pesar de ser ambos infinitos, no son equipotentes (vease el primer articulo de Georg Cantor sobre teoria de numeros). En un controvertido escrito de 1878, Cantor define el termino de \"potencia\" de un conjunto para usarlo y probar que los conjuntos de los numeros racionales y los numeros naturales son equipotentes (un ejemplo de que un subconjunto propio de un conjunto infinito es equipotente al conjunto original), y que el producto cartesiano de un numero infinito numerable de copias de los numeros reales es equipotente a una sola copia de los numeros reales.  El Teorema de Cantor de 1891 establece que ningun conjunto es equinumeroso a su conjunto potencia (conjunto de todos sus subconjuntos).\u200b Esto permite definir infinitos cada vez mayores comenzando por un solo conjunto infinito.  Si se mantiene el axioma de eleccion, entonces el numero cardinal de un conjunto puede considerarse como el menor numero ordinal de ese cardinalidad (vease ordinal inicial). De otro modo, puede considerarse (por la prueba de Dana Scott) como un conjunto de grado minimo con ese cardinal.\u200b  La proposicion \"dos conjuntos son o bien equipotentes, o bien uno tiene menor cardinal que el otro\" es equivalente al axioma de eleccion.\u200b  Los conjuntos equipotentes tienen el mismo cardinal. La cardinalidad de un conjunto X es la medida del \"numero de elementos del conjunto\".\u200b  Un intento de definir la cardinalidad de un conjunto como una clase de equivalencia de todos los conjuntos equipotentes a este es problematico en la teoria de conjuntos de Zermelo-Fraenkel, la forma estandar de la teoria axiomatica de conjuntos, debido a que la clase de equivalencia de cualquier conjunto no vacio seria demasiado grande para ser un conjunto: seria una clase propia. En el borrador de la teoria de conjuntos de Zermelo-Fraenkel, las relaciones estan por definicion restringidas a los conjuntos (una relacion binaria en un conjunto A es el subconjunto del producto cartesiano A \u00d7 A ) y por tanto no existe el concepto de conjunto de todos los conjuntos en la teoria de conjuntos de Zermelo-Fraenkel. En lugar de definir la cardinalidad de un conjunto como la clase de equivalencia de todos sus conjuntos equipotentes a el, se intenta asignar un conjunto representativo de cada clase de equivalencia (asignacion cardinal). En otros sistemas de la teoria axiomatica de conjuntos, p. ej. la teoria de conjuntos de Von-Neumann-Bernays-Godel y la teoria de conjuntos de Morse-Kelley, las relaciones se extienden a las clases.  Si existe una biyeccion entre los conjuntos A y B, se dice que son equipotentes y tienen el mismo cardinal, hecho que se denota por | A | = | B | .  Si existe una inyeccion entre los conjuntos A y B, entonces el cardinal de A es menor o igual al cardinal de B, | A | \u2264 | B | . Si en este caso los cardinales de A y B son distintos, entonces se dice que el cardinal de A es menor que el cardinal de B, y se denota | A | < | B | . Si se mantiene el axioma de eleccion, entonces la ley de tricotomia se aplica a los numeros cardinales, por lo que dos conjuntos o bien son equipotentes, o uno es estrictamente menor que el otro\u200b.La ley de tricotomia para los numeros cardinales tambien implica el axioma de eleccion.\u200b  El teorema de Schroder\u2013Bernstein establece que dos conjuntos A y B para los que existen dos funciones inyectivas f : A \u2192 B y f : B \u2192 A son equipotentes: si | A | \u2264 | B | y | B | \u2264 | A | , entonces | A | = | B | .\u200b\u200b Este teorema no depende del axioma de eleccion.  La Equipotencia tiene las propiedades caracteristicas de una relacion de equivalencia (reflexividad, simetria y transitividad):\u200b  Dado un conjunto A, la funcion identidad en A es una biyeccion de A en si mismo, por lo tanto todos los conjuntos son equipotentes consigo mismo: A \u223c A .  Para cada biyeccion entre dos conjuntos A y B existe una funcion inversa que es una biyeccion entre B y A, por lo que, si A es equipotente con B, entonces B es equipotente con A: A \u223c B \u21d2 B \u223c A  Dados tres conjuntos A, B y C con dos biyecciones f : A \u2192 B y g : B \u2192 C , la composicion g \u2218 f es una biyeccion de A en C, por lo que, si A y B son equipotentes y B y C son equipotentes, entonces A y C tambien lo son: A \u223c B \u2227 B \u223c C \u2192 A \u223c C .  El Teorema de Cantor de 1891 establece que ningun conjunto es equipotente a su conjunto potencia (conjunto de todos sus subconjuntos).\u200b Concretamente, el conjunto potencia de un conjunto infinito numerable es un conjunto no numerable.  Esto permite definir infinitos cada vez mayores comenzando por un solo conjunto infinito. Por ejemplo, dado el conjunto infinito N de los numeros naturales, podemos definir una secuencia N, P(N), P(P(N)), P(P(P(N))), ... de conjuntos infinitos donde cada conjunto es el conjunto potencia del conjunto que le precede. Segun el teorema de Cantor, el cardinal de cada conjunto en esta secuencia es estrictamente mayor que el del conjunto anterior, dando como resultado conjuntos infinitos cada vez mayores.  El trabajo de Cantor fue duramente criticado por sus contemporaneos , p. ej. Leopold Kronecker, quien se adhirio fuertemente a la filosofia de las matematicas finitista\u200b y rechazo la idea de que los numeros pudieran formar una totalidad completa propiamente dicha (un infinito actual). Sin embargo, las ideas de Cantor fueron defendidas por otros, p. ej. Richard Dedekind, y finalmente fueron ampliamente reconocidas, fuertemente respaldadas por David Hilbert. Vease la controversia sobre la teoria de Cantor.  En el borrador de la teoria de conjuntos de Zermelo-Fraenkel, el axioma del conjunto potencia garantiza la existencia de un conjunto potencia para cualquier conjunto dado. Ademas, el axioma del infinito garantiza la existencia de al menos un conjunto infinito, concretamente el conjunto que contiene a los numeros naturales. Existen teorias alternativas de conjuntos, p. ej., la teoria general de conjuntos, la teoria de conjuntos de Kripke\u2013Platek, y la teoria de conjuntos de bolsillo, que omiten deliberadamente el axioma del conjunto potencia y el axioma del infinito y no permiten la definicion de jerarquia de infinitos propuesta por Cantor.  Los cardinales correspondientes a los conjuntos N, P(N), P(P(N)), P(P(P(N))), ... son los numeros de Beth \u2136 0 } , \u2136 1 } , \u2136 2 } , \u2136 3 } , ..., siendo \u2136 0 = \u2135 0 =\\aleph _{0}} (alef 0), el cardinal de un conjunto infinito numerable y \u2136 1 = c =}} , el cardinal del continuo.  En ocasiones, un conjunto es equipotente a algunos de sus subconjuntos propios, p. ej. el conjunto de los numeros naturales es equipotente al de los numeros naturales pares. Un conjunto asi se denomina un conjunto infinito-Dedekind.\u200b\u200b  El axioma de eleccion numerable (AC\u03c9), una variante debil del axioma de eleccion (AC), es necesario para demostrar que un conjunto que no es infinito-Dedekind es realmente finito. Los axiomas de la teoria de conjuntos de Zermelo-Fraenkel sin el axioma de eleccion (ZF) no son suficientes para probar que todo conjunto infinito es infinito-Dedekind, pero los axiomas de la teoria de conjuntos de Zermelo-Fraenkel con el axioma de eleccion numerable (ZF + AC\u03c9) si que son suficientes.\u200b Otras definiciones de finito e infinito no requieren del axioma de eleccion para ello.\u200b  La Equipotencia es compatible con las operaciones basicas entre conjuntos de forma que podemos definir la aritmetica de cardinales.\u200b Concretamente, es compatible con las uniones disjuntas: dados cuatro conjuntos A, B, C y D con A y C por un lado de B y D por otro, disjuntos dos a dos con A \u223c B y C \u223c D , entonces A \u222a C \u223c B \u222a D . Esto es util para demostrar la definicion de suma cardinal.  Ademas, la equipotencia es compatible con el producto cartesiano:  Estas propiedades son utiles para justificar la multiplicacion cardinal.  Exponenciacion:  Estas propiedades son utiles en la justificacion de la exponenciacion cardinal.  Ademas, el conjunto potencia de un conjunto A (el conjunto de los subconjuntos de A) es equipotente al conjunto 2 A } , el conjunto de todas las funciones del conjunto A a un conjunto que contiene exactamente dos elementos.  En categoria de conjuntos, la categoria de todos los conjuntos con funciones como morfismos, un isomorfismo entre dos conjuntos is precisamente una biyeccion, y dos conjuntos son equipotentes si son isomorfos en esta categoria.  Fuera del ambito de los conjuntos, el termino Equinumerosidad fue empleado por Frege para definir relaciones entre conceptos. Su definicion es:  \"La expresion 'el concepto F es equinumeroso con el concepto G' significa lo mismo que la expresion 'hay una relacion \u03a6 que coordina biunivocamente los objetos que caen bajo el concepto F con los objetos que caen bajo el concepto G'.\"\u200b  Dado un concepto cualquiera F, los objetos que caen bajo F forman un colectivo, que Frege denomina 'extension de F'. La relacion \u03a6 al ser biunivoca, solo asocia elementos de un conjunto con uno solo de los elementos de otro conjunto, y cada elemento de este ultimo con uno solo de los elementos del primero, es decir una biyeccion. Por lo tanto, la definicion de Fregue para la equinumerosidad entre conceptos quedaria como una biyeccion de la extension de un concepto F en la extension de otro concepto G. Esta definicion es la que se utiliza ahora en la teoria de conjuntos. ","snippet":"En matematicas, dos conjuntos A y B son equipotentes o equinumerosos si existe una biyeccion entre ellos, es decir, si existe una funcion de A en B tal que para cada elemento y de B, existe exactament","enlaces_salientes":["Equipotencia","Equipotencia","Equipotencia","Matem%C3%A1ticas","Funci%C3%B3n_biyectiva","Funci%C3%B3n_matem%C3%A1tica","Elemento_de_un_conjunto","N%C3%BAmero_cardinal","Conjunto_finito","Conjunto_infinito","Georg_Cantor","Teor%C3%ADa_de_conjuntos","N%C3%BAmero_natural","N%C3%BAmero_real","N%C3%BAmero_racional","Subconjunto_propio","Producto_cartesiano","Teorema_de_Cantor","Conjunto_potencia","Axioma_de_elecci%C3%B3n","N%C3%BAmero_cardinal","N%C3%BAmero_ordinal_(teor%C3%ADa_de_conjuntos)","Axioma_de_elecci%C3%B3n","Cardinalidad","Teor%C3%ADa_de_conjuntos_de_Zermelo-Fraenkel","Teor%C3%ADa_axiom%C3%A1tica_de_conjuntos","Conjunto_vac%C3%ADo","Clase_(teor%C3%ADa_de_conjuntos)","Relaci%C3%B3n_binaria","Subconjunto","Producto_cartesiano","Conjunto_universal","Teor%C3%ADa_de_conjuntos_de_Von_Neumann-Bernays-G%C3%B6del","Teor%C3%ADa_de_conjuntos_de_Morse-Kelley","Clase_(teor%C3%ADa_de_conjuntos)","Ley_de_tricotom%C3%ADa","N%C3%BAmero_cardinal","Axioma_de_elecci%C3%B3n","Teorema_de_Schr%C3%B6der-Bernstein","Axioma_de_elecci%C3%B3n","Relaci%C3%B3n_de_equivalencia","Relaci%C3%B3n_reflexiva","Relaci%C3%B3n_sim%C3%A9trica","Relaci%C3%B3n_transitiva","Funci%C3%B3n_identidad","Funci%C3%B3n_inversa_(an%C3%A1lisis_matem%C3%A1tico)","Teorema_de_Cantor","Conjunto_potencia","Leopold_Kronecker","Filosof%C3%ADa_de_las_matem%C3%A1ticas","Finitismo","Infinito_potencial_e_infinito_actual","Richard_Dedekind","David_Hilbert","Teor%C3%ADa_de_conjuntos_de_Zermelo-Fraenkel","Axioma_del_conjunto_potencia","Axioma_del_infinito","%C3%81lef_0","Subconjunto_propio","N%C3%BAmeros_naturales","Conjunto_infinito-Dedekind","Axioma_de_elecci%C3%B3n_numerable","Axioma_de_elecci%C3%B3n","Finito","Axioma","Teor%C3%ADa_de_conjuntos_de_Zermelo-Fraenkel","Conjunto_infinito","N%C3%BAmero_cardinal#Aritm\u00e9tica_de_cardinales","Producto_cartesiano","N%C3%BAmero_cardinal_(teor%C3%ADa_de_conjuntos)#Producto","N%C3%BAmero_cardinal#Aritm\u00e9tica_de_cardinales","Conjunto_potencia","Subconjunto","Categor%C3%ADa_de_conjuntos","Categor%C3%ADa_(matem%C3%A1ticas)","Funci%C3%B3n_matem%C3%A1tica","Isomorfismo","Gottlob_Frege","Funci%C3%B3n_biyectiva","Teor%C3%ADa_de_conjuntos","Conjunto_numerable","Funci%C3%B3n_biyectiva","N%C3%BAmero_cardinal","Principio_de_Hume","Teorema_de_Cantor-Bernstein-Schr%C3%B6der","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","Control_de_autoridades"]}
{"url":"The_Stanford_Encyclopedia_of_Philosophy","titulo":"Stanford Encyclopedia of Philosophy","contenido":"La Enciclopedia de filosofia de Stanford (SEP) es una enciclopedia de libre acceso en linea mantenida por la Universidad de Stanford. La enciclopedia se desarrollo inicialmente con fondos publicos del NEH y del NSF. Un plan de recoleccion de fondos a largo plazo con el fin de asegurar el libre acceso a la enciclopedia esta apoyado a nivel mundial por varias universidades y consorcios de bibliotecas. Dichas instituciones contribuyen bajo un plan formulado por la SEP en colaboracion con la Scholarly Publishing and Academic Resources Coalition (SPARC), la International Coalition of Library Consortia (ICOLC) y la Southeastern Library Network (SOLINET), con fondos equiparados por la NEH.  Cada entrada es escrita y mantenida por un experto en el tema, incluyendo a profesores de mas de 65 Instituciones academicas alrededor del mundo. Ademas de su condicion en linea, la enciclopedia utiliza el enfoque academico tradicional de la mayor parte de enciclopedias y revistas academicas para lograr estandares de calidad por medio de:  La enciclopedia fue creada en 1995 por Edward N. Zalta con el fin explicito de proporcionar una enciclopedia dinamica actualizada regularmente, y que de esta forma no permanezca fechada a la manera de las enciclopedias impresas. La concepcion de la enciclopedia permite la presencia de articulos rivales para un unico tema de modo que se reflejen los desacuerdos razonados entre academicos. ","snippet":"La Enciclopedia de filosofia de Stanford (SEP) es una enciclopedia de libre acceso en linea mantenida por la Universidad de Stanford. La enciclopedia se desarrollo inicialmente con fondos publicos del","enlaces_salientes":["Stanford_Encyclopedia_of_Philosophy","Stanford_Encyclopedia_of_Philosophy","Stanford_Encyclopedia_of_Philosophy","Edward_N._Zalta","Enciclopedia","Universidad_de_Stanford","National_Endowment_for_the_Humanities","National_Science_Foundation","Profesor","Revistas_acad%C3%A9micas","Edici%C3%B3n_de_libros","Peer_review","1995","Edward_N._Zalta","Internet_Encyclopedia_of_Philosophy","Routledge_Encyclopedia_of_Philosophy","The_Cambridge_Dictionary_of_Philosophy","Control_de_autoridades","ISSN","Zeitschriftendatenbank","Directory_of_Open_Access_Journals"]}
{"url":"Programaci%C3%B3n_multiparadigma","titulo":"Lenguaje de programacion","contenido":"Un lenguaje de programacion es un lenguaje formal (o artificial, es decir, un lenguaje con reglas gramaticales bien definidas) que proporciona a una persona, en este caso el programador, la capacidad y habilidad de escribir (o programar) una serie de instrucciones o secuencias de ordenes en forma de algoritmos con el fin de controlar el comportamiento fisico o logico de un sistema informatico, para que de esa manera se puedan obtener diversas clases de datos o ejecutar determinadas tareas. A todo este conjunto de ordenes escritas mediante un lenguaje de programacion se le denomina programa informatico.\u200b\u200b\u200b\u200b  Programar viene a ser el proceso de crear un software fiable mediante la escritura, prueba, depuracion, compilacion o interpretacion, y mantenimiento del codigo fuente de dicho programa informatico. Basicamente, este proceso se define aplicando logicamente los siguientes pasos:  Los lenguajes de programacion estan formados por un conjunto de simbolos (llamado alfabeto), reglas gramaticales (lexico/morfologicas y sintacticas) y semanticas, que en conjunto definen las estructuras validas del lenguaje y su significado. Existe el error comun de tratar como sinonimos los terminos 'lenguaje de programacion' y 'lenguaje informatico'. Los lenguajes informaticos engloban a los lenguajes de programacion y a otros mas, como por ejemplo HTML (lenguaje para el marcado de paginas web, que no es propiamente un lenguaje de programacion, sino un conjunto de instrucciones que permiten estructurar el contenido de los documentos).  El lenguaje de programacion permite especificar de manera precisa sobre que datos debe operar un software especifico, como deben ser almacenados o transmitidos dichos datos, y que acciones debe tomar el software bajo una variada gama de circunstancias. Todo esto, a traves de un lenguaje que intenta estar relativamente proximo al lenguaje humano o natural. Una caracteristica relevante de los lenguajes de programacion es precisamente que mas de un programador pueda usar un conjunto comun de instrucciones que sean comprendidas entre ellos para realizar la construccion de un programa de forma colaborativa.  Para que la computadora entienda nuestras instrucciones debe usarse un lenguaje especifico conocido como codigo maquina, que la maquina lee facilmente, pero que es excesivamente complicado para las personas. De hecho, solo consiste en cadenas extensas de numeros 0 y 1(numeros binarios).  Para facilitar el trabajo, los primeros operadores de computadoras decidieron crear un traductor para reemplazar los 0 y 1 por palabras o abstraccion de palabras y letras provenientes del ingles; este se conoce como lenguaje ensamblador. Por ejemplo, para sumar se usa la letra A de la palabra inglesa add (sumar). El lenguaje ensamblador sigue la misma estructura del lenguaje maquina, pero las letras y palabras son mas faciles de recordar y entender que los numeros.  La necesidad de recordar secuencias de programacion para las acciones usuales llevo a denominarlas con nombres faciles de memorizar y asociar: ADD (sumar), SUB (restar), MUL (multiplicar), CALL (ejecutar subrutina), etc. A esta secuencia de posiciones se le denomino \"instrucciones\", y a este conjunto de instrucciones se le llamo lenguaje ensamblador. Posteriormente aparecieron diferentes lenguajes de programacion, los cuales reciben su denominacion porque tienen una estructura sintactica semejante a la de los lenguajes escritos por los humanos, denominados tambien lenguajes de alto nivel.\u200b  A finales de 1953, John Backus sometio una propuesta a sus superiores en IBM para desarrollar una alternativa mas practica al lenguaje ensamblador, para programar la computadora central IBM 704. El historico equipo Fortran de John Backus consistio en los programadores Richard Goldberg, Sheldon F. Best, Harlan Herrick, Peter Sheridan, Roy Nutt, Robert Nelson, Irving Ziller, Lois Haibt y David Sayre.\u200b  El primer manual para el lenguaje Fortran aparecio en octubre de 1956, con el primer compilador Fortran entregado en abril de 1957. Esto era un compilador optimizado, porque los clientes eran reacios a usar un lenguaje de alto nivel a menos que su compilador pudiera generar codigo cuyo desempe\u00f1o fuera comparable al de un codigo hecho a mano en lenguaje ensamblador.  En 1960 se creo COBOL, uno de los lenguajes usados aun en la actualidad, en informatica de gestion.  A medida que la complejidad de las tareas que realizaban las computadoras aumentaba, se hizo necesario disponer de un metodo mas eficiente para programarlas. Entonces se crearon los lenguajes de alto nivel, como lo fue BASIC en las versiones introducidas en los microordenadores de la decada de 1980. Mientras que una tarea tan sencilla como sumar dos numeros puede necesitar varias instrucciones en lenguaje ensamblador, en un lenguaje de alto nivel bastara una sola sentencia.  Los lenguajes de programacion han sido historicamente clasificados atendiendo a distintos criterios:  En algunas ocasiones los lenguajes de programacion son tambien clasificados en familias que comparten ciertas caracteristicas comunes como el estilo general de la sintaxis que emplean. Habitualmente estas caracteristicas suelen ser heredadas de lenguajes de programacion anteriores que sirvieron de inspiracion a los creadores de dicho lenguaje.  Los equipos de ordenador (el hardware) han pasado por cuatro generaciones, de las que las tres primeras (ordenadores con valvulas, transistores y circuitos integrados) estan muy claras; la cuarta (circuitos integrados a gran escala) es mas discutible.  Algo parecido ha ocurrido con la programacion de los ordenadores (el software), que se realiza en lenguajes que suelen clasificarse en cinco generaciones, de las que las tres primeras son evidentes, mientras no todo el mundo esta de acuerdo en las otras dos. Estas generaciones no coincidieron exactamente en el tiempo con las de hardware, pero si de forma aproximada, y son las siguientes:  Algunos ejemplos de lenguajes de programacion de quinta generacion son:  Un paradigma de programacion consiste en un metodo para llevar a cabo computos y la forma en la que deben estructurarse y organizarse las tareas que debe realizar un programa.\u200b Se trata de una propuesta tecnologica adoptada por una comunidad de programadores, y desarrolladores cuyo nucleo central es incuestionable en cuanto que unicamente trata de resolver uno o varios problemas claramente delimitados; la resolucion de estos problemas debe suponer consecuentemente un avance significativo en al menos un parametro que afecte a la ingenieria de software. Representa un enfoque particular o filosofia para dise\u00f1ar soluciones. Los paradigmas difieren unos de otros, en los conceptos y la forma de abstraer los elementos involucrados en un problema, asi como en los pasos que integran su solucion del problema, en otras palabras, el computo. Tiene una estrecha relacion con la formalizacion de determinados lenguajes en su momento de definicion. Es un estilo de programacion empleado.  Un paradigma de programacion esta delimitado en el tiempo en cuanto a aceptacion y uso, porque nuevos paradigmas aportan nuevas o mejores soluciones que lo sustituyen parcial o totalmente.  El paradigma de programacion que actualmente es mas utilizado es la \"orientacion a objetos\" (OO). El nucleo central de este paradigma es la union de datos y procesamiento en una entidad llamada \"objeto\", relacionable a su vez con otras entidades \"objeto\".  Tradicionalmente, datos y procesamiento se han separado en areas diferente del dise\u00f1o y la implementacion de software. Esto provoco que grandes desarrollos tuvieran problemas de fiabilidad, mantenimiento, adaptacion a los cambios y escalabilidad. Con la OO y caracteristicas como el encapsulado, polimorfismo o la herencia, se permitio un avance significativo en el desarrollo de software a cualquier escala de produccion. La OO parece estar ligada en sus origenes con lenguajes como Lisp y Simula, aunque el primero que acu\u00f1o el titulo de \"programacion orientada a objetos\" fue Smalltalk.  En general, la mayoria de paradigmas son variantes de los dos tipos principales de programacion, imperativa y declarativa. En la programacion imperativa se describe paso a paso un conjunto de instrucciones que deben ejecutarse para variar el estado del programa y hallar la solucion, es decir, un algoritmo en el que se describen los pasos necesarios para solucionar el problema.  En la programacion declarativa las sentencias que se utilizan lo que hacen es describir el problema que se quiere solucionar; se programa diciendo lo que se quiere resolver a nivel de usuario, pero no las instrucciones necesarias para solucionarlo. Esto ultimo se realizara mediante mecanismos internos de inferencia de informacion a partir de la descripcion realizada.  A continuacion se describen algunas de las distintas variantes de paradigmas de programacion:  Las variables son titulos asignados a espacios en memoria para almacenar datos especificos. Son contenedores de datos y por ello se diferencian segun el tipo de dato que son capaces de almacenar. En la mayoria de lenguajes de programacion se requiere especificar un tipo de variable concreto para guardar un dato especifico. Por ejemplo, en Java, si deseamos guardar una cadena de texto debemos especificar que la variable es del tipo String. Por otra parte, en lenguajes como PHP o JavaScript este tipo de especificacion de variables no es necesario. Ademas, existen variables compuestas llamadas vectores. Un vector no es mas que un conjunto de bytes consecutivas en memoria y del mismo tipo guardadas dentro de una variable contenedor. A continuacion, un listado con los tipos de variables y vectores mas comunes:  En el caso de variables booleanas, el cero es considerado para muchos lenguajes como el literal falso (\"False\"), mientras que el uno se considera verdadero (\"True\").  Las sentencias condicionales son estructuras de codigo que indican que, para que cierta parte del programa se ejecute, deben cumplirse ciertas premisas; por ejemplo: que dos valores sean iguales, que un valor exista, que un valor sea mayor que otro\u2026 Estos condicionantes por lo general solo se ejecutan una vez a lo largo del programa. Los condicionantes mas conocidos y empleados en programacion son:  Los bucles son parientes cercanos de los condicionantes, pero ejecutan constantemente un codigo mientras se cumpla una determinada condicion. Los mas frecuentes son:  Hay que decir que a pesar de que existan distintos tipos de bucles, todos son capaces de realizar exactamente las mismas funciones. El empleo de uno u otro depende, por lo general, del gusto del programador.  Las funciones se crearon para evitar tener que repetir constantemente fragmentos de codigo. Una funcion podria considerarse como una variable que encierra codigo dentro de si. Por lo tanto, cuando accedemos a dicha variable (la funcion) en realidad lo que estamos haciendo es ordenar al programa que ejecute un determinado codigo predefinido anteriormente.  Todos los lenguajes de programacion tienen algunos elementos de formacion primitivos para la descripcion de los datos y de los procesos o transformaciones aplicadas a estos datos (tal como la suma de dos numeros o la seleccion de un elemento que forma parte de una coleccion). Estos elementos primitivos son definidos por reglas sintacticas y semanticas que describen su estructura y significado respectivamente.  A la forma visible de un lenguaje de programacion se la conoce como sintaxis. La mayoria de los lenguajes de programacion son puramente textuales, es decir, utilizan secuencias de texto que incluyen palabras, numeros y puntuacion, de manera similar a los lenguajes naturales escritos. Por otra parte, hay algunos lenguajes de programacion que son mas graficos en su naturaleza, utilizando relaciones visuales entre simbolos para especificar un programa.  La sintaxis de un lenguaje de programacion describe las combinaciones posibles de los simbolos que forman un programa sintacticamente correcto. El significado que se le da a una combinacion de simbolos es manejado por su semantica (ya sea formal o como parte del codigo duro de la referencia de implementacion). Dado que la mayoria de los lenguajes son textuales, este articulo trata de la sintaxis textual.  La sintaxis de los lenguajes de programacion es definida generalmente utilizando una combinacion de expresiones regulares (para la estructura lexica/morfologica) y la Notacion de Backus-Naur (para la estructura sintactica). Este es un ejemplo de una gramatica simple, tomada del lenguaje Lisp:  Con esta gramatica se especifica lo siguiente:  Algunos ejemplos de secuencias bien formadas de acuerdo a esta gramatica:  '12345', '()', '(a b c232 (1))'  No todos los programas sintacticamente correctos son semanticamente correctos. Muchos programas sintacticamente correctos tienen inconsistencias con las reglas del lenguaje; y pueden (dependiendo de la especificacion del lenguaje y la solidez de la implementacion) resultar en un error de traduccion o ejecucion. En algunos casos, tales programas pueden exhibir un comportamiento indefinido. Ademas, incluso cuando un programa esta bien definido dentro de un lenguaje, todavia puede tener un significado que no es el que la persona que lo escribio estaba tratando de construir.  Usando el lenguaje natural, por ejemplo, puede no ser posible asignarle significado a una oracion gramaticalmente valida o la oracion puede ser falsa:  El siguiente fragmento en el lenguaje C es sintacticamente correcto, pero ejecuta una operacion que no esta definida semanticamente (dado que p es un apuntador nulo, las operaciones p->real y p->im no tienen ningun significado):  Si la declaracion de tipo de la primera linea fuera omitida, el programa dispararia un error de compilacion, pues la variable \"p\" no estaria definida. Pero el programa seria sintacticamente correcto todavia, dado que las declaraciones de tipo proveen informacion semantica solamente.  La gramatica necesaria para especificar un lenguaje de programacion puede ser clasificada por su posicion en la Jerarquia de Chomsky. La sintaxis de la mayoria de los lenguajes de programacion puede ser especificada utilizando una gramatica Tipo-2, es decir, son gramaticas libres de contexto. Algunos lenguajes, incluyendo a Perl y a Lisp, contienen construcciones que permiten la ejecucion durante la fase de analisis. Los lenguajes que permiten construcciones que permiten al programador alterar el comportamiento de un analizador hacen del analisis de la sintaxis un problema sin decision unica, y generalmente oscurecen la separacion entre analisis y ejecucion. En contraste con el sistema de macros de Lisp y los bloques BEGIN de Perl, que pueden tener calculos generales, las macros de C son meros reemplazos de cadenas, y no requieren ejecucion de codigo.  La semantica estatica define las restricciones sobre la estructura de los textos validos que resulta imposible o muy dificil expresar mediante formalismos sintacticos estandar. Para los lenguajes compilados, la semantica estatica basicamente incluye las reglas semanticas que se pueden verificar en el momento de compilar. Por ejemplo el chequeo de que cada identificador sea declarado antes de ser usado (en lenguajes que requieren tales declaraciones) o que las etiquetas en cada brazo de una estructura case sean distintas. Muchas restricciones importantes de este tipo, como la validacion de que los identificadores sean usados en los contextos apropiados (por ejemplo no sumar un entero al nombre de una funcion), o que las llamadas a subrutinas tengan el numero y tipo de parametros adecuado, pueden ser implementadas definiendolas como reglas en una logica conocida como sistema de tipos. Otras formas de analisis estaticos, como los analisis de flujo de datos, tambien pueden ser parte de la semantica estatica. Otros lenguajes de programacion como Java y C# tienen un analisis definido de asignaciones, una forma de analisis de flujo de datos, como parte de su semantica estatica.  Un sistema de tipos de datos define la manera en la cual un lenguaje de programacion clasifica los valores y expresiones en tipos, como pueden ser manipulados dichos tipos y como interactuan. El objetivo de un sistema de tipos es verificar y normalmente poner en vigor un cierto nivel de exactitud en programas escritos en el lenguaje en cuestion, detectando ciertas operaciones invalidas. Cualquier sistema de tipos decidible tiene sus ventajas y desventajas: mientras por un lado rechaza muchos programas incorrectos, tambien prohibe algunos programas correctos aunque poco comunes. Para poder minimizar esta desventaja, algunos lenguajes incluyen lagunas de tipos, conversiones explicitas no verificadas que pueden ser usadas por el programador para permitir explicitamente una operacion normalmente no permitida entre diferentes tipos. En la mayoria de los lenguajes con tipos, el sistema de tipos es usado solamente para verificar los tipos de los programas, pero varios lenguajes, generalmente funcionales, llevan a cabo lo que se conoce como inferencia de tipos, que le quita al programador la tarea de especificar los tipos. Al dise\u00f1o y estudio formal de los sistemas de tipos se le conoce como teoria de tipos.  Se dice que un lenguaje es tipado si la especificacion de cada operacion debe definir los tipos de datos para los cuales es aplicable, con la implicacion de que no es aplicable a otros tipos. Por ejemplo, \"este texto entre comillas\" es una cadena de caracteres. En la mayoria de los lenguajes de programacion, dividir un numero por una cadena de caracteres no tiene ningun significado. Por tanto, la mayoria de los lenguajes de programacion modernos rechazarian cualquier intento de ejecutar dicha operacion por parte de algun programa. En algunos lenguajes, estas operaciones sin significado son detectadas cuando el programa es compilado (validacion de tipos \"estatica\") y son rechazadas por el compilador, mientras en otros son detectadas cuando el programa es ejecutado (validacion de tipos \"dinamica\") y se genera una excepcion en tiempo de ejecucion.  Un caso especial de lenguajes de tipo son los lenguajes de tipo sencillo. Estos son con frecuencia lenguajes de marcado o de scripts, como REXX o SGML, y solamente cuentan con un tipo de datos; comunmente cadenas de caracteres que luego son usadas tanto para datos numericos como simbolicos.  En contraste, un lenguaje sin tipos, como la mayoria de los lenguajes ensambladores, permiten que cualquier operacion se aplique a cualquier dato, que por lo general se consideran secuencias de bits de varias longitudes. Lenguajes de alto nivel sin datos incluyen BCPL y algunas variedades de Forth.  En la practica, aunque pocos lenguajes son considerados con tipo desde el punto de vista de la teoria de tipos (es decir, que verifican o rechazan todas las operaciones), la mayoria de los lenguajes modernos ofrecen algun grado de manejo de tipos. Si bien muchos lenguajes de produccion proveen medios para evitar o rodear el sistema de tipado.  En lenguajes con tipos estaticos se determina el tipo de todas las expresiones antes de la ejecucion del programa (tipicamente al compilar). Por ejemplo, 1 y (2+2) son expresiones enteras; no pueden ser pasadas a una funcion que espera una cadena, ni pueden guardarse en una variable que esta definida como fecha.  Los lenguajes con tipos estaticos pueden manejar tipos explicitos o tipos inferidos. En el primer caso, el programador debe escribir los tipos en determinadas posiciones textuales. En el segundo caso, el compilador infiere los tipos de las expresiones y las declaraciones de acuerdo al contexto. La mayoria de los lenguajes populares con tipos estaticos, tales como C++, C# y Java, manejan tipos explicitos. Inferencia total de los tipos suele asociarse con lenguajes menos populares, tales como Haskell y ML. Sin embargo, muchos lenguajes de tipos explicitos permiten inferencias parciales de tipo; tanto Java y C#, por ejemplo, infieren tipos en un numero limitado de casos.  Los lenguajes con tipos dinamicos determinan la validez de los tipos involucrados en las operaciones durante la ejecucion del programa. En otras palabras, los tipos estan asociados con valores en ejecucion en lugar de expresiones textuales. Como en el caso de lenguajes con tipos inferidos, los lenguajes con tipos dinamicos no requieren que el programador escriba los tipos de las expresiones. Entre otras cosas, esto permite que una misma variable se pueda asociar con valores de tipos distintos en diferentes momentos de la ejecucion de un programa. Sin embargo, los errores de tipo no pueden ser detectados automaticamente hasta que se ejecuta el codigo, dificultando la depuracion de los programas, no obstante, en lenguajes con tipos dinamicos se suele dejar de lado la depuracion en favor de tecnicas de desarrollo como por ejemplo BDD y TDD. Ruby, Lisp, JavaScript y Python son lenguajes con tipos dinamicos.  Los lenguajes debilmente tipados permiten que un valor de un tipo pueda ser tratado como de otro tipo, por ejemplo una cadena puede ser operada como un numero. Esto puede ser util a veces, pero tambien puede permitir ciertos tipos de fallas que no pueden ser detectadas durante la compilacion o a veces ni siquiera durante la ejecucion.  Los lenguajes fuertemente tipados evitan que pase lo anterior. Cualquier intento de llevar a cabo una operacion sobre el tipo equivocado dispara un error. A los lenguajes con tipos fuertes se les suele llamar de tipos seguros.  Lenguajes con tipos debiles como Perl y JavaScript permiten un gran numero de conversiones de tipo implicitas. Por ejemplo en JavaScript la expresion 2 * x convierte implicitamente x a un numero, y esta conversion es exitosa inclusive cuando x es null, undefined, un Array o una cadena de letras. Estas conversiones implicitas son utiles con frecuencia, pero tambien pueden ocultar errores de programacion.  Las caracteristicas de estaticos y fuertes son ahora generalmente consideradas conceptos ortogonales, pero su trato en diferentes textos varia. Algunos utilizan el termino de tipos fuertes para referirse a tipos fuertemente estaticos o, para aumentar la confusion, simplemente como equivalencia de tipos estaticos. De tal manera que C ha sido llamado tanto lenguaje de tipos fuertes como lenguaje de tipos estaticos debiles.  La implementacion de un lenguaje es la que provee una manera de que se ejecute un programa para una determinada combinacion de software y hardware. Existen basicamente dos maneras de implementar un lenguaje: compilacion e interpretacion.  Se puede tambien utilizar una alternativa para traducir lenguajes de alto nivel. En lugar de traducir el programa fuente y grabar en forma permanente el codigo objeto que se produce durante la compilacion para utilizarlo en una ejecucion futura, el programador solo carga el programa fuente en la computadora junto con los datos que se van a procesar. A continuacion, un programa interprete, almacenado en el sistema operativo del disco, o incluido de manera permanente dentro de la maquina, convierte cada proposicion del programa fuente en lenguaje de maquina conforme vaya siendo necesario durante el procesamiento de los datos. El codigo objeto no se graba para utilizarlo posteriormente.  La siguiente vez que se utilice una instruccion, se la debera interpretar otra vez y traducir a lenguaje maquina. Por ejemplo, durante el procesamiento repetitivo de los pasos de un ciclo o bucle, cada instruccion del bucle tendra que volver a ser interpretada en cada ejecucion repetida del ciclo, lo cual hace que el programa sea mas lento en tiempo de ejecucion (porque se va revisando el codigo en tiempo de ejecucion) pero mas rapido en tiempo de dise\u00f1o (porque no se tiene que estar compilando a cada momento el codigo completo). El interprete elimina la necesidad de realizar una compilacion despues de cada modificacion del programa cuando se quiere agregar funciones o corregir errores; pero es obvio que un programa objeto compilado con antelacion debera ejecutarse con mucha mayor rapidez que uno que se debe interpretar a cada paso durante una ejecucion del codigo.  La mayoria de lenguajes de alto nivel permiten la programacion multiproposito, aunque muchos de ellos fueron dise\u00f1ados para permitir programacion dedicada, como lo fue el Pascal con las matematicas en su comienzo. Tambien se han implementado lenguajes educativos infantiles como Logo mediante una serie de simples instrucciones. En la actualidad son muy populares algunos lenguajes especialmente indicados para aplicaciones web, como Perl, PHP, Ruby, Python o JavaScript.  Un dialecto de un lenguaje de programacion es una variacion o extension (relativamente peque\u00f1a) del lenguaje que no cambia su naturaleza intrinseca. Con lenguajes como Scheme y Forth, los implementadores pueden considerar que los estandares son insuficientes, inadecuados o ilegitimos, por lo que a menudo se desviaran del estandar, haciendo un nuevo dialecto. En otros casos, se crea un dialecto para su uso en un lenguaje especifico de dominio, a menudo un subconjunto. En el mundo Lisp, la mayoria de los lenguajes que utilizan la sintaxis basica de una expresion S y la semantica similar a Lisp se consideran dialectos Lisp, aunque varian enormemente, al igual que, digamos, Raqueta y Clojure. Como es comun que un lenguaje tenga varios dialectos, puede resultar bastante dificil para un programador sin experiencia encontrar la documentacion correcta. El lenguaje de programacion BASIC tiene muchos dialectos.  Para escribir programas que proporcionen los mejores resultados, cabe tener en cuenta una serie de detalles.  Los programas se pueden clasificar por el paradigma del lenguaje que se use para producirlos. Los principales paradigmas son: imperativos, declarativos y orientacion a objetos.  Los programas que usan un lenguaje imperativo especifican un algoritmo, usan declaraciones, expresiones y sentencias.\u200b Una declaracion asocia un nombre de variable con un tipo de dato, por ejemplo: var x: integer;. Una expresion contiene un valor, por ejemplo: 2 + 2 contiene el valor 4. Finalmente, una sentencia debe asignar una expresion a una variable o usar el valor de una variable para alterar el flujo de un programa, por ejemplo: x\u00a0:= 2 + 2; if x == 4 then haz_algo();. Una critica comun en los lenguajes imperativos es el efecto de las sentencias de asignacion sobre una clase de variables llamadas \"no locales\".\u200b  Los programas que usan un lenguaje declarativo especifican las propiedades que la salida debe conocer y no especifican cualquier detalle de implementacion. Dos amplias categorias de lenguajes declarativos son los lenguajes funcionales y los lenguajes logicos. Los lenguajes funcionales no permiten asignaciones de variables no locales, asi, se hacen mas facil, por ejemplo, programas como funciones matematicas.\u200b El principio detras de los lenguajes logicos es definir el problema que se quiere resolver (el objetivo) y dejar los detalles de la solucion al sistema.\u200b El objetivo es definido dando una lista de sub-objetivos. Cada sub-objetivo tambien se define dando una lista de sus sub-objetivos, etc. Si al tratar de buscar una solucion, una ruta de sub-objetivos falla, entonces tal sub-objetivo se descarta y sistematicamente se prueba otra ruta.  La forma en la cual se programa puede ser por medio de texto o de forma visual. En la programacion visual los elementos son manipulados graficamente en vez de especificarse por medio de texto. ","snippet":"Un lenguaje de programacion es un lenguaje formal (o artificial, es decir, un lenguaje con reglas gramaticales bien definidas) que proporciona a una persona, en este caso el programador, la capacidad ","enlaces_salientes":["Lenguaje_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n","Microcomputadora","Commodore_International","Programa_inform%C3%A1tico","Lenguaje_de_programaci%C3%B3n_de_alto_nivel","BASIC","Emulador","VICE","GNU/Linux","C%C3%B3digo_fuente","Lenguaje_de_programaci%C3%B3n_Java","Compilado","Ejecutable","Lenguaje_formal","Instrucci%C3%B3n_(inform%C3%A1tica)","Algoritmo","Sistema_inform%C3%A1tico","Software","Programaci%C3%B3n","Beta_tester","Depurador","Compilador","Int%C3%A9rprete_(inform%C3%A1tica)","C%C3%B3digo_fuente","Programa_inform%C3%A1tico","Compilador","Lenguaje_de_m%C3%A1quina","Beta_tester","Depuraci%C3%B3n_de_programas","Palabra_(matem%C3%A1ticas)","Token_(inform%C3%A1tica)","Morfolog%C3%ADa_ling%C3%BC%C3%ADstica","Sintaxis","Sem%C3%A1ntica","Lenguaje_inform%C3%A1tico","HTML","Lenguaje_de_marcado","P%C3%A1gina_web","Conjunto_de_instrucciones","Software","Lenguaje","Historia_de_los_lenguajes_de_programaci%C3%B3n","Fortran","Tarjeta_perforada","Lenguaje_de_m%C3%A1quina","Sistema_binario","Idioma_ingl%C3%A9s","Lenguaje_ensamblador","Lenguaje_ensamblador","Sintaxis","Lenguaje_de_alto_nivel","1953","John_Backus","IBM","Lenguaje_ensamblador","Computadora_central","IBM_704","Fortran","John_Backus","Lois_Haibt","Fortran","1956","Compilador","Fortran","Abril","1957","Lenguaje_de_alto_nivel","1960","COBOL","Inform%C3%A1tica_de_gesti%C3%B3n","Lenguaje_de_alto_nivel","BASIC","1980","Arquitectura_de_computaci%C3%B3n","Computadora_electr%C3%B3nica","Hardware","V%C3%A1lvula_termoi%C3%B3nica","Transistor","Circuito_integrado","Circuito_integrado","Programaci%C3%B3n","Software","Hardware","C%C3%B3digo_de_m%C3%A1quina","Sistema_binario","Lenguajes_de_bajo_nivel","Lenguaje_de_alto_nivel","Abstracci%C3%B3n_(inform%C3%A1tica)","Sistemas_operativos","Controlador_de_dispositivo","Lenguaje_simb%C3%B3lico","Ensamblador","Lenguajes_de_alto_nivel","Matem%C3%A1ticas","C_(lenguaje_de_programaci%C3%B3n)","Fortran","Smalltalk","Lenguaje_de_programaci%C3%B3n_Ada","C%2B%2B","C_sharp","Cobol","Embarcadero_Delphi","Lenguaje_de_programaci%C3%B3n_Java","PHP","Programaci%C3%B3n_orientada_a_objetos","Base_de_datos","Visual_Basic","SQL","ISO","ANSI","Natural_(lenguaje_de_programaci%C3%B3n)","PL/SQL","Programador","Desarrollador_de_software","Ingenier%C3%ADa_de_software","Paradigma","Orientaci%C3%B3n_a_objetos","Desarrollo_de_software","Lisp","Simula","Smalltalk","Algoritmo","Inferencia","Programaci%C3%B3n_imperativa","Lenguaje_de_m%C3%A1quina","Lenguaje_de_programaci%C3%B3n_C","BASIC","Pascal_(lenguaje_de_programaci%C3%B3n)","Programaci%C3%B3n_orientada_a_objetos","C_Sharp","Java_(lenguaje_de_programaci%C3%B3n)","Smalltalk","Programaci%C3%B3n_dirigida_por_eventos","Programaci%C3%B3n_declarativa","Programaci%C3%B3n_funcional","Programaci%C3%B3n_l%C3%B3gica","Computadora","Transparencia_referencial","Lisp","Prolog","Programaci%C3%B3n_funcional","Scheme","Lisp","Haskell","Python","Programaci%C3%B3n_l%C3%B3gica","Prolog","Programaci%C3%B3n_con_restricciones","Prolog","Lisp","Python","PHP","Programaci%C3%B3n_orientada_a_objetos","Reflexi%C3%B3n_(inform%C3%A1tica)","Programaci%C3%B3n_funcional","Bjarne_Stroustrup","C%2B%2B","Genie_(lenguaje_de_programaci%C3%B3n)","Delphi","Visual_Basic","D_(lenguaje_de_programaci%C3%B3n)","Programaci%C3%B3n_orientada_a_objetos","Lenguaje_de_programaci%C3%B3n_Oz","Programaci%C3%B3n_l%C3%B3gica","Programaci%C3%B3n_funcional","Programaci%C3%B3n_orientada_a_objetos","Scheme","Prolog","Programaci%C3%B3n_l%C3%B3gica","Lenguaje_espec%C3%ADfico_del_dominio","SQL","Logo_(lenguaje_de_programaci%C3%B3n)","Variable_(programaci%C3%B3n)","Pauscal","Variable_(programaci%C3%B3n)","Java_(lenguaje_de_programaci%C3%B3n)","PHP","JavaScript","Python","C%C3%B3digo_duro","Expresi%C3%B3n_regular","Notaci%C3%B3n_de_Backus-Naur","Lisp","C_(lenguaje_de_programaci%C3%B3n)","Jerarqu%C3%ADa_de_Chomsky","Perl","Lisp","Lisp","Perl","C_(lenguaje_de_programaci%C3%B3n)","Java_(lenguaje_de_programaci%C3%B3n)","C_Sharp","Sistema_de_tipos","Tipos_de_datos","Tipos_de_datos","Decidibilidad","Scripts","REXX","SGML","BCPL","Forth","C%2B%2B","C_Sharp","Java_(lenguaje_de_programaci%C3%B3n)","Haskell","ML_(lenguaje_de_programaci%C3%B3n)","Java_(lenguaje_de_programaci%C3%B3n)","C_Sharp","Diagrama_de_decisi%C3%B3n_binario","TDD","Ruby","Lisp","JavaScript","Python","Tipado_fuerte","Perl","JavaScript","JavaScript","C_(lenguaje_de_programaci%C3%B3n)","C%C3%B3digo_fuente","Lenguaje_de_programaci%C3%B3n_Java","Software","Hardware","Compilador","Interpretaci%C3%B3n_(l%C3%B3gica)","Compilaci%C3%B3n","Compilador","Interpretaci%C3%B3n","F%C3%B3rmula_bien_formada","Lenguaje_formal","Sintaxis","Cadena_de_caracteres","Int%C3%A9rprete_(inform%C3%A1tica)","C%C3%B3digo_objeto","Lenguaje_de_programaci%C3%B3n_Pascal","Logo_(lenguaje_de_programaci%C3%B3n)","Aplicaci%C3%B3n_web","Perl","PHP","Ruby","Python","JavaScript","Scheme","Forth","Dialecto","Lenguaje_espec%C3%ADfico_de_dominio","Common_Lisp","Expresi%C3%B3n_S","Racket_(lenguaje_de_programaci%C3%B3n)","Clojure","BASIC","Programador","Arte_ASCII","C%C3%B3digo_ofuscado","GNU/Linux","Sistemas_operativos","Microsoft_Windows","Paradigma_de_programaci%C3%B3n","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_declarativa","Programaci%C3%B3n_orientada_a_objetos","Algoritmo","Programaci%C3%B3n_funcional","Programaci%C3%B3n_l%C3%B3gica","Programaci%C3%B3n_visual","Programaci%C3%B3n_estructurada","Programaci%C3%B3n_modular","Programaci%C3%B3n_funcional","Programaci%C3%B3n_orientada_a_aspectos","Programaci%C3%B3n_con_restricciones","Programaci%C3%B3n_a_nivel_funcional","Programaci%C3%B3n_a_nivel_de_valores","Lenguaje_de_programaci%C3%B3n_esot%C3%A9rico","ISBN","ISBN","ISBN","D_(lenguaje_de_programaci%C3%B3n)","Control_de_autoridades","MediaWiki","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica","MediaWiki"]}
{"url":"Programaci%C3%B3n_Estructurada","titulo":"Programacion estructurada","contenido":"La programacion estructurada es un paradigma de programacion orientado a mejorar la claridad, calidad y tiempo de desarrollo de un programa de computadora recurriendo unicamente a subrutinas y a tres estructuras de control basicas: secuencia, seleccion (if y switch) e iteracion (bucles for y while); asimismo, se considera innecesario y contraproducente el uso de la transferencia incondicional (GOTO); esta instruccion suele acabar generando el llamado codigo espagueti, mucho mas dificil de seguir y de mantener, ademas de originar numerosos errores de programacion.  Surgio en la decada de 1960, particularmente del trabajo de Bohm y Jacopini,\u200b y un famoso escrito de 1968: \u00abLa sentencia goto, considerada perjudicial\u00bb, de Edsger Dijkstra.\u200b Sus postulados se verian reforzados, a nivel teorico, por el teorema del programa estructurado y, a nivel practico, por la aparicion de lenguajes como ALGOL, dotado de estructuras de control consistentes y bien formadas.\u200b  Siguiendo el teorema del programa estructurado, todos los programas se ven como compuestos de estructuras de control:  Subrutinas son las unidades a las que se puede llamar, como procedimientos, funciones, metodos o subprogramas. Se utilizan para permitir que una sola declaracion haga referencia a una secuencia.  Los bloques se utilizan para permitir que grupos de declaraciones se traten como si fueran una sola declaracion. Los lenguajes \"estructurados en bloques\" tienen una sintaxis para encerrar estructuras de alguna manera formal, como una declaracion if entre parentesis. if..fi como en ALGOL 68, o una seccion de codigo entre corchetes BEGIN..END, como en PL/I y Pascal, sangria de espacio en blanco como en Python, o las llaves {...} de C y muchos lenguajes posteriores.  A finales de los a\u00f1os 1970 surgio una nueva forma de programar que no solamente permitia desarrollar programas fiables y eficientes, sino que ademas estos estaban escritos de manera que se facilitaba su comprension en fases de mejora posteriores.  El teorema del programa estructurado, propuesto por Bohm-Jacopini, demuestra que todo programa puede escribirse utilizando unicamente las tres instrucciones de control siguientes:  Solamente con estas tres estructuras se pueden escribir todos los programas y aplicaciones posibles. Si bien los lenguajes de programacion tienen un mayor repertorio de estructuras de control, estas pueden ser construidas mediante las tres basicas citadas.    El teorema del programa estructurado proporciona la base teorica de la programacion estructurada. Se\u00f1ala que la combinacion de las tres estructuras basicas, secuencia, seleccion e iteracion, son suficientes para expresar cualquier funcion computable. Esta observacion no se origino con el movimiento de la programacion estructurada. Estas estructuras son suficientes para describir el ciclo de instruccion de una unidad central de procesamiento, asi como el funcionamiento de una maquina de Turing. Por lo tanto, un procesador siempre esta ejecutando un \u00abprograma estructurado\u00bb en este sentido, incluso si las instrucciones que lee de la memoria no son parte de un programa estructurado. Sin embargo, los autores usualmente acreditan el resultado a un documento escrito en 1966 por Bohm y Jacopini, posiblemente porque Dijkstra habia citado este escrito.\u200b El teorema del programa estructurado no responde a como escribir y analizar un programa estructurado de manera util. Estos temas fueron abordados durante la decada de 1960 y principio de los a\u00f1os 1970, con importantes contribuciones de Dijkstra, Robert W. Floyd, Tony Hoarey y David Gries.  P. J. Plauger, uno de los primeros en adoptar la programacion estructurada, describio su reaccion con el teorema del programa estructurado:  Nosotros los conversos ondeamos esta interesante pizca de noticias bajo las narices de los recalcitrantes programadores de lenguaje ensamblador que mantuvieron trotando adelante retorcidos bits de logica y diciendo, 'Te apuesto que no puedes estructurar esto'. Ni la prueba por Bohm y Jacopini, ni nuestros repetidos exitos en escribir codigo estructurado, los llevaron un dia antes de lo que estaban listos para convencerse.\u200b  Donald Knuth acepto el principio de que los programas deben adaptarse con asertividad, pero no estaba de acuerdo (y aun esta en desacuerdo)[cita\u00a0requerida] con la supresion de la sentencia GOTO. En su escrito de 1974 \u00abProgramacion estructurada con sentencias Goto\u00bb, dio ejemplos donde creia que un salto directo conduce a codigo mas claro y mas eficiente sin sacrificar demostratividad. Knuth propuso una restriccion estructural mas flexible: debe ser posible establecer un diagrama de flujo del programa con todas las bifurcaciones hacia adelante a la izquierda, todas las bifurcaciones hacia atras a la derecha, y sin bifurcaciones que se crucen entre si. Muchos de los expertos en teoria de grafos y compiladores han abogado por permitir solo grafos de flujo reducible[\u00bfquien?][\u00bfcuando?].  Los teoricos de la programacion estructurada se ganaron un aliado importante en la decada de 1970 despues de que el investigador de IBM Harlan Mills aplicara su interpretacion de la teoria de la programacion estructurada para el desarrollo de un sistema de indexacion para el archivo de investigacion del New York Times. El proyecto fue un gran exito de la ingenieria, y los directivos de otras empresas lo citaron en apoyo de la adopcion de la programacion estructurada, aunque Dijkstra critico las maneras en que la interpretacion de Mills diferia de la obra publicada.  Habria que esperar a 1987 para que la cuestion de la programacion estructurada llamara la atencion de una revista de ciencia de la computacion. Frank Rubin lo hizo en ese a\u00f1o, con el escrito: \u00ab\u00bf\u201cLa sentencia GOTO considerada da\u00f1ina\u201d se considera da\u00f1ina?\u00bb. A este le siguieron numerosas objeciones, como una respuesta del propio Dijkstra que criticaba duramente a Rubin y las concesiones que otros autores hicieron cuando le respondieron.  A finales del siglo\u00a0XX, casi todos los cientificos estan convencidos de que es util aprender y aplicar los conceptos de programacion estructurada. Los lenguajes de programacion de alto nivel que originalmente carecian de estructuras de programacion, como FORTRAN, COBOL y BASIC, ahora las tienen.  Entre las ventajas de la programacion estructurada sobre el modelo anterior (hoy llamado despectivamente codigo espagueti), cabe citar las siguientes:  Si bien es posible desarrollar la programacion estructurada en cualquier lenguaje de programacion, resulta mas idoneo un lenguaje de programacion procedimental. Algunos de los lenguajes utilizados inicialmente para programacion estructurada incluyen ALGOL, Pascal, PL/I y Ada, pero la mayoria de los nuevos lenguajes de programacion procedimentales desde entonces han incluido caracteristicas para fomentar la programacion estructurada y a veces, deliberadamente, omiten caracteristicas\u200b en un esfuerzo para hacer mas dificil la programacion no estructurada.  Con posterioridad a la programacion estructurada se han creado nuevos paradigmas tales como la programacion modular, la programacion orientada a objetos, la programacion por capas y otras, asi como nuevos entornos de programacion que facilitan la programacion de grandes aplicaciones y sistemas. ","snippet":"La programacion estructurada es un paradigma de programacion orientado a mejorar la claridad, calidad y tiempo de desarrollo de un programa de computadora recurriendo unicamente a subrutinas y a tres ","enlaces_salientes":["Programaci%C3%B3n_estructurada","Programaci%C3%B3n_estructurada","Programaci%C3%B3n_estructurada","Paradigma_de_programaci%C3%B3n","Programa_de_computadora","Subrutina","Estructura_de_control_(computaci%C3%B3n)","Bloque_de_c%C3%B3digo","If","Switch","Iteraci%C3%B3n","Bucle_(programaci%C3%B3n)","Bucle_for","Bucle_while","Transferencia_incondicional","GOTO","Instrucci%C3%B3n_(inform%C3%A1tica)","C%C3%B3digo_espagueti","Error_de_programaci%C3%B3n","Corrado_B%C3%B6hm","Edsger_Dijkstra","Teorema_del_programa_estructurado","ALGOL","Estructuras_de_control","Palabra_clave_(programaci%C3%B3n_de_computadora)","Condicional_(programaci%C3%B3n)","Teorema_del_programa_estructurado","Diagrama_de_Nassi-Shneiderman","Diagrama_de_flujo","Subrutina","Bloques_(programaci%C3%B3n)","ALGOL_68","PL/I","Pascal_(lenguaje_de_programaci%C3%B3n)","Python_(lenguaje_de_programaci%C3%B3n)","C_(lenguaje_de_programaci%C3%B3n)","Teorema_del_programa_estructurado","Programa_inform%C3%A1tico","Lenguaje_de_programaci%C3%B3n","Estructuras_de_control","Teorema_del_programa_estructurado","Funci%C3%B3n_computable","Ciclo_de_instrucci%C3%B3n","Unidad_central_de_procesamiento","M%C3%A1quina_de_Turing","Robert_W._Floyd","Bit","Lenguaje_ensamblador","Donald_Knuth","Teor%C3%ADa_de_grafos","Compilador","IBM","New_York_Times","FORTRAN","COBOL","BASIC","C%C3%B3digo_espagueti","Programaci%C3%B3n_por_procedimientos","ALGOL","Pascal_(lenguaje_de_programaci%C3%B3n)","PL/I","Lenguaje_de_programaci%C3%B3n_Ada","Programaci%C3%B3n_modular","Programaci%C3%B3n_orientada_a_objetos","Programaci%C3%B3n_por_capas","Edsger_Dijkstra","Digital_object_identifier","ISBN","ISBN","Edsger_Dijkstra","ISSN","Semantic_Scholar","Digital_object_identifier","ISBN","ISBN","ISBN","ISBN","ISBN","Teorema_del_programa_estructurado","Dise%C3%B1o_estructurado","Bloque_de_c%C3%B3digo","Estructuras_de_control","Programaci%C3%B3n_por_procedimientos","Programaci%C3%B3n_modular","Programaci%C3%B3n_orientada_a_objetos","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel"]}
{"url":"1983","titulo":"1983","contenido":"1983 (MCMLXXXIII) fue un a\u00f1o comun comenzado en sabado en el calendario gregoriano. Fue designado el A\u00f1o Mundial de las Comunicaciones por la Organizacion de las Naciones Unidas.  El a\u00f1o 1983 vio tanto el comienzo oficial de Internet como la primera llamada a traves de un telefono movil. ","snippet":"1983 (MCMLXXXIII) fue un a\u00f1o comun comenzado en sabado en el calendario gregoriano. Fue designado el A\u00f1o Mundial de las Comunicaciones por la Organizacion de las Naciones Unidas.  El a\u00f1o 1983 vio tant","enlaces_salientes":["1983","1983","1983","1980","1981","1982","1984","1985","1986","D%C3%A9cada","A%C3%B1os_1950","A%C3%B1os_1960","A%C3%B1os_1970","A%C3%B1os_1980","A%C3%B1os_1990","A%C3%B1os_2000","A%C3%B1os_2010","Siglo","Siglo_XIX","Siglo_XX","Siglo_XXI","2023","Calendario_gregoriano","Ab_Urbe_condita","Calendario_armenio","Calendario_chino","Calendario_hebreo","Calendario_hind%C3%BA","Vikram_Samvat","Shaka_Samvat","Calendario_persa","Calendario_musulm%C3%A1n","Numeraci%C3%B3n_romana","A%C3%B1o_com%C3%BAn_comenzado_en_s%C3%A1bado","Calendario_gregoriano","Organizaci%C3%B3n_de_las_Naciones_Unidas","Mi%C3%A9rcoles_de_Ceniza","Victoria_(Australia)","Australia_Meridional","Atentado_contra_la_embajada_de_Estados_Unidos_en_el_L%C3%ADbano_de_1983","L%C3%ADbano","Sukhoi_Su-15","Vuelo_007_de_Korean_Air_Lines","Crisis_del_videojuego_de_1983","Sally_Ride","STS-7","Atentado_contra_los_cuarteles_en_Beirut_en_1983","Sri_Lanka","Invasi%C3%B3n_de_Granada","Internet","Tel%C3%A9fono_m%C3%B3vil","1_de_enero","ARPANET","TCP/IP","Historia_de_Internet","2_de_enero","Venezuela","Metro_de_Caracas","4_de_enero","Kabul","Afganist%C3%A1n","Guerra_de_Afganist%C3%A1n_(1978-1992)","Uni%C3%B3n_Sovi%C3%A9tica","6_de_enero","Red_Hot_Chili_Peppers","19_de_enero","Ham_el_Chimpanc%C3%A9","Hominidae","22_de_enero","Hospital_de_Bellvitge","Barcelona","Espa%C3%B1a","Trasplante","H%C3%ADgado","23_de_enero","Estados_Unidos","El_equipo_A","Tenista","Suecia","Bj%C3%B6rn_Borg","Torneo_de_Wimbledon","Per%C3%BA","Canal_de_televisi%C3%B3n","Latina_Televisi%C3%B3n","24_de_enero","Nueva_York","Estados_Unidos","John_McEnroe","Checoslovaquia","Ivan_Lendl","Tennis_Masters_Cup","25_de_enero","Ciudad_del_Vaticano","Juan_Pablo_II","C%C3%B3digo_de_Derecho_Can%C3%B3nico","Bolivia","Klaus_Barbie","26_de_enero","Departamento_de_Ayacucho","Per%C3%BA","Matanza_de_Uchuraccay","Sendero_Luminoso","2_de_febrero","Ginebra_(ciudad)","Uni%C3%B3n_Sovi%C3%A9tica","Estados_Unidos","START_I","4_de_febrero","Karen_Carpenter","The_Carpenters","Anorexia","Instituto_Pasteur","HTLV","Robert_Gallo","SIDA","6_de_febrero","Francia","Klaus_Barbie","Lyon","Segunda_Guerra_Mundial","Paraguay","Alfredo_Stroessner","7_de_febrero","Espa%C3%B1a","Trasplante","P%C3%A1ncreas","Ir%C3%A1n","Irak","Madrid","Palacio_de_El_Pardo","13_de_febrero","Tur%C3%ADn","14_de_febrero","Ariel_Shar%C3%B3n","Ministro_de_Defensa_de_Israel","Matanzas_de_Sabra_y_Chatila","Beirut","16_de_febrero","Sagunto_(Valencia)","Huelga","Matanza_de_Bolonia","2_de_agosto","1980","17_de_febrero","Estatuto_de_Autonom%C3%ADa_de_Castilla_y_Le%C3%B3n","Estatuto_de_Autonom%C3%ADa_de_Extremadura","18_de_febrero","Seattle","Estados_Unidos","Landelino_Lavilla","Uni%C3%B3n_de_Centro_Democr%C3%A1tico_(Espa%C3%B1a)","Venezuela","Viernes_Negro_(Venezuela)","Banco_Central_de_Venezuela","Bol%C3%ADvar_(moneda)","19_de_febrero","Empalme_(Sonora)","Hermosillo_(Sonora)","Tren_de_pasajeros","20_de_febrero","Assam","India","22_de_febrero","Argel","Yasir_Arafat","Organizaci%C3%B3n_para_la_Liberaci%C3%B3n_de_Palestina","Jos%C3%A9_Mar%C3%ADa_Ruiz-Mateos","Rumasa","23_de_febrero","Felipe_Gonz%C3%A1lez","Estatizaci%C3%B3n","Rumasa","24_de_febrero","28_de_febrero","Disco_compacto","1_de_marzo","Estatuto_de_autonom%C3%ADa","Comunidad_de_Madrid","Islas_Baleares","2_de_marzo","7_de_marzo","Juan_Pablo_II","Centroam%C3%A9rica","5_de_marzo","Bob_Hawke","Australia","6_de_marzo","Alemania","Francia","Estados_Unidos","Spike_TV","8_de_marzo","Ronald_Reagan","Uni%C3%B3n_Sovi%C3%A9tica","9_de_marzo","Televisa","11_de_marzo","Bob_Hawke","Primer_ministro","Australia","Metal_Health","Quiet_Riot","22_de_marzo","Partido_Laborista_(Israel)","Haim_Herzog","23_de_marzo","Ronald_Reagan","Star_Wars","27_de_marzo","The_thorn_birds","31_de_marzo","Popay%C3%A1n","Colombia","Terremoto_de_Popay%C3%A1n_de_1983","4_de_abril","Transbordador_espacial_Challenger","NASA","6_de_abril","Managua","Nicaragua","Comandante_Ana_Mar%C3%ADa","FMLN","12_de_abril","Comandante_Marcial","Comandante_Ana_Mar%C3%ADa","14_de_abril","Sitio_de_pruebas_at%C3%B3micas_de_Nevada","Las_Vegas","Bomba_at%C3%B3mica","Kilotones","17_de_abril","San_Pedro_Sula","Canal_6_(Honduras)","Honduras","18_de_abril","Beirut","L%C3%ADbano","Disney_Channel","Estados_Unidos","Per%C3%BA","ATV_(Per%C3%BA)","ATV_(Per%C3%BA)","23_de_abril","M%C3%BAnich","Alemania","Corinne_Herm%C3%A8s","Luxemburgo","Festival_de_la_Canci%C3%B3n_de_Eurovisi%C3%B3n_1983","Festival_de_la_Canci%C3%B3n_de_Eurovisi%C3%B3n","24_de_abril","Riverside_International_Raceway","Estados_Unidos","Rolf_Stommelen","25_de_abril","Portugal","27_de_abril","Ecuador","Chunchi","Provincia_de_Chimborazo","28_de_abril","Jaime_Bateman_Cay%C3%B3n","2_de_mayo","Coalinga","5_de_mayo","Argentina","Arqu%C3%ADmedes_Puccio","6_de_mayo","Stern","Diarios_de_Hitler","8_de_mayo","Espa%C3%B1a","9_de_mayo","Juan_Pablo_II","Iglesia_cat%C3%B3lica","Galileo_Galilei","11_de_mayo","Chile","Augusto_Pinochet","12_de_mayo","SIDA","Per%C3%BA","20_de_mayo","Science","Virus_de_la_inmunodeficiencia_humana","Luc_Montagnier","25_de_mayo","El_Retorno_del_Jedi","Star_Wars","26_de_mayo","Jap%C3%B3n","Terremoto_del_Mar_de_Jap%C3%B3n_de_1983","28_de_mayo","30_de_mayo","Parlamento_de_Canarias","2_de_junio","M%C3%A9xico","Copa_Mundial_de_F%C3%BAtbol_Juvenil_de_1983","9_de_junio","Reino_Unido","Partido_Conservador_(Reino_Unido)","Margaret_Thatcher","Elecciones_generales_del_Reino_Unido_de_1983","Portugal","M%C3%A1rio_Soares","12_de_junio","Chile","14_de_junio","Chile","15_de_junio","Per%C3%BA","Fen%C3%B3meno_de_El_Ni%C3%B1o","16_de_junio","Yuri_Andr%C3%B3pov","Presidente_del_Presidium_del_S%C3%B3viet_Supremo_de_la_Uni%C3%B3n_Sovi%C3%A9tica","18_de_junio","Sally_Ride","Am%C3%A9rica","Transbordador_espacial_Challenger","NASA","19_de_junio","Ciudad_de_M%C3%A9xico","M%C3%A9xico","Copa_Mundial_de_F%C3%BAtbol_Juvenil_de_1983","Selecci%C3%B3n_de_f%C3%BAtbol_sub-20_de_Brasil","Selecci%C3%B3n_de_f%C3%BAtbol_sub-20_de_Argentina","22_de_junio","Ciudad_del_Vaticano","Emanuela_Orlandi","23_de_junio","Universidad_del_Sur_de_California","Jon_Postel","Paul_Mockapetris","Internet","DNS","24_de_junio","La_Habana","Presidente_de_Cuba","Osvaldo_Dortic%C3%B3s","25_de_junio","Espa%C3%B1a","Garrote_vil","Pena_de_muerte","1820","5_de_julio","Turqu%C3%ADa","7_de_julio","8_de_julio","Getafe","Getafe_Club_de_F%C3%BAtbol","11_de_julio","Nueva_Zelanda","Lorraine_Downes","Miss_Universo","14_de_julio","Nintendo","Arcade","Mario_Bros","15_de_julio","ASALA","Aeropuerto_de_Orly","Isla_de_Francia","Francia","Jap%C3%B3n","Nintendo","NES","18_de_julio","Colombia","M-19","Jaime_Bateman","21_de_julio","Base_Vostok","Ant%C3%A1rtida","22_de_julio","Honduras","Nicaragua","Nicaragua","Polonia","Dieta_(asamblea)","23_de_julio","Venezuela","Juan_Carlos_I_de_Espa%C3%B1a","Sim%C3%B3n_Bol%C3%ADvar","24_de_julio","Sim%C3%B3n_Bol%C3%ADvar","Ir%C3%A1n","Irak","25_de_julio","Estados_Unidos","Metallica","27_de_julio","Amberg","Alemania","27_de_julio","Estados_Unidos","Madonna","Madonna_(%C3%A1lbum)","29_de_julio","Ciudad_de_M%C3%A9xico","M%C3%A9xico","Luis_Bu%C3%B1uel","30_de_julio","Espa%C3%B1a","2_de_agosto","James_Jamerson","Neumon%C3%ADa","8_de_agosto","Guatemala","%C3%93scar_Humberto_Mej%C3%ADa_V%C3%ADctores","Golpe_de_Estado","Efra%C3%ADn_R%C3%ADos_Montt","10_de_agosto","Copa_Am%C3%A9rica_1983","11_de_agosto","Campo_de_pruebas_de_Nevada","Las_Vegas","Kilotonelada","12_de_agosto","Chile","17_de_agosto","Isla_de_Luz%C3%B3n","18_de_agosto","Texas","26_de_agosto","Pa%C3%ADs_Vasco","Navarra","Provincia_de_Burgos","27_de_agosto","Pakist%C3%A1n","%C3%81rea_de_pruebas_at%C3%B3micas_de_Nevada","Las_Vegas","Kilotones","27_de_agosto","30_de_agosto","Intendente","Santiago_de_Chile","Carol_Urz%C3%BAa","Movimiento_de_Izquierda_Revolucionaria_(Chile)","1_de_septiembre","Guerra_Fr%C3%ADa","Vuelo_007_de_Korean_Air","Korean_Air","Uni%C3%B3n_Sovi%C3%A9tica","Caza_(avi%C3%B3n)","%C3%81rea_de_pruebas_at%C3%B3micas_de_Nevada","Las_Vegas","Kilotones","5_de_septiembre","16_de_septiembre","Apia","Samoa","Juegos_del_Pac%C3%ADfico_Sur_1983","DiC_Entertainment","Inspector_Gadget","10_de_septiembre","Televisi%C3%B3_de_Catalunya","Serbia","15_de_septiembre","Boxeador","Per%C3%BA","Orlando_Romero","19_de_septiembre","San_Crist%C3%B3bal_y_Nieves","Reino_Unido","22_de_septiembre","Sitio_de_pruebas_at%C3%B3micas_de_Nevada","Las_Vegas","Kilotones","23_de_septiembre","Ciudad_del_Libertador_General_San_Mart%C3%ADn","Gran_Buenos_Aires","Argentina","Centro_At%C3%B3mico_Constituyentes","Accidente_nuclear_del_reactor_RA-2","26_de_septiembre","Guerra_nuclear","Stanislav_Petrov","27_de_septiembre","Richard_Stallman","GNU","3_de_octubre","Jap%C3%B3n","Monte_Oyama","5_de_octubre","Asteroide","9007_James_Bond","9_de_octubre","Guatemala","Prensa_Libre_(diario)","11_de_octubre","Vuelo_710_de_Air_Illinois","Chicago","Carbondale","Estados_Unidos","13_de_octubre","Regi%C3%B3n_de_Murcia","Los_Alc%C3%A1zares","San_Javier_(Espa%C3%B1a)","Torre_Pacheco","20_de_octubre","Tratado_de_Anc%C3%B3n","Per%C3%BA","Chile","Arica","Departamento_de_Tarapac%C3%A1_(Per%C3%BA)","25_de_octubre","Granada","Invasi%C3%B3n_de_Granada","29_de_octubre","Washington_D._C.","Estados_Unidos","Brasil","OTI_1983","Festival_OTI","28_de_octubre","Estado_de_Idaho","30_de_octubre","Terremoto","Turqu%C3%ADa","Argentina","Proceso_de_Reorganizaci%C3%B3n_Nacional","4_de_noviembre","Salvador_de_Bah%C3%ADa","Selecci%C3%B3n_de_f%C3%BAtbol_de_Uruguay","Selecci%C3%B3n_de_f%C3%BAtbol_de_Brasil","7_de_noviembre","China","9_de_noviembre","14_de_noviembre","Espa%C3%B1a","Rep%C3%BAblica_%C3%81rabe_Saharaui_Democr%C3%A1tica","15_de_noviembre","Rep%C3%BAblica_Turca_del_Norte_de_Chipre","Chipre","16_de_noviembre","Haw%C3%A1i","17_de_noviembre","M%C3%A9xico","Ej%C3%A9rcito_Zapatista_de_Liberaci%C3%B3n_Nacional","Costa_Rica","Luis_Alberto_Monge_%C3%81lvarez","27_de_noviembre","Madrid","Boeing_747","Avianca","Aeropuerto_de_Par%C3%ADs-Charles_de_Gaulle","Aeropuerto_Internacional_El_Dorado","Vuelo_11_de_Avianca","Jorge_Ibarg%C3%BCengoitia","Manuel_Scorza","30_de_noviembre","Buenos_Aires","Dictadura_c%C3%ADvicomilitar_argentina_(1976-1983)","Cristino_Nicolaides","Juan_Jaime_Cesio","Archipi%C3%A9lago_de_Chagos","4_de_diciembre","Venezuela","Jaime_Lusinchi","Elecciones_presidenciales_de_Venezuela_de_1983","Caso_Marey","7_de_diciembre","Aeropuerto_de_Madrid-Barajas","Madrid","Iberia_LAE","Aviaco","8_de_diciembre","San_Miguel_de_Tucum%C3%A1n","Provincia_de_Tucum%C3%A1n","Argentina","Canal_8_(Tucum%C3%A1n)","9_de_diciembre","Sitio_de_pruebas_at%C3%B3micas_de_Nevada","Las_Vegas","Bomba_at%C3%B3mica","Kilotones","10_de_diciembre","Argentina","Ra%C3%BAl_Alfons%C3%ADn","Dictadura_Militar_(1976-1983)","Ra%C3%BAl_Alfons%C3%ADn","13_de_diciembre","NBA","Denver_Nuggets","Detroit_Pistons","Detroit_Pistons","NBA","14_de_diciembre","Chile","Frente_Patri%C3%B3tico_Manuel_Rodr%C3%ADguez","Partido_Comunista_de_Chile","Apag%C3%B3n_el%C3%A9ctrico","Augusto_Pinochet","Medell%C3%ADn","Colombia","Boeing_707","Avianca_Cargo","Aeropuerto_Olaya_Herrera","17_de_diciembre","Madrid","Discoteca","Alcal%C3%A1_20","Londres","Gran_Breta%C3%B1a","Coche_bomba","IRA","20_de_diciembre","El_Salvador","Constituci%C3%B3n_de_la_Rep%C3%BAblica_de_El_Salvador_de_1983","Asamblea_Constituyente_de_El_Salvador_(1982)","21_de_diciembre","Malta","Estadio_Benito_Villamar%C3%ADn","Sevilla","Eurocopa_1984","22_de_diciembre","Guinea","31_de_diciembre","Brun%C3%A9i","Reino_Unido","Francia","Bomba_(explosivo)","Par%C3%ADs","Marsella","Afganist%C3%A1n","1_de_enero","Daniel_Jarque","2009","Paula_Casta%C3%B1o","2_de_enero","Kate_Bosworth","3_de_enero","Tyra_Misoux","4_de_enero","Kasper_Risg%C3%A5rd","Spencer_Chamberlain","%C3%93liver_Arteaga","5_de_enero","J%C3%BAlia_Almeida","Jon_Moya_Mart%C3%ADn","Ferr%C3%A1n_Corominas","Jos%C3%A9_Aguirre_(futbolista)","7_de_enero","An%C3%ADbal_Arrieta","8_de_enero","Miguel_Aceval","9_de_enero","Manasseh_Ishiaku","Per_Verner_V%C3%A5gan_R%C3%B8nning","Mariano_Acevedo","Alejandro_Ca%C3%B1izares","10_de_enero","David_Elm","11_de_enero","Adrian_Sutil","13_de_enero","Julian_Morris","Giovanni_Visconti_(ciclista)","Z%C3%A9_Castro","Constantino_Ibarra_Navarro","Ra%C3%BAl_Ferro","Chikau_Mansale","14_de_enero","Alan_Bahia","15_de_enero","Jerrod_Laventure","Jermaine_Pennant","Hugo_Viana","Yang_Zhi_(futbolista)","16_de_enero","Emanuel_Pogatetz","Andriy_Rusol","17_de_enero","%C3%81lvaro_Arbeloa","Reinaldo_Alderete","18_de_enero","Samantha_Mumba","Hikaru_Utada","19_de_enero","Hikaru_Utada","20_de_enero","Geovany_Soto","Mari_Yaguchi","Daniel_Di_Tomasso","Yovanny_Arrechea","21_de_enero","Alex_Acker","Maryse_Ouellet","22_de_enero","J%C3%A9ssica_Segura","Frankie_Grande","24_de_enero","Frankie_Grande","Shaun_Maloney","Davide_Biondini","Pablo_S%C3%A1nchez_Alberto","25_de_enero","Gorka_Azkorra","Axel_C%C3%A9dric_Konan","Christopher_Foy","26_de_enero","Gilberto_Mar%C3%ADn","Marek_%C4%8Cech","27_de_enero","Michal_Ordo%C5%A1","28_de_enero","Alessandro_Gazzi","Gianvito_Plasmati","Sandy_(cantante)","30_de_enero","Geraldine_Baz%C3%A1n","Sergi_Breus","31_de_enero","Fabio_Quagliarella","1_de_febrero","Andrew_VanWyngarden","Alessandro_Calvi","2_de_febrero","Ronny_Cede%C3%B1o","3_de_febrero","Younis_Mahmoud","Alexandra_Vivas","4_de_febrero","Miguel_Garcia_(futbolista)","7_de_febrero","Christian_Klien","Federico_Marchetti","Jonathan_Brison","9_de_febrero","Mikel_Arruabarrena","11_de_febrero","Rafael_van_der_Vaart","Huang_Shengyi","Huang_Shengyi","12_de_febrero","Ana_Rucner","13_de_febrero","Anna_Watkins","Antonio_Moreno_S%C3%A1nchez","14_de_febrero","Estefan%C3%ADa_Godoy","Jos%C3%A9_Luis_Tancredi","15_de_febrero","Agustina_Cherri","Philipp_Degen","Rolando_Bianchi","Don_Cowie","Silvia_P%C3%A9rez_Cruz","16_de_febrero","Agyness_Deyn","Alejandra_Silva","Ustaritz_Aldekoaotalora","Emilio_de_Justo","17_de_febrero","Abbey_Brooks","Poppy_Morgan","18_de_febrero","Jermaine_Jenas","Ander_Lafuente","19_de_febrero","Mika_Nakashima","20_de_febrero","Nanae_Aoyama","21_de_febrero","M%C3%A9lanie_Laurent","Franklin_Guti%C3%A9rrez_(beisbolista)","22_de_febrero","Penny_Flame","Emily_Blunt","23_de_febrero","Emily_Blunt","Ahmed_Hossam_Mido","Aziz_Ansari","Ignacio_Aguado","24_de_febrero","Ingemar_Teever","25_de_febrero","Mattias_Mostr%C3%B6m","26_de_febrero","Yamna_Lobos","Pepe_(futbolista)","Erin_McLeod","27_de_febrero","Kate_Mara","Sandra_Hern%C3%A1ndez","28_de_febrero","Thiago_dos_Santos_Costa","1_de_marzo","Lupita_Nyong%27o","Carlos_Abell%C3%A1n","2_de_marzo","Numa_Keneke","Guillermo_Amoedo","Igor_Ant%C3%B3n","Lisandro_L%C3%B3pez","4_de_marzo","Juan_Carlos_Messier","6_de_marzo","Tommaso_Berni","7_de_marzo","Sebasti%C3%A1n_Viera","9_de_marzo","Maite_Perroni","RBD","Roberto_Ferrari","Clint_Dempsey","Carrie_Underwood","10_de_marzo","Carrie_Underwood","Nicol%C3%A1s_Amodio","Natasha_Alam","11_de_marzo","Melissa_(Jeans)","12_de_marzo","Marisol_Gonz%C3%A1lez_(periodista_mexicana)","14_de_marzo","Fabrice_Do_Marcolino","Jordan_Taylor_Hanson","Florencia_Bertotti","15_de_marzo","Florencia_Bertotti","Danielle_Dithurbide","Jean-Jacques_Gosso","17_de_marzo","Stefano_Mancinelli","18_de_marzo","Kyle_Downes","EC3","19_de_marzo","Matthew_Korklan","Ana_Rezende","Jenny_Vargas","20_de_marzo","Carolina_Padr%C3%B3n","Eiji_Kawashima","Rory_Fallon","Michael_Cassidy","22_de_marzo","Miriam_Benoit","23_de_marzo","Panda_(banda_mexicana)","23_de_marzo","Natalia_Jerez","Jos%C3%A9_Amador_Correas","24_de_marzo","Alexei_Eremenko","Santi_Trancho","2015","%C3%81lex_Anwandter","Cristiano_Del_Grosso","Karim_Saidi","25_de_marzo","Javier_G%C3%B3mez_Noya","26_de_marzo","Jonida_Maliqi","27_de_marzo","Igor_Picu%C5%9Fceac","29_de_marzo","Vanessa_Gi%C3%A1como","Efstathios_Aloneftis","Ry%C5%8Dhei_Suzuki","30_de_marzo","Yeom_Ki-hun","1_de_abril","John_Axford","Sergu%C3%A9i_L%C3%A1zarev","Christian_Schulz","2_de_abril","Laura_Carmine","Arthur_Boka","3_de_abril","Ben_Foster_(futbolista)","Ludovic_Butelle","4_de_abril","Toshimitsu_Asai","7_de_abril","Franck_Rib%C3%A9ry","Marcos_Angeleri","Manuel_Antonio_Cardoso","9_de_abril","Soledad_N%C3%BA%C3%B1ez","10_de_abril","Ryan_Merriman","11_de_abril","Eder_Arias","13_de_abril","Claudio_Bravo_(futbolista)","14_de_abril","Armando_Torrea","Simona_La_Mantia","15_de_abril","Matt_Cardle","Alice_Braga","Alice_Braga","16_de_abril","Alex_Ant%C3%B4nio_de_Melo_Santos","17_de_abril","Gal_Alberman","18_de_abril","Jos%C3%A9_Miguel_Torres_Cabrera","Carina_Cruz","Miranda_Kerr","20_de_abril","Miranda_Kerr","21_de_abril","Pawe%C5%82_Bro%C5%BCek","22_de_abril","Ainhoa_Garai","23_de_abril","Leon_Andreasen","24_de_abril","Javier_Jattin","Rados%C5%82aw_Cierzniak","Serhiy_Kr%C3%A1vchenko","Jos%C3%A9_Carlos_Ferreira_Filho","25_de_abril","Oleg_Gusev","Emmeline_Ndongue","26_de_abril","Jos%C3%A9_Mar%C3%ADa_L%C3%B3pez","28_de_abril","Corey_Harrison","29_de_abril","Aco_Stojkov","Semih_%C5%9Eent%C3%BCrk","2_de_mayo","Mon_Laferte","Alessandro_Diamanti","Henry_Cavill","5_de_mayo","Henry_Cavill","Seraf%C3%ADn_Mar%C3%ADn","6_de_mayo","Daniel_Alves","Gabourey_Sidibe","Albert_Acevedo","7_de_mayo","Julio_dos_Santos","Milo_Moir%C3%A9","8_de_mayo","Matt_Willis","Tuto_Pati%C3%B1o","Leire_Ruiz","9_de_mayo","Gilles_M%C3%BCller","Shinya_Aoki","Leandro_Rinaudo","10_de_mayo","David_Barral","Wilmer_Aguirre","Danilo_Portugal","12_de_mayo","Domhnall_Gleeson","Kushida","13_de_mayo","Yaya_Tour%C3%A9","Gr%C3%A9gory_Lemarchal","2007","14_de_mayo","Anah%C3%AD_(cantante)","Amber_Tamblyn","16_de_mayo","Paola_Jara","17_de_mayo","Nicky_Hofs","S%C3%B3nia_Matias","22_de_mayo","Franco_Niell","Zajko_Zeba","Jeremy_Christie","Esm%C3%A9_Kamphuis","23_de_mayo","Ante_Tomi%C4%87_(futbolista)","Heidi_Range","Sugababes","24_de_mayo","Marta_Gonz%C3%A1lez_Liriano","Marco_Crugnola","25_de_mayo","Mario_Bo%C5%BEi%C4%87","2023","26_de_mayo","Demy_de_Zeeuw","27_de_mayo","Khamis_Gadafi","2011","Bobby_Convey","28_de_mayo","Toby_Hemingway","Humberto_S%C3%A1nchez","29_de_mayo","Jean_Makoun","2_de_junio","Leandro_dos_Santos_Branco","Leela_James","3_de_junio","Javiera_Mena","Paty_Sirvent","Pasquale_Foggia","4_de_junio","Emmanuel_Ebou%C3%A9","5_de_junio","Juan_Carlos_Adrianza","2011","6_de_junio","Michael_Krohn-Dehli","Gianna_Michaels","8_de_junio","Kim_Clijsters","Mamoru_Miyano","Pantelis_Kapetanos","9_de_junio","Sergio_Garc%C3%ADa_de_la_Fuente","10_de_junio","Leelee_Sobieski","Kees_Kwakman","Steve_Von_Bergen","12_de_junio","Anja_Rubik","14_de_junio","Louis_Garrel","Mattia_Gavazzi","Anah%C3%AD_de_C%C3%A1rdenas","15_de_junio","Sonya_Chervonsky","Greg_Brunner","Derek_Anderson_(f%C3%BAtbol_americano)","Fernanda_Fuentes","Mike_Harris","M%27bar_N%27Diaye","Diego_Fusaro","Julia_Fischer","Rub%C3%A9n_Sell%C3%A9s","16_de_junio","Jeymmy_Paola_Vargas","Ver%C3%B3nica_Echegui","Kazunari_Ninomiya","17_de_junio","Kazunari_Ninomiya","Arashi_(banda)","Andreu_Guerao","18_de_junio","Antonio_Floro_Flores","19_de_junio","Macklemore","Mark_Selby","Aidan_Turner","Milan_Petr%C5%BEela","20_de_junio","Carolina_Ram%C3%ADrez","21_de_junio","Nadia_Yvonne_L%C3%B3pez_Ayuso","Edward_Snowden","23_de_junio","Jos%C3%A9_Rojas_(futbolista)","Kari_Arkivuo","Juho_M%C3%A4kel%C3%A4","Brandi_Rhodes","Ioannis_Jristu","Miles_Fisher","Pawo_Choyning_Dorji","Javier_Zamudio","24_de_junio","Sof%C3%ADa_Mul%C3%A1novich","Tetsuya_Abe","25_de_junio","Daniele_Gastaldello","Mabel_Moreno","Cristian_Oliveira_Baroni","26_de_junio","Antonio_Rosati","27_de_junio","Lorik_Cana","Jim_Johnson","29_de_junio","Luca_Ascani","30_de_junio","Cheryl_(cantante)","Girls_Aloud","Marcus_Burghardt","1_de_julio","Leeteuk","Super_Junior","Nedzad_Sinanovic","Mar%C3%ADa_In%C3%A9s_Guerra","2_de_julio","Michelle_Branch","4_de_julio","Isabeli_Fontana","Marcela_Kloosterboer","5_de_julio","Marcela_Kloosterboer","Raphael_Nuzzolo","6_de_julio","Gregory_Smith","7_de_julio","Jakub_Wawrzyniak","8_de_julio","Jon_J%C3%B6nsson","Antonio_Mirante","9_de_julio","Miguel_Montero_(beisbolista)","Carmelo_Gonz%C3%A1lez","Kim_Hee-chul","10_de_julio","Kim_Hee-chul","Super_Junior","Gabi_Fern%C3%A1ndez","Jacobo_Sanz","Gemma_Sanderson","11_de_julio","Marie_Eleonor_Serneholt","12_de_julio","Sandi_Gbandi","Reiichi_Ikegami","Ghasem_Hadadifar","Mirsad_Terzi%C4%87","Libania_Grenot","David_Muntaner_Juaneda","Jes%C3%BAs_Tato","13_de_julio","Carmen_Villalobos","Rebeca_Linares","Andrea_Ablasser","14_de_julio","Igor_Andreev","Juan_Guti%C3%A9rrez_(beisbolista)","Milena_Torres","16_de_julio","Katrina_Kaif","Annie_L%C3%B6%C3%B6f","Moussa_Sanogo","17_de_julio","Joker_Xue","Marco_N%C3%A9","18_de_julio","Carlos_Diogo","Karolina_Kowalczyk","18_de_julio","21_de_julio","Johnny_Acosta","22_de_julio","Arsenie_Todira%C5%9F","Ander_Murillo","Aldo_de_Nigris","Igone_Arribas","Aldemar_Correa","24_de_julio","Daniele_De_Rossi","Ivan_Stoyanov","Asami_Mizukawa","26_de_julio","Shinya_Aikawa","Juan_Andr%C3%A9s_Tejera","27_de_julio","Lorik_Cana","Goran_Pandev","Kubbra_Sait","30_de_julio","Cristian_Molinaro","Mariano_And%C3%BAjar","Daniel_Gim%C3%A9nez_Hern%C3%A1ndez","Andr%C3%A9_Luiz_Tavares","1_de_agosto","J_Soul_Brothers","Natalia_Siwiec","2_de_agosto","Michel_Bastos","Am%C3%ADlcar_Henr%C3%ADquez","3_de_agosto","Mamie_Gummer","4_de_agosto","Yuka_Terasaki","Benjamin_Donegan","Nathaniel_Buzolic","5_de_agosto","Kara_Tointon","Gabriel_Fr%C3%ADas-S%C3%A1nchez_Seco","Hicham_Mahdoufi","Jeff_Larentowicz","Gl%C3%A1uber","6_de_agosto","Robin_van_Persie","Loreto_Aravena","7_de_agosto","Christian_Ch%C3%A1vez","RBD","Andri_Hrivko","Mario_Camacho","Danny_Alves","Jan_Hajek","Tina_O%27Brien","Dalidaivis_Rodr%C3%ADguez","Diana_Aguavil","Leandro_Guilheiro","8_de_agosto","Mario_D%27Amico","Ryan_Cochrane_(futbolista)","Bastian_Knittel","9_de_agosto","Issoumaila_Dao","Ashley_Johnson","10_de_agosto","Alessandro_Viana_da_Silva","Jonathan_Maicelo","Chris_Hemsworth","11_de_agosto","Chris_Hemsworth","12_de_agosto","Klaas-Jan_Huntelaar","13_de_agosto","Loris_Facci","%C4%BDubom%C3%ADr_Michal%C3%ADk","Diego_Cervero","14_de_agosto","Marimar_Vega","Manuela_Bol%C3%ADvar","Mila_Kunis","Elena_Baltacha","2014","Heiko_Westermann","Lu_Yen-hsun","Vanina_Correa","Lauren_Sesselmann","Sunidhi_Chauhan","Spencer_Pratt","Shwan_Jalal","Sebasti%C3%A1n_Marchant","16_de_agosto","Francini_Amaral","Dante_L%C3%B3pez","18_de_agosto","Mika_(cantante)","Kris_Boyd","19_de_agosto","Kassaly_Daouda","Peter_Mooney","Andrew_Garfield","20_de_agosto","Andrew_Garfield","Yuri_Zhirkov","Brody_Jenner","21_de_agosto","Aar%C3%B3n_Bueno","Juan_%C3%81lvez","Brody_Jenner","23_de_agosto","Camila_Rodrigues","James_Collins","24_de_agosto","Martha_Higareda","Leandro_Domingues_Barbosa","Marcela_G%C3%A1ndara","25_de_agosto","Jairo_Arrieta","Marcelo_Aguirre","26_de_agosto","Mattia_Cassani","27_de_agosto","Felice_Piccolo","Jamala","28_de_agosto","Alfonso_Herrera_(actor)","Christian_Pander_(futbolista)","29_de_agosto","Xabi_Prieto","30_de_agosto","Jonne_Aaron","Jun_Matsumoto","Simone_Pepe","31_de_agosto","Milan_Bi%C5%A1evac","1_de_septiembre","Jos%C3%A9_Antonio_Reyes","2019","Paul_Verhaegh","2_de_septiembre","Vanessa_Claudio","Daniela_Stracchi","Roberto_Urbina","3_de_septiembre","Alexander_Klaws","Cristian_Fabbiani","Augusto_Farfus","Nicky_Hunt","5_de_septiembre","Jimena_Araya","6_de_septiembre","Pejman_Montazeri","Braun_Strowman","Andre_Silva","8_de_septiembre","Diego_Benaglio","9_de_septiembre","Alex_Romero_(beisbolista)","Vitolo_A%C3%B1ino","Jana_Miartusova","I%C3%B1aki_Aguilar","Eleidy_Aparicio","10_de_septiembre","J%C3%A9r%C3%A9my_Toulalan","Joey_Votto","12_de_septiembre","Antonio_Ayala_Soler","Francisco_Ar%C3%A9valo","13_de_septiembre","James_Bourne","Fran%C3%A7ois_Zoko","14_de_septiembre","Cristina_Hurtado","Amy_Winehouse","Amy_Winehouse","2011","Francisco_Javier_Solar_Gonz%C3%A1lez","Mohammad_Reza_Khalatbari","15_de_septiembre","Tom%C3%A1%C5%A1_Sivok","16_de_septiembre","Marina_San_Jos%C3%A9","17_de_septiembre","Jennifer_Pe%C3%B1a","Knox_Cameron","Christian_Yeladian","19_de_septiembre","Ryosuke_Amo","20_de_septiembre","Carolina_Jaramillo","Jessica_Alonso_(deportista)","Jo%C3%ABl_Retornaz","21_de_septiembre","Maggie_Grace","Anna_Favella","Cristian_Hidalgo","%C3%89der_Monteiro_Fernandes","Scott_Evans","Fernando_Cavenaghi","Joseph_Mazzello","22_de_septiembre","William_Xavier_Barbosa","Glenn_Loovens","23_de_septiembre","Richard_Spong","25_de_septiembre","Donald_Glover","26_de_septiembre","Ricardo_Quaresma","27_de_septiembre","Germ%C3%A1n_Alemanno","28_de_septiembre","Alessandra_Galiotto","Brooke_Banner","29_de_septiembre","Bryan_Aldave","1_de_octubre","Eliseu_Pereira","Robert_Stone","3_de_octubre","Kim_Jae-sung","Tessa_Thompson","4_de_octubre","Kurt_Suzuki","Jesse_Eisenberg","5_de_octubre","Jesse_Eisenberg","Nicky_Hilton","Alexi_Ogando","Noot_Seear","Juan_Manuel_Vargas","Ebert_William_Am%C3%A2ncio","Jadson","6_de_octubre","Asier_Riesgo","David_Limbersk%C3%BD","8_de_octubre","Eduardo_Ferreira_(futbolista)","9_de_octubre","Ana_Katalina_Torres","10_de_octubre","Lzzy_Hale","11_de_octubre","Bradley_James","15_de_octubre","Bruno_Senna","Andreas_Ivanschitz","16_de_octubre","Loreen_(cantante)","Kenny_Omega","17_de_octubre","Felicity_Jones","Yu_Eto","19_de_octubre","Rebecca_Ferguson_(actriz)","Adrie_Visser","Takayuki_Yamada","20_de_octubre","Takayuki_Yamada","Flavio_Cipolla","Michel_Vorm","21_de_octubre","Javier_Alfonso_Cend%C3%B3n","Zack_Greinke","Aaron_Tveit","22_de_octubre","Je-Vaughn_Watson","David_Barlow","24_de_octubre","Katie_McGrath","Adrienne_Bailon","Adrienne_Bailon","Mario_Espitia","Laura_Rojas_Godoy","Shiva_N%27Zigou","25_de_octubre","Daniele_Mannini","Stanislav_Bohush","26_de_octubre","Dmitri_Sychov","27_de_octubre","Mart%C3%ADn_Prado","Tanya_James","Yaqoub_Al_Taher","28_de_octubre","Taras_Mij%C3%A1lik","Reinier_Honig","29_de_octubre","Dana_Eveland","J%C3%A9r%C3%A9my_Mathieu","Johnny_Lewis","2012","30_de_octubre","Chelsea_Cooley","Ahmad_Hayel","31_de_octubre","Jorge_Miguel_Dias_Gon%C3%A7alves","1_de_noviembre","Pedro_L%C3%B3pez_Mu%C3%B1oz","V%C3%A1clav_Sv%C4%9Brko%C5%A1","Micaela_Sch%C3%A4fer","2_de_noviembre","Andreas_Bourani","Pia_Miller","Marianne_Schaller","Fred_Rosser","3_de_noviembre","Cho_Yong-hyung","Fininho","Jorge_Mart%C3%ADnez_Ramos_(futbolista_uruguayo)","Kyle_Reynish","4_de_noviembre","Javito","Ibrahim_Aldatov","5_de_noviembre","I%C3%B1aki_Astiz","Mike_Hanke","6_de_noviembre","Ubay_Luzardo","Francisca_Almeida","Monica_Mattos","Sh%C5%8Dma_Yamamoto","Gisela_Jo%C3%A3o","Konstantinos_Konstantinidis","Sheryl_Morgan","Jon_Hume","Nicole_Hosp","Jana_%C5%A0mid%C3%A1kov%C3%A1","7_de_noviembre","Alberto_Casado","Ibson_Barreto_da_Silva","Juli%C3%A1n_Kartun","8_de_noviembre","Remko_Pasveer","P%C3%A1vel_Pogrebniak","Blanka_Vla%C5%A1i%C4%87","Sebasti%C3%A1n_Soria","Chris_Rankin","9_de_noviembre","Tuuli_Pet%C3%A4j%C3%A4","10_de_noviembre","Marius_%C5%BDali%C5%ABkas","2020","Konstant%C4%ABns_Ov%C4%8Di%C5%86%C5%86ikovs","11_de_noviembre","Philipp_Lahm","Matteo_Bono","Arouna_Kon%C3%A9","Leon_Benko","Dinei","Y%C5%8Dhei_Nakada","12_de_noviembre","Angelo_da_Costa_J%C3%BAnior","Leonardo_Rivero","13_de_noviembre","Kalle_Kriit","14_de_noviembre","Kevon_Carter","2014","Michala_Hartigov%C3%A1","15_de_noviembre","Arnold_Origi","John_Heitinga","Juan_Manuel_Quevedo","Agust%C3%ADn_Bossio","Fernando_Verdasco","Sophia_Di_Martino","Aleksandar_Pavlovi%C4%87","Imanol_Erviti","Veli-Matti_Lindstr%C3%B6m","17_de_noviembre","Ryan_Braun","Viva_Bianca","Nick_Markakis","Christopher_Paolini","Lu%C3%ADs_Alberto","Shannan_Click","Juli%C3%A1n_Vara","Harry_Lloyd","Pablo_Barzola","Dimity-Lee_Duke","Julia_Berezikova","Ioannis_Bourousis","Fernando_Pag%C3%A9s","18_de_noviembre","Anetta_Keys","19_de_noviembre","Yoon_A-jung","Anne_Krohn","Adam_Driver","Future_(rapero)","20_de_noviembre","Future_(rapero)","Dele_Aiyenugba","Lu%C3%ADs_Augusto_Os%C3%B3rio_Rom%C3%A3o","Lucia_Klocov%C3%A1","Muhammad_Essa","21_de_noviembre","The_Bella_Twins","22_de_noviembre","Miguel_Escalona","Yuya_Funatsu","Peter_Niemeyer","23_de_noviembre","Gast%C3%B3n_Dalmau","Yoichi_Akiba","Nasser_Al-Shamrani","Kamilla_Rytter_Juhl","24_de_noviembre","Dean_Ashton","Jos%C3%A9_Celestino_L%C3%B3pez","Andr%C3%A9_Bahia","Pitu_Comadevall","25_de_noviembre","Paty_Cant%C3%BA","C%C3%A1ssio_Vargas","Andrius_Pojavis","Fernando_Henrique_dos_Anjos","26_de_noviembre","Banaken_Bassoken","2023","27_de_noviembre","Professor_Green","Milo%C5%A1_Pavlovi%C4%87_(futbolista)","Miguel_%C3%81ngel_Perera","28_de_noviembre","Nelson_Haedo_Valdez","Carlos_Villanueva_(beisbolista)","Carlos_Rafael_do_Amaral","Suzie_Carina","Deniss_Kozlovs","29_de_noviembre","Albert_Bunjaku","30_de_noviembre","Carla_Nieto","Adrian_Cristea","David_Carney","Marquem_Gon%C3%A7alves_Ferreira","1_de_diciembre","Alex_Snowden","Michelle_Rodr%C3%ADguez_(actriz_mexicana)","Sh%C5%8Dhei_Abe","2_de_diciembre","Ana_Luc%C3%ADa_Dom%C3%ADnguez","Emerson_Rodr%C3%ADguez","4_de_diciembre","Irene_Schori","7_de_diciembre","Andr%C3%A9s_D%C3%ADaz","Jacopo_Giachetti","8_de_diciembre","Val%C3%A9ry_M%C3%A9zague","2014","Ana_Victoria","Marco_Padalino","Andrea_Guerrero","Shingo_Akamine","Neel_Jani","9_de_diciembre","Dariusz_Dudka","Adolphe_Tohoua","Jermaine_Beckford","10_de_diciembre","Z%C3%A9_Kalanga","No%C3%A9_Acosta","Katrin_Siska","Derek_Malas","Mahdi_Karim","Shefali_Alvares","12_de_diciembre","Johan_Audel","Thomas_Rabou","13_de_diciembre","Douglas_David_Fernandes","Otylia_Jedrzejczak","Yusuke_Inuzuka","Kenji_Tanaka","Janeth_Jepkosgei","14_de_diciembre","%C3%8D%C3%B1igo_Errej%C3%B3n","St%C3%A9phanie_Frappart","15_de_diciembre","Ronnie_Radke","Ren%C3%A9_Rom%C3%A1n_Hinojo","Daniel_Mariano_Bueno","Zlatan_Ljubijanki%C4%87","16_de_diciembre","Francesco_Failli","17_de_diciembre","Chelsea_Manning","Phara_Anacharsis","18_de_diciembre","Janez_Brajkovi%C4%8D","19_de_diciembre","Mia_Rosing","Benjamin_De_Ceulaer","Nektarios_Alexandrou","20_de_diciembre","Jonah_Hill","Lucy_Pinder","Lara_Stone","Takuma_Terashima","Ognjen_Vukojevi%C4%87","21_de_diciembre","Luis_Ernesto_Franco","Misa_Uehara","Steven_Yeun","22_de_diciembre","Laura_Caro","Tatsunori_Arai","Jos%C3%A9_Fonte","Jennifer_Hawkins","Luke_Gallows","Ignacio_Gonz%C3%A1lez_Bar%C3%B3n","23_de_diciembre","Mili_Jay","Lisa_Dobriskey","24_de_diciembre","Valeria_Bringas","Gregor_Blanco","Irene_Fornaciari","Alla_Lyshafay","Ariel_Bogado","27_de_diciembre","Mat%C3%BA%C5%A1_Koz%C3%A1%C4%8Dik","28_de_diciembre","%C3%81lvaro_Ant%C3%B3n","Felipe_Colombo_Egu%C3%ADa","Felipe_Colombo_Egu%C3%ADa","29_de_diciembre","Gonzalo_Olave","2009","Anderson_Gonzaga","Jessica_Andrews","30_de_diciembre","Yussif_Chibsah","31_de_diciembre","Alejandra_Fuentes","Ux%C3%BAa_L%C3%B3pez","Anita_Sarkeesian","6_de_enero","Salvador_Garc%C3%ADa_Aguilar","Premio_Nadal","El_color_de_la_magia","Mundodisco","Terry_Pratchett","Los_escarabajos_vuelan_al_atardecer","Mar%C3%ADa_Gripe","Gr%C3%A1ficos_por_computadora","10_de_enero","21_de_julio","Base_Vostok","Ant%C3%A1rtida","Tierra","10_de_noviembre","Microsoft","Microsoft_Windows","Windows_1.0","CERN","Bosones_W_y_Z","Sequential_Circuits","MIDI","Microsoft","MSX","Nintendo","Famicom","NES","La_Pulga","La_Pulga","Edad_de_oro_del_software_espa%C3%B1ol","Nintendo","Mario_Bros.","Donkey_Kong_3","Juventus","Juegos_Panamericanos_de_1983","Caracas","Venezuela","F%C3%BAtbol_Club_Barcelona_(baloncesto)","Liga_Espa%C3%B1ola_de_Baloncesto_(1957-1983)","F%C3%BAtbol_Club_Barcelona_(baloncesto)","Copa_del_Rey_de_Baloncesto","Campeonato_del_Mundo_de_Atletismo","Helsinki","Finlandia","F%C3%BAtbol_Club_Barcelona_(hockey_sobre_patines)","Copa_de_Europa_de_Hockey_sobre_patines","Bal%C3%B3n_de_Oro","France_Football","Michel_Platini","Juventus","Sporting_Cristal","Liga_peruana_de_f%C3%BAtbol","Campeonato_Uruguayo_de_F%C3%BAtbol","Club_Nacional_de_Football","Campeonato_Argentino_de_F%C3%BAtbol","Club_Estudiantes_de_La_Plata","Campeonato_Argentino_de_F%C3%BAtbol","22_de_diciembre","Club_Atl%C3%A9tico_Independiente","Racing_Club","F%C3%BAtbol_Profesional_Colombiano","Corporaci%C3%B3n_Deportiva_Am%C3%A9rica","Serie_A_de_Ecuador","Club_Deportivo_El_Nacional","Primera_Divisi%C3%B3n_de_Chile","Club_Social_y_Deportivo_Colo-Colo","Divisi%C3%B3n_Mayor_del_B%C3%A1squetbol_de_Chile","Club_Deportivo_Universidad_Cat%C3%B3lica","M%C3%A9xico","Club_Santos_Laguna","F%C3%B3rmula_1","Nelson_Piquet","Lista_de_campeones_de_F%C3%B3rmula_1","Scuderia_Ferrari","Campeonato_Mundial_de_Rally","Hannu_Mikkola","Audi_Quattro","Rally_Dakar","Jacky_Ickx","NASCAR","Bobby_Allison","Buick_Regal","Championship_Auto_Racing_Teams","Al_Unser","Team_Penske","Cosworth","500_Millas_de_Indian%C3%A1polis","Tom_Sneva","March_Engineering","Cosworth","Turismo_Carretera","Roberto_Mouras","Dodge_GTX","Turismo_Competici%C3%B3n_2000","Luis_Rub%C3%A9n_Di_Palma","VW_1500","Abierto_de_Australia","Mats_Wilander","Ivan_Lendl","Martina_Navratilova","Kathy_Jordan","Torneo_de_Roland_Garros","Yannick_Noah","Mats_Wilander","Chris_Evert","Mima_Jausovec","Campeonato_de_Wimbledon","John_McEnroe","Chris_Lewis","Martina_Navratilova","Andrea_Jaeger","Abierto_de_los_Estados_Unidos","Jimmy_Connors","Ivan_Lendl","Martina_Navratilova","Chris_Evert","8_de_abril","Gandhi_(pel%C3%ADcula)","Premio_%C3%93scar","A_Christmas_Story","Bob_Clark","Cujo_(pel%C3%ADcula)","Lewis_Teague","Cujo","Stephen_King","El_sentido_de_la_vida","Monty_Python","Der_Vierde_Man","Paul_Verhoeven","La_fuerza_del_cari%C3%B1o","James_L._Brooks","Premio_%C3%93scar","Shirley_MacLaine","Jack_Nicholson","La_guerra_de_las_galaxias","Richard_Marquand","George_Lucas","Star_Wars","Octopussy_(pel%C3%ADcula)","James_Bond","Roger_Moore","Risky_Business","Tom_Cruise","Scarface_(pel%C3%ADcula_de_1983)","Brian_De_Palma","Al_Pacino","Michelle_Pfeiffer","Remake","Scarface_(pel%C3%ADcula_de_1932)","Superman_III","Richard_Lester","Christopher_Reeve","Richard_Pryor","Tibur%C3%B3n_3-D","Joe_Alves","The_Outsiders_(pel%C3%ADcula)","Francis_Ford_Coppola","Joe_Dante","Steven_Spielberg","John_Landis","George_Miller","Vic_Morrow","Hollywood","Zelig","Woody_Allen","Madonna","Stryper","Bon_Jovi","Peor_Impossible","Megadeth","Red_Hot_Chili_Peppers","NOFX","AC/DC","Accept","Air_Supply","Greatest_Hits_(%C3%A1lbum_de_Air_Supply)","Making_Love_Out_of_Nothing_at_All","Alan_Parsons_Project","Ammonia_Avenue","Alaska_y_Dinarama","Alejandro_Lerner","Todo_a_pulm%C3%B3n","Asia_(banda)","Alpha_(%C3%A1lbum_de_Asia)","Bad_Brains","Rock_for_Light","Bad_Religion","Into_the_Unknown_(%C3%A1lbum_de_Bad_Religion)","Bar%C3%B3n_Rojo_(banda)","Metalmorfosis","Barricada_(banda)","Billy_Idol","Rebel_Yell","Billy_Joel","An_Innocent_Man_(%C3%A1lbum_de_Billy_Joel)","Bob_Dylan","Infidels","Bryan_Adams","Cuts_Like_a_Knife","Cadillac_(banda)","Camilo_Sesto","Con_ganas","Chaos_UK","Charly_Garc%C3%ADa","Clics_Modernos","Cheap_Trick","Culture_Club","Cyndi_Lauper","She%27s_So_Unusual","Daniela_Romo","Daniela_Romo_(%C3%A1lbum)","David_Bowie","Let%27s_Dance_(%C3%A1lbum_de_David_Bowie)","Def_Leppard","Pyromania","Depeche_Mode","Construction_Time_Again","Die_Toten_Hosen","Opel-Gang","Dio","Holy_Diver","Dirty_Rotten_Imbeciles","Dirty_Rotten_EP","Donna_Summer","She_Works_Hard_for_the_Money","Duran_Duran","Eskorbuto","Jodi%C3%A9ndolo_todo","Eurythmics","Sweet_Dreams_(Are_Made_of_This)_(%C3%A1lbum)","Eva_Ayll%C3%B3n","Flashdance_(pel%C3%ADcula)","Gato_P%C3%A9rez","Genesis","Iron_Maiden","Piece_of_mind","Jean-Michel_Jarre","Joan_Manuel_Serrat","Cada_loco_con_su_tema","Jos%C3%A9_Jos%C3%A9","Secretos_(%C3%A1lbum_de_Jos%C3%A9_Jos%C3%A9)","Journey","Frontiers","Julio_Iglesias","Kiss","La_Polla_Records","Les_Luthiers","Lionel_Richie","Can%27t_Slow_Down_(%C3%A1lbum_de_Lionel_Richie)","Los_Chichos","Los_Violadores","Luc%C3%ADa_M%C3%A9ndez_(actriz)","Enamorada_(%C3%A1lbum_de_Luc%C3%ADa_M%C3%A9ndez)","Madonna_(cantante)","Madonna_(%C3%A1lbum)","Mar%C3%ADa_Jim%C3%A9nez","Mazap%C3%A1n_(grupo_musical)","Mecano_(grupo)","%C2%BFD%C3%B3nde_est%C3%A1_el_pa%C3%ADs_de_las_hadas%3F_(%C3%A1lbum)","Melissa_Griffiths","Metallica","Kill_%27Em_All","25_de_julio","Miami_Sound_Machine","Mike_Oldfield","Crises_(%C3%A1lbum_de_Mike_Oldfield)","Minor_Threat","Out_of_Step","M%C3%B6tley_Cr%C3%BCe","Shout_at_the_Devil","99_Luftballons","New_Order","Power,_Corruption_%26_Lies","Ozzy_Osbourne","Paul_McCartney","Peter_Schilling","Major_Tom_(Coming_Home)","Pink_Floyd","Pink_Floyd","Quiet_Riot","Metal_Health","Richard_Clayderman","Righeira","Ringo_Starr","Ritchie","Roberto_Blades","Roberto_Carlos_(cantante)","Rod_Stewart","Sentimiento_Muerto","Siniestro_Total","Siouxsie_And_The_Banshees","Slayer","Stevie_Ray_Vaughan","Suicidal_Tendencies","Talking_Heads","Speaking_in_Tongues","The_Police","Synchronicity_(%C3%A1lbum)","The_Rolling_Stones","The_Misfits","UB40","Uriah_Heep","U2","War_(%C3%A1lbum_de_U2)","V8_(banda)","Luchando_por_el_metal","Vangelis","Antarctica","Yazoo","You_and_Me_Both","Yola_Polastry","Yuri_(cantante)","ZZ_Top","23_de_abril","Festival_de_la_Canci%C3%B3n_de_Eurovisi%C3%B3n_1983","Festival_de_la_Canci%C3%B3n_de_Eurovisi%C3%B3n","M%C3%BAnich","Alemania_Occidental","Corinne_Herm%C3%A8s","Si_la_vie_est_cadeau","Luxemburgo_en_el_Festival_de_la_Canci%C3%B3n_de_Eurovisi%C3%B3n","Televisi%C3%B3n_en_1983","Premios_Nobel","Subrahmanyan_Chandrasekhar","William_Alfred_Fowler","Henry_Taube","Premio_Nobel_de_Medicina","Barbara_McClintock","William_Golding","Lech_Wa%C5%82%C4%99sa","Premio_Nobel_de_Econom%C3%ADa","Gerard_Debreu","Premios_Pr%C3%ADncipe_de_Asturias","Premio_Pr%C3%ADncipe_de_Asturias_de_las_Artes","Eusebio_Sempere","Premio_Pr%C3%ADncipe_de_Asturias_de_Ciencias_Sociales","Julio_Caro_Baroja","Premio_Pr%C3%ADncipe_de_Asturias_de_Comunicaci%C3%B3n_y_Humanidades","El_Pa%C3%ADs","Premio_Pr%C3%ADncipe_de_Asturias_de_Cooperaci%C3%B3n_Internacional","Belisario_Betancur","Premio_Pr%C3%ADncipe_de_Asturias_de_Investigaci%C3%B3n_Cient%C3%ADfica_y_T%C3%A9cnica","Luis_Antonio_Santal%C3%B3_Sors","Premio_Pr%C3%ADncipe_de_Asturias_de_las_Letras","Juan_Rulfo","Premio_Cervantes","Rafael_Alberti","Wayback_Machine","Control_de_autoridades","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel"]}
{"url":"C%2B%2B20","titulo":"C++20","contenido":"El lenguaje de programacion C++ esta estandarizado por ISO/IEC, quienes publican una revision cada 3 a\u00f1os desde 2011.  C++20 es el nombre de la revision del a\u00f1o 2020, que sigue a C++17.\u200b  La proxima revision sera C++23.  El estandar quedo tecnicamente concluido por WG21 en la reunion en Praga en febrero de 2020\u200b\u200b y paso la aprobacion final el 4 de septiembre de 2020.\u200b\u200b\u200b  En octubre de 2020 se encontraba en la etapa de trabajo editorial final.  C++20 a\u00f1ade mas caracteristicas importantes que C++14 o C++17.\u200b Abajo se listan algunas de estas caracteristicas.\u200b  C++20 introdujo muchas caracteristicas nuevas, siendo la version que mas cambios introdujo en el lenguaje. Las siguientes listas solo mencionan algunas de estas caracteristicas.  El articulo Descripcion de las nuevas caracteristicas de C++20 profundiza en su descripcion.  De la multitud de cambios introducidos, cuatro caracteristicas largamente esperadas y potencialmente transformadoras, conocidas como the big four,\u200b se destacan sobre el resto:  Estas caracteristicas nuevas se repiten en las siguientes listas mas completas.  Novedades en el lenguaje:  Novedades en la biblioteca estandar:  Algunas palabras clave nuevas en C++20:  Aquellas partes mayores que implican un gran trabajo de especificacion se llevan a cabo de forma desacoplada de las versiones de C++ , y manejan su propio calendario.  Estos trabajos se conocen como \"Especificaciones Tecnicas\" abreviados TS (Technical Specification).  Se espera que formen parte de C++23.  Una de las etapas en la preparacion de cada version consiste en determinar que caracteristicas solicitadas se incluyen en la version actual, y cuales se postergan.  La postergacion de una caracteristica no asegura su inclusion en la version siguiente ni garantiza que alguna vez sea lanzada.  Una caracteristica postergada sigue recibiendo atencion, y su inclusion en una version depende, entre otras cosas, del estado de avance de su especificacion.  Entre las caracteristicas reprogramadas es comun encontrar aquellas que cuentan con su propia especificacion tecnica (lo que implica que siguen su propio calendario de especificacion).  Algunas caracteristicas reprogramadas\u02d0  En el pasado los compiladores comenzaban a soportar parcialmente una version de C++ a partir del momento de su publicacion.  En la actualidad los desarrolladores de compiladores importantes se anticipan al estandar final implementando soporte experimental para varias caracteristicas a partir de los borradores. ","snippet":"El lenguaje de programacion C++ esta estandarizado por ISO/IEC, quienes publican una revision cada 3 a\u00f1os desde 2011.  C++20 es el nombre de la revision del a\u00f1o 2020, que sigue a C++17.\u200b  La proxima r","enlaces_salientes":["C%2B%2B20","C%2B%2B20","C%2B%2B20","C%2B%2B","C%2B%2B17","C%2B%2B23","C%2B%2B14","Conceptos_(C%2B%2B)","M%C3%B3dulos_(C%2B%2B)","Corrutina_(C%2B%2B)","Generador_(inform%C3%A1tica)","Standard_Template_Library","Conceptos_(C%2B%2B)","M%C3%B3dulos_(C%2B%2B)","C99","GNU_Compiler_Collection","Complemento_a_dos","Comportamiento_indefinido","Corrutina_(C%2B%2B)","C%2B%2B23","Metaclase","Clang","GNU_Compiler_Collection","Microsoft_Visual_Studio","C%2B%2B","C%2B%2B","C%2B%2B11","C%2B%2B14","C%2B%2B17","C%2B%2B23","International_Organization_for_Standardization","Control_de_autoridades"]}
{"url":"C%2B%2B23","titulo":"C++23","contenido":"C++23 es el nombre informal para la revision de la ISO/IEC el estandar para el lenguaje de programacion C++ que sigue a la revision C++20. El borrador actual es N4878.\u200b  Se estima que la version sucesora sera C++26.  En febrero de 2020, en la reunion final para C++20 en Praga, se adopto un plan global para C++23:\u200b\u200b  La primera reunion WG21 centrado en C++23 estaba planeada para junio de 2020 en Varna, pero se cancelo debido a la pandemia de COVID-19,\u200b igual que la reunion de noviembre de 2020 en Nueva York\u200b\u200b y la reunion en Kona, Hawai en febrero de 2021 .  Es poco probable que haya una reunion presencial antes de que 2022.\u200b  Mientras tanto se llevan a cabo reuniones virtuales.  Las principales caracteristicas esperadas para C++23, incluyendo algunas postergadas que no lograron entrar en C++20, son:    Esta lista no esta necesariamente confirmada para C++23, algunas caracteristicas podrian postergarse para C++26, o incluso ser abandonadas.  En la ausencia de reuniones presenciales WG21, pocas caracteristicas nuevas se han a\u00f1adido al borrador de C++23.  Pero las siguientes se agregaron luego de la reunion virtual de WG21 del 9 de noviembre de 2020, en la que se aprobaron mediante encuestas:\u200b  La gran mayoria de las caracteristicas nuevas responden a un plan de largo plazo para habilitar mejores formas de programacion.  Las tecnologias que habilitan estas nuevas formas de programar no suelen centrarse en una caracteristica nueva sino en un conjunto de ellas, que se implementan de a poco en diferentes versiones de C++.  C++20 es la version que mas cambios transformadores ha introducido, con la introduccion de modulos, corrutinas, rangos y conceptos como ejemplos prominentes.  A modo de ejemplo, rangos es la consumacion de una serie de caracteristicas que se fueron a\u00f1adiendo paulatinamente desde C++11.  No se espera que C++23 tenga el mismo impacto, pero ya se vislumbran algunas de las tecnologias generales que se podrian habilitar en esa version:  C++ tiende a facilitar la escritura indirecta de clases:\u200b en lugar de escribir el codigo de la clase, se podra escribir codigo para metaclases que funcione como una fabrica de clases en tiempo de compilacion.  La definicion plantillada de clases opera en este sentido, C++ avanza hacia la posibilidad de escribir codigo claro en funciones y expresiones constantes (ejecutadas en tiempo de compilacion) para un control preciso en la definicion de clases.  Las caracteristicas involucradas son:  Algunas de estas caracteristicas tienen fuerte base en Conceptos, introducidos en C++20.  Algunas de las aplicaciones de los ejecutores que se estan desarrollando para C++23:  La posibilidad de lanzar porciones de codigo ejecutable en otros nucleos (incluso en otras maquinas en red) de manera eficiente inspira el desarrollo de estas caracteristicas:\u200b  C++20 introdujo modulos, la primera alternativa real para #include.  Sin embargo la propia biblioteca estandar no ha sido modularizada todavia, lo que esta previsto para C++23.  No se vislumbra la eliminacion del preprocesador, que por ahora sigue siendo una pieza fundamental de C++, pero si se reconoce el esfuerzo por presentar una alternativa completa para proyectos nuevos.  El preprocesador sera necesario siempre que se usen bibliotecas antiguas, y se podra prescindir con bibliotecas renovadas basadas en modulos.  En la proxima decada se preve una atenuacion pronunciada del uso del preprocesador.  Los modulos no importan macros, lo que presenta un inconveniente en funciones basadas en ellas, como assert<>.  Muchas macros se pueden reemplazar por funciones constantes, ejecutadas en tiempo de compilacion.  Estas son algunas caracteristicas que contribuyen a evitar el preprocesador: ","snippet":"C++23 es el nombre informal para la revision de la ISO/IEC el estandar para el lenguaje de programacion C++ que sigue a la revision C++20. El borrador actual es N4878.\u200b  Se estima que la version suces","enlaces_salientes":["C%2B%2B23","C%2B%2B23","C%2B%2B23","C%2B%2B","C%2B%2B20","C%2B%2B20","Varna_(Bulgaria)","Pandemia_de_COVID-19","Nueva_York","Corrutina","Archivo_de_cabecera","M%C3%B3dulos_(C%2B%2B)","Reflexi%C3%B3n_(inform%C3%A1tica)","Metaclase","Valor_futuro_(inform%C3%A1tica)","Bibliotecas_Boost","C_(lenguaje_de_programaci%C3%B3n)","C_(lenguaje_de_programaci%C3%B3n)","M%C3%B3dulos_(C%2B%2B)","Corrutina_(C%2B%2B)","Conceptos_(C%2B%2B)","Arquitectura_de_microservicios","Computaci%C3%B3n_concurrente","GPU","Conexionismo","M%C3%B3dulos_(C%2B%2B)","Control_de_autoridades"]}
{"url":"C%2B%2B_Builder","titulo":"C++Builder","contenido":"C++Builder es un entorno de desarrollo rapido de aplicaciones en lenguaje C++ para Windows inicialmente propiedad de la empresa Borland, y actualmente de la empresa Embarcadero Technologies, quien compro de Borland la division Codegear encargada del producto. Codegear inicialmente se denominaba DTG='Developer Tools Group' hasta que adquirio el nombre oficial CodeGear previo a la venta.  C++Builder combina la biblioteca Visual Component Library y el IDE escrito en Delphi con un compilador de C++. El ciclo de lanzamiento es anual. Incluye herramientas que permiten desarrollo visual de arrastrar-y-soltar componentes sobre la aplicacion e incorpora constructor de interfaz grafica WYSIWYG en su IDE.  Lanzado en 1997, despues de Delphi, y con un entorno similar a este. Muchos componentes de Delphi pueden utilizarse en C++. En 1999 Borland anuncio la version 4.0; poco tiempo despues anuncio que Borland C++ seria discontinuado en favor del C++Builder.  En 2000 salio publicada la version 5.0 y en 2002 la version 6.0. Para aquella epoca las versiones de C++Builder salian un a\u00f1o o un poco mas de su contraparte Delphi.  En 2003 Borland publica C++BuilderX (CBX), que usaba el entorno de desarrollo (Galileo) de un producto hermano: JBuilder y tenia poca similitud con C++Builder o Delphi, pues proponia como framework a wxWindows (en lugar de OWL, OWLNext o VCL). Este producto estaba dirigido a grandes organizaciones y no tuvo mucha aceptacion. Al final del 2004 Borland anuncio que continuaria desarrollando el C++Builder e incluirlo junto con la suite de desarrollo de Delphi development suite, abandonando el C++BuilderX.  Cerca de un a\u00f1o despues del anuncio Borland publico 'Borland Developer Studio 2006' que incluia el Borland C++Builder 2006 que proveia un administrador de configuracion mejorado y varias correcciones. Borland Developer Studio 2006 es un paquete que incluida Delphi, C++Builder, y C#Builder.  En 2006 Borland's Developer Tools Group, la division encargada del C++Builder, fue transformada en una organizacion independiente (subsidiaria) denominada CodeGear.  En 2007 Borland publico C++Builder 2007, proveyendo completo soporte para la API de Microsoft Vista, soporte mejorado a ANSI C++, y hasta 500% mejor rendimiento en el proceso de compilacion desde el IDE, soporte para MSBuild, arquitectura de base de datos DBX4, \"VCL for the Web\" que permite el desarrollo visual de aplicaciones AJAX, y la biblioteca OWLNext. El soporte de la API de Microsoft Vista incluye aplicaciones 'temadas' y soporte a la interfaz Aero y Vista Desktop. CodeGear RAD Studio 2007 incorporo C++Builder 2007 y Delphi. Tambien en 2007 Borland revivio la linea \"Turbo\" y lanzo dos ediciones \"Turbo\" de C++Builder: Turbo C++ Professional, y Turbo C++ Explorer (no disponible actualmente de CodeGear), basado en Borland C++Builder 2006.  En 2008 CodeGear fue adquirida por Embarcadero Technologies, quien continuo el desarrollo. C++Builder 2009 fue publicado en agosto del 2008, las caracteristicas agregadas mas importantes fueron el soporte completo a Unicode tanto en la VCL como en la RTL, adopcion anticipada del estandar C++0x, soporte al ITE (Entorno de Traduccion Integrado), componentes Ribbon y la inclusion de la biblioteca Boost.  C++Builder 2010 fue publicado en agosto del 2009, fue el primer entorno de desarrollo que incluyo soporte a Windows 7, permitiendo desarrollar aplicaciones que soportan la interfaz 'Multitouch'. CodeGear ha anunciado sus planes de desarrollo que incluirian soporte a OSX y Linux.  C++Builder ha usado los siguientes a lo largo de su desarrollo: ","snippet":"C++Builder es un entorno de desarrollo rapido de aplicaciones en lenguaje C++ para Windows inicialmente propiedad de la empresa Borland, y actualmente de la empresa Embarcadero Technologies, quien com","enlaces_salientes":["C%2B%2BBuilder","C%2B%2BBuilder","C%2B%2BBuilder","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Borland","Embarcadero_Technologies","Licencia_de_software","Software_propietario","Ciclo_de_vida_del_lanzamiento_de_software","Desarrollo_r%C3%A1pido_de_aplicaciones","Borland","Embarcadero_Technologies","CodeGear","Biblioteca_(inform%C3%A1tica)","Visual_Component_Library","Compilador","Constructor_de_interfaz_gr%C3%A1fica","WYSIWYG","JBuilder","Biblioteca_(inform%C3%A1tica)","Unicode","Biblioteca_(inform%C3%A1tica)","Boost","Windows_7","MS-DOS","Windows_3.1x","Integrated_development_environment","OS/2","IBM","Windows_NT_3.51","Windows_NT_4.0","Embarcadero_Delphi","Visual_Component_Library","Wayback_Machine","Wayback_Machine","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Clang","titulo":"Clang","contenido":"Clang es un front end de compilador para los lenguajes de programacion C, C++, Objective-C y Objective-C++. Usa LLVM como su back-end y ha sido parte del ciclo de lanzamiento de LLVM desde la version 2.6.  Esta dise\u00f1ado para ofrecer un reemplazo de GNU Compiler Collection (GCC). Es de codigo abierto,\u200b y varias compa\u00f1ias de software estan involucradas en su desarrollo, incluyendo a Google y Apple. Su codigo fuente esta bajo la licencia University of Illinois/NCSA.  El proyecto Clang incluye ademas un analizador estatico de software y varias herramientas de analisis de codigo.\u200b ","snippet":"Clang es un front end de compilador para los lenguajes de programacion C, C++, Objective-C y Objective-C++. Usa LLVM como su back-end y ha sido parte del ciclo de lanzamiento de LLVM desde la version ","enlaces_salientes":["Clang","Clang","Clang","LLVM","Compilador","Desarrollador_de_software","Apple_Inc.","Google_Inc.","Licencia_de_software","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Plataforma_(inform%C3%A1tica)","Multiplataforma","Ciclo_de_vida_del_lanzamiento_de_software","Front-end_y_back-end","Compilador","C_(programming_language)","C%2B%2B","Objective-C","Objective-C%2B%2B","LLVM","GNU_Compiler_Collection","C%C3%B3digo_abierto","Google_Inc.","Apple_Inc.","C%C3%B3digo_fuente","An%C3%A1lisis_est%C3%A1tico_de_software","Software_libre","Portable_C_Compiler","Control_de_autoridades","Open_Hub"]}
{"url":"GNU_Compiler_Collection","titulo":"GNU Compiler Collection","contenido":"El GNU Compiler Collection (coleccion de compiladores GNU) es un conjunto de compiladores creados por el proyecto GNU. GCC es software libre y lo distribuye la Free Software Foundation (FSF) bajo la licencia general publica GPL.  Estos compiladores se consideran estandar para los sistemas operativos derivados de UNIX, de codigo abierto y tambien de propietarios, como Mac OS X. GCC requiere el conjunto de aplicaciones conocido como binutils para realizar tareas como identificar archivos objeto u obtener su tama\u00f1o para copiarlos, traducirlos o crear listas, enlazarlos, o quitarles simbolos innecesarios.  Originalmente GCC significaba GNU C Compiler (compilador GNU de C), porque solo compilaba el lenguaje C. Posteriormente se extendio para compilar C++, Fortran, Ada y otros.  GCC es parte del proyecto GNU, y tiene como objetivo mejorar el compilador usado en todos los sistemas GNU, incluyendo la variante GNU/Linux. El desarrollo de GCC usa un entorno de desarrollo abierto y soporta muchas plataformas con el fin de fomentar el uso de un compilador-optimizador de clase global, que pueda atraer muchos equipos de desarrollo, y asegure que GCC y los sistemas GNU funcionen en diferentes arquitecturas y diferentes entornos, y mas aun, para extender y mejorar las caracteristicas de GCC.  Richard Stallman comenzo a escribir GCC en 1985. A\u00f1adio elementos extendiendo un compilador preexistente de C. El compilador originalmente compilaba Pastel, un dialecto extendido, no portable de Pascal, y estaba escrito en el propio Pastel. Fue reescrito en C por Len Tower y Stallman,\u200b y publicado en 1987\u200b como el compilador del Proyecto GNU, para tener un compilador disponible que fuera software libre. Su desarrollo fue supervisado por la Free Software Foundation (FSF).\u200b  En 1991, GCC 1.x habia logrado un punto de estabilidad, pero limitaciones en la arquitectura impedian muchas mejoras deseadas, asi que la FSF empezo a trabajar en GCC 2.x.  Como GCC era software libre, habia programadores que querian trabajar en otras direcciones, por ejemplo, escribiendo interfaces para otros lenguajes distintos de C, estos fueron libres de desarrollar sus propias bifurcaciones del compilador. Multiples bifurcaciones trajeron ineficiencia e inmanejabilidad, sin embargo, la dificultad de producir codigo que fuera aceptado por el proyecto oficial de GCC era altamente frustrante para muchos, puesto que la FSF guardaba un ferreo control en que era a\u00f1adido a la version oficial de GCC 2.x. Esto hizo que GCC fuera citado como ejemplo del modelo de desarrollo \"catedral\" de software mencionado en el ensayo de Eric S. Raymond titulado La catedral y el bazar.  Desde la publicacion de la version 4.4. de BSD en 1994, GCC se convirtio en el compilador por defecto de los sistemas BSD.  En su version 4.6 incluye front ends para C (gcc), C++ (g++), Java (gcj), Ada (GNAT), Objective-C (gobjc), Objective-C++ (gobjc++) y Fortran (gfortran).\u200b Tambien esta disponible, aunque no de forma estandar, soporte para Go (gccgo), Modula-2, Modula-3, Pascal (gpc), PL/I, D (gdc), Mercury, y VHDL (ghdl).\u200b  En la version 4.2.3 se incluye soporte para:  Tambien hay soporte para arquitecturas menos conocidas: A29K, Atmel AVR, C4x, D30V, DSP16xx, FR-30, FR-V, Intel i960, IP2000, MN10200, NS32K y ROMP.  Se ha dado soporte para procesadores adicionales, como D10V, PDP-10, y Z8000 en versiones mantenidas separadas de la version de la FSF.  La interfaz exterior de GCC es generalmente estandar para un sistema UNIX. Los usuarios llaman un programa controlador llamado gcc, que interpreta los argumentos dados, decide que compilador usar para cada archivo y ejecuta el ensamblador con el codigo resultante, despues posiblemente ejecuta el enlazador para producir un programa completo.  Cada uno de los compiladores es un programa independiente que toma como entrada codigo fuente y produce codigo en ensamblador. Todos ellos tienen una estructura interna comun: un front end por lenguaje que procesa el lenguaje y produce un arbol de sintaxis y un back end, que convierte esos arboles al lenguaje RTL (lenguaje de transferencia de registros) de GCC, luego realiza varias optimizaciones y produce el ensamblador utilizando un reconocimiento de patrones especifico para la arquitectura, originalmente basado en un algoritmo de Jack Davidson y Chris Fraser.  Casi todo GCC esta escrito en C, aunque gran parte del front end de Ada esta escrito en Ada. El 30 de mayo de 2010 se anuncio que se comenzara a utilizar C++ en el desarrollo de GCC.\u200b  Los front ends varian internamente, teniendo que producir arboles que puedan ser manejados por el back end. Todos los analizadores son analizadores recursivos descendentes y fueron escritos manualmente, no generados automaticamente.  Hasta hace poco, el arbol de representacion de programa no era totalmente independiente del procesador para el que se queria generar el codigo.  Recientemente se han incluido dos nuevas formas de arbol independientes del lenguaje. Estos nuevos formatos son llamados GENERIC y GIMPLE. El analisis ahora es realizado creando arboles temporales dependientes del lenguaje y convirtiendolos a GENERIC. El gimplifier convierte esto a GIMPLE, que es el lenguaje comun para un gran numero de optimizaciones independientes de la arquitectura y del lenguaje.  La optimizacion en arboles no entra en lo que la mayoria de los desarrolladores de compiladores consideran trabajo del front end, ya que no es dependiente del lenguaje y no involucra el analisis. Los desarrolladores de GCC han dado a esta parte del compilador el nombre de middle end. Las optimizaciones incluyen eliminacion de codigo que nunca se ejecuta, eliminacion parcial de redundancia, redundancia a la hora de evaluar expresiones... Actualmente se esta trabajando en optimizaciones basadas en dependencia de arreglos.  El comportamiento del backend esta parcialmente especificado por el preprocesador de macros especificas a la arquitectura objetivo, por ejemplo para definir la posicion de los bits mas significativos, tama\u00f1o de palabra, convencion para llamadas, etc. El back end utiliza estas para la generacion de RTL, aunque en GCC este es independiente del procesador y la secuencia inicial de instrucciones abstractas es adaptada a la arquitectura objetivo.  La mayoria de Entornos de desarrollo integrado escritos para GNU/Linux y algunos otros sistemas operativos soportan GCC. Estos incluyen: ","snippet":"El GNU Compiler Collection (coleccion de compiladores GNU) es un conjunto de compiladores creados por el proyecto GNU. GCC es software libre y lo distribuye la Free Software Foundation (FSF) bajo la l","enlaces_salientes":["GNU_Compiler_Collection","GNU_Compiler_Collection","GNU_Compiler_Collection","GNU_toolchain","Debian","Compilador","Desarrollador_de_software","GNU","Ingenier%C3%ADa_de_software","Software_libre","Licencia_de_software","GNU_General_Public_License","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Plataforma_(inform%C3%A1tica)","Multiplataforma","Ciclo_de_vida_del_lanzamiento_de_software","Ciclo_de_vida_del_lanzamiento_de_software","22_de_marzo","1987","Compilador","GNU","Software_libre","FSF","Licencia_p%C3%BAblica_general_de_GNU","UNIX","C%C3%B3digo_abierto","Software_no_libre","Mac_OS_X","Binutils","Enlazador","Lenguaje_C","C%2B%2B","Fortran","Lenguaje_de_programaci%C3%B3n_Ada","GNU/Linux","Richard_Stallman","Pastel_(lenguaje_de_programaci%C3%B3n)","Pascal_(lenguaje_de_programaci%C3%B3n)","Leonard_H._Tower_Jr.","Software_libre","Free_Software_Foundation","C_(programming_language)","Bifurcaci%C3%B3n_(desarrollo_de_software)","Eric_S._Raymond","La_catedral_y_el_bazar","BSD","BSD","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Java_(lenguaje_de_programaci%C3%B3n)","Gcj","Ada_(lenguaje_de_programaci%C3%B3n)","GNAT","Objective-C","Objective-C#Objective-C++","Fortran","GNU_Fortran","Go_(lenguaje_de_programaci%C3%B3n)","Modula-2","Modula-3","Pascal_(lenguaje_de_programaci%C3%B3n)","GNU_Pascal","PL/I","D_(lenguaje_de_programaci%C3%B3n)","Mercury_(lenguaje)","VHDL","Arquitectura_ARM","Blackfin","Darwin_BSD","DEC_Alpha","Digital_Equipment_Corporation","GNU/Linux","HPPA","Itanium","MIPS_(procesador)","MMIX","Microprocesadores_Motorola_de_la_familia_68000","Motorola_68HC11","Motorola_88000","PA-RISC","PDP-11","PowerPC","RS/6000","SPARC","SuperH","System/370","System_V","VAX","X86","X86-64","AVR","Intel_i960","PDP-10","Enlazador","Programa_inform%C3%A1tico","C%C3%B3digo_fuente","Ensamblador","%C3%81rbol_de_sintaxis","Register_transfer_language","30_de_mayo","2010","C%2B%2B","Register_transfer_language","Entorno_de_desarrollo_integrado","GNU/Linux","Anjuta","CodeLite","Dev-C%2B%2B","Eclipse_(software)","Geany","KDevelop","NetBeans","Qt_Creator","Xcode","Visual_Studio_Code","Wayback_Machine","Wayback_Machine","Richard_M._Stallman","Free_Software_Foundation","Software_libre","Recolecci%C3%B3n_de_basura","LLVM","MinGW","Cygwin","G%2B%2B","Make","Control_de_autoridades","Gemeinsame_Normdatei","Open_Hub"]}
{"url":"Intel_C%2B%2B_Compiler","titulo":"Intel C++ Compiler","contenido":"Intel C++ Compiler (tambien conocido como ICC o ICL) es un conjunto de compiladores para los lenguajes C y C++, desarrollado por Intel. Los compiladores estan disponibles para los Sistemas Operativos Linux, Microsoft Windows y Mac OS X.  Estos compiladores pueden funcionar sobre procesadores IA-32, Intel 64, Itanium 2, y otros procesadores ajenos a la marca, pero compatibles, como los de AMD. Los desarrolladores, eso si, deben comprobar los requisitos del sistema. El Intel C++ Compiler para IA-32 e Intel 64 dispone de una vectorizacion automatica que puede generar instrucciones SSE, SSE2, SSE3 y SSE4 SIMD , las variantes de Intel Wireless MMX y MMX 2 para sistemas embebidos.\u200b  Desde su introduccion, el Compilador de Intel de C++ para IA-32 ha aumentado considerablemente la adopcion de SSE2 en el desarrollo de aplicaciones para Windows.[cita\u00a0requerida]  El Intel C++ Compiler soporta tanto OpenMP 3.0 como paralelizacion automatica para el multiprocesamiento simetrico. Con el complemento Cluster OpenMP, el compilador tambien puede generar automaticamente llamadas de Interfaz de Paso de Mensajes para el multiprocesamiento de la memoria distribuida desde las directivas de OpenMP.  ICC pertenece a la familia de compiladores de los Frontend de Edison Design Group (como SGI MIPSpro, Comeau C++, Portland Group y otros mas). El compilador es ampliamente utilizado por la SPEC CPU para pruebas de rendimiento de las arquitecturas IA-32, x86-64 e Itanium 2.  ICC puede presentarse de cuatro maneras diferentes. Dentro de Intel Parallel Studio, como paquete en Intel C++ Compiler Professional Edition, en Intel Compiler Suite y en Intel Cluster Toolkit, Compiler Edition. En el sitio Intel Software Products se proporciona mucha mas informacion y recursos.  Intel afina este compilador optimizandolo para plataformas de hardware, minimizando estancamientos y produciendo asi un codigo que se ejecuta en un numero menor de ciclos. El compilador C++ de Intel soporta tres tecnicas de alto nivel por separado para optimizar los programas compilados: optimizacion interprocedimiento o interprocedural optimization (IPO), optimizacion guiada por perfil o profile-guided optimization (PGO),\u200b y optimizacion de alto nivel o high-level optimizations (HLO). Tambien soporta tecnicas y herramientas que agregan paralelismo en las aplicaciones.  Optimizacion guiada por perfil (o Profile-guided optimization en su version original) se refiere a un modo de optimizacion donde el compilador es capaz de acceder a los datos desde una ejecucion de ejemplo del programa a traves de una entrada de datos representativa. Los datos indicaran que areas del programa se ejecutan con mayor frecuencia, y que areas son ejecutadas con menor frecuencia. Todas las optimizaciones se benefician de la realimentacion (feedback) guiada por perfil porque dependen menos de la heuristica al tomar decisiones de compilacion.  Optimizaciones de alto nivel son aquellas que se realizan en una version del programa que representa mas exactamente el codigo fuente. Esto incluye bucles de intercambio, fusion de bucles, desenvoltura de bucles, distribucion de bucles, prelectura de datos y mas.\u200b Estas optimizaciones suelen ser muy agresivas y pueden llevar un considerable tiempo de compilacion.  Interprocedural optimization applies typical compiler optimizations (such as constant propagation) but using a broader scope that may include multiple procedures, multiple files, or the entire program.\u200b  Los compiladores incluyen una extension de depuracion en paralelo, Bloques de Construccion de Hilos de Intel (Intel Threading Building Blocks), soporte para la funcion lambda, y una herramienta de comprobacion de recursos para usar con el codigo en hilos.  El compilador de Intel ha sido criticado por aplicar, por defecto, optimizaciones de coma flotante no permitidas en el estandar de C y que requieren flags especiales o especificos con otros compiladores como el conocido GCC.\u200b  La suite de compiladores de Intel tiene frontends para C, C++, y Fortran.  Las versiones mas tempranas de ICC que usan versiones anteriores al compilador GCC 3.x para Linux usan el esquema de coloreado de sintaxis de codigo de Dinkumware con el proposito de proveer una implementacion mas ajustada al estandar de C++ que GCC en sus versiones 2.x. Esto hace que su ABI incompatible con ambas versiones de GCC. Intel suprimio las bibliotecas de Dinkumware en la version 10.0, la cual se lanzo en junio de 2007. Desde entonces, el compilador ha sido y sigue siendo compatible con GCC 3.2 y versiones posteriores.  Las siguientes versiones del Intel C++ Compiler han sido publicadas:  Para VS2008 el soporte se reduce a la linea de comandos. La integracion con el IDE aun no esta soportada.  Ademas, las siguientes ediciones \"prototipo\" estan disponibles:  Esta documentacion puede encontrarse en Intel Software Technical Documentation site.  El compilador de Intel provee informacion de depuracion que es estandar para los depuradores comunes (DWARF 2 en Linux, similar a gdb, y COFF para Windows). Los flags para compilar con la informacion de depuracion son /Zi en Windows y -g en Linux.  Intel tambien provee su propio debugger llamado idb, el cual puede ser ejecutado tanto en dbx como en gdb en modo de comandos compatible.  Aunque que el compilador de Intel puede generar una salida de profiling compatible con gprof, Intel tambien provee un nivel en kernel, un perfilador estadistico de sistema completo como producto separado llamado VTune. VTune ofrece una GUI de facil manejo (integrada en Visual Studio para Windows, Eclipse para Linux) tan buena como la linea de comandos.  Las versiones 11.x del compilador introducen la Extension de Depuracion en Paralelo (Parallel Debugger Extension), la cual provee tecnicas de depuracion para aplicaciones con hilos de trabajo. Puede ser usada con otros compiladores compatibles, como Microsoft Visual C++ en Windows, que esta Visual Studio 2005, 2008 y 2010 y gcc en Linux.  Intel y terceros han publicado resultados de estudios de rendimiento a fin de corroborar los anuncios de liderazgo en desempe\u00f1o sobre otros compiladores y librerias comerciales, de codigo abierto y de AMD por encima de procesadores Intel y no-Intel. Intel y AMD han documentado indicadores de uso en compiladores Intel para obtener rendimiento optimo en procesadores Intel y AMD.\u200b\u200b Sin embargo, los compiladores Intel han sido acusados de producir codigo sub-optimo con propositos mercenarios. En 2009, un desarrollador habia escrito en un blog al respecto:\u200b  Este despachamiento de CPU especifico a un fabricante disminuye el desempe\u00f1o en procesadores no-Intel de software construido con un compilador Intel o una biblioteca de funciones de Intel - posiblemente sin el conocimiento del programador. Esto ha conducido a estudios de desempe\u00f1o errados.\u200b En noviembre de 2009 se acordo una batalla legal entre AMD e Intel sobre este y otros asuntos.\u200b A finales de 2010, AMD interpuso una investigacion anti-monopolio contra Intel.\u200b  El acuerdo de la FTC incluyo una disposicion de revelacion en donde Intel debe:\u200b   ","snippet":"Intel C++ Compiler (tambien conocido como ICC o ICL) es un conjunto de compiladores para los lenguajes C y C++, desarrollado por Intel. Los compiladores estan disponibles para los Sistemas Operativos ","enlaces_salientes":["Intel_C%2B%2B_Compiler","Intel_C%2B%2B_Compiler","Intel_C%2B%2B_Compiler","Confederaci%C3%B3n_Internacional_del_Trabajo","Compilador","Desarrollador_de_software","Intel","Licencia_de_software","Software_no_libre","Ciclo_de_vida_del_lanzamiento_de_software","Compilador","Lenguaje_de_programaci%C3%B3n_C","C%2B%2B","Intel_Corporation","Linux","Microsoft_Windows","Mac_OS_X","IA-32","Intel_64","Itanium_2","AMD","Streaming_SIMD_Extensions","SSE2","SSE3","SSE4","SIMD","MMX","Sistema_embebido","IA-32","OpenMP","Paralelizaci%C3%B3n_autom%C3%A1tica","Multiprocesamiento_sim%C3%A9trico","Interfaz_de_Paso_de_Mensajes","Multiprocesamiento","Frontend","SGI","Standard_Performance_Evaluation_Corporation","IA-32","X86-64","Itanium_2","Flag","GCC","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Fortran","GNU_Compiler_Collection","Coloreado_de_sintaxis","Interfaz_binaria_de_aplicaciones","IA-32","X86-64","Intel_64","AMD64","IA-64","Itanium","Intel_Threading_Building_Blocks","C%2B%2B11","OpenMP","C%2B%2B0x","SSE4.2","C%2B%2B0x","Internet_Archive","Biblioteca_(inform%C3%A1tica)","Visual_Studio","SSE4","Manejo_de_excepciones","AMD64","AMD64","Pentium_4","SSE3","Segmentaci%C3%B3n_(inform%C3%A1tica)","Microsoft_Windows","Linux","Flag","DWARF","Gdb","COFF","Depurador","Dbx_(depurador)","Profiling","VTune","Visual_Studio","Eclipse_(software)","Interfaz_de_l%C3%ADnea_de_comandos","AMD","VIA_Technologies","Conjunto_de_instrucciones","CPU","Noviembre","2009","Internet_Archive","Association_for_Computing_Machinery","Internet_Archive","Internet_Archive","N%C3%BAcleo_Linux","Control_de_autoridades"]}
{"url":"Microsoft_Visual_C%2B%2B","titulo":"Microsoft Visual C++","contenido":"Microsoft Visual C++ (MSVC) es un compilador para los lenguajes de programacion C, C++, C++/CLI y C++/CX desarrollado por Microsoft. MSVC es software propietario. Originalmente era un producto independiente, pero luego se convirtio en parte de Visual Studio y estuvo disponible tanto en forma de software de prueba como software gratuito. Cuenta con herramientas para desarrollar y depurar codigo C++, especialmente codigo escrito para la API de Windows, DirectX y .NET.  Muchas aplicaciones requieren paquetes de biblioteca de tiempo de ejecucion de Visual C++ redistribuibles para funcionar correctamente. Estos paquetes a menudo se instalan independientemente de las aplicaciones, lo que permite que varias aplicaciones hagan uso del paquete y solo tengan que instalarlo una vez. Estos paquetes de tiempo de ejecucion y redistribuibles de Visual C++ se instalan principalmente para las bibliotecas estandar que utilizan muchas aplicaciones.  El predecesor de Visual C++ fue Microsoft C / C++. Tambien habia un Microsoft QuickC 2.5 y un Microsoft QuickC para Windows 1.0. El compilador de Visual C++ todavia se conoce como Microsoft C / C++ y, a partir del lanzamiento de Visual C++ 2015 Update 2, esta en la version 14.0.23918.0  ABI  La ABI del compilador de Visual C++ ha cambiado historicamente entre las versiones principales del compilador. Este es especialmente el caso de los contenedores STL, donde los tama\u00f1os de los contenedores han variado mucho entre las versiones del compilador. Por lo tanto, Microsoft recomienda no usar interfaces C++ en los limites de los modulos cuando se desea habilitar el codigo de cliente compilado con una version de compilador diferente. En lugar de C++, Microsoft recomienda utilizar interfaces C o COM, que estan dise\u00f1adas para tener una ABI estable entre las versiones del compilador.  Todas las versiones 14.x de MSVC tienen una ABI estable, y los binarios creados con estas versiones se pueden mezclar de manera compatible con versiones posteriores, teniendo en cuenta las siguientes restricciones:  Bibliotecas en tiempo de ejecucion de C  Visual C++ incluye diferentes versiones de bibliotecas en tiempo de ejecucion de C. Esto significa que los usuarios pueden compilar su codigo con cualquiera de las bibliotecas disponibles. Sin embargo, esto puede causar algunos problemas al usar diferentes componentes (DLL, EXE) en un mismo programa. Un ejemplo tipico es un programa que utiliza diferentes bibliotecas. El usuario debe usar el mismo C Run-Time para todos los componentes del programa a menos que se comprendan las implicaciones. Microsoft recomienda utilizar la biblioteca de vinculos dinamicos multiproceso (opcion de compilador / MD o / MDd) para evitar posibles problemas.  POSIX  Aunque el CRT de Microsoft implementa un gran subconjunto de interfaces POSIX, el compilador de Visual C++ emite una advertencia en cada uso de dichas funciones de forma predeterminada. La razon es que los estandares C y C++ requieren un prefijo de subrayado antes de las interfaces definidas por la implementacion, por lo que el uso de estas funciones no es estandar. Sin embargo, los sistemas que en realidad son compatibles con POSIX no aceptarian estos nombres subrayados, y es mas portable simplemente desactivar la advertencia.  C  Aunque originalmente era un IDE para el lenguaje de programacion C, durante muchos a\u00f1os el soporte del compilador para ese lenguaje se ajustaba unicamente a la edicion original del estandar C, que data de 1989, pero no a la revision C99 del estandar. No habia planes para apoyar el C99 incluso en 2011, mas de una decada despues de su publicacion.  Visual C++ 2013 finalmente agrego soporte para varias caracteristicas de C99 en su modo C (incluidos inicializadores designados, literales compuestos y el tipo _Bool), aunque aun no estaba completo. Visual C++ 2015 mejoro aun mas la compatibilidad con C99, con compatibilidad total con la biblioteca estandar C99, excepto para las funciones que requieren funciones del lenguaje C99 que aun no son compatibles con el compilador.  La mayoria de los cambios de la revision C11 del estandar aun no son compatibles con Visual C++ 2017. Por ejemplo, las selecciones genericas a traves de la palabra clave _Generic no son compatibles con el compilador y dan como resultado un error de sintaxis.  El preprocesador se reviso en 2018, con C11 a la vista:  El soporte para _Generic se ha comprometido con MSVC a partir de febrero de 2020, aunque no esta claro cuando sera incluido.  En septiembre de 2020, Microsoft anuncio la compatibilidad con los estandares C11 y C17 en MSVC. ","snippet":"Microsoft Visual C++ (MSVC) es un compilador para los lenguajes de programacion C, C++, C++/CLI y C++/CX desarrollado por Microsoft. MSVC es software propietario. Originalmente era un producto indepen","enlaces_salientes":["Microsoft_Visual_C%2B%2B","Microsoft_Visual_C%2B%2B","Microsoft_Visual_C%2B%2B","Microsoft_Visual_Studio","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Microsoft","Febrero","1994","Licencia_de_software","Software_propietario","Lenguaje_de_programaci%C3%B3n","Ciclo_de_vida_del_lanzamiento_de_software","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","C%2B%2B/CX","Windows_1.0","POSIX","Anjuta","Dev-C%2B%2B","Eclipse_(software)","KDevelop","Ultimate%2B%2B","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"ISO/IEC_14882","titulo":"C++11","contenido":"C++11 es una version del lenguaje de programacion C++ estandar aprobado por la Organizacion Internacional de Normalizacion (ISO) el 12 de agosto de 2011, reemplazando al anterior C++03. A partir del 18 de agosto de 2014 fue sustituido por la version C++14 y mas tarde por C++17. El nombre sigue la tradicion de denominar a las versiones del lenguaje C++ a partir de la fecha de publicacion, aunque su nombre original fue C++0x debido a que esperaba ser publicada antes de 2010.  A pesar de que uno de los objetivos era hacer los cambios en las librerias en lugar de hacerlo en el nucleo del lenguaje, C++11 a\u00f1ade algunas cosas al nucleo. Algunas areas del lenguaje que fueron significativamente mejoradas como el soporte multihilo, soporte para la programacion generica, inicializacion uniforme y el rendimiento. La Libreria Estandar de C++ tambien recibio numerosos cambios, incorporando la mayoria de las bibliotecas definidas en el documento C++ Technical Report 1 (TR1), con la excepcion de la biblioteca de funciones matematicas especiales.  El borrador mas parecido al C++11 publicado es el N3337 del 16 de enero de 2012, el cual realiza solo algunas correcciones editoriales al estandar.  En el desarrollo de cada utilidad del nuevo estandar, el comite ha aplicado algunas directivas:  La atencion a los principiantes es muy importante porque ellos siempre seran la mayoria entre los programadores, y porque muchos principiantes no intentarian ampliar su conocimiento de C++, limitandose ellos mismos a operar en los aspectos del lenguaje en el que estan especializados. Adicionalmente, considerando la vastedad de C++ y de su uso (incluyendo areas de aplicacion y estilos de programacion), incluso los programadores mas experimentados pueden convertirse en principiantes en un nuevo paradigma de programacion.  Una funcion del comite de C++ es el desarrollo del nucleo del lenguaje. Las areas del nucleo del lenguaje que fueron significativamente mejoradas incluyen el soporte multithreading (multihilo), el soporte de programacion generica, la inicializacion uniforme, y mejoras del rendimiento.  Para los propositos de este articulo, las caracteristicas y los cambios del nucleo del lenguaje son agrupadas en 4 secciones generales:  Algunas caracteristicas podrian entrar en multiples grupos, pero solo son mencionadas en el grupo que primariamente representa esa caracteristica.  Estas caracteristicas del lenguaje existen primariamente para proporcionar un cierto tipo de beneficio en el rendimiento, tanto de la memoria como de la velocidad computo.  En el C++03 (y anteriores), los temporales, llamados \"rvalues\" pues a menudo se encuentran en el lado derecho de una asignacion, fueron pensados para nunca ser modificables - justo como en C (y eran considerados ser indistinguibles de los tipos const T&) - aunque en algunos casos los temporales habrian podido ser modificados, e incluso era considerados ser un util agujero de escape (loophole) (para el anterior, ver Sutter, Alexandrescu \"C++ coding standards\" #15). C++11 agrega un nuevo tipo de referencia no-constante llamado una referencia rvalue, identificada por T&&. Esto refiere a los temporales en que se permite que sean modificados despues de que son inicializados, con el proposito de permitir la \"semantica del movimiento\" (move semantics).  Un problema de rendimiento cronico con el C++03 son las costosas e innecesarias copias profundas que pueden suceder implicitamente cuando los objetos son pasados por valor. Para ilustrar el problema, considere que un std::vector<T> es, internamente, una envoltura (wrapper) alrededor de una tabla (array) de estilo C con un tama\u00f1o. Si un std::vector<T> temporal se crea en una funcion, solamente se puede almacenar creando un nuevo std::vector<T> y copiando todos los datos rvalue en el. Luego, el temporal y toda su memoria es destruido. (Por simplicidad, este argumento deja de lado la optimizacion del valor devuelto).  En el C++11, un \"move constructor\" del std::vector<T> que toma una referencia rvalue a un std::vector<T> puede simplemente copiar el puntero a la variable interna, de estilo C, fuera del rvalue en el nuevo std::vector<T>, entonces cambiar el puntero dentro del rvalue a null. Debido a que se puede reinicializar el puntero temporal, el objeto no se borra cuando se sale del ambito (scope), y no es necesaria una copia profunda. Por otra parte, es una operacion segura e invisible porque el temporal nunca se usara otra vez.  Las referencias de rvalue pueden proporcionar beneficios de rendimiento al codigo existente sin la necesidad realizar cualquier cambio fuera de la biblioteca estandar. El tipo del valor retornado de una funcion que retorna un std::vector<T> temporal no necesita ser cambiado explicitamente al std::vector<T> && para invocar al move constructor, pues los temporales son considerados automaticamente como rvalues. (Sin embargo, si std::vector<T> es la version del C++03 sin un move constructor, despues el copy constructor sera invocado con un const std::vector<T>& como se hace normalmente, incurriendo en una significativa asignacion de memoria).  Por razones de la seguridad, algunas restricciones son impuestas. Una variable nombrada nunca sera considerada para ser un rvalue incluso si se ha declarado como tal; para conseguir un rvalue, la plantilla de funcion std::move<T> () debe ser usada. Tambien, las referencias de rvalue solamente pueden ser modificadas bajo ciertas circunstancias, siendo pensado para ser usado primariamente con los move constructor.  Debido a la naturaleza de la fraseologia de las referencias rvalue, y a una cierta modificacion a la fraseologia para las referencias del lvalue (referencias regulares), las referencias rvalue permiten a los desarrolladores proporcionar forwarding de funciones perfectos. Cuando se combina con las plantillas variadic, esta capacidad permite plantillas de funcion que pueden perfectamente remitir (forward) argumentos a otra funcion que tome esos argumentos particulares. Esto es mas util para forwarding de parametros del constructor, para crear funciones de factoria que llamaran automaticamente al constructor correcto para los particulares argumentos.  El C++ siempre ha tenido el concepto de expresiones constantes. Estas son expresiones tales como 3+4 que daran siempre los mismos resultados, en tiempo de compilacion y en tiempo de ejecucion. Las expresiones constantes son oportunidades de optimizacion para los compiladores, y los compiladores frecuentemente las ejecutan en tiempo de compilacion y luego ponen los resultados codificados directamente en el programa (hard coded). Tambien, hay un numero de lugares en donde la especificacion del C++ requiere el uso de expresiones constantes. La definicion de un arreglo requiere una expresion constante, y los valores del enumerador deben ser expresiones constantes.  Sin embargo, las expresiones constantes siempre han terminado cuando una llamada de funcion o un constructor de objeto sea encontrado. Asi que una pieza de codigo tan simple como esta es ilegal:  Este no es C++ legal, porque dame_cinco() + 7 no es una expresion constante. El compilador no tiene manera de saber si dame_cinco() es realmente constante en tiempo de ejecucion. En teoria, esta funcion podia afectar a una variable global, llamar a otras funciones constantes de no tiempo de ejecucion, etc.  C++11 introdujo la palabra clave constexpr (expresion constante), que permite al usuario garantizar que una funcion o un constructor de objeto es constante en tiempo de compilacion. El ejemplo de arriba puede ser reescrito como sigue:  Esto permite que el compilador entienda, y verifique, que dame_cinco es una constante en tiempo de compilacion.  El uso del constexpr en una funcion impone limitaciones muy estrictas en lo que esa funcion puede hacer. Primero, la funcion debe tener un tipo de retorno que no sea void. En segundo lugar, el contenido de la funcion debe ser de la forma: return expresion. Tercero, la expresion debe ser una expresion de constante despues de la sustitucion del argumento. Esta expresion constante puede solamente llamar a otras funciones definidas como constexpr, o puede usar otras variables de datos de expresiones constantes. Por ultimo, una funcion con esta etiqueta no puede ser llamada hasta que es definida en esta unidad de traduccion (translation unit).  Las variables tambien pueden ser definidas como valores de expresiones constantes:  Las variables de los datos de la expresion constante son implicitmente const. Solo pueden almacenar los resultados de expresiones constantes o de constructores de expresiones constantes.  Para construir valores de datos de expresion constante desde tipos definidos por el usurario, los constructores tambien pueden ser declarados con constexpr. Un constructor de expresion constante debe ser definido antes de su uso en la unidad de traduccion, como con las funciones de expresion constante. Debe tener un cuerpo de funcion vacio. Debe inicializar a sus miembros con expresiones constantes. Los destructores para tales tipos deben ser triviales.  Para copiar tipos construidos constexpr tambien deben ser definidos como constexpr, para permitir que retornen por valor desde una funcion constexpr. Cualquier funcion miembro de una clase, tal como copy constructors, sobrecarga de operadores, etc, pueden ser declaradas como constexpr, siempre y cuando adapten la definicion para expresiones constantes de funcion. Esto permite al compilador copiar clases en tiempo de compilacion, realiza operaciones en ellas, etc.  Una funcion de expresion constante o un constructor puede ser llamado con parametros que no sean constexpr. Justo como un literal de numero entero constexpr puede ser asignado a una variable que no sea constexpr, asi que una funcion constexpr tambien puede ser llamada con parametros que no sean constexpr, y los resultados almacenados en variables que no sean constexpr. La palabra clave solo permite la posibilidad de constante de tiempo de compilacion cuando todos los miembros de una expresion son constexpr.  En el C++03, una clase o struct debe seguir un numero de reglas para que sea considerado un tipo plain old data (POD). Los tipos que cumplen esta definicion producen layouts de objetos que son compatibles con C. Sin embargo, la definicion en C++03 es innecesariamente estricta y hay buenas razones para permitir a mas tipos cumplir la definicion de POD [cita\u00a0requerida]. C++11 relajo varias de las reglas [cita\u00a0requerida].  Una clase/struct es considerada una POD si es trivial, de standard-layout, y si todos sus miembros no estaticos son POD.  Una clase o struct trivial se define como uno los siguientes:  Una clase o struct es standard-layout, por definicion, con tal que cumpla lo siguiente:  En el C++03, el compilador debe instanciar una plantilla siempre que una plantilla especificada completamente es encontrada en una unidad de traduccion. Si la plantilla es instanciada con el mismo tipo en muchas unidades de traduccion, esta puede aumentar dramaticamente el tiempo de compilacion. No hay manera de prevenir esto en C++03, asi que C++11 introdujo las declaraciones de plantilla extern, analogas a las declaraciones de datos extern.  C++03 tiene esta sintaxis para obligar al compilador a instanciar una plantilla:  C++11 ahora proporciona este sintaxis:  la cual le dice al compilador que no instancie la plantilla en esta unidad de traduccion.  Estas caracteristicas existen para el proposito primario de hacer el lenguaje mas facil usar. Estas pueden mejorar la seguridad de tipo, minimizar la repeticion de codigo, hacer que el codigo erroneo sea menos probable, etc.  C++03 heredo la caracteristica del inicializador de lista de C. Un struct o un arreglo recibe una lista de argumentos en llaves cuadradas (corchetes), en el orden de las definiciones de los miembros en el struct. Estos inicializadores de listas son recursivos, asi que pueden usarlos un arreglo de structs o un struct que contiene otros structs.  Esto es muy util para las listas estaticas o justo para inicializar un struct con un valor particular. C++ tambien proporciona constructores para inicializar un objeto, pero a menudo no son tan convenientes como el inicializador de lista. Sin embargo C++03 solo permite inicializar listas en los structs y las clases que se ajustan a la definicion Plain Old Data (POD); C++11 extiende la inicializacion de listas, asi que pueden ser usadas para todas las clases incluyendo los contenedores estandar como el std::vector.  C++11 ata (bind) el concepto a una plantilla, llamada std::initializer_list. Esto permite que los constructores y otras funciones tomen inicializadores de lista como parametros. Por ejemplo:  Esto permite que ClaseDeSecuencia sea construida de una secuencia de numeros enteros, como en:  Esta es una clase especial de constructor, llamada constructor inicializador de lista. Las clases con tal constructor son tratadas especialmente durante la inicializacion uniforme (ver abajo)  La clase std::initializer_list<> es un tipo de biblioteca estandar C++11 de primera clase. Sin embargo, solo pueden ser inicialmente construidos estaticamente por el compilador de C++11 con el uso de la sintaxis {}. La lista puede ser copiada una vez construida, por lo que es solamente una copia-por-referencia. Una lista de inicializador es constante; una vez que la lista del inicializador es creada, sus miembros no pueden ser cambiados, ni los datos en esos miembros.  Debido a que el initializer_list es un verdadero tipo, puede ser usado en otros lugares ademas de los constructores de clase. Las funciones regulares pueden tomar tipos de listas inicializadas como argumentos. Por ejemplo:  Los contenedores estandar tambien pueden ser inicializados de las maneras siguientes:  El C++03 tiene un numero de problemas con los tipos de inicializacion. Hay varias maneras de inicializar tipos, y no todas producen los mismos resultados cuando son intercambiadas. La sintaxis tradicional del constructor, por ejemplo, puede parecerse como una declaracion de funcion, y deben tomarse medidas para asegurarse que la regla del parse mas irritante no la confundira como tales. Solamente los agregados y los tipos POD pueden ser inicializados con inicializadores agregados (usando SomeType var = {/*stuff*/};).  C++11 proporciona una sintaxis que permite la inicializacion de tipo completamente uniforme que trabaja en cualquier objeto. Se expande en la sintaxis de inicializador de lista:  La inicializacion de var1 se comporta exactamente como si fuera una inicializacion de agregado. Es decir, cada miembro de datos de un objeto, a su vez, sera inicializado por copia con el correspondiente valor de la lista de inicializacion. La conversion de tipo implicita sera usada cuando se necesite. Si no existe ninguna conversion, o solo existe un estrechamiento de conversion, el programa esta malformado. La inicializacion de var2 invoca al constructor.  Tambien se puede hacer lo siguiente:  La inicializacion uniforme no reemplaza la sintaxis de constructor. Todavia hay momentos en que es requerida la sintaxis de constructor. Si una clase tiene un constructor (TypeName(initializer_list<AlgunTipo>);), entonces toma prioridad sobre otras formas de construccion, a condicion de que la lista del inicializador se conforme al tipo de constructor de secuencia. La version C++11 del std::vector tiene un constructor de lista de inicializacion para su tipo de plantilla. Esto significa que el siguiente codigo:  llamara al constructor de la lista del inicializador, no el constructor del std::vector que toma un solo parametro de tama\u00f1o y crea el vector con ese tama\u00f1o. Para acceder al ultimo constructor, el usuario necesitara usar directamente la sintaxis de constructor estandar.  En el C++03 (y en C), el tipo de una variable debe ser explicitamente especificado para poder usarlo. Sin embargo, con el advenimiento de los tipos de plantilla y tecnicas de metaprogramacion de plantillas, puede que expresar el tipo de algo no sea facil, particularmente cuando se trata de definir bien el valor de retorno de una funcion. Tambien es dificil almacenar valores intermediarios en variables, y posiblemente se requerira conocer las partes internas de una biblioteca de metaprogramacion particular.  C++11 permite que esto sea mitigado de dos maneras. Primero, la definicion de una variable con una inicializacion explicita puede usar la palabra clave auto. Esto crea una variable del tipo especifico del inicializador:  El tipo algun_extra\u00f1o_tipo_llamable es simplemente lo que la plantilla particular de la funcion override de boost::bind retorna para esos argumentos particulares. Este tipo es facilmente determinado por procedimiento por el compilador como parte de sus trabajos de analisis semantico, pero no es facil de determinar por inspeccion por el usuario.  El tipo otra_variable tambien esta bien definido, pero es mas facil de determinar por el usuario. Es un int, el cual es el mismo tipo que el literal de numero entero.  Adicionalmente, la palabra clave decltype puede ser usada para determinar el tipo de una expresion en tiempo de compilacion. Por ejemplo:  Esto es mas util conjuntamente con auto, puesto que el tipo de una variable auto es solo conocido por el compilador. Sin embargo, el decltype tambien puede ser muy util para las expresiones en el codigo que hacen un fuerte uso de sobrecarga de operador y de tipos especializados.  auto es tambien util para reducir la verbosidad del codigo. Por ejemplo, en vez de escribir  el programador puede utilizar el mas corto  Esta diferencia crece a medida que el programador comienza a anidar los contenedores, aunque en tales casos los typedefs son una buena manera de disminuir la cantidad de codigo.  El tipo denotado por el decltype puede ser diferente del tipo deducido por auto.  En el C++03, la iteracion sobre los elementos de una lista requiere mucho codigo. Otras lenguajes como C# y Java tienen atajos que permitan escribir una simple declaracion \"foreach\" que camina automaticamente por la lista desde el comienzo hasta el final.  C++11 agrego una caracteristica similar. La declaracion for permite una iteracion facil sobre una lista de elementos:  Esta forma de for, llamada \"for basado en rango\", iterara sobre cada elemento en la lista. Trabajara para los arreglos de estilo C, inicializadores de listas, y cualquier tipo que tenga definida una funcion begin() y end() que retorne iteradores. Todos los contenedores de biblioteca estandar que tienen pares begin/end trabajaran con la sentencia for basada en rango.  C++11 proporciona la capacidad de crear funciones anonimas, llamadas funciones lambda. Estas se definen como sigue:  El tipo de retorno esta implicito; devuelve el tipo de la expresion de retorno (decltype (x+y)). El tipo de retorno de una lambda puede ser omitido siempre y cuando todas las expresiones de retorno devuelven el mismo tipo.  la sintaxis de declaracion de una funcion estandar de C era perfectamente adecuada para el conjunto de caracteristicas de este lenguaje. A medida que C++ evoluciono desde el C, mantuvo la sintaxis basica extendiendola en caso necesario. Sin embargo, a medida que C++ llego a ser mas complicado, expuso un numero de limitaciones, particularmente con respecto a declaraciones de funciones de plantilla. Lo siguiente, por ejemplo, no es permitido en C++03:  El tipo Ret es cualquier cosa que la adicion de los tipos Lhs y Rhs produzca. Incluso con la ya mencionada funcionalidad C++11 del decltype, esto no es posible:  Esto no es C++ legal porque lhs y rhs todavia no se han definido; no seran identificadores validos hasta despues de que el parser haya analizado el resto del prototipo de la funcion.  Para solucionarlo, C++11 introdujo una nueva sintaxis de declaracion de funcion, con el tipo de retorno al final:  Esta sintaxis puede ser usada para declaraciones y definiciones de funciones mas mundanas:  En este caso el uso de la palabra clave \"auto\" significa algo diferente de su uso en la deduccion de tipo automatica.  En C++03, a los constructores de una clase no se les permite llamar a otros constructores de esa clase; cada constructor debe construir todos sus miembros de clase por si mismo o llamar a una funcion de miembro comun, como los siguientes,  Los constructores para las clases base no pueden ser expuestos directamente a las clases derivadas; cada clase derivada debe implementar constructores incluso si un constructor de clase base fuera apropiado. los miembros de datos no constantes de las clases no pueden ser inicializados en el sitio de la declaracion de esos miembros. Solo pueden ser inicializados en un constructor.  El C++11 proporciona soluciones a todos estos problemas.  El C++11 permite a los constructores llamar a otros constructores pares (conocidos como delegacion). Esto permite a los constructores usar el comportamiento de otro constructor con un minimo de codigo a\u00f1adido. Ejemplos de otros lenguajes similares a C++ que proporcionen la delegacion son Java, C#, y D.  Esta sintaxis es como sigue:  Note que, en este caso, el mismo efecto habria podido ser alcanzado haciendo new_number un parametro por defecto. Sin embargo, la nueva sintaxis permite que al valor por defecto (42) sea expresado en la implementacion en vez de la interfaz - un beneficio para los mantenedores del codigo de la biblioteca puesto que los valores por defecto para los parametros de la funcion son \"horneados\" para llamar sitios, mientras que la delegacion del constructor permite que el valor sea cambiado usando la biblioteca sin la recompilacion del codigo.  Esto viene con una advertencia: C++03 considera un objeto a ser construido cuando su constructor termine de ejecutarse, pero C++11 considera un objeto construido una vez que cualquier constructor termine su ejecucion. Puesto que se permitira ejecutar a multiples constructores, esto significara que cada constructor delegado ejecutara en un objeto completamente construido de su propio tipo. Los constructores de clase derivados, ejecutaran despues de que toda la delegacion en sus clases base este completa.  Para los constructores de la clase base, el C++11 permite a una clase especificar que los constructores de la clase base sean heredados. Esto significa que el compilador C++11 generara codigo para realizar la herencia, el forwarding de clase derivada a la clase base. Observe que esto es una caracteristica de todo o nada; todos los constructores de esa clase base son forwarded o ningunos de ellos lo son. Tambien, observe que hay restricciones para la herencia multiple, de tal manera que los constructores de clase no pueden ser heredados a partir de dos clases que usen constructores con la misma firma. Ni puede existir un constructor en la clase derivada que tenga una firma igual en la clase base heredada.  la sintaxis es como sigue:  Para la inicializacion de miembros, C++11 permite la siguiente sintaxis:  Cualquier constructor de la clase inicializara el valor en 5, si el constructor no sobreescribe la inicializacion con las propios. Asi que el constructor vacio de arriba inicializara el valor como establece la definicion de la clase, pero el constructor que toma un int, lo inicializara con el parametro dado.  Tambien puede usar la inicializacion de constructor o uniforme, en vez de la inicializacion de igualdad mostrada arriba.  En C++03, es posible crear accidentalmente una nueva funcion virtual, cuando en realidad uno solo se prepuso un override de una funcion de la clase base. Por ejemplo:  Por ejemplo, queremos dise\u00f1ar Derivada::alguna_funcion para reemplazar la version de la clase base. Pero, debido a que la funcion virtual tiene una firma diferente, en realidad crea una segunda funcion virtual. Esto es un problema comun, particularmente cuando un usuario va a modificar la clase base.  C++11 proporciona una sintaxis para solucionar este problema.  El identificador especial override significa que el compilador comprobara la clase base para ver si hay una funcion virtual con esta firma exacta. Y si no la hay, el compilador producira un error.  C++11 tambien agrega la capacidad de prevenir poder heredar clases o sobrecargar funciones especificas. Esto se consigue con el identificador especial final. Por ejemplo:  En este ejemplo, la sentencia virtual void f() final; declara una nueva funcion virtual, pero tambien previene a las clases derivadas poder sobrecargarla. Tambien tiene el efecto de prevenir, a las clases derivadas, de usar esa combinacion particular de nombre de funcion y parametros.  Observe que ni override ni final son palabras claves del lenguaje. Tecnicamente son identificadores; solo ganan un significado especial cuando son usados en esos contextos especificos. En cualquier otra localizacion, pueden ser identificadores validos.  Unicamente para los propositos de esta seccion, cada ocurrencia de \"0\" significara \"expresion constante que se evalua a 0, que es del tipo entero int\". En realidad, la expresion constante puede ser de cualquier tipo entero.  Desde el amanecer de C en 1972, la constante 0 ha tenido el doble papel de constante de numero entero y de constante de puntero nulo. La ambiguedad inherente en el doble significado de 0 fue tratada en C por el uso del macro NULL del preprocesador, que comunmente expande a ((void*)0) o 0. C++ no adopto el mismo comportamiento, permitiendo a  0 solamente como constante del puntero nulo. Esto interactua mal con la sobrecarga de funciones:  Si NULL esta definido como 0 (lo usual en el caso del C++), la sentencia foo(NULL); llamara a foo(int), que casi con toda certeza no es lo que penso el programador, y no es lo que sugiere una lectura superficial del codigo.  C++11 corrige esto introduciendo una nueva palabra clave para servir como constante inconfundible de puntero nulo: nullptr. Es del tipo nullptr_t, que es implicitamente convertible y comparable a cualquier tipo de puntero o tipo de puntero-a-miembro. No es implicitamente convertible o comparable a los tipos enteros, a excepcion de bool. Mientras que la propuesta original especifico que un rvalue del tipo nullptr no deberia ser convertible a bool, el grupo de trabajo del nucleo del lenguaje decidio que tal conversion seria deseable, para la consistencia con los tipos punteros regulares. Los cambios de redaccion propuestos fueron votados unanimemente en el documento de trabajo en junio de 2008.\u200b  Por razones de compatibilidad hacia atras, 0 sigue siendo un constante de puntero nulo valida.  En C++03, las enumeraciones no son de tipo seguro. Internamente, en realidad son numeros enteros, incluso cuando los tipos de la enumeracion son distintos. Esto permite la comparacion entre dos valores de diferentes tipos de enumeracion. La unica seguridad que C++03 proporciona es que un numero entero o un valor de un tipo enum no se convierte implicitamente a otro tipo enum. Ademas, el tipo 'int' subyacente esta definido por la implementacion del compilador. Por lo tanto, el codigo que depende del tama\u00f1o de la enumeracion no es portable. Por ultimo, los valores de la enumeracion tienen un ambito definido por el ambito que los encierra. Asi, no es posible que dos enumeraciones separadas tengan nombres de miembro que emparejen.  C++11 permitira una clasificacion especial de la enumeracion que no tiene ninguno de esos problemas. Esto es expresado usando la declaracion enum class (enum struct tambien es aceptado como un sinonimo):  Esta enumeracion es de tipo seguro; los valores de enum class no son convertidos implicitamente a numeros enteros. Por lo tanto, no pueden ser comparados con numeros enteros (la expresion Enumeracion::Valor4 == 101 da un error del compilador).  El tipo subyacente de los miembros de las clases de enum no estara predefinido. Por defecto, como en el caso anterior, es int, pero puede ser especificado explicitamente a un tipo diferente:  El ambito de la enumeracion tambien esta definido como el ambito del nombre de la enumeracion. Usando los nombres de enumerador requiere explicitamente el uso de ambitos. Valor1 es indefinido, pero Enumeracion2::Valor1 esta definido.  Adicionalmente, C++11 permitira que las enumeraciones estandar proporcionen un ambito explicito asi como la definicion del tipo subyacente:  Los nombres del enumerador son definidos en el ambito de la enumeracion (Enumeracion3::Valor1), pero para la compatibilidad hacia atras, los nombres del enumerador tambien son colocados en el ambito de encerrado.  La declaracion de enums tambien es posible en C++11. Previamente, los tipos de enum no podian ser declarados porque el tama\u00f1o de la enumeracion depende de la definicion de sus miembros. Siempre que el tama\u00f1o de la enumeracion sea especificado implicita o explicitamente, puede ser declarado lo siguiente:  El parser del C++03 define \u201c>>\u201d como el operador de desplazamiento derecho en todos los casos. Sin embargo, con declaraciones jerarquizadas de plantilla, hay una tendencia para que el programador descuide poner un espacio entre los dos parentesis de angulo derecho, causando por lo tanto un error de sintaxis del compilador.  C++11 mejorara la especificacion del parser de modo que multiples parentesis de angulo derechos sean interpretados, donde sea razonable, como cierre de la lista de argumentos de la plantilla. Esto puede ser sobreescrito usando parentesis:  C++03 agrego la palabra clave explicit como un modificador para prevenir que los constructores con un solo argumento fueran usados como operadores de conversion de tipo implicito. Sin embargo, esto no hace nada por los reales operadores de conversion. Por ejemplo, una clase puntero inteligente puede tener un operator bool() para permitir que actue mas como un puntero primitivo: si incluye esta conversion, puede ser probada con if(smart_ptr_variable) (el cual seria true si el puntero no fuera null y de lo contrario false). Sin embargo, esto tambien permite otras conversiones no intencionales. Puesto que el bool de C++ es definido como tipo aritmetico, puede ser implicitamente convertido a los tipos entero o aun a los tipos flotantes, lo que permite las operaciones matematicas que no fueron pensadas por el usuario.  En C++11, la palabra clave explicit ahora puede ser aplicada a los operadores de conversion. Como con los constructores, previene el uso de funciones de conversion en conversiones implicitas. Sin embargo, contextos del lenguaje que especificamente requieren valor boleano, (las condiciones de sentencias if y en bucles, tan bien como operandos en operadores logicos), como en conversiones explicitas y por lo tanto pueden usar a un operador de conversion bool.  En C++03, solo es posible definir un typedef como un sinonimo para otro tipo, incluyendo un sinonimo para una especializacion de plantilla con todos los argumentos reales de la plantilla especificados. No es posible crear una plantilla de typedef como la siguiente:  Esto no compilara.  C++11 agregara esta capacidad con la siguiente sintaxis:  En C++11, la sintaxis tambien puede ser usada para alias de tipos:  En C++03 hay restricciones en que tipos de objetos pueden ser miembros de una union. Por ejemplo, las uniones no pueden contener objetos que definan a un constructor no trivial. C++11 suprime algunas de estas restricciones.\u200b  Este es un simple ejemplo de una union permitida en C++:  Los cambios no romperan ningun codigo existente puesto que solamente se relajan las reglas actuales.  Los identificadores override y final tienen un significado especial solo cuando son usados en un cierto contexto, de lo contrario pueden usarse como identificadores normales.  Estas caracteristicas permiten al lenguaje hacer cosas que eran previamente imposibles, excesivamente verbosas, o requerian bibliotecas no portables.  En C++11, las plantillas pueden tomar numeros variables de parametros. Esto tambien permite la definicion de funciones variadic tipo seguro.  C++03 ofrece dos clases de literales de string (cadena). La primera clase, contenida dentro de comillas dobles, produce un arreglo terminado en null de tipo const char. La segunda clase, definida como L\"\", produce un arreglo terminado en null de tipo const wchar_t, donde wchar_t es un caracter ancho. Ninguno de los tipos literales ofrece soporte para literales de string con UTF-8, UTF-16, o cualquier otra clase de codificaciones de Unicode.  Con el proposito de realzar en los compiladores de C++ el soporte de unicode, la definicion del tipo char ha sido modificada para que tenga por lo menos el tama\u00f1o necesario para almacenar una codificacion UTF-8 de ocho bits y lo suficientemente grande como para contener cualquier miembro del juego de caracteres de ejecucion basicos del compilador. Anteriormente estaba definida solo como esto ultimo.  Ademas de este cambio en la definicion de char, C++11 soportara tres codificaciones de Unicode: UTF-8, UTF-16, y UTF-32, y a\u00f1adira dos nuevos tipos de caracter: char16_t y char32_t. Estos estan dise\u00f1ados para almacenar UTF-16 y UTF-32 respectivamente.  El ejemplo siguiente muestra como crear literales string para cada una de estas codificaciones:  El tipo del primer string es el habitual const char[]. El tipo del segundo string es const char16_t[] y el tipo del tercero es const char32_t[].  Al construir literales de string unicode, a menudo es util insertar codigos de unicode directamente. Para ello, C++11 permitira la siguiente sintaxis:  El numero despues del \\u es un numero hexadecimal; sin necesidad del prefijo 0x. El identificador \\u representa un codigo de unicode de 16 bits; para insertar un codigo de 32 bits, se usa \\U y un numero hexadecimal de 32 bits. Solamente se admiten codigos validos de Unicode. Por ejemplo, los valores en el intervalo U+D800-U+DFFF estan prohibidos, pues estan reservados para los pares sustitutos en las codificaciones UTF-16.  A veces tambien es util evitar secuencias de escape de string manuales, particularmente al usar literales de archivos XML, lenguajes de scripting, o de expresiones regulares. C++11 proporcionara un literal de cadena raw:  En el primer caso, todo entre \"( y )\" es parte del string. Los caracteres \" y \\ no necesitan secuencia de escape. En el segundo caso, el \"delimiter( inicia la cadena, y solamente se termina al encontrar )delimiter\". El delimiter puede ser cualquier literal de hasta 16 caracteres de longitud. Este no puede contener espacios, caracteres de control, o los caracteres \"(\", \")\", o \"\\\". El uso de este delimitador permite que el usuario tenga caracteres \")\" dentro de literales de cadena raw. Por ejemplo, R\"delimiter((a-z))delimiter\" es equivalente a \"(a-z)\".\u200b  Los literales de cadena raw pueden combinarse con los prefijos de literal ancho o con cualquiera de los prefijos de literal unicode:  C++03 proporciona un numero de literales. Los caracteres \"12.5\" son un literal que es resuelto por el compilador como tipo double con el valor de 12.5. Sin embargo, la adicion del sufijo \"f\", como en \"12.5f\", crea un valor del tipo float que contiene el valor 12.5. Los modificadores de sufijo para los literales son fijados por la especificacion del C++, y el codigo de C++ no puede crear nuevos modificadores literales.  C++11 tambien incluira la capacidad para que el usuario defina nuevas clases de modificantes literales que construyan objetos basados en string de caracteres que el literal modifique.  La transformacion de los literales es redefinida en dos fases distintas: raw y cooked (crudo y cocinado). Un literal raw es una secuencia de caracteres de un cierto tipo especifico, mientras que el literal cocinado es de un tipo separado. El literal 1234 de C++, como literal crudo, es esta secuencia de caracteres: '1', '2', '3', '4'. Como literal cocinado, es el numero entero 1234. El literal 0xA de C++ en forma cruda es '0', 'x', 'A', mientras que en forma cocinada es el numero entero 10.  Los literales pueden ser extendidos tanto en formas crudas y cocinadas, con la excepcion de los literales de string, que solo se pueden procesar en forma cocinada. Esta excepcion es debido al hecho de que los string tienen prefijos que afecten al significado y al tipo especificos de los caracteres en cuestion.  Todos los literales definidos por el usuario son sufijos; la definicion de literales de prefijo no es posible.  Los literales definidos por el usuario que procesan la forma cruda del literal son definidos como sigue:  La segunda declaracion ejecuta el codigo definido por la funcion literal definida por el usuario. A esta funcion se le pasa \"1234\" como un string de estilo C, asi que tiene un terminador null.  Un mecanismo alternativo para procesar literales de numero entero y punto flotante crudos es a traves de una plantilla variadic:  Esto instancia la funcion de procesamiento literal como operator \"\" _suffix<'1', '2', '3', '4'>(). En esta forma, no hay caracter null terminal en el string. El proposito principal para hacer esto es utilizar palabra clave constexpr de C++11 y permitir al compilador que el literal sea transformado enteramente en tiempo de compilacion, asumiendo que OutputType es un tipo constexpr construible y copiable, y la funcion de procesamiento literal es una funcion constexpr.  Para los literales numericos, el tipo de literal cocinado es unsigned long long para literales enteros, o long double para los literales de punto flotante. (Nota: No hay necesidad de tipos entero con signo porque un literal con prefijo de signo es parseado como expresion que contiene el signo como operador de prefijo unario seguido del numero sin signo). No hay forma de plantilla alternativa:  Para los literales de string, de acuerdo con los prefijos de string previamente mencionados, son usados:  No hay forma alternativa de plantilla. Los literales de caracter son definidos similarmente.  El comite estandar de C++ planea estandardizar el soporte para la programacion multihilo.  Hay dos partes implicadas: La primera parte es la definicion de un modelo de memoria que permitira que multiples hilos coexistan en un programa, y la definicion del soporte para la interaccion entre los hilos. La segunda parte sera proporcionada via facilidades de la biblioteca. (Ver la seccion de este articulo C++11#Facilidades de hilos).  El modelo de memoria define cuando los multiples hilos pueden tener acceso a la misma posicion de memoria, y especifica cuando las actualizaciones por un hilo llegan a ser visibles a otros hilos.  En un ambiente con multi hilo, es comun que cada hilo tenga algunas variables unicas. Esto actualmente sucede para las variables locales de una funcion, pero no sucede para las variables globales y estaticas.  Para el estandar ha sido propuesto una nueva duracion de almacenamiento de hilo local (thread-local), ademas de las existentes estatico, dinamico y automatico, (static, dynamic, automatic). El almacenamiento de hilo local sera indicado por el especificador de almacenamiento thread_local.  Cualquier objeto que pudiera tener la duracion de almacenamiento estatico (es decir, perdurar durante toda la ejecucion del programa) se le puede dar la duracion de hilo local. Lo que se quiere es que como cualquier otra variable de duracion estatica, un objeto hilo local pueda ser inicializado usando un constructor y destruido usando un destructor.  En C++03, el compilador proporciona, para las clases que no lo proporcionan por si mismas, un constructor por defecto (default), un constructor de copia, un operador de asignacion de copia (operator=), y un destructor. El programador puede sobreescribir estos comportamientos por defecto definiendo versiones personalizadas. C++ tambien define a varios operadores globales (tales como operator= y operator new) que trabajan sobre todas las clases, y que el programador puede sobreescribir.  Sin embargo, hay poco control sobre la creacion de estos comportamientos por defecto. Hacer una clase intrinsecamente no copiable, por ejemplo, requiere la declaracion de un constructor de copia y de un operador de asignacion privados y la no definicion de ellos. El intentar usar estas funciones es una violacion de la regla de una sola definicion. Como no se requiere un mensaje de diagnostico,\u200b esto da lugar tipicamente a un error del enlazador (linker).[cita\u00a0requerida]  En el caso del constructor default, el compilador no generara un constructor por defecto si una clase es definida con cualquier constructor. Esto es util en muchos casos, pero es tambien util para poder tener constructores especializados y el de defecto generado por el compilador.  C++11 permitira el default y delete explicito de estas funciones miembro especiales. Por ejemplo, el tipo siguiente declara explicitamente que esta usando al constructor default:  Alternativamente, ciertas caracteristicas pueden ser inhabilitadas explicitamente. Por ejemplo, el tipo siguiente es no copiable:  El especificador = delete puede ser usado para prohibir llamar cualquier funcion, lo cual puede ser usado para rechazar la llamada de una funcion de miembro con parametros particulares. Por ejemplo:  Un intento de llamar a f() con un int sera rechazado por el compilador, en vez de realizar una conversion silenciosa a double. Esto puede ser generalizado para rechazar la llamada de la funcion con cualquier tipo con excepcion de doble, de la siguiente manera:  En C++03, el mas grande tipo entero es long int. Esta garantizado que tenga por lo menos tantos bits usables como int. Esto resultaba en que long int tuviera un tama\u00f1o de 64 bits en algunas implementaciones populares y 32 bits en otras. Para abordar este problema, C++11 agrega un nuevo tipo entero long long int. Esta garantizado que sea por lo menos tan grande como un long int, y que tenga no menos de 64 bits. El tipo fue originalmente introducido al C estandar con C99, y la mayoria de los compiladores de C++ ya lo soportan como extension.\u200b\u200b  C++03 proporciona dos metodos para probar aserciones: el macro assert y la directiva de preprocesador #error. Sin embargo, ninguno es apropiado para el uso en plantillas: el macro prueba la asercion en tiempo de ejecucion, mientras que la directiva del preprocesador prueba la asercion durante el preprocesamiento, que sucede antes de la instanciacion de las plantillas. Ninguno es apropiado para probar las propiedades que son dependientes de parametros de plantillas.  La nueva utilidad introduce una nueva manera de probar aserciones en tiempo de compilacion, usando la nueva palabra clave static_assert. La declaracion asume la siguiente forma:  Aqui estan algunos ejemplos de como puede ser usado el static_assert:  Cuando la expresion constante es false el compilador produce un mensaje de error. El primer ejemplo representa una alternativa a la directiva de preprocesador #error, en contraste, en el segundo ejemplo la asercion es chequeada en cada instanciacion de la clase de plantilla Check.  Las aserciones estaticas tambien son utiles fuera de las plantillas. Por ejemplo, una implementacion de un algoritmo pudiera depender de que el tama\u00f1o de un long long fuera mas grande que un int, algo que el estandar no garantiza. Tal asuncion es valida en la mayoria de los sistemas y de los compiladores, pero no todos.  En C++03, el operador sizeof puede ser usado en tipos y objetos. Pero no puede ser usado para hacer lo siguiente:  Esto permite en C++11 retornar el tama\u00f1o de OtherType. C++03 no permite esto, asi que es un error de compilacion.  La implementacion define si los objetos dinamicamente asignados que se vuelvan inalcanzables son reclamados automaticamente.  Un numero de nuevas caracteristicas seran introducidas en la biblioteca estandar del C++11. Muchos de estas caracteristicas pueden ser implementadas bajo el estandar actual, pero algunas dependen, en mayor o menor medida, en nuevas caracteristicas del nucleo de C++11.  Una gran parte de las nuevas bibliotecas son definidas en el C++ Technical Report 1 (Reporte Tecnico 1 de C++) (llamado TR1), publicado en 2005. Estan disponibles actualmente varias implementaciones completas y parciales del TR1 usando el namespace std::tr1. Para C++11 seran movidas al namespace std. Sin embargo, a medida que las caracteristicas del TR1 son llevadas a la biblioteca estandar de C++11, cuando sea apropiado, estas son actualizadas con caracteristicas del lenguaje de C++ que no estaban disponibles en la version inicial del TR1. Tambien, pueden ser mejoradas con las caracteristicas que eran posibles debajo el C++03, pero no eran parte de la especificacion original del TR1.  El comite se prepone crear un segundo reporte tecnico (llamado TR2) despues de que este completa la estandardizacion de C++11. Las propuestas de biblioteca que no esten listas para C++11 seran puestas en el TR2 u otros reportes tecnicos.  Las siguientes propuestas estan en curso para el C++11.  C++11 ofrece un numero de nuevas caracteristicas de lenguaje de las cuales se pueden beneficiar los actuales componentes de la biblioteca estandar. Por ejemplo, la mayoria de los containers (contenedores) de la biblioteca estandar pueden beneficiarse en la referencia Rvalue basada en el soporte del move constructor, tanto para mover rapidamente contenedores pesados alrededor, como para mover el contenido de esos contenedores a nuevas localizaciones de memoria. Los componentes de la biblioteca estandar seran actualizados con las nuevas caracteristicas de lenguaje C++11 cuando sea apropiado. Estas incluyen, pero no se limitan necesariamente a:  Adicionalmente, ha pasado mucho tiempo desde que C++ fue estandardizado. Se ha escrito una gran cantidad de codigo usando la biblioteca estandar; esto ha revelado porciones de las bibliotecas estandar que podrian usar alguna mejora. Entre las muchas areas de mejoras que son consideradas son los allocators de la biblioteca estandar. Un nuevo modelo basado en ambito (scope) de allocators sera incluido en el C++11 para complementar el modelo actual.  Mientras que el lenguaje C++11 proporcionara un modelo de memoria que soporta hilos (threading), el soporte primario para usar realmente hilos vendra con la biblioteca estandar del C++11.  Sera proporcionada una clase de tipo hilo (std::thread). Para correr el nuevo hilo, esta clase tomara un objeto funcion y opcionalmente una serie de argumentos. Sera posible hacer que un hilo se detenga hasta que otro hilo en ejecucion termine, proporcionando soporte de thread joining a traves de la funcion de miembro std::thread::join(). De ser posible, tambien sera proporcionado el acceso a los objetos nativos de hilo subyacentes para las operaciones especificas de la plataforma, por medio de la funcion de miembro std::thread::native_handle().  Para la sincronizacion entre los hilos, seran agregadas a la biblioteca mutexes apropiados (std::mutex, std::recursive_mutex, etc) y variables de condicion (std::condition_variable y std::condition_variable_any). Esto sera accesible con locks RAII (std::lock_guard y std::unique_lock) y algoritmos de bloqueo (locking) para facil uso.  Para el trabajo de bajo nivel de alto rendimiento, a veces es necesario la comunicacion entre los hilos sin el overhead de los mutexes. Esto es alcanzado usando operaciones atomicas en localizaciones de memoria. Estas pueden opcionalmente especificar las restricciones de visibilidad de memoria minimas requeridas para una operacion. Las barreras de memoria explicitas tambien pueden ser usadas para este proposito.  La biblioteca de hilo del C++11 tambien incluira futuros y promesas para pasar resultados asincronicos entre los hilos, y el std::packaged_task para envolver (wrapping) una llamada de funcion que puede generar tal resultado asincronico. La propuesta de futuros fue criticada porque carece de una manera de combinar futuros y comprobar la terminacion de un interior de una promesa dentro de un conjunto de promesas.\u200b  Otras facilidades de hilo de alto nivel tales como thread pools han sido remitidas a un futuro informe tecnico del C++. No seran una parte de C++11, pero su eventual implementacion es esperada a ser construida enteramente en el tope de las caracteristicas de la biblioteca de hilos.  La nueva facilidad std::async facility proporciona un metodo conveniente de correr tareas y de atarlas a un std::future. El usuario puede elegir si la tarea debe correr asincronicamente en un hilo separado, o sincronicamente en un hilo que espere por el valor. Por defecto la implementacion puede elegir, lo que proporciona una manera facil de tomar ventaja de la concurrencia del hardware sin la sobresubscripcion (oversubscription), y proporciona algunas de las ventajas de un thread pool para los usos simples.  Los tuples son colecciones compuestas por los objetos heterogeneos de dimensiones pre-arregladas. Un tuple puede ser considerado una generalizacion de un miembro de estructura de las variables.  La version C++11 del tuple del TR1 se beneficiara de las caracteristicas C++11 como plantillas variadic. La version TR1 requeria un maximo numero de tipos de contenedor definido por la implementacion, y requeria una sustancial cantidad de trucos de macro para implementarse razonablemente. Por contraste, la implementacion de la version C++11 no requiere ningun numero maximo de tipos definidos explicitamente por la implementacion. Aunque los compiladores casi ciertamente tendran una profundidad interna maxima de recursion para la instanciacion de plantillas (lo cual es normal), la version de tuples de C++11 no expondra este valor al usuario.  Usando plantillas variadic, la declaracion de clase tuple se ve como sigue:  Un ejemplo de la definicion y uso del tipo tuple:  Es posible crear el tuple proof sin la definicion de su contenido, pero solamente si los tipos de elementos del tuple poseen constructores por defecto. Por otra parte, es posible asignar un tuple a otro tuple: si los tipos de los dos tuples son iguales, es necesario que cada tipo de elemento posea un constructor copy; de lo contrario, es necesario que cada tipo de elemento del tuple del lado derecho sea convertible al elemento correspondiente del tuple del lado izquierdo, o que el tipo de elemento correspondiente del tuple del lado izquierdo tenga un constructor conveniente.  Hay disponibles Los operadores relacionales (entre tuples con el mismo numero de elementos), y hay disponibles dos expresiones para comprobar las caracteristicas de un tuple (solamente durante la compilacion):  Una de las peticiones que mas se repiten es la inclusion en la biblioteca estandar de C++ de las tablas hash (contenedores asociativos sin orden). No fue adoptada en el estandar actual solo debido a restricciones de tiempo. Aunque esta solucion es menos eficiente que un arbol balanceado en el peor caso (en presencia de muchas colisiones), en muchas aplicaciones verdaderas se desempe\u00f1a mejor.  Las colisiones seran manejadas solo a traves de encadenamiento lineal porque el comite no considera oportuno estandardizar soluciones de direccionamiento abierto que introducen bastantes de problemas intrinsecos (sobre todo cuando es admitido el borrado de elementos). Para evitar los choques de nombres con las bibliotecas no estandar que desarrollaran sus propias implementaciones de la tabla hash, sera utilizado el prefijo \"unordered\" en vez del \"hash\".  La nueva utilidad tendra cuatro tipos de tablas hash, diferenciados en si aceptan o no elementos con la misma clave (claves unicas o claves equivalentes), y si mapean cada clave a un valor asociado.  Las nuevas clases satisfacen todos los requisitos de una clase container, y tienen todos los metodos necesarios para acceder elementos: insert, erase, begin, end.  Esta nueva utilidad no necesita ninguna extension del nucleo del lenguaje de C++, solamente una peque\u00f1a extension del encabezado <functional> y la introduccion de encabezados <unordered_set> y <unordered_map>, (aunque la implementacion tomara ventajas de varias caracteristicas del lenguaje C++11). No son necesarios otros cambios a cualquier clase estandar existente, y no depende de ninguna de las otras extensiones de la biblioteca estandar.  Muchas bibliotecas estandarizadas fueron creadas para manejar expresiones regulares. Puesto que el uso de estos algoritmos es muy comun, la biblioteca estandar los incluira usando todas las potencialidades de un lenguaje orientado a objetos.  La nueva biblioteca, definida en el nuevo encabezado <regex>, esta hecha de un par de clases:  La funcion std::regex_search es usada para buscar, mientras que para \u2018busqueda y reemplazo\u2019 es usada la funcion std::regex_replace, la cual retorna un nuevo string. Los algoritmos std::regex_search y std::regex_replace toman una expresion regular y un string y escriben las ocurrencias encontradas en la estructura std::match_results.  Aqui hay un ejemplo en el uso del std::match_results:  Note que se usan dobles barras inversas debido a que C++ usa la barra inversa simple como un caracter de escape. La caracteristica raw string del C++11 pudiera usarse para evitar este problema.  La biblioteca <regex> no requiere ni la alteracion de cualquier encabezado existente, (aunque los usara cuando sea apropiado), ni una extension del nucleo del lenguaje.  C++11 proporciona el std::unique_ptr, como tambien mejoras al std::shared_ptr  y  std::weak_ptr del TR1. std::auto_ptr es obsoleto.  La biblioteca estandar de C proporciona la capacidad de generar numeros pseudaleatorios (random) a traves de la funcion rand. Sin embargo, el algoritmo es delegado enteramente al proveedor de la biblioteca. C++ heredo esta funcionalidad sin cambios, pero C++11 proporcionara un nuevo metodo para generar numeros pseudaleatorios.  La funcionalidad del numero al azar (random) de C++11 esta dividida en dos partes: un motor generador que contiene el estado del generador de numero al azar y produce los numeros pseudaleatorios; y una distribucion, que determina el rango y la distribucion matematica del resultado. Estos dos son combinados para formar un objeto generador de numeros al azar.  A diferencia del rand estandar de C, el mecanismo del C++11 vendra con tres algoritmos de motor generador, cada uno con sus propias fuerzas y debilidades:  C++11 tambien proporcionara un numero de distribuciones estandar: uniform_int_distribution, bernoulli_distribution, geometric_distribution, poisson_distribution, binomial_distribution, uniform_real_distribution, exponential_distribution, normal_distribution, y gamma_distribution  El generador y las distribuciones son combinados como en el ejemplo siguiente:  Una referencia wrapper (envoltura) es obtenida de una instancia de la clase de plantilla reference_wrapper. Las referencias wrapper son similares a las referencias normales (\u2018&\u2019) del lenguaje C++. Para obtener una referencia wrapper de cualquier objeto es usada la referencia de plantilla de funcion ref (para una referencia constante es usado cref).  Las referencias wrapper son utiles sobre todo para las plantillas de funcion, donde son necesarias las referencias a los parametros en vez de a las copias:  Esta nueva utilidad sera agregada al encabezado existente <utility> y no necesita otras extensiones del lenguaje C++.  Los envoltorios polimorficos para los objetos de funcion son similares a los punteros de funcion en la semantica y la sintaxis, pero son menos fuertemente enlazados (tightly bound) y pueden referir indiscriminadamente cualquier cosa que puede ser llamada (punteros de funcion, punteros de miembro de funcion, o functors) cuyos argumentos son compatibles con las del envoltorio.  Con el ejemplo es posible entender sus caracteristicas:  La funcion de clase de plantilla sera definida dentro del encabezado <functional>, y no requiere ningun cambio al lenguaje C++.  La metaprogramacion consiste en crear un programa que crea o modifica otro programa (o a si mismo). Esto puede suceder durante la compilacion o durante la ejecucion. El comite de estandares de C++ ha decidido introducir una biblioteca que permite la metaprogramacion durante la compilacion a traves de plantillas.  Aqui hay un ejemplo de un meta-programa, usando el estandar actual de C++03: una recursion de instancias de plantillas para calcular exponentes enteros:  Muchos algoritmos pueden operar en diferentes tipos de datos; Las plantillas de C++ soportan la programacion generica y hacen el codigo mas compacto y util. Sin embargo es comun para los algoritmos necesitar informacion sobre los tipos de datos que son usados. Esta informacion puede ser extraida durante la instanciacion de una clase de plantilla usando type traits.  El type traits puede identificar la categoria de un objeto y todas las caracteristicas de una clase (o de un struct). Son definidos en el nuevo encabezado <type_traits>..  En el ejemplo siguiente esta la funcion de plantilla 'elaborate' que, dependiendo de los tipos de datos dados, instanciara uno de los dos algoritmos propuestos (algorithm.do_it).  A traves del type traits, definido en encabezado <type_transform>, es tambien posible crear operaciones de transformacion de tipos (static_cast y const_cast son insuficientes dentro de una plantilla).  Este tipo de programacion produce un codigo elegante y conciso; sin embargo el punto debil de estas tecnicas es la depuracion: incomodo durante la compilacion y muy dificil durante la ejecucion del programa.  La determinacion del tipo de retorno de un objeto de funcion de plantilla en tiempo de compilacion no es intuitiva, particularmente si el valor de retorno depende de los parametros de la funcion. Como un ejemplo:  Instanciar la plantilla de clase Calculus<Clear>, el objeto de funcion de calculus tendra siempre el mismo tipo de retorno que el objeto de funcion de Clear.. Sin embargo, dada la clase Confused de abajo:  El intentar instanciar Calculus<Confused> causara que el tipo de retorno de Calculus no sea igual que el de clase Confused. El compilador puede generar advertencias acerca de la conversion desde int a double y viceversa.  El TR1 introduce, y C++11 adopta, la clase de plantilla std::result_of que permite que uno determine y que use el tipo de retorno de un objeto de funcion para cada declaracion. El objeto CalculusVer2 usa al objeto std::result_of para derivar el tipo de retorno del objeto de funcion:  De esta manera en instancias del objeto de funcion CalculusVer2<Confused> no hay conversiones, advertencias, o errores.  El unico cambio de la version TR1 del std::result_of es que la version TR1 permitia a una implementacion fallar para poder determinar el tipo del resultado de una llamada de funcion. Debido a los cambios a C++ para soportar decltype, la version C++11 del std::result_of ya no necesita estos casos especiales; son requeridas las implementaciones para computar un tipo en todos los casos.  Movidas a otro reporte:  Pospuestas: ","snippet":"C++11 es una version del lenguaje de programacion C++ estandar aprobado por la Organizacion Internacional de Normalizacion (ISO) el 12 de agosto de 2011, reemplazando al anterior C++03. A partir del 1","enlaces_salientes":["C%2B%2B11","C%2B%2B11","C%2B%2B11","C%2B%2B14","C%2B%2B17","Multithreading","Programaci%C3%B3n_gen%C3%A9rica","Tiempo_de_ejecuci%C3%B3n","Tiempo_de_compilaci%C3%B3n","Compilador","Hard_code","C%C3%B3digo_duplicado","C_Sharp","Lenguaje_Java","Parser","Delegaci%C3%B3n_(inform%C3%A1tica)","Java_(lenguaje_de_programaci%C3%B3n)","C_Sharp","D_(lenguaje_de_programaci%C3%B3n)","String","Multitarea","Hilo_(inform%C3%A1tica)","Clase_(inform%C3%A1tica)","Objeto_(programaci%C3%B3n)","Recolecci%C3%B3n_de_basura","Argumento_(inform%C3%A1tica)","String","Vector_(inform%C3%A1tica)","UTF-8","UTF-16","Unicode","UTF-8","Bit","Juego_de_caracteres","UTF-8","UTF-16","Hexadecimal","XML","Lenguaje_de_script","Expresi%C3%B3n_regular","Punto_flotante","Hilo_(inform%C3%A1tica)","Variable_(programaci%C3%B3n)","C99","Aserci%C3%B3n_(inform%C3%A1tica)","Biblioteca_(inform%C3%A1tica)","Biblioteca_est%C3%A1ndar_de_C%2B%2B","Hilo_(inform%C3%A1tica)","Tabla_hash","Expresi%C3%B3n_regular","Mutex","Monitor_(concurrencia)","RAII","Instrucci%C3%B3n_at%C3%B3mica","Valor_futuro_(inform%C3%A1tica)","Tabla_hash","Expresi%C3%B3n_regular","Algoritmos","Lenguaje_orientado_a_objetos","Barra_inversa","Puntero_inteligente","N%C3%BAmero_pseudoaleatorio","Mersenne_twister","Distribuci%C3%B3n_uniforme_discreta","Distribuci%C3%B3n_de_Bernoulli","Distribuci%C3%B3n_geom%C3%A9trica","Distribuci%C3%B3n_de_Poisson","Distribuci%C3%B3n_binomial","Distribuci%C3%B3n_uniforme_continua","Distribuci%C3%B3n_exponencial","Distribuci%C3%B3n_normal","Distribuci%C3%B3n_gamma","Adapter_(patr%C3%B3n_de_dise%C3%B1o)","Adapter_(patr%C3%B3n_de_dise%C3%B1o)","Polimorfismo_(inform%C3%A1tica)","Metaprogramaci%C3%B3n","Recursi%C3%B3n","Programaci%C3%B3n_gen%C3%A9rica","Recolector_de_basura","Reflexi%C3%B3n_(inform%C3%A1tica)","Dr._Dobb%27s_Journal","C%2B%2B14","C%2B%2B17","ISO","International_Electrotechnical_Commission","ISO/IEC_14882","Wayback_Machine","Control_de_autoridades"]}
{"url":"ALGOL_68","titulo":"ALGOL","contenido":"Se denomina ALGOL (o Algol) a un lenguaje de programacion. La voz es un acronimo de las palabras inglesas Algorithmic Language ('lenguaje algoritmico').  Fue muy popular en las universidades durante los a\u00f1os 1960, pero no llego a cuajar como lenguaje de utilizacion comercial.  Sin embargo, Algol influyo profundamente en varios lenguajes posteriores que si alcanzaron gran difusion, como Pascal, C y Ada.  Hacia 1965 dos corrientes se distinguieron sobre el tema de un sucesor para Algol. Como resultado se definieron los lenguajes Algol W que es un lenguaje minimalista, rapidamente implementado y distribuido y, por otra parte, Algol 68 que para la epoca esta en la frontera entre un lenguaje para programar en el y un lenguaje para investigar sobre el.  Lenguaje elaborado dise\u00f1ado por Niklaus Wirth y Tony Hoare a partir de los trabajos del grupo ALGOL de la IFIP. Se trata de un lenguaje conciso, simple de implementar, que evita todos los defectos conocidos del lenguaje Algol e incluye sus propias caracteristicas adicionales. Sin embargo, el grupo Algol no lo adopto como sucesor de Algol prefiriendo en su lugar al que termino siendo Algol 68. Algol W fue utilizado por gran cantidad de usuarios y sembro el camino para el nacimiento del lenguaje Pascal.  Entre las caracteristicas del lenguaje se destacan: Aritmetica de doble precision, numeros complejos, Strings y estructuras de datos dinamicas, evaluacion por valor, pasaje de parametros por valor, valor resultado o resultado.  La definicion del lenguaje fue presentada en la reunion del comite ALGOL de la IFIP en 1965. Despues de varios a\u00f1os de revision del dise\u00f1o se llego a una version definitiva en 1968. El principal autor es Adriaan van Wijngaarden.  Los objetivos principales de ALGOL 68 son permitir comunicar algoritmos, permitir una eficiente ejecucion de los mismos en diferentes arquitecturas y servir como herramienta para la ense\u00f1anza.  Una caracteristica interesante de ALGOL 68 es que su semantica fue definida formalmente antes de ser implementado en base al formalismo llamado gramaticas de dos niveles.                 ","snippet":"Se denomina ALGOL (o Algol) a un lenguaje de programacion. La voz es un acronimo de las palabras inglesas Algorithmic Language ('lenguaje algoritmico').  Fue muy popular en las universidades durante l","enlaces_salientes":["ALGOL","ALGOL","ALGOL","John_Backus","John_McCarthy_(cient%C3%ADfico)","Peter_Naur","Adriaan_van_Wijngaarden","Paradigma_de_programaci%C3%B3n","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_procedural","Programaci%C3%B3n_estructurada","1958","John_Backus","Alan_Perlis","Peter_Naur","Adriaan_van_Wijngaarden","Julien_Green","John_McCarthy_(cient%C3%ADfico)","Sistema_de_tipos","Fortran","Simula","C_(lenguaje_de_programaci%C3%B3n)","Combined_Programming_Language","Pascal_(lenguaje_de_programaci%C3%B3n)","Ada_(lenguaje_de_programaci%C3%B3n)","BASIC","Lenguaje_de_programaci%C3%B3n","Acr%C3%B3nimo","Idioma_ingl%C3%A9s","Lenguaje_de_programaci%C3%B3n_Pascal","C_(lenguaje_de_programaci%C3%B3n)","Lenguaje_de_programaci%C3%B3n_Ada","Niklaus_Wirth","C._A._R._Hoare","Lenguaje_de_programaci%C3%B3n_Pascal","N%C3%BAmeros_complejos","Adriaan_van_Wijngaarden","ABC_ALGOL","ISSN","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"CLU_(lenguaje_de_programaci%C3%B3n)","titulo":"CLU","contenido":"CLU es un lenguaje de programacion creado por el instituto de tecnologia de Massachusetts (MIT) por Barbara Liskov y sus estudiantes entre 1974 y 1975. Usaba constructores para los tipos de datos abstractos que se incluyeron en el codigo, un paso adelante en la programacion orientada a objetos (POO). No obstante, muchas otras de las caracteristicas de POO estaban incompletas o necesitaban un mayor desarrollo. Por otra parte, el lenguaje se obstaculiza por una sintaxis que en ocasiones puede resultar engorrosa. CLU y Alphard parecen ser ambos lenguajes orientados a objetos completos, sin serlo en realidad.  La sintaxis de CLU esta basada en ALGOL, un punto de partida para el dise\u00f1o de la mayoria de nuevos lenguajes. La incorporacion mas importante es el concepto de cluster, CLU's type extension system and the root of the language's name (CLUster), que viene a significar, \"tipo de extension del sistema del CLU y de la raiz de los nombres de los lenguajes\". Los clusters corresponden generalmente al concepto de \"objeto\" en un lenguaje orientado a objetos, y tienen una sintaxis muy similar. Por ejemplo, a continuacion vemos la sintaxis de CLU para un cluster que implementa numeros complejos:I  Mientras que los clusters ofrecieron un sistema entonces-avanzado para los programas de estructuracion, CLU no ofrecio ninguna clase de estructura para los clusters. Los nombres de los clusters son globales, y no se proporciono ningun mecanismo a los clusters para agruparlos o permitir que sean creados \"localmente\" dentro de otros clusters. Este problema no se da solo en CLU, ya que sorprendentemente muchos lenguajes han carecido de esta caracteristica - el problema se encuentra centralizado en ALGOL, de dar alcance a las variables. Parece ser, que dar alcance a los nombres del cluster/objeto seria una expansion obvia.  CLU no realiza conversiones de tipo implicito. En un cluster, las conversiones tipo explicito \"up\" y \"down\" cambian entre el tipo abstracto y la representacion. Hay un tipo universal \"any\", y un procedimiento force[] para comprobar que un objeto es de un tipo correcto. Los objetos pueden ser mutable o inmutables, este ultimo \"tipos base\" por ejemplo numeros enteros.  Otra caracteristica importante del tipo sistema de CLU son los iteradores, que devuelven objetos de un conjunto, uno detras de otro. Los iteradores son como \"cajas negras\" que ofrecen una interfaz de programacion de aplicaciones API donde no importaba el tipo de datos que estuvieran usando. Asi, el iterador para un conjunto de numeros complejos seria identico que para un array de numeros enteros. Los iteradores son ahora una caracteristica comun de la mayoria de los lenguajes modernos.  Una caracteristica distintiva final en CLU es la asignacion multiple, donde puede aparecer mas de una variable en el lado izquierdo de un operador de asignacion. Por ejemplo, escribiendo x, y = y, x los valores de intercambio de x y de Y. De la misma forma, las funciones podrian retornar varios valores, como x, y, z = f (t).  Todos los objetos en un programa de CLU se declaran al principio, siendo asi, la reserva de memoria automatica. ","snippet":"CLU es un lenguaje de programacion creado por el instituto de tecnologia de Massachusetts (MIT) por Barbara Liskov y sus estudiantes entre 1974 y 1975. Usaba constructores para los tipos de datos abst","enlaces_salientes":["CLU","CLU","CLU","Lenguaje_de_programaci%C3%B3n","MIT","Barbara_Liskov","1974","1975","Programaci%C3%B3n_orientada_a_objetos","ALGOL","N%C3%BAmeros_complejos","ALGOL","Tipo_abstracto","Iterador_(patr%C3%B3n_de_dise%C3%B1o)","Interfaz_de_programaci%C3%B3n_de_aplicaciones","N%C3%BAmeros_complejos","N%C3%BAmeros_enteros","Python","Ruby","Lenguaje_de_programaci%C3%B3n_Ada","Python","C_Sharp","Lenguaje_de_programaci%C3%B3n_C","Control_de_autoridades","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel"]}
{"url":"Lua","titulo":"Lua","contenido":"Lua es un lenguaje de programacion multiparadigma, imperativo, estructurado y bastante ligero, que fue dise\u00f1ado como un lenguaje interpretado con una semantica extendible. Esta dise\u00f1ado principalmente para ser utilizado de manera incorporada en aplicaciones.\u200b Lua es un lenguaje multiplataforma y su interprete esta escrito en ANSI C. El nombre significa \u00abluna\u00bb en portugues.  Lua fue creado en 1993 por Roberto Ierusalimschy, Luis Enrique de Figueiredo y Waldemar Celes, miembros del Grupo de Tecnologia en Computacion Grafica (Tecgraf) en la Pontificia Universidad Catolica de Rio de Janeiro, basandose en una estructura similar a C y Perl.  Las versiones de Lua anteriores a la 5.0 fueron distribuidas bajo una licencia similar a la BSD, de la version 5.0 en adelante se utiliza la licencia MIT, compatible con la GPL.  Lua ha sido usado en muchas aplicaciones comerciales y no comerciales, cuyo numero se incrementa cada a\u00f1o.\u200b  Lua es un lenguaje de programacion suficientemente compacto para usarse en diferentes plataformas. En Lua las variables no tienen tipo, solo los datos y pueden ser logicos, enteros, numeros de coma flotante o cadenas. Estructuras de datos como vectores, conjuntos, tablas hash, listas y registros pueden ser representadas utilizando la unica estructura de datos de Lua: la tabla.  Lua es un lenguaje multiparadigma porque su semantica puede ser extendida y modificada redefiniendo funciones de las estructuras de datos utilizando metatablas, casi como en Perl (asi permite implementar, por ejemplo, la herencia aunque sea ajena al lenguaje). Lua ofrece soporte para funciones de orden superior, recolector de basura. Combinando todo lo anterior, es posible utilizar Lua en programacion orientada a objetos.  Los programas en Lua no son interpretados directamente, sino compilados a codigo bytecode, que es ejecutado en la maquina virtual de Lua. El proceso de compilacion es normalmente transparente al usuario y se realiza en tiempo de ejecucion, pero puede hacerse con anticipacion para aumentar el rendimiento y reducir el uso de la memoria al prescindir del compilador.  Tambien es posible la compilacion en tiempo de ejecucion utilizando LuaJIT.  El clasico programa Hola mundo puede ser escrito de la siguiente manera:  Tambien puede ser escrito como  o el ejemplo dado en el Website de Lua  Los comentarios usan la siguiente sintaxis, similar a Ada, SQL y VHDL  El factorial es un ejemplo de funcion recursiva.  Lua tiene cuatro tipos de bucles: el bucle while, el bucle for numerico y generico y el bucle repeat.  El bucle while tiene esta sintaxis:  La forma del bucle for numerico es:  Otra forma del bucle for es el for generico:   Esta forma itera la tabla _G usando el iterador estandar pairs hasta que retorne  El bucle repeat:  Se ejecuta el cuerpo del bucle al menos una vez, y mantendria el bucle hasta que \u201ccond\u201d se convierta en true. Este es muy similar al do while de otros lenguajes de programacion, salvo que do while se repite mientras cumpla la condicion y en este caso, se repetira hasta que se cumpla la condicion.  Lua esta dise\u00f1ado principalmente para ser incorporado en aplicaciones.\u200b Debido a lo anterior, es comun que sea empleado como lenguaje principal de diversas API para el desarrollo de complementos y modificaciones. Por ejemplo, programas como ZeroBrane Studio, REAPER o Rockbox son extensibles a traves del uso de Lua. Otro programa que hace uso de este lenguaje es Renoise, un DAW escrito en C++ que, en sus ultimas versiones, ofrece la posibilidad de usar el codigo Lua para extender sus capacidades.  De este modo, cualquier usuario con conocimientos del lenguaje Lua y de la propia API disponible de Renoise puede expandir las funcionalidades de este programa a\u00f1adiendo nuevas funciones especificas, disparadas desde los propios menus desplegables o incluso creando ventanas flotantes con interfaz grafica propia, combinando Lua con la compatibilidad OSC y la entrada/salida MIDI. Todo este conjunto permite una personalizacion adicional casi ilimitada de este programa. Incluso Renoise dispone de un terminal propio para editar y ejecutar el codigo Lua, facilitando enormemente la busqueda de errores en el codigo.  El lenguaje tambien ha sido utilizado para procesar datos de entrada en sistemas complejos, configurar aplicaciones, controlar hardware y otras tareas diversas.\u200b  Lenguajes como Lua permiten a las compa\u00f1ias ahorrar costes,[cita\u00a0requerida] al simplificar el trabajo de desarrollo de nuevo software. Por ejemplo, para portear una aplicacion desarrollada con Lua de un sistema operativo a otro, solo es necesario efectuar cambios minimos en el codigo fuente.  Lua es tambien es uno de los lenguajes de programacion mas utilizados para el desarrollo de homebrews de la consola PSP de Sony debido a su sencillez.[cita\u00a0requerida]  Gracias a su simplicidad, Lua ha esta disponible para multiples arquitecturas de procesadores. Existen versiones de Lua para videoconsolas como PSP, Wii y SEGA Saturn, que usa librerias propias de SEGA.  Debido a que Lua es un lenguaje ligero, relativamente rapido y tiene una licencia permisiva, ha ganado seguidores entre los desarrolladores de videojuegos. El motor grafico de Crytek, CryEngine, esta programado en Lua, ademas de en C++.[cita\u00a0requerida] LOVE2D es otro motor de videojuegos que permite la creacion de videojuegos multiplataforma utilizando Lua.\u200b Empresas como Valve, Electronic Arts y Bethesda han cambiado porciones de bases de codigo de C++ a Lua.[cita\u00a0requerida]  Otros videojuegos y motores de juego que hacen uso de Lua son:  Lua se puede implementar de muchas formas en el juego de rol RPG de Tibia siempre y cuando existan las funciones y acciones secundarias en tu consola, mucha gente usa el lenguaje de Lua para hacer sistemas, scripts, mods para servidores de Tibia y esto beneficia al publico en general que abre un servidor de Tibia.[cita\u00a0requerida] ","snippet":"Lua es un lenguaje de programacion multiparadigma, imperativo, estructurado y bastante ligero, que fue dise\u00f1ado como un lenguaje interpretado con una semantica extendible. Esta dise\u00f1ado principalmente","enlaces_salientes":["Lua","Lua","Lua","L%C3%BAa","Extensi%C3%B3n_de_archivo","Paradigma_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n_interpretado","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_por_procedimientos","Programaci%C3%B3n_basada_en_prototipos","Programaci%C3%B3n_orientada_a_objetos","Programaci%C3%B3n_funcional","Sistema_de_tipos","Tipado_din%C3%A1mico","Lenguaje_de_programaci%C3%B3n#Tipos_d\u00e9biles_y_tipos_fuertes","Duck_typing","Scheme","SNOBOL","Modula-2","CLU","C%2B%2B","Io_(lenguaje_de_programaci%C3%B3n)","Falcon_(lenguaje_de_programaci%C3%B3n)","Sistema_operativo","Multiplataforma","Licencia_de_software","MIT_License","Lenguaje_de_programaci%C3%B3n","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_estructurada","Lenguaje_de_programaci%C3%B3n_interpretado","Sem%C3%A1ntica","Script","Multiplataforma","ANSI_C","Idioma_portugu%C3%A9s","C_(lenguaje_de_programaci%C3%B3n)","Perl","Licencia_BSD","MIT_License","GNU_General_Public_License","Aplicaci%C3%B3n_inform%C3%A1tica","Variable_(programaci%C3%B3n)","Tipo_de_dato","Dato","Tipo_de_dato_l%C3%B3gico","Entero_(tipo_de_dato)","Tipo_de_dato_real","Cadena_de_caracteres","Estructura_de_datos","Vector_(inform%C3%A1tica)","Conjunto_(inform%C3%A1tica)","Tabla_hash","Lista_(inform%C3%A1tica)","Subrutina","Perl","Herencia_(inform%C3%A1tica)","Funci%C3%B3n_de_orden_superior","Recolector_de_basura","Programaci%C3%B3n_orientada_a_objetos","Compilador","Bytecode","M%C3%A1quina_virtual","Memoria_(inform%C3%A1tica)","Compilaci%C3%B3n_en_tiempo_de_ejecuci%C3%B3n","Hola_mundo","Comentario_(inform%C3%A1tica)","Ada_(lenguaje_de_programaci%C3%B3n)","SQL","VHDL","Factorial","Recursi%C3%B3n_(ciencias_de_computaci%C3%B3n)","Bucle_while","Bucle_for","Interfaz_de_programaci%C3%B3n_de_aplicaciones","Complemento_(inform%C3%A1tica)","Rockbox","Renoise","DAW","OSC","MIDI","Hardware","Ion_WM","Awesome","Portabilidad","Homebrew","PlayStation_Portable","Sony","Arquitectura_de_computadoras","PlayStation_Portable","Wii","Sega_Saturn","SEGA","Videojuego","Valve_Corporation","Electronic_Arts","Bethesda_Softworks","Base_de_c%C3%B3digo","World_of_Warcraft","Interfaz_gr%C3%A1fica_de_usuario","Half-Life_2","Garry%27s_Mod","Half-Life_2","Videojuego_de_estrategia_en_tiempo_real","Supreme_Commander","Videojuego_de_rol","Tibia_(videojuego)","Extensible_Markup_Language","Grim_Fandango","Monkey_Island","Ragnarok_Online","Regnum_Online","Multi_Theft_Auto","Blitzkrieg_(videojuego)","Counter-Strike","StepMania","Hedgewars","Transformice","RailWorks","Factorio","Roblox","Sonic_Robo_Blast_2","Minetest","Grand_Theft_Auto_5","X10","Wayback_Machine","Control_de_autoridades","MediaWiki","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel","Open_Hub","MediaWiki"]}
{"url":"C99","titulo":"C (lenguaje de programacion)","contenido":"B (BCPL, CPL), ALGOL 68,\u200b:\u200a201-208  C es un lenguaje de programacion de proposito general\u200b:\u200a1\u200a originalmente desarrollado por Dennis Ritchie entre 1969 y 1972 en los Laboratorios Bell,\u200b como evolucion del anterior lenguaje B, a su vez basado en BCPL.\u200b:\u200a1\u200a\u200b\u200b  Al igual que B, es un lenguaje orientado a la implementacion de sistemas operativos, concretamente Unix. C es apreciado por la eficiencia del codigo que produce y es el lenguaje de programacion mas popular para crear softwares de sistemas y aplicaciones.  Se trata de un lenguaje de tipos de datos estaticos, debilmente tipado, que dispone de las estructuras tipicas de los lenguajes de alto nivel pero, a su vez, dispone de construcciones del lenguaje que permiten un control a bajo nivel. Los compiladores suelen ofrecer extensiones al lenguaje que posibilitan mezclar codigo en ensamblador con codigo C o acceder directamente a memoria o dispositivos perifericos.  La primera estandarizacion del lenguaje C fue en ANSI, con el estandar X3.159-1989. El lenguaje que define este estandar fue conocido vulgarmente como ANSI C. Posteriormente, en 1990, fue ratificado como estandar ISO (ISO/IEC 9899:1990). La adopcion de este estandar es muy amplia por lo que, si los programas creados lo siguen, el codigo es portable entre plataformas y/o arquitecturas.  Uno de los objetivos de dise\u00f1o del lenguaje C es que solo sean necesarias pocas instrucciones en lenguaje maquina para traducir cada elemento del lenguaje, sin que haga falta un soporte intenso en tiempo de ejecucion. Es muy posible escribir C a bajo nivel de abstraccion; de hecho, C se uso como intermediario entre diferentes lenguajes.  En parte, a causa de ser de relativamente bajo nivel y de tener un modesto conjunto de caracteristicas, se pueden desarrollar compiladores de C facilmente. En consecuencia, el lenguaje C esta disponible en un amplio abanico de plataformas (mas que cualquier otro lenguaje). Ademas, a pesar de su naturaleza de bajo nivel, el lenguaje se desarrollo para incentivar la programacion independiente de la maquina. Un programa escrito cumpliendo los estandares e intentando que sea portatil puede compilarse en muchos computadores.  C se desarrollo originalmente (conjuntamente con el sistema operativo Unix, con el que ha estado asociado mucho tiempo) por programadores para programadores. Sin embargo, ha alcanzado una popularidad enorme, y se ha usado en contextos muy alejados de la programacion de software de sistema, para la que se dise\u00f1o originalmente.  Los programadores novatos deben tener cuidado con la gestion de la memoria; en C el programador ha de reservar y liberar la memoria explicitamente. En otros lenguajes (como C# o Java) la memoria es gestionada de forma transparente para el programador. Esto alivia la carga de trabajo y evita errores, pero le quita flexibilidad al lenguaje para escribir controladores del hardware.  Por esta razon es muy importante que los recien iniciados adopten buenas practicas a la hora de escribir en C y manejar la memoria, como por ejemplo un uso intensivo de indentacion y conocer a fondo todo lo que implica el manejo de punteros y direcciones de memoria.  Aunque la lista de las caracteristicas utiles de las que carece C es larga, este factor ha sido importante para su aceptacion, porque escribir rapidamente nuevos compiladores para nuevas plataformas, mantiene lo que realmente hace el programa bajo el control directo del programador, y permite implementar la solucion mas natural para cada plataforma. Esta es la causa de que a menudo C sea mas eficiente que otros lenguajes. Tipicamente, solo la programacion cuidadosa en lenguaje ensamblador produce un codigo mas rapido, pues da control total sobre la maquina, aunque los avances en los compiladores de C y la complejidad creciente de los microprocesadores modernos han reducido gradualmente esta diferencia.  El lenguaje se puede extender mediante bibliotecas y macros. Por ejemplo, la implementacion original de C++ consistia en un preprocesador que traducia codigo fuente Q++ a Q  El desarrollo inicial de C se llevo a cabo en los Laboratorios Bell de AT&T entre 1969 y 1973; segun Dennis Ritchie, el periodo mas creativo tuvo lugar en 1972.\u200b Se le dio el nombre \"C\" porque muchas de sus caracteristicas fueron tomadas de un lenguaje anterior llamado \"B\".  Hay muchas leyendas acerca del origen de C y el sistema operativo con el que esta intimamente relacionado, Unix. Algunas de ellas son:  En 1973, el lenguaje C se habia vuelto tan potente que la mayor parte del kernel Unix, originalmente escrito en el lenguaje ensamblador PDP-11, fue reescrita en C.\u200b Este fue uno de los primeros nucleos de sistema operativo implementados en un lenguaje distinto al ensamblador. (Algunos casos anteriores son el sistema Multics, escrito en PL/I, y Master Control Program para el B5000 de Burroughs, escrito en ALGOL en 1961).  En 1978, Ritchie y Brian Kernighan publicaron la primera edicion de El lenguaje de programacion C, tambien conocido como La biblia de C. Este libro fue durante a\u00f1os la especificacion informal del lenguaje.\u200b:\u200a2\u200a El lenguaje descrito en este libro recibe habitualmente el nombre de \"el C de Kernighan y Ritchie\" o simplemente \"K&R C\" (La segunda edicion del libro cubre el estandar ANSI C, descrito mas abajo).  Kernighan y Ritchie introdujeron las siguientes caracteristicas al lenguaje:  El C de Kernighan y Ritchie es el subconjunto mas basico del lenguaje que un compilador debe de soportar. Durante muchos a\u00f1os, incluso tras la introduccion del ANSI C, fue considerado \"el minimo comun denominador\" en el que los programadores debian programar cuando deseaban que sus programas fueran transportables, pues no todos los compiladores soportaban completamente ANSI, y el codigo razonablemente bien escrito en K&R C es tambien codigo ANSI C valido.  En las primeras versiones del lenguaje, la definicion de funciones se hacia mediante un 'prototipo de funcion' (function prototype), el cual indicaba al compilador el tipo de retorno de la funcion. Aunque este metodo tiene una gran desventaja respecto al nuevo, debido a que no comprueba el numero ni el tipo en la lista de argumentos; en otras palabras, es mucho mas facil cometer errores al hacer una llamada a una funcion con argumentos incorrectos.  Ejemplo del \"viejo estilo\":  Ejemplo de la nueva definicion:  (*) Por defecto, el tipo de retorno en C es int, por lo que la declaracion entera int power(); podria haberse omitido.  En los a\u00f1os siguientes a la publicacion del C de Kernighan y Ritchie, se a\u00f1adieron al lenguaje muchas caracteristicas no oficiales, que estaba soportadas por los compiladores de AT&T, entre otros. Algunas de estas caracteristicas eran:  A finales de la decada de 1970, C empezo a sustituir a BASIC como lenguaje de programacion de microcomputadores predominante. Durante la decada de 1980 se empezo a usar en los IBM PC, lo que incremento su popularidad significativamente. Al mismo tiempo, Bjarne Stroustrup empezo a trabajar con algunos compa\u00f1eros de Bell Labs para a\u00f1adir funcionalidades de programacion orientada a objetos a C. El lenguaje que crearon, llamado C++, es hoy en dia el lenguaje de programacion de aplicaciones mas comun en el sistema operativo Microsoft Windows; mientras que C sigue siendo mas popular en el entorno Unix. Otro lenguaje que se desarrollo en esa epoca, Objective C, tambien a\u00f1adio caracteristicas de programacion orientada a objetos a C. Aunque hoy en dia no es tan popular como C++, se usa para desarrollar aplicaciones Cocoa para Mac OS X.  En 1983, el Instituto Nacional Estadounidense de Estandares (ANSI) organizo un comite, X3j11, para establecer una especificacion estandar de C. Tras un proceso largo y arduo, se completo el estandar en 1989 y se ratifico como el \"Lenguaje de Programacion C\" ANSI X3.159-1989. Esta version del lenguaje se conoce a menudo como ANSI C, o a veces como C89 (para distinguirla de C99).  En 1990, el estandar ANSI (con algunas modificaciones menores) fue adoptado por la Organizacion Internacional para la Estandarizacion (ISO) en el estandar ISO/IEC 9899:1990. Esta version se conoce a veces como C90. No obstante, \"C89\" y \"C90\" se refieren en esencia al mismo lenguaje.  Uno de los objetivos del proceso de estandarizacion del ANSI C fue producir una extension al C de Kernighan y Ritchie, incorporando muchas funcionalidades no oficiales. Sin embargo, el comite de estandarizacion incluyo tambien muchas funcionalidades nuevas, como prototipos de funcion, y un preprocesador mejorado. Tambien se cambio la sintaxis de la declaracion de parametros para hacerla semejante a la empleada habitualmente en C++:  paso a ser:  ANSI C esta soportado hoy en dia por casi la totalidad de los compiladores. La mayoria del codigo C que se escribe actualmente esta basado en ANSI C. Cualquier programa escrito solo en C estandar sin codigo que dependa de un hardware determinado funciona correctamente en cualquier plataforma que disponga de una implementacion de C compatible. Sin embargo, muchos programas han sido escritos de forma que solo pueden compilarse en una cierta plataforma, o con un compilador concreto, esto puede ser debido a diversos motivos:  La macro __STDC__ puede usarse para dividir el codigo en secciones ANSI y K&R para el compilador.  Algunos programadores recomiendan usar \"#if __STDC__\", como en el ejemplo, en lugar de \"#ifdef __STDC__\" porque algunos compiladores le asignan el valor cero a __STDC__ para indicar que no son compatibles con ANSI.  En el siguiente ejemplo, el programa pide al usuario que introduzca un numero. El programa dividira dicho numero entre 2 e imprimira el resultado mientras que este sea par, y terminara cuando el numero sea impar:  Tras el proceso de estandarizacion de ANSI, la especificacion del lenguaje C permanecio relativamente estable durante algun tiempo, mientras que C++ siguio evolucionando. Sin embargo, el estandar continuo bajo revision a finales de la decada de 1990, lo que llevo a la publicacion del estandar ISO 9899:1999 en 1999.\u200b Este estandar se denomina habitualmente \"C99\". Se adopto como estandar ANSI en marzo de 2000.  Las nuevas caracteristicas de C99 incluyen:\u200b:\u200axi\u2013xii  El compilador GCC, entre muchos otros, soportan hoy en dia la mayoria de las nuevas caracteristicas de C99. Sin embargo, este nuevo estandar ha tenido poca acogida entre algunos desarrolladores de compiladores, como Microsoft y Borland, que se han centrado en C++. Brandon Bray, de Microsoft, dijo a este respecto:  C11 (antes conocido como C2X) es un nombre informal para ISO/IEC 9899:2011\u200b. El borrador final, N1570, fue publicado en abril de 2011.\u200b El nuevo estandar supero su ultima revision el 10 de octubre de 2011 y fue oficialmente ratificado por la ISO y publicado el 8 de diciembre de 2011.  Historicamente la programacion en C embebido ha requerido extensiones no estandar del lenguaje C para implementar caracteristicas no oficiales tales como aritmetica de punto fijo y operaciones basicas de entrada y salida.  En 2008 el comite de estandarizacion de C, para implementar estas caracteristicas no oficiales, publico un informe tecnico en el que extendia el lenguaje C proporcionando un estandar comun al que todas las implementaciones se podian adherir. Incluia varias caracteristicas no disponibles en C normal, tales como aritmetica de punto fijo, espacios de direcciones con nombres y direccionamiento por hardware de entrada y salida basico.  El ultimo estandar publicado para C ISO/IEC 9899:2018.\u200b  Desde el inicio del lenguaje han surgido varias ramas de evolucion que han generado varios lenguajes:  Tambien se han creado numerosos lenguajes inspirados en la sintaxis de C, pero que no son compatibles con el:  La compilacion de un programa C se realiza en varias fases que normalmente son automatizadas y ocultadas por los entornos de desarrollo:  El siguiente programa imprime en pantalla la frase \"Hola Mundo\" (C99).   El siguiente programa muestra el uso de punteros en C. El siguiente escribe \"Hola Mundo\" en C89  Estructura de control \"else if\"  Al programar en C, es habitual usar algunas herramientas de programacion de uso muy extendido, sobre todo en entorno de tipo Unix:  Hecho principalmente para la fluidez de programacion en sistemas Unix. Se usa tambien para el desarrollo de otros sistemas operativos como Windows o GNU/Linux. Igualmente para aplicaciones de escritorio como GIMP, cuyo principal lenguaje de programacion es C.  De la misma forma, es muy usado en aplicaciones cientificas (para experimentos informaticos, fisicos, quimicos, matematicos, entre otros, parte de ellos conocidos como modelos y simuladores), industriales (industria robotica, cibernetica, sistemas de informacion y base de datos para la industria petrolera y petroquimica. Predominan tambien todo lo que se refiere a simulacion de maquinas de manufactura), simulaciones de vuelo (es la mas delicada, ya que se tienen que usar demasiados recursos tanto de hardware como de software para desarrollar aplicaciones que permitan simular el vuelo real de una aeronave). Se aplica por tanto, en diversas areas desconocidas por gran parte de los usuarios noveles.  Los ordenadores de finales de los 90 son varios ordenes de magnitud mas potentes que las maquinas en que C se desarrollo originalmente. Programas escritos en lenguajes de tipo dinamico y facil codificacion (Ruby, Python, Perl...) que anta\u00f1o hubieran resultado demasiado lentos, son lo bastante rapidos como para desplazar en uso a C. Aun asi, se puede seguir encontrando codigo C en grandes desarrollos de animaciones, modelados y escenas en 3D en peliculas y otras aplicaciones multimedia.  Actualmente, los grandes proyectos de software se dividen en partes, dentro de un equipo de desarrollo. Aquellas partes que son mas \"burocraticas\" o \"de gestion\" con los recursos del sistema, se suelen realizar en lenguajes de tipo dinamico o de guion (script), mientras que aquellas partes \"criticas\", por su necesidad de rapidez de ejecucion, se realizan en un lenguaje de tipo compilado, como C o C++. Si, despues de hacer la division, las partes criticas no superan un cierto porcentaje del total (aproximadamente el 10%) entonces todo el desarrollo se realiza con lenguajes dinamicos. Si la parte critica no llega a cumplir las expectativas del proyecto, se comparan las alternativas de una inversion en nuevo hardware frente a invertir en el coste de un programador para que reescriba dicha parte critica.  C es el lenguaje comun para programar sistemas embebidos.[cita\u00a0requerida] El codigo ligero que un compilador C genera, combinado con la capacidad de acceso a capas del software cercanas al hardware son la causa de su popularidad en estas aplicaciones.  Una caracteristica donde C demuestra comodidad de uso particularmente valiosa en sistemas embebidos es la manipulacion de bits. Los sistemas contienen registros mapeados en memoria (en ingles, MMR) a traves de los cuales los perifericos se configuran. Estos registros mezclan varias configuraciones en la misma direccion de memoria, aunque en bits distintos. Con C es posible modificar facilmente uno de estos bits sin alterar el resto. Por ejemplo:  Este tipo de manipulacion es muy tediosa o sencillamente imposible en otros lenguajes de alto nivel, dado que se utilizan operaciones comunes del lenguaje ensamblador como las operaciones a nivel bit OR, AND, SHL y CPL pero que estan disponibles en el lenguaje C.  Otras caracteristicas de C consideradas desventajas en la programacion para PC -como la ausencia de control de memoria automatico- se convierten en ventajas cuando los sistemas embebidos necesitan codigo peque\u00f1o y optimizado. Ese es el caso de los sistemas basados en microcontroladores de poca potencia como el intel 8051 o muchos sistemas ARM.  Una biblioteca de C es una coleccion de funciones utilizadas en el lenguaje de programacion C. Las bibliotecas mas comunes son la biblioteca estandar de C y la biblioteca del estandar ANSI C, la cual provee las especificaciones de los estandares que son ampliamente compartidas entre bibliotecas. La biblioteca ANSI C estandar, incluye funciones para la entrada y salida de archivos, alojamiento de memoria y operaciones con datos comunes: funciones matematicas, funciones de manejo de cadenas de texto y funciones de hora y fecha.  Otras bibliotecas C son aquellas utilizadas para desarrollar sistemas Unix, las cuales proveen interfaces hacia el nucleo. Estas funciones son detalladas en varios estandares tales como POSIX y el Single UNIX Specification.  Ya que muchos programas han sido escritos en el lenguaje C existe una gran variedad de bibliotecas disponibles. Muchas bibliotecas son escritas en C debido a que C genera codigo objeto rapido; los programadores luego generan interfaces a la biblioteca para que las rutinas puedan ser utilizadas desde lenguajes de mayor nivel, tales como Java, Perl y Python. ","snippet":"B (BCPL, CPL), ALGOL 68,\u200b:\u200a201-208  C es un lenguaje de programacion de proposito general\u200b:\u200a1\u200a originalmente desarrollado por Dennis Ritchie entre 1969 y 1972 en los Laboratorios Bell,\u200b como evolucion","enlaces_salientes":["C_(lenguaje_de_programaci%C3%B3n)","C_(lenguaje_de_programaci%C3%B3n)","C_(lenguaje_de_programaci%C3%B3n)","Dennis_Ritchie","Laboratorios_Bell","Extensi%C3%B3n_de_archivo","Paradigma_de_programaci%C3%B3n","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_procedural","Programaci%C3%B3n_estructurada","1972","Dennis_Ritchie","Sistema_de_tipos","GCC","Intel_C%2B%2B_Compiler","Unified_Parallel_C","Cilk","B_(lenguaje_de_programaci%C3%B3n)","BCPL","Combined_Programming_Language","ALGOL#Algol_68","Lenguaje_ensamblador","PL/I","Fortran","Vala_(lenguaje_de_programaci%C3%B3n)","C_Sharp","Objective-C","C%2B%2B","AWK","Lenguaje_de_programaci%C3%B3n_bc","Java_(lenguaje_de_programaci%C3%B3n)","JavaScript","PHP","Perl","D_(lenguaje_de_programaci%C3%B3n)","Go_(lenguaje_de_programaci%C3%B3n)","Rust_(lenguaje_de_programaci%C3%B3n)","Python","Sistema_operativo","Multiplataforma","Lenguaje_de_programaci%C3%B3n","Dennis_Ritchie","1969","1972","Laboratorios_Bell","B_(lenguaje_de_programaci%C3%B3n)","BCPL","Sistema_operativo","Unix","Lenguajes_de_alto_nivel","Lenguaje_de_bajo_nivel","Lenguaje_ensamblador","Memoria_de_ordenador","Dispositivos_perif%C3%A9ricos","ANSI","ANSI_C","ISO","Lenguaje_m%C3%A1quina","Unix","Programaci%C3%B3n","Software_de_sistema","Gesti%C3%B3n_de_archivos","Biblioteca_(inform%C3%A1tica)","Preprocesador","Preprocesador_de_C","Macro","C%C3%B3digo_fuente","Puntero_(programaci%C3%B3n)","Palabra_clave","Control_Data_Corporation","Indentaci%C3%B3n","Recolecci%C3%B3n_de_basura","Sun_Microsystems","Programaci%C3%B3n_orientada_a_objetos","C%2B%2B","GObject","GCC","Multihilo","Compilador","Lenguaje_ensamblador","Microprocesador","C%2B%2B","Dennis_Ritchie","Ken_Thompson","Laboratorios_Bell","AT%26T","Dennis_Ritchie","Lenguaje_de_programaci%C3%B3n_B","Mainframe","Ken_Thompson","Dennis_Ritchie","PDP-7","Sistema_operativo","PDP-11","N%C3%BAcleo_(inform%C3%A1tica)","Multics","PL/I","B5000","ALGOL","Dennis_Ritchie","Brian_Kernighan","El_lenguaje_de_programaci%C3%B3n_C","Especificaci%C3%B3n","ANSI_C","ANSI_C","BASIC","IBM_PC","Bjarne_Stroustrup","C%2B%2B","Microsoft_Windows","Objective_C","Cocoa_(inform%C3%A1tica)","Mac_OS_X","Instituto_Nacional_Estadounidense_de_Est%C3%A1ndares","ANSI_C","Organizaci%C3%B3n_Internacional_para_la_Estandarizaci%C3%B3n","C%2B%2B","D%C3%A9cada_de_1990","Variable_(programaci%C3%B3n)","Booleano","N%C3%BAmeros_complejos","Array","BCPL","Archivo_de_cabecera","Microsoft","Borland","Objective-C","Programaci%C3%B3n_orientada_a_objetos","Mac_OS_X","IOS_(sistema_operativo)","GNUstep","C%2B%2B","Bjarne_Stroustrup","Programaci%C3%B3n_orientada_a_objetos","Lenguaje_de_programaci%C3%B3n_Java","Smalltalk","Objective_C","JavaScript","Scripting","Netscape_Communications_Corporation","P%C3%A1gina_web","ECMAScript","C_Sharp","Microsoft","Java_(lenguaje_de_programaci%C3%B3n)","Compilador","Preprocesado","C%C3%B3digo_fuente","Compilador","Compilaci%C3%B3n","C%C3%B3digo_objeto","Enlazado","C%C3%B3digo_objeto","C%C3%B3digo_objeto","Unix","Make","Lint","Valgrind","Fuga_de_memoria","GNU_Debugger","Dbx_(depurador)","Data_Display_Debugger","Programaci%C3%B3n","Unix","Sistemas_operativos","Windows","GNU/Linux","Escritorio","GIMP","Experimento","F%C3%ADsica","Qu%C3%ADmica","Matem%C3%A1ticas","Modelo_matem%C3%A1tico","Simulaci%C3%B3n","Industria","Rob%C3%B3tica","Cibern%C3%A9tica","Sistemas_de_informaci%C3%B3n","Base_de_datos","Industria_petrolera","Petroqu%C3%ADmica","Simulaci%C3%B3n","M%C3%A1quinas","Simulador_de_vuelo","Hardware","Software","Vuelo","Aeronave","Usuarios","Ruby","Python","Perl","Animaciones","Pel%C3%ADcula","Multimedia","Sistema_embebido","E/S_mapeada_en_memoria","Lenguaje_ensamblador","Bitwise","Intel_8051","Arquitectura_ARM","Biblioteca_est%C3%A1ndar_de_C","Unix","N%C3%BAcleo_(inform%C3%A1tica)","POSIX","Single_UNIX_Specification","C%C3%B3digo_objeto","Lenguaje_de_programaci%C3%B3n_Java","Perl","Python","C%2B%2B","Dennis_Ritchie","Digital_object_identifier","Brian_Kernighan","Dennis_Ritchie","ISBN","Eric_S._Raymond","ISBN","Eric_S._Raymond","International_Organization_for_Standardization","International_Organization_for_Standardization","International_Organization_for_Standardization","International_Organization_for_Standardization","Organizaci%C3%B3n_Internacional_de_Normalizaci%C3%B3n","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Falcon_(lenguaje_de_programaci%C3%B3n)","titulo":"Falcon (lenguaje de programacion)","contenido":"Falcon es un lenguaje de programacion interpretado de codigo abierto multiparadigma dise\u00f1ado por Giancarlo Niccolai. Se basa en una maquina virtual de propiedad y esta disponible para las plataformas Microsoft Windows, GNU/Linux, Mac, Solaris y en el futuro BSD. Se propone como una herramienta para crear aplicaciones completas y aplicaciones web en relacion con apache2.  o, utilizando el operador de impresion rapida \">\"  Falcon totalmente compatible con Unicode y el ejemplo siguiente se muestra la capacidad de internacionalizacion:  En la version final contara con el apoyo de el paradigma logico. ","snippet":"Falcon es un lenguaje de programacion interpretado de codigo abierto multiparadigma dise\u00f1ado por Giancarlo Niccolai. Se basa en una maquina virtual de propiedad y esta disponible para las plataformas ","enlaces_salientes":["Falcon_(lenguaje_de_programaci%C3%B3n)","Falcon_(lenguaje_de_programaci%C3%B3n)","Falcon_(lenguaje_de_programaci%C3%B3n)","Paradigma_de_programaci%C3%B3n","Programaci%C3%B3n_multiparadigma","Programaci%C3%B3n_orientada_a_objetos","Programaci%C3%B3n_basada_en_prototipos","Programaci%C3%B3n_funcional","Sistema_de_tipos","Sistema_de_tipos#Tipado_din.C3.A1mico","C%2B%2B","Perl","Lua","Smalltalk","PHP","Lisp","Python","Ruby","Sistema_operativo","Multiplataforma","Licencia_de_software","GPL","Apache_License","Lenguaje_interpretado","C%C3%B3digo_abierto","Paradigma_de_programaci%C3%B3n","Microsoft_Windows","GNU/Linux","Mac_OS","Solaris_(sistema_operativo)","Hello_world","Programaci%C3%B3n_orientada_a_objetos","Programaci%C3%B3n_funcional","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_l%C3%B3gica","Control_de_autoridades","Open_Hub"]}
{"url":"Multiplataforma","titulo":"Multiplataforma","contenido":"En informatica, se denomina multiplataforma a un atributo conferido a programas informaticos o metodos y conceptos de computacion que son implementados, y operan internamente en multiples plataformas informaticas. El software multiplataforma puede dividirse en dos grandes tipos o clases: uno requiere una compilacion individual para cada plataforma que le da soporte, y el otro se puede ejecutar directamente en cualquier plataforma, sin preparacion especial, por ejemplo, el software escrito en un lenguaje interpretado o bytecode precompilado portable, para los cuales los interpretes o paquetes en tiempo de ejecucion son componentes comunes o estandar de todas las plataformas.  Por ejemplo, una aplicacion multiplataforma puede ejecutarse sin problema alguno, tanto en Microsoft Windows en la arquitectura x86, como en Linux en la arquitectura x86 y Mac OS X, ya sea en el PowerPC o sistemas Apple Macintosh basados en x86. En general, una aplicacion multiplataforma se puede ejecutar tanto en todas las plataformas existentes o como minimo dos plataformas.\u200b  Una plataforma es una combinacion de hardware y software utilizado para ejecutar aplicaciones de software. Una plataforma puede ser descrita simplemente como un sistema operativo o arquitectura de ordenador, o podria ser la combinacion de ambos (un ejemplo de una plataforma comun es Microsoft Windows que se ejecuta en la arquitectura x86). Otras conocidas plataformas de computadoras de escritorio incluyen Linux/Unix y Mac OS X (ambos de los cuales son a su vez multiplataforma). Hay, sin embargo, muchos dispositivos, como los telefonos moviles que tambien son efectivamente plataformas informaticas, aunque comunmente sean menos considerados de esa manera. Una aplicacion se puede escribir en dependencia de las caracteristicas de una determinada Plataforma, ya sea el hardware, sistema operativo, o maquina virtual en que se ejecuta. La plataforma Java es una maquina virtual de la plataforma que se ejecuta en sistemas operativos y tipos de hardware, y es una plataforma de software comun para escribir (programar).  Una plataforma de hardware puede referirse a la arquitectura del ordenador o la arquitectura del procesador. Por ejemplo, los CPUs x86 y x86-64 constituyen una de las mas comunes arquitecturas de computadoras en uso en los ordenadores de proposito general. Estas maquinas suelen ejecutar una version de Microsoft Windows, aunque tambien se puede ejecutar otro sistemas operativos, tales como Linux, OpenBSD, NetBSD, Mac OS X yFreeBSD.  Una arquitectura ARM es comun en los telefonos inteligentes y Tablet PC, que corren Windows, Android, iOS y otros sistemas operativos moviles.  Las plataformas de software puede ser un sistema operativo o entorno de programacion, aunque mas comunmente se trata de una combinacion de ambos. Una notable excepcion a esto es Java, que utiliza un sistema operativo independiente de la maquina virtual para cada codigo compilado, conocido en el mundo de Java como bytecode. Ejemplos de plataformas de software incluyen:  Como ya se ha se\u00f1alado, la plataforma Java es una excepcion a la regla general de que un sistema operativo es una plataforma de software. El lenguaje Java requiere de una maquina virtual, o un \"CPU virtual\" en el que se ejecuta todo el codigo que se escribe en el lenguaje. Esto permite que el mismo ejecutable binario pueda ejecutarse en todos los sistemas, apoyado por el software Java, a traves del uso de una maquina virtual Java (JVM). Ejecutables de Java no se ejecutan de forma nativa en el sistema operativo, es decir, ni de Windows, ni Linux ejecutan programas Java directamente.  Aunque el codigo Java no se ejecuta de forma nativa, la JVM es plenamente capaz de proporcionar servicios relacionados con el sistema operativo, como el disco I/O y el acceso a la red, si los privilegios adecuados se conceden. La JVM permite a los usuarios decidir el nivel de proteccion adecuado, segun una ACL. Por ejemplo, el acceso a disco y de red esta habilitado normalmente para aplicaciones de escritorio, pero no para applets basados en el navegador.  JNI tambien se puede utilizar para permitir el acceso a funciones especificas de los sistemas operativos. En la actualidad, los programas Java pueden ejecutarse en Microsoft Windows, Mac OS X, Linux y sistemas operativos Solaris. Para aplicaciones moviles, los plugins de los navegadores se utilizan en dispositivos basados en Windows y Mac, Android tiene soporte incorporado para Java.  Para que el software pueda ser considerado multiplataforma, debe ser capaz de funcionar en mas de una arquitectura de ordenador o sistema operativo. Esto puede ser una tarea que consume tiempo, ya que los diferentes sistemas operativos tienen diferentes interfaces de programacion de aplicaciones o API (por ejemplo, Linux utiliza una API diferente de Windows).  El hecho de que un determinado sistema operativo se pueda ejecutar en diferentes arquitecturas de computadora no quiere decir que el software escrito para ese sistema operativo automaticamente funcione en todas las arquitecturas que soporta el sistema operativo. Por ejemplo, a partir de agosto de 2006 OpenOffice.org no se ejecutaba de forma nativa en los AMD64 o Intel 64 lineas de procesadores los estandares para computadores de x86-64 64 bit. Sin embargo, desde entonces la situacion ha cambiado, y la suite OpenOffice.org de software ha sido portada a los sistemas de 64-bit. Esto tambien significa que solo porque un programa se escriba en un popular lenguaje de programacion como C o C++, no tiene por que funcionar en todos los sistemas operativos que soporten la programacion de dicho lenguaje o incluso en el mismo sistema operativo en una arquitectura diferente.  Las aplicaciones Web suelen ser descritas como multiplataforma, ya que, idealmente, se puede acceder desde cualquiera de los diversos navegadores web en diferentes sistemas operativos. Tales aplicaciones generalmente emplean una arquitectura de sistema cliente-servidor, y pueden variar ampliamente en complejidad y funcionalidad. Esta amplia variabilidad complica considerablemente la meta de capacidad multiplataforma, que es rutinariamente en contradiccion con el objetivo de funcionalidad avanzada.  Aplicaciones web basicas lleva cabo la totalidad o la mayor parte del procesamiento de un servidor web \"Stateless\", y pasar el resultado al navegador web del cliente. Toda la interaccion del usuario con la aplicacion consta de simples intercambios de solicitudes de datos y las respuestas del servidor. Este tipo de aplicaciones son la norma en las fases iniciales de la World Wide Web de desarrollo de aplicaciones. Tales aplicaciones siguen un simple transaccion modelo, identica a la de servir paginas web estaticas. Hoy en dia, siguen siendo relativamente comun, especialmente cuando la compatibilidad entre plataformas y la simplicidad se considera mas importante que las funcionalidades avanzadas.  Ejemplos destacados de las aplicaciones web avanzadas incluyen la interfaz web a Gmail, A9.com, y la pagina web maps.live.com, parte del Live Search servicio de Microsoft. Tales aplicaciones avanzadas habitualmente dependen de las funciones adicionales que se encuentran solo en las versiones mas recientes de los navegadores web mas populares. Estas dependencias incluyen Ajax, JavaScript, HTML \"Dinamico\", SVG, y otros componentes de las aplicaciones ricas de Internet. Las versiones antiguas de los navegadores web mas populares tienden a carecer de apoyo a ciertas caracteristicas.  Tambien puede aplicarse a los videojuegos lanzados en una gama de consolas de videojuegos, computadoras especializadas dedicadas a la tarea de jugar juegos. Entre los ejemplos de videojuegos multiplataforma se incluyen: Miner 2049er, Tomb Raider: Legend, FIFA (serie de videojuegos), NHL Series y Minecraft.  Cada uno de ellos ha sido lanzado en una variedad de plataformas de juego, como la Wii, PlayStation 3, Xbox 360, computadoras personales (PC) y dispositivos moviles.  Las caracteristicas de un sistema particular pueden alargar el tiempo necesario para implementar un videojuego en multiples plataformas. Asi, un videojuego puede ser lanzado inicialmente en unas pocas plataformas y posteriormente en las restantes. Normalmente, esta situacion se produce cuando se lanza un nuevo sistema de juego, porque los desarrolladores de videojuegos necesitan familiarizarse con el hardware y el software asociados a la nueva consola.  Es posible que algunos juegos no se conviertan en multiplataforma debido a los acuerdos de licencia entre los desarrolladores y los fabricantes de consolas de videojuegos que limitan el desarrollo de un juego a una consola en particular. Por ejemplo, Disney podria crear un juego con la intencion de lanzarlo en las ultimas consolas de Nintendo y Sony. En caso de que Disney conceda la licencia del juego a Sony en primer lugar, se le podria exigir a cambio que lanzara el juego unicamente en la consola de Sony por un periodo corto o indefinido, prohibiendo efectivamente el lanzamiento multiplataforma durante ese periodo.  Varios desarrolladores han implementado medios para jugar en linea mientras utilizan diferentes plataformas. Psyonix, Epic Games, Microsoft y Valve poseen tecnologia que permite a los jugadores de Xbox 360 y PlayStation 3 jugar con jugadores de PC, dejando la decision de que plataforma usar a los consumidores. El primer juego que permitio este nivel de interactividad entre los juegos de PC y consola fue Quake 3.  Los juegos que incluyen juego en linea multiplataforma incluyen Fortnite: Battle Royale, Rocket League, Final Fantasy XIV, Street Fighter V, Killer Instinct, Paragon y Fable Fortune, y Minecraft con su actualizacion Better Together para Windows 10, ediciones VR, Pocket Edition y Xbox One.  A causa de los intereses en conflicto de compatibilidad entre plataformas y funcionalidades avanzadas, han surgido numerosas alternativas de dise\u00f1o de aplicaciones web.  Tales estrategias incluyen:  Degradacion correcta intenta proporcionar la misma funcionalidad o similar para todos los usuarios y plataformas, mientras que la disminucion de la funcionalidad de un \"minimo comun denominator\" para obtener mas exploradores cliente limitados. Por ejemplo, un usuario que intenta usar una caracteristica limitada de un navegador para acceder a Gmail puede notar que Gmail cambia al \"modo basico\", con funcionalidad reducida. Algunos ven esta estrategia como una forma menor de la capacidad multiplataforma.  La separacion de las funcionalidades para simplificar la omicion de los subconjuntos de funciones que no soportan los exploradores de los clientes dentro de ciertos sistemas operativos, sin dejar de ofrecer una \"completa\" aplicacion para el usuario.  Multiples aplicaciones codebase presentar diferentes versiones de una aplicacion en funcion del cliente especifico en uso. Esta estrategia es sin duda la forma mas complicada y costosa de cumplir la capacidad multiplataforma, ya que incluso las diferentes versiones del navegador del cliente mismo (dentro del mismo sistema operativo) puede diferir considerablemente entre si. Esto se complica aun mas por el apoyo a plugins que puede o no estar presente para cualquier instalacion dada de un navegador web particular.  Bibliotecas de terceros intentan simplificar la capacidad multiplataforma de \"esconder\" las complejidades de las diferencias de los clientes detras de un API unificada.  Un aspecto complicado del dise\u00f1o de las aplicaciones web multiplataforma es la necesidad de pruebas de software. Ademas de las complicaciones mencionadas anteriormente, existe la restriccion adicional de que algunos navegadores web prohiben la instalacion de diferentes versiones del mismo navegador en el mismo sistema operativo. Tecnicas tales como la virtualizacion completa se utilizan a veces como una solucion para este problema.  Aunque las aplicaciones web se estan convirtiendo cada vez mas popular, muchos usuarios todavia utilizan la aplicacion de software tradicional que no se basa en una arquitectura cliente/servidor web. La distincion entre las \"tradicionales\" y las aplicaciones \"web\" no es siempre inequivoca, sin embargo, ya que las aplicaciones tienen muchas caracteristicas diferentes, los metodos de instalacion y arquitecturas, y algunas de ellas pueden superponerse y ocurrir de maneras que difuminan la distincion. Sin embargo, esta distincion simplificada es una generalizacion comun y util.  Tradicionalmente en la informatica moderna, la aplicacion de software se ha distribuido a los usuarios finales como imagenes binarias, que se almacenan en archivos ejecutables, un tipo especifico de archivo binario. Estos ejecutables solo admiten el sistema operativo y arquitectura de computadores que fueron construidas, lo que significa que haciendo un \"ejecutable multiplataforma\" seria algo asi como una enorme tarea, y por lo general no se hace.  Para el software que se distribuye como un archivo ejecutable binario, como el software escrito en C o C++, el programador debe crear el software para cada sistema operativo diferente y arquitectura de computadoras. Por ejemplo, Mozilla Firefox, un navegador web de codigo abierto, esta disponible en Microsoft Windows, Mac OS X (tanto PowerPC y x86 a traves de algo que Apple llama un binario universal), y Linux en arquitecturas de varios equipos. Las tres plataformas (en este caso, de Windows, Mac OS X y Linux) son distribuciones ejecutables independientes, si bien proceden del mismo codigo fuente.  En el contexto del software binario, los programas multiplataforma estan escritos en el codigo fuente y luego, \"traducido\" a cada sistema que se ejecuta a traves de la compilacion en plataformas diferentes. Ademas, el software puede ser portado a una arquitectura de computadora nueva o sistema operativo para que el programa se hace mas multiplataforma de lo que ya es. Por ejemplo, un programa como Firefox, que ya se ejecuta en Windows en la familia x86, se puede modificar y re-programar para ejecutarse en Linux en x86 (y potencialmente otras arquitecturas) tambien.  Como alternativa a la portabilidad, la virtualizacion de multiplaforma permite que las aplicaciones compiladas para una CPU y el sistema operativo se ejecute en un sistema con una CPU y/o sistema operativo, sin modificar el codigo fuente o binarios. Por ejemplo, Apple Rosetta software, que esta integrado en Intel basados en ordenadores Apple Macintosh, ejecuta las aplicaciones compiladas para la anterior generacion de Mac que utilizan PowerPC CPU. Otro ejemplo es IBM PowerVM Lx86, que permite Linux/x86 aplicaciones para ejecutarse sin modificaciones en el Linux/Sistema operativo de encendido.  Un script puede ser considerado como multiplataforma si su interprete esta disponible en multiples plataformas y la secuencia de comandos solo utiliza los servicios proporcionados por el lenguaje. Es decir, un script escrito en Python para un sistema como Unix probablemente se ejecutara con poca o ninguna modificacion en el de Windows, ya que tambien se ejecuta en Python de Windows, tambien hay mas de una implementacion de Python que se ejecutan los mismos scripts (por ejemplo, IronPython para .NET). Lo mismo ocurre con muchos de los lenguajes de programacion de codigo abierto que estan disponibles y son lenguajes de scripting.  A diferencia de los binarios ejecutables, el script puede utilizar el mismo en todos los equipos que tienen el software para interpretar la secuencia de comandos. Esto se debe a que las secuencias de comandos se almacenan generalmente en un texto sin formato en un archivo de texto. Puede haber algunos problemas, sin embargo, como el tipo de caracter de linea nueva que se encuentra entre las lineas. Generalmente, sin embargo, el trabajo poco o nada tiene que hacer para que un script escrito para un sistema, ejecute en otro.  Algunos muy populares entre plataformas scripting o lenguajes interpretados son:  Un shell de Unix en el que comunmente se ejecutan en Linux y otros modernos sistemas Unix, asi como en Windows a traves de Cygwin POSIX (capa de compatibilidad).  - Un lenguaje de programacion dinamico, adecuado para una amplia gama de aplicaciones, incluyendo aplicaciones web y de escritorio, redes, administracion de pruebas y muchos mas.  Multiplataforma es un termino que tambien puede aplicarse a los videojuegos liberados en una serie de consolas de videojuegos, especializados ordenadores dedicados a la tarea de jugar. Ejemplos de juegos de video multiplataforma son:  Cada uno ha sido puesto en libertad a traves de una variedad de plataformas de juego, como la Wii, PlayStation 3, Xbox 360, ordenadores personales (PCs), y dispositivos moviles.  Las caracteristicas de un sistema particular puede prolongar el tiempo necesario para implementar un juego de video en multiples plataformas. Asi, un videojuego puede inicialmente ser puesto en algunas plataformas y posteriormente puesto en libertad el resto de plataformas. Por lo general, esta situacion se produce cuando un nuevo sistema de juego es liberado, porque los desarrolladores de videojuegos que se familiaricen con el hardware y el software asociado con la nueva consola.  Algunos juegos no pueden ser multiplataforma debido a los acuerdos de licencia entre los desarrolladores y fabricantes de videojuegos de consola que limitan el desarrollo de un juego para una consola en particular. Como ejemplo, Disney podria crear un juego con la intencion de la liberacion en la ultima Nintendo y Sony consolas de juegos. En caso de licencia de Disney del juego de Sony primero, Disney puede en cambio ser necesaria para liberar el juego unicamente en Sony de la consola por un corto tiempo o indefinidamente.  Varios desarrolladores han puesto en marcha los medios para jugar juegos en linea durante el uso de diferentes plataformas. Epic Games, Microsoft y Valve Software todos poseemos la tecnologia que permite a Xbox 360 y PlayStation 3 a los jugadores jugar con los jugadores de PC, dejando la decision de que plataforma utilizar para los consumidores. El primer juego para permitir que este nivel de interactividad entre el PC y consola de juegos era Quake 3.  Los juegos que ofrecen multiplataforma juego en linea incluyen:  El software que es independiente de la plataforma no se basa en las caracteristicas especiales de cualquier plataforma unica, o, si lo hace, se ocupa de las caracteristicas especiales que la hacen frente a multiples plataformas.  La programacion multiplataforma es la practica de la forma activa de la escritura de software que funciona en mas de una plataforma.  Hay diferentes maneras de abordar el problema de escribir una aplicacion multiplataforma. Una de ellos es simplemente crear varias versiones del mismo programa en diferentes arboles de codigo fuente, es decir, la version de Windows de un programa puede tener un conjunto de archivos de codigo fuente y la version de Macintosh podria tener otro, mientras que un software libre con sistema Unix podria tener otro. Si bien este es un enfoque simple para el problema, tiene el potencial de ser mucho mas caro en costos de desarrollo, tiempo de desarrollo, o ambos, sobre todo para las entidades corporativas. La idea detras de esto es crear mas de dos programas diferentes que tienen la capacidad de comportarse de manera similar a la otra. Tambien es posible que este medio de desarrollo de una aplicacion multiplataforma dara lugar a mas problemas de seguimiento de errores y corregir, porque los dos arboles diferentes fuentes tendria programadores diferentes, y por lo tanto los defectos diferentes en cada version. Cuanto menor sea el equipo de programacion, mas rapido las correcciones de errores tienden a ser.  Otro enfoque que se utiliza es depender de un software preexistente que oculta las diferencias entre la platform, llamado abstraccion de la Platform, de tal manera que el programa en si mismo no es consciente de la plataforma que se esta ejecutando. Se podria decir que este tipo de programas son independientes de la plataforma. Los programas que se ejecutan en la maquina virtual de Java (JVM) se construyen de esta manera.  Algunas aplicaciones mezclan diversos metodos de programacion multiplataforma para crear la aplicacion final. Un ejemplo de esto es el navegador web Firefox, que utiliza la abstraccion para construir algunos de los componentes de nivel inferior, subestructuras separadas de codigo para implementar las caracteristicas especificas de la plataforma (como la interfaz grafica de usuario), y la aplicacion de mas de un lenguaje de scripting para ayudar a facilitar facilidad de portabilidad. Firefox implementa XUL, CSS y JavaScript para la extension del navegador, ademas de plugins al estilo del clasico navegador Netscape. Gran parte del mismo navegador en si esta escrito en XUL, CSS y JavaScript, tambien.  Hay una serie de herramientas que estan disponibles para ayudar a facilitar el proceso de programacion multiplataforma:  Hay algunos temas relacionados con el desarrollo de multiplataforma. Algunos de estos incluyen:   ","snippet":"En informatica, se denomina multiplataforma a un atributo conferido a programas informaticos o metodos y conceptos de computacion que son implementados, y operan internamente en multiples plataformas ","enlaces_salientes":["Multiplataforma","Multiplataforma","Multiplataforma","Inform%C3%A1tica","Software","Plataforma_(inform%C3%A1tica)","Compilaci%C3%B3n","Lenguaje_de_programaci%C3%B3n","Bytecode","Plataforma_(inform%C3%A1tica)","Windows","X86","GNU/Linux","Mac_OS_X","Apple","Macintosh","Sistema_operativo","Windows","Hardware","Arquitectura_de_computadores","Tel%C3%A9fono_celular","M%C3%A1quina_virtual","Bytecode","Android","AmigaOS","PowerPC","MorphOS","BSD","NetBSD","Java_(lenguaje_de_programaci%C3%B3n)","GNU/Linux","IOS","Mac_OS_X_10.2","Microsoft_Windows","DOS","MS-DOS","IBM_i","IBM_PC_DOS","DR-DOS","FreeDOS","OS/2","Solaris_(sistema_operativo)","Plataforma_Java","Software","Java_(lenguaje_de_programaci%C3%B3n)","Solaris_(sistema_operativo)","CPU","X86-64","FIFA_19","Minecraft","Wii","PlayStation_3","Xbox_360","Dispositivo_m%C3%B3vil","Epic_Games","Microsoft","Valve_Corporation","Xbox_360","PlayStation_3","Quake_III_Arena","Rocket_League","Final_Fantasy_XIV","Street_Fighter_V","Killer_Instinct_(videojuego_de_2013)","Windows_10","Realidad_virtual","Xbox_One","IzPack","Control_de_autoridades"]}
{"url":"Tipo_de_datos","titulo":"Tipo de dato","contenido":"En ciencias de la computacion, un tipo de dato informatico o simplemente tipo es un atributo de los datos que indica al ordenador (y/o al programador/programadora) sobre la clase de datos que se va a manejar. Esto incluye imponer restricciones en los datos, como que valores pueden tomar y que operaciones se pueden realizar.  Los tipos de datos mas comunes son: numeros enteros, numeros con signo (negativos), numeros de coma flotante (decimales), cadenas alfanumericas (y unicodes), estados, etc.  Un tipo de dato es un espacio en memoria con restricciones. Por ejemplo, el tipo \"int\" representa, generalmente, un conjunto de enteros de 32 bits cuyo rango va desde el -2.147.483.648 al 2.147.483.647, asi como las operaciones que se pueden realizar con los enteros, como son la suma, la resta, y la multiplicacion. Los colores, por su parte, se representan como tres bytes denotando la cantidad de rojo, verde y azul, y una cadena de caracteres representando el nombre del color (en este caso, las operaciones permitidas incluyen la adicion y la sustraccion, pero no la multiplicacion).  Este es un concepto propio de la informatica, y mas especificamente de los lenguajes de programacion, aunque tambien se encuentra relacionado con nociones similares de la matematica y la logica.  En un sentido amplio, un tipo de datos define un conjunto de valores y las operaciones sobre esos valores. Casi todos los lenguajes de programacion explicitamente incluyen la notacion del tipo de datos, aunque lenguajes diferentes pueden usar terminologias diferentes. La mayor parte de los lenguajes de programacion permiten al programador definir tipos de datos adicionales, normalmente combinando multiples elementos de otros tipos y definiendo las operaciones del nuevo tipo de dato. Por ejemplo, un programador puede crear un nuevo tipo de dato llamado \"Persona\", contemplando que el dato interpretado como \"Persona\" incluya un nombre y una fecha de nacimiento.  Un tipo de dato puede ser tambien visto como una limitacion impuesta en la interpretacion de los datos en un sistema de tipificacion, describiendo la representacion, la interpretacion y la estructura de los valores u objetos almacenados en la memoria del ordenador. El sistema de tipificacion usa informacion de los tipos de datos para comprobar la verificacion de los programas que acceden o manipulan los datos.  Los tipos de datos hacen referencia al tipo de informacion que se trabaja, donde la unidad minima de almacenamiento es el dato, tambien se puede considerar como el rango de valores que puede tomar una variable durante la ejecucion del programa.  El tipo de dato caracter es un digito individual el cual se puede representar como numericos  (0 al 9), letras (a-z) y simbolos (!\"$&/\\).  El tipo de dato caracter unicode es una \"extension\" del tipo de dato caracter, permite ampliar los simbolos de escritura, provee exactamente hasta 65535 caracteres diferentes.  Nota: En el lenguaje java la codificacion Unicode permite trabajar con todos los caracteres de distintos idiomas.  Este tipo de dato puede ser real o entero, dependiendo del tipo de dato que se vaya a utilizar.  Enteros: son los valores que no tienen punto decimal, pueden ser positivos o negativos y el cero.  Reales: estos caracteres almacenan numeros muy grandes que poseen parte entera y parte decimal.  estos serian sus rangos y tama\u00f1os ordenados  Este tipo de dato se emplea para valores logicos, los podemos definir como datos comparativos dicha comparacion devuelve resultados logicos (Verdadero o Falso).  Los tipos compuestos se derivan de uno o mas datos primitivos. A las distintas maneras de formar o combinar estos datos se les conocen con el nombre de \u201cEstructura de datos\u201d. Al combinarlo podemos crear un nuevo tipo, por ejemplo:  \"array-de-enteros\" es distinto al tipo \"entero\".  El lenguaje de programacion Pascal permite declarar variables de tipo caracter (Cadena) y numerica. Como se puede apreciar, todas las variables excepto la de tipo Cadena son de tipo numericas (incluyendo Booleano).  El lenguaje de programacion Java permite declarar variables de tipo primitivo, pero dada que los envoltorios de dichas funciones presentan muchas operaciones utiles, es mas comun hacer uso de las clases que las tratan.  No hay que confundir estos tipos de datos con los tipos de datos abstractos.  Los TDA siguen una interfaz que especifica que hace ese tipo de datos (la estructura de datos seria la implementacion concreta). Formalmente se trata de un modelo matematico para tipos de datos que estan definidos por su comportamiento o semantica. A nivel de usuario se puede ver como el esquema de los datos y operaciones para manipular los elementos que componen ese tipo de datos. La estructura de datos seria la representacion concreta de los datos. ","snippet":"En ciencias de la computacion, un tipo de dato informatico o simplemente tipo es un atributo de los datos que indica al ordenador (y/o al programador/programadora) sobre la clase de datos que se va a ","enlaces_salientes":["Tipo_de_dato","Tipo_de_dato","Tipo_de_dato","Ciencias_de_la_computaci%C3%B3n","Programador","Dato","N%C3%BAmero_entero","N%C3%BAmero_negativo","Coma_flotante","Unicode","Entero_(tipo_de_dato)","Rojo","Verde","Azul","Inform%C3%A1tica","Programaci%C3%B3n","Matem%C3%A1tica","L%C3%B3gica","Dato","Programaci%C3%B3n","Programador","Dato","Sistema_de_tipificaci%C3%B3n","Valor_(inform%C3%A1tica)","Objetos_(programaci%C3%B3n_orientada_a_objetos)","Pruebas_de_validaci%C3%B3n","Dato","Tipos_de_datos_primitivos","Tipo_de_dato_abstracto","Informaci%C3%B3n","S%C3%ADmbolo","Unicode","Vector_(inform%C3%A1tica)","Registro_(estructura_de_datos)","Tupla","Conjunto_(programaci%C3%B3n)","Pascal_(lenguaje_de_programaci%C3%B3n)","Java_(lenguaje_de_programaci%C3%B3n)","Tipo_de_dato_abstracto","Interfaz","Sem%C3%A1ntica_de_lenguajes_de_programaci%C3%B3n","Sistema_de_tipos","Teor%C3%ADa_de_tipos","Tipo_de_dato_abstracto","Diccionario_de_datos","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel"]}
{"url":"UNICODE","titulo":"Unicode","contenido":"Unicode es un estandar de codificacion de caracteres dise\u00f1ado para facilitar el tratamiento informatico, transmision, y visualizacion de textos de numerosos idiomas y disciplinas tecnicas, ademas de textos clasicos de lenguas muertas. El termino Unicode proviene de los tres objetivos perseguidos: universalidad, uniformidad, y unicidad.\u200b  Unicode define cada caracter o simbolo mediante un nombre e identificador numerico, el punto de codigo (code point). Ademas incluye otras informaciones para el uso correcto de cada caracter, como sistema de escritura, categoria, direccionalidad, mayusculas y otros atributos. Unicode trata los caracteres alfabeticos, ideograficos y simbolos de forma equivalente, lo que significa que se pueden mezclar en un mismo texto sin utilizar marcas o caracteres de control.\u200b  Este estandar es mantenido por el Unicode Technical Committee (UTC), integrado en el Consorcio Unicode, del que forman parte con distinto grado de implicacion empresas como: Microsoft, Apple, Adobe, IBM, Oracle, SAP, Google o Facebook, instituciones como la Universidad de Berkeley, o el Gobierno de la India y profesionales y academicos a titulo individual.\u200b El Unicode Consortium mantiene estrecha relacion con ISO/IEC, con la que mantiene desde 1991 el acuerdo de sincronizar sus estandares que contienen los mismos caracteres y puntos de codigo.\u200b  La creacion de Unicode ha sido un proyecto de gran relevancia con el objetivo de reemplazar los esquemas de codificacion de caracteres existentes, los cuales presentaban limitaciones significativas en tama\u00f1o y compatibilidad con entornos plurilingues. Unicode se ha convertido en el esquema de codificacion de caracteres mas completo y extenso, siendo el dominante en la internacionalizacion y adaptacion local del software informatico. Este estandar ha sido ampliamente adoptado en diversas tecnologias recientes, como XML, Java y sistemas operativos modernos.  La descripcion exhaustiva del estandar y las tablas de caracteres estan disponibles en el sitio web oficial de Unicode. Cada vez que se finaliza una nueva version principal, se publica una referencia completa en formato de libro, tambien esta disponible en su version digital de manera gratuita. Las revisiones y adiciones se publican de manera independiente.  Unicode engloba todos los caracteres de uso comun en la actualidad. La version 15.0, por ejemplo, cuenta con 149.186 caracteres provenientes de diversos alfabetos, sistemas ideograficos y colecciones de simbolos, como aquellos utilizados en matematicas, tecnologia, musica e iconografia. Esta cifra continua aumentando en cada nueva version.\u200b  Unicode abarca una amplia gama de sistemas de escritura modernos, como el alfabeto latino, asi como escrituras historicas extintas, utilizadas con fines academicos, tales como el cuneiforme y el runico. Ademas de los caracteres alfabeticos, Unicode tambien incluye una variedad de caracteres no alfabeticos, como simbolos musicales y matematicos, fichas de juegos como el domino, flechas, iconos, etc.  Ademas, Unicode incluye los signos diacriticos como caracteres individuales que pueden combinarse con otros caracteres, tambien ofrece versiones predefinidas de la mayoria de las letras con simbolos diacriticos utilizados en la actualidad, como las vocales acentuadas del espa\u00f1ol.  Unicode es un estandar en constante evolucion, y se agregan nuevos caracteres de forma continua. Sin embargo, tambien se descartan ciertos alfabetos propuestos por diversas razones, como es el caso del alfabeto klingon.\u200b  Unicode esta sincronizado con el estandar ISO/IEC conocido como UCS o Juego de Caracteres Universal. Desde un punto de vista tecnico, Unicode incluye o es compatible con codificaciones previas como ASCII7 o ISO 8859-1, asi como con estandares nacionales como ANSI Z39.64, KS X 1001, JIS X 0208, JIS X 0212, JIS X 0213, GB 2312, GB 18030, HKSCS y CNS 11643, codificaciones particulares de fabricantes de software como Apple, Adobe, Microsoft, IBM, etc. Ademas, Unicode reserva espacio para que los fabricantes de software puedan crear extensiones para su propio uso.\u200b  El elemento basico del estandar Unicode es el caracter. Se considera un caracter al elemento mas peque\u00f1o de un sistema de escritura con significado. El estandar Unicode codifica los caracteres esenciales \u2015grafemas\u2015 definiendolos de forma abstracta y deja la representacion visual (tama\u00f1o, dimension, fuente o estilo) al software que lo trate, como procesadores de texto o navegadores web. Se incluyen letras, signos diacriticos, caracteres de puntuacion, ideogramas, caracteres silabicos, caracteres de control y otros simbolos. Los caracteres se agrupan en alfabetos o sistemas de escritura. Se considera que son diferentes los caracteres de alfabetos distintos, aunque compartan forma y significacion.  Los caracteres se identifican mediante un numero o punto de codigo y su nombre o descripcion. Cuando se ha asignado un codigo a un caracter, se dice que dicho caracter esta codificado. El espacio para codigos tiene 1.114.112 posiciones posibles (0x10FFFF). Los puntos de codigo se representan utilizando notacion hexadecimal agregando el prefijo U+. El valor hexadecimal se completa con ceros hasta 4\u00a0digitos hexadecimales cuando es necesario; si es de longitud mayor que 4\u00a0digitos no se agregan ceros.  Los bloques del espacio de codigos contienen puntos con la siguiente informacion:\u200b  Unicode incluye un mecanismo para formar caracteres y asi extender el repertorio de compatibilidad con los simbolos existentes. Un caracter base se complementa con marcas: signos diacriticos, de puntuacion o marcos. El tipo de cada caracter y sus atributos definen el papel que pueden jugar en una combinacion. Por este motivo, puede haber varias opciones que representen el mismo caracter. Para facilitar la compatibilidad con codificaciones anteriores, se proporcionan caracteres precompuestos; en la definicion de dichos caracteres se hace constar que caracteres intervienen en la composicion.  Un grupo de caracteres consecutivos, independientemente de su tipo, forma una secuencia. En caso de que varias secuencias representen el mismo conjunto de caracteres esenciales, el estandar no define una de ellas como 'correcta', sino que las considera equivalentes. Para poder identificar dichas equivalencias, Unicode define los mecanismos de equivalencia canonica y de equivalencia de compatibilidad basados en la obtencion de formas normalizadas de las cadenas a comparar.  En el estandar Unicode, los ideogramas de Asia oriental (popularmente llamados \u00abcaracteres chinos\u00bb) se denominan \u00abideogramas han\u00bb. Estos ideogramas se desarrollaron en China y fueron adaptados por culturas proximas para su propio uso.\u200b\u200b Japon, Corea y Vietnam desarrollaron sus propios sistemas alfabeticos o silabicos para usar en combinacion con los simbolos chinos: hiragana y katakana (en Japon), hangul (en Corea) y yi (en Vietnam). La evolucion natural de los sistemas de escritura y los distintos momentos de entrada de los caracteres en las distintas culturas han marcado diferencias en los ideogramas utilizados. Unicode considera las distintas versiones de los ideogramas como variantes de un mismo caracter abstracto, es decir, como resultado de la aplicacion de un tipo de letra diferente en cada caso y considera las variantes nacionales como pertenecientes a un mismo sistema de escritura. La version original del estandar se desarrollo a partir de los estandares industriales existentes en los paises afectados.  El organismo encargado de desarrollar el repertorio de caracteres es el Ideographic Rapporteur Group (IRG). IRG es un grupo de trabajo integrado en ISO/IEC JTC1/SC2/WG2, incluyendo a China, Hong Kong, Macao, Taipei Computer Association, Singapur, Japon, Corea del Sur, Corea del Norte, Vietnam y Estados Unidos de America.\u200b  La base de datos de caracteres CJK se denomina Unihan y contiene, ademas, informacion auxiliar sobre significado, conversiones, datos necesarios para utilizarlos en los diferentes lenguajes que los utilizan. A continuacion se muestran los bloques que describen este repertorio. IRG define los caracteres de los siete grupos unificados; los dos grupos siguientes contienen caracteres para compatibilidad con estandares anteriores.  Se admite que nunca se podra finalizar la tarea de incluir ideogramas en el estandar debido, principalmente, a que la creacion de nuevos ideogramas continua. A fin de suplir eventuales carencias, Unicode ofrece un mecanismo que permite la representacion de los simbolos que faltan denominado \u00absecuencias de descripcion ideografica\u00bb. Se basa en que en la practica, la totalidad de los ideogramas se puede descomponer en piezas mas peque\u00f1as que, a su vez, son ideogramas. Aunque sea posible la representacion de un simbolo mediante una secuencia, el estandar especifica que siempre que exista una version codificada su uso debe ser preferente. No hay un metodo para la \u00abdescomposicion canonica\u00bb de ideogramas ni algoritmos de equivalencia por lo que las operaciones sobre el texto, como busqueda u ordenacion, pueden fallar.  Unicode define 12\u00a0caracteres de control para la descripcion de ideogramas representando distintas posibilidades de combinacion espacial de otros caracteres han.  El estandar fue dise\u00f1ado con los siguientes objetivos:  El conjunto de caracteres codificados por Unicode, es la UCD (unicode character database: base de datos de caracteres Unicode). Ademas de nombre y punto de codigo, incluye mas informacion: alfabeto al que pertenece, nombre, clasificacion, mayusculas, orientacion y otras formas de uso, variantes estandarizadas, reglas de combinacion, etc.  Formalmente la base de datos se divide en planos y estos a su vez en areas y bloques. Con excepciones, los caracteres codificados se agrupan en el espacio de codigos siguiendo categorias como alfabeto o sistema de escritura, de forma que caracteres relacionados se encuentren cerca en las tablas de codificacion.  Por conveniencia se ha dividido el espacio de codigos en grandes grupos denominados planos. Cada plano contiene un maximo de 65\u00a0536\u00a0caracteres. Dado un punto de codigo expresado en hexadecimal, los 4\u00a0ultimos digitos determinan la posicion del caracter en el plano.  Los distintos planos se dividen en areas de direccionamiento en funcion de los tipos generales que incluyen. Esta division es convencional, no reglada y puede variar con el tiempo. Las areas se dividen, a su vez, en bloques. Los bloques estan definidos normativamente y son rangos consecutivos del espacio de codigos. Los bloques se utilizan para formar las tablas impresas de caracteres pero no deben tomarse como definiciones de grupos significativos de caracteres.  Los puntos de codigo de Unicode se identifican por un numero entero. Segun su arquitectura, un ordenador utilizara unidades de 8, 16\u00a0o\u00a032\u00a0bits para representar dichos enteros. Las formas de codificacion de Unicode reglamentan la forma en que los puntos de codigo se transformaran en unidades tratables por el computador.  Unicode define tres formas de codificacion bajo el nombre UTF (Unicode transformation format: formato de transformacion Unicode):\u200b  Las formas de codificacion se limitan a describir el modo en que se representan los puntos de codigo en formato inteligible por la maquina. A partir de las 3\u00a0formas identificadas se definen 7\u00a0esquemas de codificacion.  Los esquemas de codificacion tratan de la forma en que se serializa la informacion codificada.\u200b La seguridad en los intercambios de informacion entre sistemas heterogeneos requiere la implementacion de sistemas que permitan determinar el orden correcto de los bits y bytes y garantizar que la reconstruccion de la informacion es correcta. Una diferencia fundamental entre procesadores es el orden de disposicion de los bytes en palabras de 16\u00a0y\u00a032\u00a0bits, lo que se denomina endianness. Los esquemas de codificacion deben garantizar que los extremos de una comunicacion saben como interpretar la informacion recibida. A partir de las 3\u00a0formas de codificacion se definen 7\u00a0esquemas. A pesar de que comparten nombres, no debe confundirse esquemas y formas de codificacion.  Unicode define una marca especial, la marca de orden de bytes (BOM, Byte Order Mark), al inicio de un fichero o una comunicacion para hacer explicita la ordenacion de bytes. Cuando un protocolo superior especifica el orden de bytes, la marca no es necesaria y puede omitirse dando lugar a los esquemas de la lista anterior con sufijo BE o LE. En los esquemas UTF-16 y UTF-32, que admiten BOM, si este no se especifica se asume que la ordenacion de bytes es big-endian.  La unidad de codificacion en UTF-8 es el byte por lo que no necesita una indicacion de orden de byte. El estandar ni requiere ni recomienda la utilizacion de BOM, pero lo admite como marca de que el texto es Unicode o como resultado de la conversion de otros esquemas.  El proyecto Unicode se inicio a finales de 1987, tras conversaciones entre Joe Becker, Lee Collins y Mark Davis (ingenieros de las empresas Apple y Xerox).\u200b Como resultado de su colaboracion, en agosto de 1988 se publico el primer borrador de Unicode bajo el nombre de Unicode88.\u200b En esta primera version se consideraba que solo se codificarian los caracteres necesarios para el uso moderno, por lo que se utilizaron codigos de 16 bits.  Durante el a\u00f1o 1989 se sumaron colaboradores de otras compa\u00f1ias como Microsoft o Sun Microsystems. El 3 de enero de 1991 se formo el Consorcio Unicode, y en octubre de 1991 se publico la primera version del estandar. La segunda version, que ya incluia la escritura ideografica han se publico en junio de 1992. A continuacion se muestra una tabla con las distintas versiones del Estandar Unicode con sus adiciones o modificaciones mas importantes.  ISO/IEC 10646-2:2001  ISO/IEC 10646-2:2001  La version 6.0 es la primera version principal del estandar publicada exclusivamente en soporte electronico. Agregados mandeo, batak y brahmi, ampliaciones de lenguajes africanos como tifinagh, etiope y bamum. Otras adiciones importantes son: 222\u00a0ideogramas\u00a0CJK, 1000\u00a0simbolos incluyendo los pictogramas emoji, el nuevo simbolo oficial para la rupia y simbolos alquimicos ademas de ampliaciones de los atributos de los caracteres y otras modificaciones normativas y algoritmicas.\u200b ","snippet":"Unicode es un estandar de codificacion de caracteres dise\u00f1ado para facilitar el tratamiento informatico, transmision, y visualizacion de textos de numerosos idiomas y disciplinas tecnicas, ademas de t","enlaces_salientes":["Unicode","Unicode","Unicode","Estandarizaci%C3%B3n","Caracteres","Idioma","Lengua_muerta","Punto_de_c%C3%B3digo","Consorcio_Unicode","Microsoft","Apple_Inc.","Adobe_Systems_Incorporated","IBM","Oracle","SAP_AG","Google","Facebook_(empresa)","Universidad_de_Berkeley","Gobierno_de_la_India","ISO/IEC_10646","Codificaci%C3%B3n_de_caracteres","Internacionalizaci%C3%B3n_(computaci%C3%B3n)","Software","Extensible_Markup_Language","Java_(lenguaje_de_programaci%C3%B3n)","Sistema_operativo","Alfabeto_latino","Escritura_cuneiforme","Alfabeto_r%C3%BAnico","Signo_diacr%C3%ADtico","Idioma_klingon","ISO/IEC_10646","ISO/IEC_8859-1","Car%C3%A1cter_(inform%C3%A1tica)","Grafema","Procesador_de_texto","Navegador_web","Angstrom","Espacio_duro","UTF-16","Jap%C3%B3n","Corea","Vietnam","Hiragana","Katakana","Hangul","Yi","Tipo_de_letra","Rep%C3%BAblica_Popular_China","Hong_Kong","Macao","Singapur","Jap%C3%B3n","Corea_del_Sur","Corea_del_Norte","Vietnam","Estados_Unidos_de_Am%C3%A9rica","Caracteres_de_descripci%C3%B3n_ideogr%C3%A1fica","Punto_de_c%C3%B3digo","UTF-8","UTF-16","Unidad_Central_de_Procesamiento","Endianness","Endianness","Marca_de_orden_de_bytes_(BOM)","Endianness","Apple_Inc.","Xerox","Microsoft","Sun_Microsystems","Consorcio_Unicode","Escritura_china","Universal_Character_Set","Alfabeto_%C3%A1rabe","Alfabeto_armenio","Alfabeto_bengal%C3%AD","Zhuyin","Alfabeto_cir%C3%ADlico","Alfabeto_devanagari","Alfabeto_georgiano","Alfabeto_griego","Idioma_guyarat%C3%AD","Gurmukhi","Hangul","Alfabeto_hebreo","Hiragana","Kannada","Katakana","Idioma_Lao","Alfabeto_latino","Malayalam","Oriya","Alfabeto_tamil","Idioma_t%C3%A9lugu","Alfabeto_tailand%C3%A9s","Idioma_tibetano","Escritura_china","Euro","Idioma_cheroqui","Alfabeto_et%C3%ADope","Idioma_camboyano","Idioma_mongol","Idioma_birmano","Ogham","Alfabeto_r%C3%BAnico","Idioma_cingal%C3%A9s","Alfabeto_sir%C3%ADaco","Thaana","Silabarios_ind%C3%ADgenas_canadienses","Yi","Braille_(lectura)","Alfabeto_deseret","Alfabeto_g%C3%B3tico","Alfabeto_etrusco","Notaci%C3%B3n_musical","M%C3%BAsica_bizantina","Filipinas","Hanun%C3%B3%27o","Baybayin","Tagbanwa","Silabario_chipriota","Limbu","Lineal_B","Escritura_osmanya","Alfabeto_shaviano","Idioma_tai_n%C3%BCa","Alfabeto_ugar%C3%ADtico","I_Ching","Idioma_bugin%C3%A9s","Alfabeto_glagol%C3%ADtico","Kharoshthi","Persa_antiguo","Idioma_sylheti","Alfabeto_copto","Escrituras_brah%C3%A1micas","Escritura_cuneiforme","Lenguas_mand%C3%A9","Alfabeto_de_%27Phags-pa","Alfabeto_fenicio","Idioma_cario","Lengua_cham","Lepcha","Alfabeto_licio","Alfabeto_lidio","Escrituras_brah%C3%A1micas","Escrituras_brah%C3%A1micas","Silabario_vai","Disco_de_Festos","Mahjong","Domin%C3%B3","Idioma_birmano","Abreviaturas_de_amanuense","Manuscrito","%C3%9F","Idioma_bamum","Javan%C3%A9s","Lisu","Meetei_mayek","Samaritano","Idioma_tailand%C3%A9s_septentrional","S%C3%A1nscrito","Idioma_abjasio","Lista_de_Gardiner","Idioma_arameo","Idioma_av%C3%A9stico","Arabia_preisl%C3%A1mica","Idioma_turco","Idioma_mandeo","Alfabeto_batak","Brahmi","Tifinagh","Et%C3%ADope","Idioma_bamum","Emoji","Rupia","S%C3%ADmbolo_alqu%C3%ADmico","Escritura_mero%C3%ADtica","Alfabeto_sharada","Lira_turca","Bitcoin","N%C3%BC_Shu","Escritura_soyombo","Alfabetos_mongoles","Elimaico","Era_Reiwa","Corasmia#Cultura_e_idioma_corasmios","Idioma_kit%C3%A1n","Sistema_de_escritura","Historia_de_la_escritura","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Conversi%C3%B3n_de_tipos","titulo":"Conversion de tipos","contenido":"En ciencias de la computacion la conversion de tipos (type casting en ingles) se refiere a la transformacion de un tipo de dato en otro. Esto se hace para tomar las ventajas que pueda ofrecer el tipo a que se va a convertir. Por ejemplo, los valores de un conjunto mas limitado, como numeros enteros, se pueden almacenar en un formato mas compacto y mas tarde convertidos a un formato diferente que permita las operaciones que anteriormente no eran posibles, tales como la division con decimales.  Hay dos tipos de conversion, la implicita y la explicita:  En la implicita se convierte un tipo de dato de menor rango a un supertipo (tipo de dato de mayor rango); este tipo de conversion lo realiza el compilador, ya que no hay perdida de datos si, por ejemplo, se pasa un int (tipo entero) a long.  En la conversion explicita, el compilador no es capaz de realizarla por si solo y por ello debe definirse explicitamente en el programa.  Existen varios tipos de conversion explicita: ","snippet":"En ciencias de la computacion la conversion de tipos (type casting en ingles) se refiere a la transformacion de un tipo de dato en otro. Esto se hace para tomar las ventajas que pueda ofrecer el tipo ","enlaces_salientes":["Conversi%C3%B3n_de_tipos","Conversi%C3%B3n_de_tipos","Conversi%C3%B3n_de_tipos","Ciencias_de_la_computaci%C3%B3n","Tipo_de_dato","Compilador","Desbordamiento_de_b%C3%BAfer","Lenguaje_de_programaci%C3%B3n_Java","Aliasing","Control_de_autoridades"]}
{"url":"Constructor_(inform%C3%A1tica)","titulo":"Constructor (informatica)","contenido":"En Programacion Orientada a Objetos (POO), un constructor es una subrutina cuya mision es inicializar un objeto de una clase. En el constructor se asignan los valores iniciales del nuevo objeto.  Se utiliza para crear tablas de clases virtuales y poder asi desarrollar el polimorfismo, una de las herramientas de la programacion orientada a objetos. Al utilizar un constructor, el compilador determina cual de los objetos va a responder al mensaje (virtual) que hemos creado. Tiene un tipo de acceso, un nombre y un parentesis.  En Java es un metodo especial dentro de una clase, que se llama automaticamente cada vez que se crea un objeto de esa clase.  Posee el mismo nombre de la clase a la cual pertenece y no puede devolver ningun valor (ni siquiera se puede especificar la palabra reservada void). Por ejemplo, si a\u00f1adieramos a la clase SSuma un constructor, tendriamos que llamarlo tambien SSuma. Cuando en una clase no se escribe propiamente un constructor, Java asume uno por defecto.  Un constructor por defecto es un constructor sin parametros que no hace nada. Sin embargo sera invocado cada vez que se construya un objeto sin especificar ningun argumento, en cuyo caso el objeto sera iniciado con los valores predeterminados por el sistema (los atributos numericos a cero, los alfanumericos a nuloPeq, y las referencias a objetos a null).  Un constructor por defecto para la clase SSuma quedaria asi:  Como se observa el constructor no posee ningun parametro, ya que como no ha sido definido propiamente por el programador, Java lo hace por default.  Si se define un constructor con parametros (definido explicitamente) el constructor por default se reemplaza por este.    A continuacion se creara un constructor explicito para una clase simple, utilizando una clase Persona con una serie de atributos.  Primero se declara la clase con sus atributos:  El constructor sin parametros es reemplazado por el constructor explicito. En este ejemplo se puede observar que los constructores preferentemente se declaran publicos para que puedan ser invocados desde cualquier parte.  Una linea como la que se presenta a continuacion, invocara al constructor (por defecto) sin parametros:  El operador new crea un nuevo objeto, en este caso de la clase Persona, y a continuacion se invoca al constructor de la clase para realizar las operaciones de iniciacion que esten programadas.  A continuacion se invocara al constructor con parametros, que se introduciran en el orden especificado en el constructor.  Lo anterior permite asignar la informacion correspondiente a los atributos de nombre, edad, empleo y salario, dicho de otra forma, el constructor permite dar los primeros valores o inicializar los atributos de la clase persona, sin embargo, es importante mencionar que ademas de constructor por defecto, podemos definir mas de un constructor, en donde la diferencia entre uno y otro debe ser el tipo de cada uno de esos parametros. A continuacion se ejemplifica de acuerdo a la clase Persona: El tercer, cuarto y quinto constructor parecen iguales, pero no lo son, tienen el mismo numero de parametros (en este caso dos), pero no son del mismo tipo, ya que el tercer constructor tiene ambos parametros de tipo String, pero en el cuarto constructor uno es de tipo String y otro int, por lo tanto eso no ocasionara problemas. Tal vez pareciera que el cuarto y quinto constructor si son iguales, pero ahora se debe tomar en cuenta el orden, en el cuarto constructor especifica que primero recibe un String y despues un int, y el quinto constructor primero recibe un int y despues un String, entonces en estos casos ya es importante el orden de los parametros. Y el ultimo constructor ejemplifica que los constructores, ademas del constructor por defecto, deben tener desde un parametro hasta n numero de parametros. La invocacion para los constructores anteriores, seria de la siguiente forma: En conclusion, al realizar la modificacion para disponer de mas de constructor, que es el ejemplo anterior, le llamaremos sobrecarga de metodos, es decir, consiste en definir o crear mas de un constructor, en donde la diferencia sera entre cada uno de ellos sera el tipo de cada uno de los parametros que reciba.","snippet":"En Programacion Orientada a Objetos (POO), un constructor es una subrutina cuya mision es inicializar un objeto de una clase. En el constructor se asignan los valores iniciales del nuevo objeto.  Se u","enlaces_salientes":["Constructor_(inform%C3%A1tica)","Constructor_(inform%C3%A1tica)","Constructor_(inform%C3%A1tica)","Programaci%C3%B3n_orientada_a_objetos","Subrutina","Objeto_(programaci%C3%B3n)","Clase_(programaci%C3%B3n)","Clase_(inform%C3%A1tica)","Polimorfismo_(programaci%C3%B3n_orientada_a_objetos)","Compilador","Lenguaje_de_programaci%C3%B3n_Java","Clase_(inform%C3%A1tica)","Objetos_(programaci%C3%B3n_orientada_a_objetos)","Clase_(inform%C3%A1tica)","N%C3%BAmero","Alfanum%C3%A9rico","Cero","Control_de_autoridades"]}
{"url":"Destructor_(inform%C3%A1tica)","titulo":"Destructor (informatica)","contenido":"Un destructor en programacion orientada a objetos es una funcion miembro especial llamadas automaticamente en la ejecucion del programa, y por tanto no tienen por que ser llamadas explicitamente por el programador. Sus principales cometidos son:  Los destructores son invocados automaticamente al alcanzar el flujo del programa el fin del ambito en el que esta declarado el objeto.  El uso de destructores es clave en el concepto de Adquirir Recursos es Inicializar.  El destructor se nombra con el mismo nombre de la clase precedido de un simbolo de Media:tilde (~). Si la instancia de la clase se creo como una variable automatica, el destructor sera llamado automaticamente cuando el programa salga fuera del ambito donde fue creada dicha instancia.  El constructor de copia y el operador de asignacion, deben ser deshabilitados en clases donde no se necesitan explicitamente. (Scott Meyers, Effective C++, Item 6: Explicitly disallow the use of compiler-generated functions you do not want.\u200b)  Otros usos habituales de los destructores son terminar conexiones con bases de datos y liberar recursos de red. ","snippet":"Un destructor en programacion orientada a objetos es una funcion miembro especial llamadas automaticamente en la ejecucion del programa, y por tanto no tienen por que ser llamadas explicitamente por e","enlaces_salientes":["Destructor_(inform%C3%A1tica)","Destructor_(inform%C3%A1tica)","Destructor_(inform%C3%A1tica)","RAII","Constructor_(inform%C3%A1tica)","Clase_(inform%C3%A1tica)","Programaci%C3%B3n_orientada_a_objetos","Bjarne_Stroustrup","Control_de_autoridades"]}
{"url":"RAII","titulo":"RAII","contenido":"RAII (del ingles resource acquisition is initialization, que podria traducirse como \u00abadquirir recursos es inicializar\u00bb) es un popular patron de dise\u00f1o en varios lenguajes de programacion orientados a objetos como C++ y Ada. La tecnica fue inventada por Bjarne Stroustrup\u200b para reservar y liberar recursos en C++. En este lenguaje, despues de que una excepcion es lanzada, el unico codigo fuente que con seguridad es ejecutado es el de los destructores de objetos que residen en la pila. Por lo tanto los recursos necesitan ser gestionados con objetos adecuados. Los recursos son adquiridos durante la inicializacion, cuando no hay posibilidad de que sean usados antes de estar disponibles, y liberados cuando se destruyen los mismos, algo que es garantizado que suceda incluso cuando se dan errores.  La tecnica RAII es vital al escribir codigo C++ seguro frente a excepciones: para liberar recursos antes de permitir a las excepciones que se propaguen (para evitar fugas de memoria) el desarrollador puede escribir destructores apropiados una sola vez, ahorrandose escribir codigo de \u00ablimpieza\u00bb duplicado y disperso por el codigo fuente entre bloques de manejo de excepciones que pueden ser ejecutados o no.  A diferencia de la recoleccion de basura, RAII tiene las ventajas de saber cuando los objetos existen y cuando no.  La siguiente clase RAII permite un facil uso posterior de algunas funciones C usadas para el manejo de archivos, ademas quitandole al desarrollador la preocupacion de: tener que ver en que casos ha de cerrar los archivos.  La clase file puede ser usada asi:  Se puede comparar los siguientes ejemplos en C y C++:  La version en C requiere que el desarrollador libere la memoria en cada caso posible, a diferencia de la version en C++.   El lenguaje de programacion Python cuenta con la palabra clave with , la cual permite hacer uso de objetos que implementen los metodos __open__ y __close__. Al usar esta palabra clave, Python llamara al metodo __open__ del objeto. Una vez se abandona el ambito de la sentencia with, Python llamara automaticamente al metodo __close__. Esto resulta muy util, porque no solo se llamara este metodo cuando finaliza el ambito, si no que tambien se llamara cuando ocurra cualquier excepcion. De este modo, el control de apertura y cerrado de elementos es muy sencillo. Por ejemplo, se presentan la siguiente forma de abrir un archivo: La cual, es funcionalmente parecida a: No obstante, si ocurriese (por algun motivo) una excepcion en la ejecucion del metodo write, el descriptor del archivo nunca seria cerrado. Por ello, para que fuera funcionalmente identico, seria necesario realizar la siguiente modificacion: RAII evita la sobrecarga de los esquemas de la recoleccion de basura, e incluso puede ser aplicado a otros recursos como: ","snippet":"RAII (del ingles resource acquisition is initialization, que podria traducirse como \u00abadquirir recursos es inicializar\u00bb) es un popular patron de dise\u00f1o en varios lenguajes de programacion orientados a ","enlaces_salientes":["RAII","RAII","RAII","Patr%C3%B3n_de_dise%C3%B1o","Programaci%C3%B3n_orientada_a_objetos","C%2B%2B","Ada_(lenguaje_de_programaci%C3%B3n)","Bjarne_Stroustrup","Manejo_de_excepciones","C%C3%B3digo_fuente","Destructor_(inform%C3%A1tica)","Pila_(inform%C3%A1tica)","Recolector_de_basura","Recolector_de_basura","Microsoft_Windows","Graphics_Device_Interface","Bloque_de_c%C3%B3digo","Bjarne_Stroustrup","ISBN","Control_de_autoridades"]}
{"url":"Funci%C3%B3n_virtual","titulo":"Funcion virtual","contenido":"En programacion orientada a objetos (POO), una funcion virtual o metodo virtual es una funcion cuyo comportamiento, al ser declarado \"virtual\", es determinado por la definicion de una funcion con la misma cabecera en alguna de sus subclases. Este concepto es una parte muy importante del polimorfismo en la POO.  El concepto de funcion virtual soluciona los siguientes problemas:  En POO, cuando una clase derivada hereda de una clase base, un objeto de la clase derivada puede ser referido (o coercionado) tanto como del tipo de la clase base como del tipo de la clase derivada. Si hay funciones de la clase base redefinidas por la clase derivada, aparece un problema cuando un objeto derivado ha sido coercionado como del tipo de la clase base. Cuando un objeto derivado es referido como del tipo de la base, el comportamiento de la llamada a la funcion deseado es ambiguo.  Distinguir entre virtual y no virtual sirve para resolver este problema. Si la funcion en cuestion es designada \"virtual\", se llamara a la funcion de la clase derivada (si existe). Si no es virtual, se llamara a la funcion de la clase base.  Por ejemplo, una clase base Animal podria tener una funcion virtual come. La subclase Pez implementaria come() de forma diferente que la subclase Lobo, pero se podria invocar a come() en cualquier instancia de una clase referida como Animal, y obtener el comportamiento de come() de la subclase especifica.  Esto permitiria a un programador procesar una lista de objetos de la clase Animal, diciendo a cada uno que coma (llamando a come()), sin saber que tipo de animales hay en la lista. Tampoco tendria que saber como come cada animal, o cuantos tipos de animales puede llegar a existir.  El siguiente, es un ejemplo en C++:  Salida con el metodo virtual come:  Salida sin el metodo virtual come:  Una funcion virtual pura o metodo virtual puro es una funcion virtual que necesita ser implementada por una clase derivada que no sea abstracta. Las clases que contienen metodos virtuales puros son denominadas \"abstractas\". Estas no pueden ser instanciadas directamente, y una subclase de una clase abstracta solo puede ser instanciada directamente si todos los metodos virtuales puros han sido implementados por esa clase o una clase padre.  Los metodos virtuales puros normalmente tienen una declaracion (cabecera) pero no tienen definicion (implementacion). Como ejemplo, una clase base abstracta como \"SimboloMatematico\" puede ofrecer una funcion virtual pura como hazOperacion, y las clases derivadas \"Suma\" y \"Resta\" pueden implementar hazOperacion para ofrecer implementaciones concretas. La implementacion de hazOperacion no tendria sentido en la clase \"SimboloMatematico\" porque \"SimboloMatematico\" es un concepto abstracto cuyo comportamiento es definido solamente por cada tipo (subclase) de \"SimboloMatematico\" dado.  De forma similar, una subclase dada de \"SimboloMatematico\" no seria completa sin una implementacion de hazOperacion. Aunque los metodos virtuales puros normalmente no tienen implementacion en la clase que los declara, en C++ permite hacer esto, ofreciendo un comportamiento por omision en el que la clase derivada puede delegar si es apropiado.  Las funciones virtuales puras tambien son utilizadas donde las declaraciones de metodos se utilizan para definir una interfaz para la que las clases derivadas proveeran todas las implementaciones. Una clase abstracta sirviendo como interfaz contiene solo funciones virtuales puras, y ningun miembro de datos (variables, constantes, etc.) ni metodos ordinarios. El uso de clases puramente abstractas como interfaces funciona en C++ ya que este soporta herencia multiple. Debido a que muchos lenguajes orientados a objetos no soportan herencia multiple, normalmente ofrecen un mecanismo por separado para hacer interfaces. Esto es asi por ejemplo en Java.  En C++, las funciones virtuales puras son declaradas utilizando una sintaxis especial = 0 como se muestra a continuacion:  La declaracion de la funcion virtual pura ofrece solo la declaracion del metodo. Normalmente no se ofrece una implementacion de la funcion virtual pura en una clase abstracta, pero puede ofrecerse siempre que no sea en la declaracion de la clase abstracta (no debe ser definida \"inline\"). Toda clase hija no-abstracta continua necesitando redefinir el metodo, pero la implementacion (definicion) ofrecida por la clase abstracta puede ser llamada de esta forma:  El compilador sabe a que implementacion del metodo llamar en tiempo de ejecucion creando una tabla de punteros a todas las funciones virtuales de una clase, llamada vtable o tabla virtual.  Los lenguajes orientados a objetos normalmente gestionan la reserva y la liberacion de memoria automaticamente cuando los objetos son creados y destruidos. Sin embargo, algunos lenguajes orientados a objetos permiten implementar un metodo destructor personalizado si se desea. Uno de estos lenguajes es C++, y como se ilustra en el siguiente ejemplo, es importante para una clase base de C++ tener un destructor virtual para asegurar que se llamara siempre al destructor de las clases derivadas inferiores. En el ejemplo siguiente, sin destructor virtual, al aplicarle el operador \"delete\" a una instancia de la clase B, se llamara correctamente al destructor de la clase B y al de la clase A si se elimina como instancia de B; una instancia de B, eliminada mediante un puntero a su clase base A, fallara al no llamar al destructor de B.  Salida:  La declaracion correcta del destructor para la clase A como virtual ~A() asegurara que el destructor para la clase B sea llamado en ambos casos del ejemplo anterior. ","snippet":"En programacion orientada a objetos (POO), una funcion virtual o metodo virtual es una funcion cuyo comportamiento, al ser declarado \"virtual\", es determinado por la definicion de una funcion con la m","enlaces_salientes":["Funci%C3%B3n_virtual","Funci%C3%B3n_virtual","Funci%C3%B3n_virtual","Programaci%C3%B3n_orientada_a_objetos","Polimorfismo_(programaci%C3%B3n_orientada_a_objetos)","C%2B%2B","Herencia_m%C3%BAltiple","Java_(lenguaje_de_programaci%C3%B3n)","Destructor_(inform%C3%A1tica)","Herencia_(programaci%C3%B3n_orientada_a_objetos)","Herencia_virtual","Control_de_autoridades"]}
{"url":"Herencia_(programaci%C3%B3n_orientada_a_objetos)","titulo":"Herencia (informatica)","contenido":"En programacion orientada a objetos, la herencia es, despues de la agregacion o composicion, el mecanismo mas utilizado para alcanzar algunos de los objetivos mas preciados en el desarrollo de software como lo son la reutilizacion y la extensibilidad. A traves de ella, los dise\u00f1adores pueden crear nuevas clases partiendo de una clase o de una jerarquia de clases preexistente (ya comprobadas y verificadas) evitando con ello el redise\u00f1o, la modificacion y verificacion de la parte ya implementada. La herencia facilita la creacion de objetos a partir de otros ya existentes e implica que una subclase obtiene todo el comportamiento (metodos) y finalmente los atributos (variables) de su superclase.  Es la relacion entre una clase general y otra clase mas especifica. Por ejemplo: Si declaramos una clase parrafo derivada de una clase texto, todos los metodos y variables asociadas con la clase texto, son automaticamente heredados por la subclase parrafo.  La herencia es uno de los mecanismos de los lenguajes de programacion orientada a objetos basados en clases, por medio del cual una clase se deriva de otra de manera que extiende su funcionalidad. La clase de la que se hereda se suele denominar clase base, clase padre, superclase, clase ancestro (el vocabulario que se utiliza suele depender en gran medida del lenguaje de programacion).  En los lenguajes que cuentan con un sistema de tipos fuerte y estrictamente restrictivo con el tipo de datos de las variables, la herencia suele ser un requisito fundamental para poder emplear el Polimorfismo, al igual que un mecanismo que permita decidir en tiempo de ejecucion que metodo debe invocarse en respuesta a la recepcion de un mensaje, conocido como enlace tardio o enlace dinamico.  Se declaran las clases mamiferos, gato y perro, haciendo que gato y perro sean unos mamiferos (derivados de esta clase), y se ve como a traves de ellos se nombra al animal pero asi tambien se accede a patas dandole el valor por defecto para esa especie.  Es importante destacar tres cosas. La primera, es que la herencia no es un mecanismo esencial en el paradigma de programacion orientada a objetos; en la mayoria de los lenguajes orientados a objetos basados en prototipos las clases no existen, en consecuencia tampoco existe la herencia y el polimorfismo se logra por otros medios. La segunda, es que el medio preferido para lograr los objetivos de extensibilidad y reutilizacion es la agregacion o composicion. La tercera, es que en lenguajes con un sistema de tipos debiles, el polimorfismo se puede lograr sin utilizar la herencia.  Por otra parte y aunque la herencia no es un concepto indispensable en el paradigma de programacion orientada a objetos, es mucho mas que un mecanismo de los lenguajes basados en clases, porque implica una forma de razonar sobre como dise\u00f1ar ciertas partes de un programa. Es decir, no solo es un mecanismo que permite implementar un dise\u00f1o, sino que establece un marco conceptual que permite razonar sobre como crear ese dise\u00f1o.  La herencia permite que existan clases que nunca seran instanciadas directamente. En el ejemplo anterior, una clase \"perro\" heredaria los atributos y metodos de la clase \"mamifero\", asi como tambien \"gato\", \"delfin\" o cualquier otra subclase; pero, en ejecucion, no habra ningun objeto \"mamifero\" que no pertenezca a alguna de las subclases. En ese caso, a una clase asi se la conoceria como Clase Abstracta. La ausencia de instancias especificas es su unica particularidad, para todo lo demas es como cualquier otra clase.  En ciertos lenguajes, el dise\u00f1ador puede definir que variables de instancia y metodos de los objetos de una clase son visibles. En C++ y java esto se consigue con las especificaciones private, protected y public. Solo las variables y metodos definidos como publicos en un objeto seran visibles por todos los objetos. En otros lenguajes como Smalltalk, todas las variables de instancia son privadas y todos los metodos son publicos.  Dependiendo del lenguaje que se utilice, el dise\u00f1ador tambien puede controlar que miembros de las superclases son visibles en las subclases. En el caso de java y C++ los especificadores de acceso (private, protected, public) de los miembros de la superclase afectan tambien a la herencia:  En la clase derivada se puede redefinir algun metodo existente en la clase base, con el objeto de proveer una implementacion diferente. Para redefinir un metodo en la subclase, basta con declararlo nuevamente con la misma signatura (nombre y parametros). Si se invoca un cierto metodo de un objeto que no esta definido en su propia clase, se dispara la busqueda hacia arriba en la jerarquia a la que dicha clase pertenece. Sin embargo, si existieran dos metodos con la misma signatura, uno en la clase y otro en una superclase, se ejecutaria el de la clase, no el de la superclase.  Cuando se redefine un metodo en una clase es posible acceder explicitamente al metodo original de su superclase, mediante una sintaxis especifica que depende del lenguaje de programacion empleado (en muchos lenguajes se trata de la palabra clave super).  Si la jerarquia de clases es demasiado compleja, el programador puede tener problemas para comprender el funcionamiento de un programa. Ademas puede volverse mas complejo detectar y resolver errores de programacion, por ejemplo al modificar una clase padre que afecta el funcionamiento de las subclases.  Otro problema es que las subclases se deben definir en codigo, por lo que los usuarios del programa no puede definir subclases nuevas. Otros patrones de dise\u00f1o permiten que los usuarios puedan definir variantes de una entidad en tiempo de ejecucion. ","snippet":"En programacion orientada a objetos, la herencia es, despues de la agregacion o composicion, el mecanismo mas utilizado para alcanzar algunos de los objetivos mas preciados en el desarrollo de softwar","enlaces_salientes":["Herencia_(inform%C3%A1tica)","Herencia_(inform%C3%A1tica)","Herencia_(inform%C3%A1tica)","Programaci%C3%B3n_orientada_a_objetos","Clase_(inform%C3%A1tica)","Objeto_(programaci%C3%B3n)","Programaci%C3%B3n_orientada_a_objetos","Clase_(programaci%C3%B3n_orientada_a_objetos)","Sistema_de_tipos","Polimorfismo_(programaci%C3%B3n_orientada_a_objetos)","Lenguaje_de_programaci%C3%B3n","Herencia_m%C3%BAltiple","C%2B%2B","Python","Lenguaje_de_programaci%C3%B3n_Eiffel","Smalltalk","Lenguaje_de_programaci%C3%B3n_Java","Lenguaje_de_programaci%C3%B3n_Ada","C_sharp","Control_de_autoridades","Gemeinsame_Normdatei"]}
{"url":"Herencia_m%C3%BAltiple","titulo":"Herencia multiple","contenido":"Herencia multiple hace referencia a la caracteristica de los lenguajes de programacion orientada a objetos en la que una clase puede heredar comportamientos y caracteristicas de mas de una superclase. Esto contrasta con la herencia simple, donde una clase solo puede heredar de una superclase.  Algunos lenguajes que soportan herencia multiple en su mayor parte son: C++, Centura SQL Windows, CLOS, Eiffel, Object REXX, Perl y Python.  La herencia multiple permite a una clase tomar funcionalidades de otras clases, como permitir a una clase llamada MusicoEstudiante heredar de una clase llamada Persona, una clase llamada Musico, y una clase llamada Trabajador. Esto puede ser abreviado como MusicoEstudiante\u00a0: Persona, Musico, Trabajador.  En la herencia multiple aparecen ambiguedades, como en el ejemplo de encima: si la clase Musico heredaba de Persona y Trabajador, y la clase Trabajador heredaba de Persona. Existirian las siguientes reglas::  Si un compilador esta mirando la clase MusicoEstudiante necesita saber si debe juntar las caracteristicas iguales o si deben estar separadas. Por ejemplo, tendria sentido unir las caracteristicas \"Edad\" de Persona para MusicoEstudiante. La edad de una persona no cambia si le consideras una Persona, un Trabajador o un Musico. Sin embargo, tendria sentido separar la caracteristica \"Nombre\" de Persona y Musico si los musicos usan un nombre artistico diferente de su nombre real. Las opciones de juntar y separar son validas segun el contexto, y solo el programador sabe que opcion es correcta para la clase que esta dise\u00f1ando.  Cada lenguaje de programacion trata estos problemas de herencia repetida de diferente forma:  Java, Nemerle, Delphi, C# y Objective-C no permiten herencia multiple; esto hace que no haya ambiguedad. Sin embargo, permiten a las clases implementar multiples interfaces.  Hay debate sobre si la herencia multiple puede ser implementada de forma simple y sin ambiguedad. Con frecuencia es criticada por su aumentada complejidad y su ambiguedad, asi como los problemas de versiones y mantenimiento que puede causar (a menudo resumido como el problema del diamante).\u200b  Los detractores tambien se\u00f1alan que hay problemas de implementacion de la herencia multiple como no ser capaces de explicitar herencia de multiple clases y el orden de las semanticas de clase que cambian con la herencia. Hay lenguajes que solucionan todos los problemas tecnicos de la herencia multiple, pero el debate principal sigue sobre si implementar y usar herencia multiple es mas facil que usar herencia simple y patrones de dise\u00f1o de software. ","snippet":"Herencia multiple hace referencia a la caracteristica de los lenguajes de programacion orientada a objetos en la que una clase puede heredar comportamientos y caracteristicas de mas de una superclase.","enlaces_salientes":["Herencia_m%C3%BAltiple","Herencia_m%C3%BAltiple","Herencia_m%C3%BAltiple","Lenguajes_de_programaci%C3%B3n","Programaci%C3%B3n_orientada_a_objetos","Clase_(programaci%C3%B3n_orientada_a_objetos)","Herencia_(programaci%C3%B3n_orientada_a_objetos)","C%2B%2B","Common_Lisp_Object_System","Eiffel_(lenguaje_de_programaci%C3%B3n)","Object_REXX","Perl","Python","B%C3%BAsqueda_en_profundidad","Java_(lenguaje_de_programaci%C3%B3n)","Delphi","C_Sharp","Objective-C","Complejidad","Problema_del_diamante","Patrones_de_dise%C3%B1o","Mixin","Control_de_autoridades"]}
{"url":"Polimorfismo_(programaci%C3%B3n_orientada_a_objetos)","titulo":"Polimorfismo (informatica)","contenido":"En programacion orientada a objetos, el polimorfismo se refiere a la propiedad por la que es posible enviar mensajes sintacticamente iguales a objetos de tipos distintos. Aunque el mensaje sea el mismo, diferentes objetos pueden responder a el de manera unica y especifica. Esta caracteristica permite que, sin alterar ni tocar el codigo existente, se puedan incorporar nuevos comportamientos y funciones (es decir la interfaz sintactica se mantiene inalterada pero cambia el comportamiento en funcion de que objeto estamos usando en cada momento). El unico requisito es que los objetos deben ser capaces de responder al mensaje que se les envia, garantizando asi una flexibilidad y extensibilidad en el dise\u00f1o del software.  En lenguajes basados en clases y con un sistema de tipos de datos fuerte (independientemente de si la verificacion se realiza en tiempo de compilacion o de ejecucion), es posible que el unico modo de poder utilizar objetos de manera polimorfica sea que compartan una raiz comun, es decir, una jerarquia de clases, ya que esto proporciona la compatibilidad de tipos de datos necesaria para que sea posible utilizar una misma variable de referencia (que podra apuntar a objetos de diversas subclases de dicha jerarquia) para enviar el mismo mensaje (o un grupo de mensajes) al grupo de objetos que se tratan de manera polimorfica.  No obstante, algunos lenguajes de programacion (Java, C++) permiten que dos objetos de distintas jerarquias de clases respondan a los mismos mensajes, a traves de las denominadas interfaces (esta tecnica se conoce como composicion de objetos). Dos objetos que implementen la misma interfaz podran ser tratados de forma identica, como un mismo tipo de objeto, el tipo definido por la interfaz. Asi, distintos objetos podran intercambiarse en tiempo de ejecucion \u2013siempre que sean del mismo tipo\u2013, y ademas con dependencias minimas entre ellos. Por estos motivos se considera un buen principio de dise\u00f1o en programacion orientada a objetos el favorecer la composicion de objetos frente a la herencia de clases.\u200b  En Java las interfaces se declaran mediante la palabra clave Interface. Estas se utilizan para lograr la necesaria concordancia de tipos que hace posible el polimorfismo, tambien como un contrato que debe cumplir cualquier clase que implemente una cierta interfaz, y como una forma de documentacion para los desarrolladores. A veces, en la literatura especifica sobre Java se habla de \"herencia y polimorfismo de interfaces\", lo que no concuerda con los conceptos de la programacion orientada a objetos porque una clase que implementa una interfaz solo obtiene su tipo de datos y la obligacion de implementar sus metodos, no copia comportamiento ni atributos. Esta terminologia puede llevar a confusion, puesto que en Java a menudo se utiliza la mal llamada \"herencia de interfaces\" para dotar a una clase de uno o varios tipos adicionales, lo que unido a la composicion, evite la necesidad de la herencia multiple y favorezca una utilizacion mas amplia del polimorfismo.  No obstante, el uso de una jerarquia de clases como paso previo, es muy habitual incluso en aquellos lenguajes en los que es posible prescindir de tal jerarquia, ya que, desde una perspectiva conceptual, se puede decir que al pertenecer los \"objetos polimorficos\" a subclases de una misma jerarquia, se asegura la equivalencia semantica de los mensajes que se invocaran de modo polimorfico. Por esto, en programacion orientada a objetos a veces se denomina al polimorfismo como \"polimorfismo de subclase (o de subtipo)\".  En resumen, en la programacion orientada a objetos, la esencia del polimorfismo no ata\u00f1e a la clase o prototipo de la que provienen los objetos. Aun asi, en los lenguajes basados en clases, es habitual (y en algunos tal vez sea el unico modo) que dichos objetos pertenezcan a subclases pertenecientes a una misma jerarquia. Entonces, el polimorfismo debe verse como una forma flexible de usar un grupo de objetos (como si fueran solo uno). Podria decirse que el polimorfismo en esencia refiere al comportamiento de los objetos, no a su pertenencia a una jerarquia de clases (o a sus tipos de datos).  Lo anterior se hace aun mas evidente en lenguajes de programacion orientada a objetos basados en prototipos, como Self, en los que las clases no existen.  Ademas, es importante remarcar que si un cierto grupo de objetos pueden utilizarse de manera polimorfica es porque, en ultima instancia, todos ellos saben responder a un cierto mensaje (o a varios), pero dado que esos mismos objetos generalmente contendran otros metodos (que otros objetos en dicho grupo no contienen), dificilmente se pueda decir lisa y llanamente que los objetos son polimorficos; lo correcto es decir que esos objetos se pueden utilizar de modo polimorfico para un cierto conjunto de mensajes.  Un ejemplo. Podemos crear dos clases distintas: Pez y Ave que heredan de la superclase Animal. La clase Animal tiene el metodo abstracto mover que se implementa de forma distinta en cada una de las subclases (peces y aves se mueven de forma distinta). Entonces, un tercer objeto puede enviar el mensaje mover a un grupo de objetos Pez y Ave por medio de una variable de referencia de clase Animal, haciendo asi un uso polimorfico de dichos objetos respecto del mensaje mover.  El concepto de polimorfismo, desde una perspectiva mas general, se puede aplicar tanto a funciones como a tipos de datos. Asi nacen los conceptos de funciones polimorficas y tipos polimorficos. Las primeras son aquellas funciones que pueden evaluarse o ser aplicadas a diferentes tipos de datos de forma indistinta; los tipos polimorficos, por su parte, son aquellos tipos de datos que contienen al menos un elemento cuyo tipo no esta especificado.  Se puede clasificar el polimorfismo en dos grandes clases:  El polimorfismo dinamico unido a la herencia es lo que en ocasiones se conoce como programacion generica.  Tambien se clasifica en herencia por redefinicion de metodos abstractos y por metodo sobrecargado. El segundo hace referencia al mismo metodo con diferentes parametros.  Otra clasificacion agrupa los polimorfismo en dos tipos: Ad-Hoc que incluye a su vez sobrecarga de operadores y coercion, Universal (inclusion o controlado por la herencia, parametrico o genericidad).  En el siguiente ejemplo hacemos uso del lenguaje C++ para ilustrar el polimorfismo. Se observa a la vez el uso de las funciones virtuales puras, como se les conoce en C++, estas funciones constituyen una interfaz mas consistente cuando se trabaja con una jerarquia de clases, puesto que hacen posible el enlace durante la ejecucion. Sin embargo como se vera, para que el polimorfismo funcione no es una condicion obligatoria que todas las funciones en la clase base sean declaradas como virtuales.  Aunque la aplicacion del polimorfismo no varia, el modo en que se aplica desde una interfaz puede resultar un poco mas oscuro y dificil de entender. Se expone un sencillo ejemplo (en VB-NET) comentado para entender como funciona aplicado desde una interfaz, primero se escribe el codigo y luego se comenta el funcionamiento. Nota: para no enturbiar el codigo en exceso, todo lo que no se declara privado se sobreentiende publico.  Analicemos ahora el codigo para entender el polimorfismo expuesto en la interfaz: La interfaz expone un metodo que puede ser implementado por las diferentes clases, normalmente relacionadas entre si. Las clases Sumar y Restar implementan la interfaz pero el metodo de la interfaz lo declaramos privado para evitar ser accedido libremente y ademas tienen un metodo llamado Calcular que llama a la clase Operacion donde tenemos otro metodo con el mismo nombre. Es esta clase ultima la que realiza el polimorfismo y debe fijarse como es a traves de una instancia de la interfaz que llama al metodo operar. La interfaz sabe a que metodo de que clase llamar desde el momento que asignamos un valor a la variable OP en el metodo Calcular de la clase Operacion, que a su vez recibio la referencia del metodo Calcular desde la clase que la llama, sea esta cual sea, se identifica a si misma, mediante la referencia Me o This segun el lenguaje empleado. Debe notarse que la instancia de la interfaz accede a sus metodos aunque en sus clases se hayan declarado privadas.  El polimorfismo como se muestra en el ejemplo anterior, suele ser bastante ventajoso aplicado desde las interfaces, ya que permite crear nuevos tipos sin necesidad de tocar las clases ya existentes (imaginemos que deseamos a\u00f1adir una clase Multiplicar), basta con recompilar todo el codigo que incluye los nuevos tipos a\u00f1adidos. Si se hubiera recurrido a la sobrecarga durante el dise\u00f1o exigiria retocar la clase anteriormente creada al a\u00f1adir la nueva operacion Multiplicar, lo que ademas podria suponer revisar todo el codigo donde se instancia a la clase. ","snippet":"En programacion orientada a objetos, el polimorfismo se refiere a la propiedad por la que es posible enviar mensajes sintacticamente iguales a objetos de tipos distintos. Aunque el mensaje sea el mism","enlaces_salientes":["Polimorfismo_(inform%C3%A1tica)","Polimorfismo_(inform%C3%A1tica)","Polimorfismo_(inform%C3%A1tica)","Polimorfismo_(malware)","Programaci%C3%B3n_orientada_a_objetos","Objeto_(programaci%C3%B3n)","Tipo_de_dato","Sistema_de_tipos","Java_(lenguaje_de_programaci%C3%B3n)","Self","Superclase","Clase_(inform%C3%A1tica)","Programaci%C3%B3n_gen%C3%A9rica","UML","Interfaz","Sobrecarga","Dise%C3%B1o","ISBN","Control_de_autoridades"]}
{"url":"Plantillas","titulo":"Plantilla","contenido":"Una plantilla o dispositivo de interfaz, suele proporcionar una separacion entre la forma o estructura y el contenido. Es un medio o aparato o sistema, que permite guiar, portar, o construir, un dise\u00f1o o esquema predefinido.  Una plantilla agiliza el trabajo de reproduccion o de muchas copias identicas o casi identicas (que no tiene que ser tan elaborado, sofisticado o personal). Si se utilizan plantillas en todos los terrenos de la industria y la tecnologia. Una plantilla puede servir como muestra base de una diversidad sobre la que comparten elementos comunes (patron) y que en si es lo que constituye la plantilla.  En relacion con la edicion o composicion de textos o imagenes, se compone de cajas y lineas, con unos tama\u00f1os y margenes, para facilitar la escritura de articulos o cartas, con titulos, fotos y diagramas.  En relacion con la mecanica, puede ser una forma especifica de angulos y medidas, tal que colocando las partes constituyentes en su sitio permite un ensamblaje calibrado y uniforme e identificar la carencia de algun elemento.  Con relacion con los informes profesionales, por ejemplo trabajos para la facultad, presentacion de proyectos o presupuesto, se utilizan para normalizar el formato dentro de un documento dejando al autor la responsabilidad de agregarle contenido. En general, las plantillas de procesadores de texto incluyen: portada, indice, encabezado y pie de pagina, numeracion en las paginas, configuracion predeterminada de interlineado, primera linea, margenes, tipo de letra y referencias.   ","snippet":"Una plantilla o dispositivo de interfaz, suele proporcionar una separacion entre la forma o estructura y el contenido. Es un medio o aparato o sistema, que permite guiar, portar, o construir, un dise\u00f1","enlaces_salientes":["Plantilla","Plantilla","Plantilla","Interfaz","Dise%C3%B1o","Industria","Tecnolog%C3%ADa","Maqueta","Foto","Diagrama","Mec%C3%A1nica","%C3%81ngulo","Ensambladura","Calibrado","Procesador_de_texto","Dise%C3%B1o_gr%C3%A1fico","Control_de_autoridades"]}
{"url":"C%2B%2B11","titulo":"C++11","contenido":"C++11 es una version del lenguaje de programacion C++ estandar aprobado por la Organizacion Internacional de Normalizacion (ISO) el 12 de agosto de 2011, reemplazando al anterior C++03. A partir del 18 de agosto de 2014 fue sustituido por la version C++14 y mas tarde por C++17. El nombre sigue la tradicion de denominar a las versiones del lenguaje C++ a partir de la fecha de publicacion, aunque su nombre original fue C++0x debido a que esperaba ser publicada antes de 2010.  A pesar de que uno de los objetivos era hacer los cambios en las librerias en lugar de hacerlo en el nucleo del lenguaje, C++11 a\u00f1ade algunas cosas al nucleo. Algunas areas del lenguaje que fueron significativamente mejoradas como el soporte multihilo, soporte para la programacion generica, inicializacion uniforme y el rendimiento. La Libreria Estandar de C++ tambien recibio numerosos cambios, incorporando la mayoria de las bibliotecas definidas en el documento C++ Technical Report 1 (TR1), con la excepcion de la biblioteca de funciones matematicas especiales.  El borrador mas parecido al C++11 publicado es el N3337 del 16 de enero de 2012, el cual realiza solo algunas correcciones editoriales al estandar.  En el desarrollo de cada utilidad del nuevo estandar, el comite ha aplicado algunas directivas:  La atencion a los principiantes es muy importante porque ellos siempre seran la mayoria entre los programadores, y porque muchos principiantes no intentarian ampliar su conocimiento de C++, limitandose ellos mismos a operar en los aspectos del lenguaje en el que estan especializados. Adicionalmente, considerando la vastedad de C++ y de su uso (incluyendo areas de aplicacion y estilos de programacion), incluso los programadores mas experimentados pueden convertirse en principiantes en un nuevo paradigma de programacion.  Una funcion del comite de C++ es el desarrollo del nucleo del lenguaje. Las areas del nucleo del lenguaje que fueron significativamente mejoradas incluyen el soporte multithreading (multihilo), el soporte de programacion generica, la inicializacion uniforme, y mejoras del rendimiento.  Para los propositos de este articulo, las caracteristicas y los cambios del nucleo del lenguaje son agrupadas en 4 secciones generales:  Algunas caracteristicas podrian entrar en multiples grupos, pero solo son mencionadas en el grupo que primariamente representa esa caracteristica.  Estas caracteristicas del lenguaje existen primariamente para proporcionar un cierto tipo de beneficio en el rendimiento, tanto de la memoria como de la velocidad computo.  En el C++03 (y anteriores), los temporales, llamados \"rvalues\" pues a menudo se encuentran en el lado derecho de una asignacion, fueron pensados para nunca ser modificables - justo como en C (y eran considerados ser indistinguibles de los tipos const T&) - aunque en algunos casos los temporales habrian podido ser modificados, e incluso era considerados ser un util agujero de escape (loophole) (para el anterior, ver Sutter, Alexandrescu \"C++ coding standards\" #15). C++11 agrega un nuevo tipo de referencia no-constante llamado una referencia rvalue, identificada por T&&. Esto refiere a los temporales en que se permite que sean modificados despues de que son inicializados, con el proposito de permitir la \"semantica del movimiento\" (move semantics).  Un problema de rendimiento cronico con el C++03 son las costosas e innecesarias copias profundas que pueden suceder implicitamente cuando los objetos son pasados por valor. Para ilustrar el problema, considere que un std::vector<T> es, internamente, una envoltura (wrapper) alrededor de una tabla (array) de estilo C con un tama\u00f1o. Si un std::vector<T> temporal se crea en una funcion, solamente se puede almacenar creando un nuevo std::vector<T> y copiando todos los datos rvalue en el. Luego, el temporal y toda su memoria es destruido. (Por simplicidad, este argumento deja de lado la optimizacion del valor devuelto).  En el C++11, un \"move constructor\" del std::vector<T> que toma una referencia rvalue a un std::vector<T> puede simplemente copiar el puntero a la variable interna, de estilo C, fuera del rvalue en el nuevo std::vector<T>, entonces cambiar el puntero dentro del rvalue a null. Debido a que se puede reinicializar el puntero temporal, el objeto no se borra cuando se sale del ambito (scope), y no es necesaria una copia profunda. Por otra parte, es una operacion segura e invisible porque el temporal nunca se usara otra vez.  Las referencias de rvalue pueden proporcionar beneficios de rendimiento al codigo existente sin la necesidad realizar cualquier cambio fuera de la biblioteca estandar. El tipo del valor retornado de una funcion que retorna un std::vector<T> temporal no necesita ser cambiado explicitamente al std::vector<T> && para invocar al move constructor, pues los temporales son considerados automaticamente como rvalues. (Sin embargo, si std::vector<T> es la version del C++03 sin un move constructor, despues el copy constructor sera invocado con un const std::vector<T>& como se hace normalmente, incurriendo en una significativa asignacion de memoria).  Por razones de la seguridad, algunas restricciones son impuestas. Una variable nombrada nunca sera considerada para ser un rvalue incluso si se ha declarado como tal; para conseguir un rvalue, la plantilla de funcion std::move<T> () debe ser usada. Tambien, las referencias de rvalue solamente pueden ser modificadas bajo ciertas circunstancias, siendo pensado para ser usado primariamente con los move constructor.  Debido a la naturaleza de la fraseologia de las referencias rvalue, y a una cierta modificacion a la fraseologia para las referencias del lvalue (referencias regulares), las referencias rvalue permiten a los desarrolladores proporcionar forwarding de funciones perfectos. Cuando se combina con las plantillas variadic, esta capacidad permite plantillas de funcion que pueden perfectamente remitir (forward) argumentos a otra funcion que tome esos argumentos particulares. Esto es mas util para forwarding de parametros del constructor, para crear funciones de factoria que llamaran automaticamente al constructor correcto para los particulares argumentos.  El C++ siempre ha tenido el concepto de expresiones constantes. Estas son expresiones tales como 3+4 que daran siempre los mismos resultados, en tiempo de compilacion y en tiempo de ejecucion. Las expresiones constantes son oportunidades de optimizacion para los compiladores, y los compiladores frecuentemente las ejecutan en tiempo de compilacion y luego ponen los resultados codificados directamente en el programa (hard coded). Tambien, hay un numero de lugares en donde la especificacion del C++ requiere el uso de expresiones constantes. La definicion de un arreglo requiere una expresion constante, y los valores del enumerador deben ser expresiones constantes.  Sin embargo, las expresiones constantes siempre han terminado cuando una llamada de funcion o un constructor de objeto sea encontrado. Asi que una pieza de codigo tan simple como esta es ilegal:  Este no es C++ legal, porque dame_cinco() + 7 no es una expresion constante. El compilador no tiene manera de saber si dame_cinco() es realmente constante en tiempo de ejecucion. En teoria, esta funcion podia afectar a una variable global, llamar a otras funciones constantes de no tiempo de ejecucion, etc.  C++11 introdujo la palabra clave constexpr (expresion constante), que permite al usuario garantizar que una funcion o un constructor de objeto es constante en tiempo de compilacion. El ejemplo de arriba puede ser reescrito como sigue:  Esto permite que el compilador entienda, y verifique, que dame_cinco es una constante en tiempo de compilacion.  El uso del constexpr en una funcion impone limitaciones muy estrictas en lo que esa funcion puede hacer. Primero, la funcion debe tener un tipo de retorno que no sea void. En segundo lugar, el contenido de la funcion debe ser de la forma: return expresion. Tercero, la expresion debe ser una expresion de constante despues de la sustitucion del argumento. Esta expresion constante puede solamente llamar a otras funciones definidas como constexpr, o puede usar otras variables de datos de expresiones constantes. Por ultimo, una funcion con esta etiqueta no puede ser llamada hasta que es definida en esta unidad de traduccion (translation unit).  Las variables tambien pueden ser definidas como valores de expresiones constantes:  Las variables de los datos de la expresion constante son implicitmente const. Solo pueden almacenar los resultados de expresiones constantes o de constructores de expresiones constantes.  Para construir valores de datos de expresion constante desde tipos definidos por el usurario, los constructores tambien pueden ser declarados con constexpr. Un constructor de expresion constante debe ser definido antes de su uso en la unidad de traduccion, como con las funciones de expresion constante. Debe tener un cuerpo de funcion vacio. Debe inicializar a sus miembros con expresiones constantes. Los destructores para tales tipos deben ser triviales.  Para copiar tipos construidos constexpr tambien deben ser definidos como constexpr, para permitir que retornen por valor desde una funcion constexpr. Cualquier funcion miembro de una clase, tal como copy constructors, sobrecarga de operadores, etc, pueden ser declaradas como constexpr, siempre y cuando adapten la definicion para expresiones constantes de funcion. Esto permite al compilador copiar clases en tiempo de compilacion, realiza operaciones en ellas, etc.  Una funcion de expresion constante o un constructor puede ser llamado con parametros que no sean constexpr. Justo como un literal de numero entero constexpr puede ser asignado a una variable que no sea constexpr, asi que una funcion constexpr tambien puede ser llamada con parametros que no sean constexpr, y los resultados almacenados en variables que no sean constexpr. La palabra clave solo permite la posibilidad de constante de tiempo de compilacion cuando todos los miembros de una expresion son constexpr.  En el C++03, una clase o struct debe seguir un numero de reglas para que sea considerado un tipo plain old data (POD). Los tipos que cumplen esta definicion producen layouts de objetos que son compatibles con C. Sin embargo, la definicion en C++03 es innecesariamente estricta y hay buenas razones para permitir a mas tipos cumplir la definicion de POD [cita\u00a0requerida]. C++11 relajo varias de las reglas [cita\u00a0requerida].  Una clase/struct es considerada una POD si es trivial, de standard-layout, y si todos sus miembros no estaticos son POD.  Una clase o struct trivial se define como uno los siguientes:  Una clase o struct es standard-layout, por definicion, con tal que cumpla lo siguiente:  En el C++03, el compilador debe instanciar una plantilla siempre que una plantilla especificada completamente es encontrada en una unidad de traduccion. Si la plantilla es instanciada con el mismo tipo en muchas unidades de traduccion, esta puede aumentar dramaticamente el tiempo de compilacion. No hay manera de prevenir esto en C++03, asi que C++11 introdujo las declaraciones de plantilla extern, analogas a las declaraciones de datos extern.  C++03 tiene esta sintaxis para obligar al compilador a instanciar una plantilla:  C++11 ahora proporciona este sintaxis:  la cual le dice al compilador que no instancie la plantilla en esta unidad de traduccion.  Estas caracteristicas existen para el proposito primario de hacer el lenguaje mas facil usar. Estas pueden mejorar la seguridad de tipo, minimizar la repeticion de codigo, hacer que el codigo erroneo sea menos probable, etc.  C++03 heredo la caracteristica del inicializador de lista de C. Un struct o un arreglo recibe una lista de argumentos en llaves cuadradas (corchetes), en el orden de las definiciones de los miembros en el struct. Estos inicializadores de listas son recursivos, asi que pueden usarlos un arreglo de structs o un struct que contiene otros structs.  Esto es muy util para las listas estaticas o justo para inicializar un struct con un valor particular. C++ tambien proporciona constructores para inicializar un objeto, pero a menudo no son tan convenientes como el inicializador de lista. Sin embargo C++03 solo permite inicializar listas en los structs y las clases que se ajustan a la definicion Plain Old Data (POD); C++11 extiende la inicializacion de listas, asi que pueden ser usadas para todas las clases incluyendo los contenedores estandar como el std::vector.  C++11 ata (bind) el concepto a una plantilla, llamada std::initializer_list. Esto permite que los constructores y otras funciones tomen inicializadores de lista como parametros. Por ejemplo:  Esto permite que ClaseDeSecuencia sea construida de una secuencia de numeros enteros, como en:  Esta es una clase especial de constructor, llamada constructor inicializador de lista. Las clases con tal constructor son tratadas especialmente durante la inicializacion uniforme (ver abajo)  La clase std::initializer_list<> es un tipo de biblioteca estandar C++11 de primera clase. Sin embargo, solo pueden ser inicialmente construidos estaticamente por el compilador de C++11 con el uso de la sintaxis {}. La lista puede ser copiada una vez construida, por lo que es solamente una copia-por-referencia. Una lista de inicializador es constante; una vez que la lista del inicializador es creada, sus miembros no pueden ser cambiados, ni los datos en esos miembros.  Debido a que el initializer_list es un verdadero tipo, puede ser usado en otros lugares ademas de los constructores de clase. Las funciones regulares pueden tomar tipos de listas inicializadas como argumentos. Por ejemplo:  Los contenedores estandar tambien pueden ser inicializados de las maneras siguientes:  El C++03 tiene un numero de problemas con los tipos de inicializacion. Hay varias maneras de inicializar tipos, y no todas producen los mismos resultados cuando son intercambiadas. La sintaxis tradicional del constructor, por ejemplo, puede parecerse como una declaracion de funcion, y deben tomarse medidas para asegurarse que la regla del parse mas irritante no la confundira como tales. Solamente los agregados y los tipos POD pueden ser inicializados con inicializadores agregados (usando SomeType var = {/*stuff*/};).  C++11 proporciona una sintaxis que permite la inicializacion de tipo completamente uniforme que trabaja en cualquier objeto. Se expande en la sintaxis de inicializador de lista:  La inicializacion de var1 se comporta exactamente como si fuera una inicializacion de agregado. Es decir, cada miembro de datos de un objeto, a su vez, sera inicializado por copia con el correspondiente valor de la lista de inicializacion. La conversion de tipo implicita sera usada cuando se necesite. Si no existe ninguna conversion, o solo existe un estrechamiento de conversion, el programa esta malformado. La inicializacion de var2 invoca al constructor.  Tambien se puede hacer lo siguiente:  La inicializacion uniforme no reemplaza la sintaxis de constructor. Todavia hay momentos en que es requerida la sintaxis de constructor. Si una clase tiene un constructor (TypeName(initializer_list<AlgunTipo>);), entonces toma prioridad sobre otras formas de construccion, a condicion de que la lista del inicializador se conforme al tipo de constructor de secuencia. La version C++11 del std::vector tiene un constructor de lista de inicializacion para su tipo de plantilla. Esto significa que el siguiente codigo:  llamara al constructor de la lista del inicializador, no el constructor del std::vector que toma un solo parametro de tama\u00f1o y crea el vector con ese tama\u00f1o. Para acceder al ultimo constructor, el usuario necesitara usar directamente la sintaxis de constructor estandar.  En el C++03 (y en C), el tipo de una variable debe ser explicitamente especificado para poder usarlo. Sin embargo, con el advenimiento de los tipos de plantilla y tecnicas de metaprogramacion de plantillas, puede que expresar el tipo de algo no sea facil, particularmente cuando se trata de definir bien el valor de retorno de una funcion. Tambien es dificil almacenar valores intermediarios en variables, y posiblemente se requerira conocer las partes internas de una biblioteca de metaprogramacion particular.  C++11 permite que esto sea mitigado de dos maneras. Primero, la definicion de una variable con una inicializacion explicita puede usar la palabra clave auto. Esto crea una variable del tipo especifico del inicializador:  El tipo algun_extra\u00f1o_tipo_llamable es simplemente lo que la plantilla particular de la funcion override de boost::bind retorna para esos argumentos particulares. Este tipo es facilmente determinado por procedimiento por el compilador como parte de sus trabajos de analisis semantico, pero no es facil de determinar por inspeccion por el usuario.  El tipo otra_variable tambien esta bien definido, pero es mas facil de determinar por el usuario. Es un int, el cual es el mismo tipo que el literal de numero entero.  Adicionalmente, la palabra clave decltype puede ser usada para determinar el tipo de una expresion en tiempo de compilacion. Por ejemplo:  Esto es mas util conjuntamente con auto, puesto que el tipo de una variable auto es solo conocido por el compilador. Sin embargo, el decltype tambien puede ser muy util para las expresiones en el codigo que hacen un fuerte uso de sobrecarga de operador y de tipos especializados.  auto es tambien util para reducir la verbosidad del codigo. Por ejemplo, en vez de escribir  el programador puede utilizar el mas corto  Esta diferencia crece a medida que el programador comienza a anidar los contenedores, aunque en tales casos los typedefs son una buena manera de disminuir la cantidad de codigo.  El tipo denotado por el decltype puede ser diferente del tipo deducido por auto.  En el C++03, la iteracion sobre los elementos de una lista requiere mucho codigo. Otras lenguajes como C# y Java tienen atajos que permitan escribir una simple declaracion \"foreach\" que camina automaticamente por la lista desde el comienzo hasta el final.  C++11 agrego una caracteristica similar. La declaracion for permite una iteracion facil sobre una lista de elementos:  Esta forma de for, llamada \"for basado en rango\", iterara sobre cada elemento en la lista. Trabajara para los arreglos de estilo C, inicializadores de listas, y cualquier tipo que tenga definida una funcion begin() y end() que retorne iteradores. Todos los contenedores de biblioteca estandar que tienen pares begin/end trabajaran con la sentencia for basada en rango.  C++11 proporciona la capacidad de crear funciones anonimas, llamadas funciones lambda. Estas se definen como sigue:  El tipo de retorno esta implicito; devuelve el tipo de la expresion de retorno (decltype (x+y)). El tipo de retorno de una lambda puede ser omitido siempre y cuando todas las expresiones de retorno devuelven el mismo tipo.  la sintaxis de declaracion de una funcion estandar de C era perfectamente adecuada para el conjunto de caracteristicas de este lenguaje. A medida que C++ evoluciono desde el C, mantuvo la sintaxis basica extendiendola en caso necesario. Sin embargo, a medida que C++ llego a ser mas complicado, expuso un numero de limitaciones, particularmente con respecto a declaraciones de funciones de plantilla. Lo siguiente, por ejemplo, no es permitido en C++03:  El tipo Ret es cualquier cosa que la adicion de los tipos Lhs y Rhs produzca. Incluso con la ya mencionada funcionalidad C++11 del decltype, esto no es posible:  Esto no es C++ legal porque lhs y rhs todavia no se han definido; no seran identificadores validos hasta despues de que el parser haya analizado el resto del prototipo de la funcion.  Para solucionarlo, C++11 introdujo una nueva sintaxis de declaracion de funcion, con el tipo de retorno al final:  Esta sintaxis puede ser usada para declaraciones y definiciones de funciones mas mundanas:  En este caso el uso de la palabra clave \"auto\" significa algo diferente de su uso en la deduccion de tipo automatica.  En C++03, a los constructores de una clase no se les permite llamar a otros constructores de esa clase; cada constructor debe construir todos sus miembros de clase por si mismo o llamar a una funcion de miembro comun, como los siguientes,  Los constructores para las clases base no pueden ser expuestos directamente a las clases derivadas; cada clase derivada debe implementar constructores incluso si un constructor de clase base fuera apropiado. los miembros de datos no constantes de las clases no pueden ser inicializados en el sitio de la declaracion de esos miembros. Solo pueden ser inicializados en un constructor.  El C++11 proporciona soluciones a todos estos problemas.  El C++11 permite a los constructores llamar a otros constructores pares (conocidos como delegacion). Esto permite a los constructores usar el comportamiento de otro constructor con un minimo de codigo a\u00f1adido. Ejemplos de otros lenguajes similares a C++ que proporcionen la delegacion son Java, C#, y D.  Esta sintaxis es como sigue:  Note que, en este caso, el mismo efecto habria podido ser alcanzado haciendo new_number un parametro por defecto. Sin embargo, la nueva sintaxis permite que al valor por defecto (42) sea expresado en la implementacion en vez de la interfaz - un beneficio para los mantenedores del codigo de la biblioteca puesto que los valores por defecto para los parametros de la funcion son \"horneados\" para llamar sitios, mientras que la delegacion del constructor permite que el valor sea cambiado usando la biblioteca sin la recompilacion del codigo.  Esto viene con una advertencia: C++03 considera un objeto a ser construido cuando su constructor termine de ejecutarse, pero C++11 considera un objeto construido una vez que cualquier constructor termine su ejecucion. Puesto que se permitira ejecutar a multiples constructores, esto significara que cada constructor delegado ejecutara en un objeto completamente construido de su propio tipo. Los constructores de clase derivados, ejecutaran despues de que toda la delegacion en sus clases base este completa.  Para los constructores de la clase base, el C++11 permite a una clase especificar que los constructores de la clase base sean heredados. Esto significa que el compilador C++11 generara codigo para realizar la herencia, el forwarding de clase derivada a la clase base. Observe que esto es una caracteristica de todo o nada; todos los constructores de esa clase base son forwarded o ningunos de ellos lo son. Tambien, observe que hay restricciones para la herencia multiple, de tal manera que los constructores de clase no pueden ser heredados a partir de dos clases que usen constructores con la misma firma. Ni puede existir un constructor en la clase derivada que tenga una firma igual en la clase base heredada.  la sintaxis es como sigue:  Para la inicializacion de miembros, C++11 permite la siguiente sintaxis:  Cualquier constructor de la clase inicializara el valor en 5, si el constructor no sobreescribe la inicializacion con las propios. Asi que el constructor vacio de arriba inicializara el valor como establece la definicion de la clase, pero el constructor que toma un int, lo inicializara con el parametro dado.  Tambien puede usar la inicializacion de constructor o uniforme, en vez de la inicializacion de igualdad mostrada arriba.  En C++03, es posible crear accidentalmente una nueva funcion virtual, cuando en realidad uno solo se prepuso un override de una funcion de la clase base. Por ejemplo:  Por ejemplo, queremos dise\u00f1ar Derivada::alguna_funcion para reemplazar la version de la clase base. Pero, debido a que la funcion virtual tiene una firma diferente, en realidad crea una segunda funcion virtual. Esto es un problema comun, particularmente cuando un usuario va a modificar la clase base.  C++11 proporciona una sintaxis para solucionar este problema.  El identificador especial override significa que el compilador comprobara la clase base para ver si hay una funcion virtual con esta firma exacta. Y si no la hay, el compilador producira un error.  C++11 tambien agrega la capacidad de prevenir poder heredar clases o sobrecargar funciones especificas. Esto se consigue con el identificador especial final. Por ejemplo:  En este ejemplo, la sentencia virtual void f() final; declara una nueva funcion virtual, pero tambien previene a las clases derivadas poder sobrecargarla. Tambien tiene el efecto de prevenir, a las clases derivadas, de usar esa combinacion particular de nombre de funcion y parametros.  Observe que ni override ni final son palabras claves del lenguaje. Tecnicamente son identificadores; solo ganan un significado especial cuando son usados en esos contextos especificos. En cualquier otra localizacion, pueden ser identificadores validos.  Unicamente para los propositos de esta seccion, cada ocurrencia de \"0\" significara \"expresion constante que se evalua a 0, que es del tipo entero int\". En realidad, la expresion constante puede ser de cualquier tipo entero.  Desde el amanecer de C en 1972, la constante 0 ha tenido el doble papel de constante de numero entero y de constante de puntero nulo. La ambiguedad inherente en el doble significado de 0 fue tratada en C por el uso del macro NULL del preprocesador, que comunmente expande a ((void*)0) o 0. C++ no adopto el mismo comportamiento, permitiendo a  0 solamente como constante del puntero nulo. Esto interactua mal con la sobrecarga de funciones:  Si NULL esta definido como 0 (lo usual en el caso del C++), la sentencia foo(NULL); llamara a foo(int), que casi con toda certeza no es lo que penso el programador, y no es lo que sugiere una lectura superficial del codigo.  C++11 corrige esto introduciendo una nueva palabra clave para servir como constante inconfundible de puntero nulo: nullptr. Es del tipo nullptr_t, que es implicitamente convertible y comparable a cualquier tipo de puntero o tipo de puntero-a-miembro. No es implicitamente convertible o comparable a los tipos enteros, a excepcion de bool. Mientras que la propuesta original especifico que un rvalue del tipo nullptr no deberia ser convertible a bool, el grupo de trabajo del nucleo del lenguaje decidio que tal conversion seria deseable, para la consistencia con los tipos punteros regulares. Los cambios de redaccion propuestos fueron votados unanimemente en el documento de trabajo en junio de 2008.\u200b  Por razones de compatibilidad hacia atras, 0 sigue siendo un constante de puntero nulo valida.  En C++03, las enumeraciones no son de tipo seguro. Internamente, en realidad son numeros enteros, incluso cuando los tipos de la enumeracion son distintos. Esto permite la comparacion entre dos valores de diferentes tipos de enumeracion. La unica seguridad que C++03 proporciona es que un numero entero o un valor de un tipo enum no se convierte implicitamente a otro tipo enum. Ademas, el tipo 'int' subyacente esta definido por la implementacion del compilador. Por lo tanto, el codigo que depende del tama\u00f1o de la enumeracion no es portable. Por ultimo, los valores de la enumeracion tienen un ambito definido por el ambito que los encierra. Asi, no es posible que dos enumeraciones separadas tengan nombres de miembro que emparejen.  C++11 permitira una clasificacion especial de la enumeracion que no tiene ninguno de esos problemas. Esto es expresado usando la declaracion enum class (enum struct tambien es aceptado como un sinonimo):  Esta enumeracion es de tipo seguro; los valores de enum class no son convertidos implicitamente a numeros enteros. Por lo tanto, no pueden ser comparados con numeros enteros (la expresion Enumeracion::Valor4 == 101 da un error del compilador).  El tipo subyacente de los miembros de las clases de enum no estara predefinido. Por defecto, como en el caso anterior, es int, pero puede ser especificado explicitamente a un tipo diferente:  El ambito de la enumeracion tambien esta definido como el ambito del nombre de la enumeracion. Usando los nombres de enumerador requiere explicitamente el uso de ambitos. Valor1 es indefinido, pero Enumeracion2::Valor1 esta definido.  Adicionalmente, C++11 permitira que las enumeraciones estandar proporcionen un ambito explicito asi como la definicion del tipo subyacente:  Los nombres del enumerador son definidos en el ambito de la enumeracion (Enumeracion3::Valor1), pero para la compatibilidad hacia atras, los nombres del enumerador tambien son colocados en el ambito de encerrado.  La declaracion de enums tambien es posible en C++11. Previamente, los tipos de enum no podian ser declarados porque el tama\u00f1o de la enumeracion depende de la definicion de sus miembros. Siempre que el tama\u00f1o de la enumeracion sea especificado implicita o explicitamente, puede ser declarado lo siguiente:  El parser del C++03 define \u201c>>\u201d como el operador de desplazamiento derecho en todos los casos. Sin embargo, con declaraciones jerarquizadas de plantilla, hay una tendencia para que el programador descuide poner un espacio entre los dos parentesis de angulo derecho, causando por lo tanto un error de sintaxis del compilador.  C++11 mejorara la especificacion del parser de modo que multiples parentesis de angulo derechos sean interpretados, donde sea razonable, como cierre de la lista de argumentos de la plantilla. Esto puede ser sobreescrito usando parentesis:  C++03 agrego la palabra clave explicit como un modificador para prevenir que los constructores con un solo argumento fueran usados como operadores de conversion de tipo implicito. Sin embargo, esto no hace nada por los reales operadores de conversion. Por ejemplo, una clase puntero inteligente puede tener un operator bool() para permitir que actue mas como un puntero primitivo: si incluye esta conversion, puede ser probada con if(smart_ptr_variable) (el cual seria true si el puntero no fuera null y de lo contrario false). Sin embargo, esto tambien permite otras conversiones no intencionales. Puesto que el bool de C++ es definido como tipo aritmetico, puede ser implicitamente convertido a los tipos entero o aun a los tipos flotantes, lo que permite las operaciones matematicas que no fueron pensadas por el usuario.  En C++11, la palabra clave explicit ahora puede ser aplicada a los operadores de conversion. Como con los constructores, previene el uso de funciones de conversion en conversiones implicitas. Sin embargo, contextos del lenguaje que especificamente requieren valor boleano, (las condiciones de sentencias if y en bucles, tan bien como operandos en operadores logicos), como en conversiones explicitas y por lo tanto pueden usar a un operador de conversion bool.  En C++03, solo es posible definir un typedef como un sinonimo para otro tipo, incluyendo un sinonimo para una especializacion de plantilla con todos los argumentos reales de la plantilla especificados. No es posible crear una plantilla de typedef como la siguiente:  Esto no compilara.  C++11 agregara esta capacidad con la siguiente sintaxis:  En C++11, la sintaxis tambien puede ser usada para alias de tipos:  En C++03 hay restricciones en que tipos de objetos pueden ser miembros de una union. Por ejemplo, las uniones no pueden contener objetos que definan a un constructor no trivial. C++11 suprime algunas de estas restricciones.\u200b  Este es un simple ejemplo de una union permitida en C++:  Los cambios no romperan ningun codigo existente puesto que solamente se relajan las reglas actuales.  Los identificadores override y final tienen un significado especial solo cuando son usados en un cierto contexto, de lo contrario pueden usarse como identificadores normales.  Estas caracteristicas permiten al lenguaje hacer cosas que eran previamente imposibles, excesivamente verbosas, o requerian bibliotecas no portables.  En C++11, las plantillas pueden tomar numeros variables de parametros. Esto tambien permite la definicion de funciones variadic tipo seguro.  C++03 ofrece dos clases de literales de string (cadena). La primera clase, contenida dentro de comillas dobles, produce un arreglo terminado en null de tipo const char. La segunda clase, definida como L\"\", produce un arreglo terminado en null de tipo const wchar_t, donde wchar_t es un caracter ancho. Ninguno de los tipos literales ofrece soporte para literales de string con UTF-8, UTF-16, o cualquier otra clase de codificaciones de Unicode.  Con el proposito de realzar en los compiladores de C++ el soporte de unicode, la definicion del tipo char ha sido modificada para que tenga por lo menos el tama\u00f1o necesario para almacenar una codificacion UTF-8 de ocho bits y lo suficientemente grande como para contener cualquier miembro del juego de caracteres de ejecucion basicos del compilador. Anteriormente estaba definida solo como esto ultimo.  Ademas de este cambio en la definicion de char, C++11 soportara tres codificaciones de Unicode: UTF-8, UTF-16, y UTF-32, y a\u00f1adira dos nuevos tipos de caracter: char16_t y char32_t. Estos estan dise\u00f1ados para almacenar UTF-16 y UTF-32 respectivamente.  El ejemplo siguiente muestra como crear literales string para cada una de estas codificaciones:  El tipo del primer string es el habitual const char[]. El tipo del segundo string es const char16_t[] y el tipo del tercero es const char32_t[].  Al construir literales de string unicode, a menudo es util insertar codigos de unicode directamente. Para ello, C++11 permitira la siguiente sintaxis:  El numero despues del \\u es un numero hexadecimal; sin necesidad del prefijo 0x. El identificador \\u representa un codigo de unicode de 16 bits; para insertar un codigo de 32 bits, se usa \\U y un numero hexadecimal de 32 bits. Solamente se admiten codigos validos de Unicode. Por ejemplo, los valores en el intervalo U+D800-U+DFFF estan prohibidos, pues estan reservados para los pares sustitutos en las codificaciones UTF-16.  A veces tambien es util evitar secuencias de escape de string manuales, particularmente al usar literales de archivos XML, lenguajes de scripting, o de expresiones regulares. C++11 proporcionara un literal de cadena raw:  En el primer caso, todo entre \"( y )\" es parte del string. Los caracteres \" y \\ no necesitan secuencia de escape. En el segundo caso, el \"delimiter( inicia la cadena, y solamente se termina al encontrar )delimiter\". El delimiter puede ser cualquier literal de hasta 16 caracteres de longitud. Este no puede contener espacios, caracteres de control, o los caracteres \"(\", \")\", o \"\\\". El uso de este delimitador permite que el usuario tenga caracteres \")\" dentro de literales de cadena raw. Por ejemplo, R\"delimiter((a-z))delimiter\" es equivalente a \"(a-z)\".\u200b  Los literales de cadena raw pueden combinarse con los prefijos de literal ancho o con cualquiera de los prefijos de literal unicode:  C++03 proporciona un numero de literales. Los caracteres \"12.5\" son un literal que es resuelto por el compilador como tipo double con el valor de 12.5. Sin embargo, la adicion del sufijo \"f\", como en \"12.5f\", crea un valor del tipo float que contiene el valor 12.5. Los modificadores de sufijo para los literales son fijados por la especificacion del C++, y el codigo de C++ no puede crear nuevos modificadores literales.  C++11 tambien incluira la capacidad para que el usuario defina nuevas clases de modificantes literales que construyan objetos basados en string de caracteres que el literal modifique.  La transformacion de los literales es redefinida en dos fases distintas: raw y cooked (crudo y cocinado). Un literal raw es una secuencia de caracteres de un cierto tipo especifico, mientras que el literal cocinado es de un tipo separado. El literal 1234 de C++, como literal crudo, es esta secuencia de caracteres: '1', '2', '3', '4'. Como literal cocinado, es el numero entero 1234. El literal 0xA de C++ en forma cruda es '0', 'x', 'A', mientras que en forma cocinada es el numero entero 10.  Los literales pueden ser extendidos tanto en formas crudas y cocinadas, con la excepcion de los literales de string, que solo se pueden procesar en forma cocinada. Esta excepcion es debido al hecho de que los string tienen prefijos que afecten al significado y al tipo especificos de los caracteres en cuestion.  Todos los literales definidos por el usuario son sufijos; la definicion de literales de prefijo no es posible.  Los literales definidos por el usuario que procesan la forma cruda del literal son definidos como sigue:  La segunda declaracion ejecuta el codigo definido por la funcion literal definida por el usuario. A esta funcion se le pasa \"1234\" como un string de estilo C, asi que tiene un terminador null.  Un mecanismo alternativo para procesar literales de numero entero y punto flotante crudos es a traves de una plantilla variadic:  Esto instancia la funcion de procesamiento literal como operator \"\" _suffix<'1', '2', '3', '4'>(). En esta forma, no hay caracter null terminal en el string. El proposito principal para hacer esto es utilizar palabra clave constexpr de C++11 y permitir al compilador que el literal sea transformado enteramente en tiempo de compilacion, asumiendo que OutputType es un tipo constexpr construible y copiable, y la funcion de procesamiento literal es una funcion constexpr.  Para los literales numericos, el tipo de literal cocinado es unsigned long long para literales enteros, o long double para los literales de punto flotante. (Nota: No hay necesidad de tipos entero con signo porque un literal con prefijo de signo es parseado como expresion que contiene el signo como operador de prefijo unario seguido del numero sin signo). No hay forma de plantilla alternativa:  Para los literales de string, de acuerdo con los prefijos de string previamente mencionados, son usados:  No hay forma alternativa de plantilla. Los literales de caracter son definidos similarmente.  El comite estandar de C++ planea estandardizar el soporte para la programacion multihilo.  Hay dos partes implicadas: La primera parte es la definicion de un modelo de memoria que permitira que multiples hilos coexistan en un programa, y la definicion del soporte para la interaccion entre los hilos. La segunda parte sera proporcionada via facilidades de la biblioteca. (Ver la seccion de este articulo C++11#Facilidades de hilos).  El modelo de memoria define cuando los multiples hilos pueden tener acceso a la misma posicion de memoria, y especifica cuando las actualizaciones por un hilo llegan a ser visibles a otros hilos.  En un ambiente con multi hilo, es comun que cada hilo tenga algunas variables unicas. Esto actualmente sucede para las variables locales de una funcion, pero no sucede para las variables globales y estaticas.  Para el estandar ha sido propuesto una nueva duracion de almacenamiento de hilo local (thread-local), ademas de las existentes estatico, dinamico y automatico, (static, dynamic, automatic). El almacenamiento de hilo local sera indicado por el especificador de almacenamiento thread_local.  Cualquier objeto que pudiera tener la duracion de almacenamiento estatico (es decir, perdurar durante toda la ejecucion del programa) se le puede dar la duracion de hilo local. Lo que se quiere es que como cualquier otra variable de duracion estatica, un objeto hilo local pueda ser inicializado usando un constructor y destruido usando un destructor.  En C++03, el compilador proporciona, para las clases que no lo proporcionan por si mismas, un constructor por defecto (default), un constructor de copia, un operador de asignacion de copia (operator=), y un destructor. El programador puede sobreescribir estos comportamientos por defecto definiendo versiones personalizadas. C++ tambien define a varios operadores globales (tales como operator= y operator new) que trabajan sobre todas las clases, y que el programador puede sobreescribir.  Sin embargo, hay poco control sobre la creacion de estos comportamientos por defecto. Hacer una clase intrinsecamente no copiable, por ejemplo, requiere la declaracion de un constructor de copia y de un operador de asignacion privados y la no definicion de ellos. El intentar usar estas funciones es una violacion de la regla de una sola definicion. Como no se requiere un mensaje de diagnostico,\u200b esto da lugar tipicamente a un error del enlazador (linker).[cita\u00a0requerida]  En el caso del constructor default, el compilador no generara un constructor por defecto si una clase es definida con cualquier constructor. Esto es util en muchos casos, pero es tambien util para poder tener constructores especializados y el de defecto generado por el compilador.  C++11 permitira el default y delete explicito de estas funciones miembro especiales. Por ejemplo, el tipo siguiente declara explicitamente que esta usando al constructor default:  Alternativamente, ciertas caracteristicas pueden ser inhabilitadas explicitamente. Por ejemplo, el tipo siguiente es no copiable:  El especificador = delete puede ser usado para prohibir llamar cualquier funcion, lo cual puede ser usado para rechazar la llamada de una funcion de miembro con parametros particulares. Por ejemplo:  Un intento de llamar a f() con un int sera rechazado por el compilador, en vez de realizar una conversion silenciosa a double. Esto puede ser generalizado para rechazar la llamada de la funcion con cualquier tipo con excepcion de doble, de la siguiente manera:  En C++03, el mas grande tipo entero es long int. Esta garantizado que tenga por lo menos tantos bits usables como int. Esto resultaba en que long int tuviera un tama\u00f1o de 64 bits en algunas implementaciones populares y 32 bits en otras. Para abordar este problema, C++11 agrega un nuevo tipo entero long long int. Esta garantizado que sea por lo menos tan grande como un long int, y que tenga no menos de 64 bits. El tipo fue originalmente introducido al C estandar con C99, y la mayoria de los compiladores de C++ ya lo soportan como extension.\u200b\u200b  C++03 proporciona dos metodos para probar aserciones: el macro assert y la directiva de preprocesador #error. Sin embargo, ninguno es apropiado para el uso en plantillas: el macro prueba la asercion en tiempo de ejecucion, mientras que la directiva del preprocesador prueba la asercion durante el preprocesamiento, que sucede antes de la instanciacion de las plantillas. Ninguno es apropiado para probar las propiedades que son dependientes de parametros de plantillas.  La nueva utilidad introduce una nueva manera de probar aserciones en tiempo de compilacion, usando la nueva palabra clave static_assert. La declaracion asume la siguiente forma:  Aqui estan algunos ejemplos de como puede ser usado el static_assert:  Cuando la expresion constante es false el compilador produce un mensaje de error. El primer ejemplo representa una alternativa a la directiva de preprocesador #error, en contraste, en el segundo ejemplo la asercion es chequeada en cada instanciacion de la clase de plantilla Check.  Las aserciones estaticas tambien son utiles fuera de las plantillas. Por ejemplo, una implementacion de un algoritmo pudiera depender de que el tama\u00f1o de un long long fuera mas grande que un int, algo que el estandar no garantiza. Tal asuncion es valida en la mayoria de los sistemas y de los compiladores, pero no todos.  En C++03, el operador sizeof puede ser usado en tipos y objetos. Pero no puede ser usado para hacer lo siguiente:  Esto permite en C++11 retornar el tama\u00f1o de OtherType. C++03 no permite esto, asi que es un error de compilacion.  La implementacion define si los objetos dinamicamente asignados que se vuelvan inalcanzables son reclamados automaticamente.  Un numero de nuevas caracteristicas seran introducidas en la biblioteca estandar del C++11. Muchos de estas caracteristicas pueden ser implementadas bajo el estandar actual, pero algunas dependen, en mayor o menor medida, en nuevas caracteristicas del nucleo de C++11.  Una gran parte de las nuevas bibliotecas son definidas en el C++ Technical Report 1 (Reporte Tecnico 1 de C++) (llamado TR1), publicado en 2005. Estan disponibles actualmente varias implementaciones completas y parciales del TR1 usando el namespace std::tr1. Para C++11 seran movidas al namespace std. Sin embargo, a medida que las caracteristicas del TR1 son llevadas a la biblioteca estandar de C++11, cuando sea apropiado, estas son actualizadas con caracteristicas del lenguaje de C++ que no estaban disponibles en la version inicial del TR1. Tambien, pueden ser mejoradas con las caracteristicas que eran posibles debajo el C++03, pero no eran parte de la especificacion original del TR1.  El comite se prepone crear un segundo reporte tecnico (llamado TR2) despues de que este completa la estandardizacion de C++11. Las propuestas de biblioteca que no esten listas para C++11 seran puestas en el TR2 u otros reportes tecnicos.  Las siguientes propuestas estan en curso para el C++11.  C++11 ofrece un numero de nuevas caracteristicas de lenguaje de las cuales se pueden beneficiar los actuales componentes de la biblioteca estandar. Por ejemplo, la mayoria de los containers (contenedores) de la biblioteca estandar pueden beneficiarse en la referencia Rvalue basada en el soporte del move constructor, tanto para mover rapidamente contenedores pesados alrededor, como para mover el contenido de esos contenedores a nuevas localizaciones de memoria. Los componentes de la biblioteca estandar seran actualizados con las nuevas caracteristicas de lenguaje C++11 cuando sea apropiado. Estas incluyen, pero no se limitan necesariamente a:  Adicionalmente, ha pasado mucho tiempo desde que C++ fue estandardizado. Se ha escrito una gran cantidad de codigo usando la biblioteca estandar; esto ha revelado porciones de las bibliotecas estandar que podrian usar alguna mejora. Entre las muchas areas de mejoras que son consideradas son los allocators de la biblioteca estandar. Un nuevo modelo basado en ambito (scope) de allocators sera incluido en el C++11 para complementar el modelo actual.  Mientras que el lenguaje C++11 proporcionara un modelo de memoria que soporta hilos (threading), el soporte primario para usar realmente hilos vendra con la biblioteca estandar del C++11.  Sera proporcionada una clase de tipo hilo (std::thread). Para correr el nuevo hilo, esta clase tomara un objeto funcion y opcionalmente una serie de argumentos. Sera posible hacer que un hilo se detenga hasta que otro hilo en ejecucion termine, proporcionando soporte de thread joining a traves de la funcion de miembro std::thread::join(). De ser posible, tambien sera proporcionado el acceso a los objetos nativos de hilo subyacentes para las operaciones especificas de la plataforma, por medio de la funcion de miembro std::thread::native_handle().  Para la sincronizacion entre los hilos, seran agregadas a la biblioteca mutexes apropiados (std::mutex, std::recursive_mutex, etc) y variables de condicion (std::condition_variable y std::condition_variable_any). Esto sera accesible con locks RAII (std::lock_guard y std::unique_lock) y algoritmos de bloqueo (locking) para facil uso.  Para el trabajo de bajo nivel de alto rendimiento, a veces es necesario la comunicacion entre los hilos sin el overhead de los mutexes. Esto es alcanzado usando operaciones atomicas en localizaciones de memoria. Estas pueden opcionalmente especificar las restricciones de visibilidad de memoria minimas requeridas para una operacion. Las barreras de memoria explicitas tambien pueden ser usadas para este proposito.  La biblioteca de hilo del C++11 tambien incluira futuros y promesas para pasar resultados asincronicos entre los hilos, y el std::packaged_task para envolver (wrapping) una llamada de funcion que puede generar tal resultado asincronico. La propuesta de futuros fue criticada porque carece de una manera de combinar futuros y comprobar la terminacion de un interior de una promesa dentro de un conjunto de promesas.\u200b  Otras facilidades de hilo de alto nivel tales como thread pools han sido remitidas a un futuro informe tecnico del C++. No seran una parte de C++11, pero su eventual implementacion es esperada a ser construida enteramente en el tope de las caracteristicas de la biblioteca de hilos.  La nueva facilidad std::async facility proporciona un metodo conveniente de correr tareas y de atarlas a un std::future. El usuario puede elegir si la tarea debe correr asincronicamente en un hilo separado, o sincronicamente en un hilo que espere por el valor. Por defecto la implementacion puede elegir, lo que proporciona una manera facil de tomar ventaja de la concurrencia del hardware sin la sobresubscripcion (oversubscription), y proporciona algunas de las ventajas de un thread pool para los usos simples.  Los tuples son colecciones compuestas por los objetos heterogeneos de dimensiones pre-arregladas. Un tuple puede ser considerado una generalizacion de un miembro de estructura de las variables.  La version C++11 del tuple del TR1 se beneficiara de las caracteristicas C++11 como plantillas variadic. La version TR1 requeria un maximo numero de tipos de contenedor definido por la implementacion, y requeria una sustancial cantidad de trucos de macro para implementarse razonablemente. Por contraste, la implementacion de la version C++11 no requiere ningun numero maximo de tipos definidos explicitamente por la implementacion. Aunque los compiladores casi ciertamente tendran una profundidad interna maxima de recursion para la instanciacion de plantillas (lo cual es normal), la version de tuples de C++11 no expondra este valor al usuario.  Usando plantillas variadic, la declaracion de clase tuple se ve como sigue:  Un ejemplo de la definicion y uso del tipo tuple:  Es posible crear el tuple proof sin la definicion de su contenido, pero solamente si los tipos de elementos del tuple poseen constructores por defecto. Por otra parte, es posible asignar un tuple a otro tuple: si los tipos de los dos tuples son iguales, es necesario que cada tipo de elemento posea un constructor copy; de lo contrario, es necesario que cada tipo de elemento del tuple del lado derecho sea convertible al elemento correspondiente del tuple del lado izquierdo, o que el tipo de elemento correspondiente del tuple del lado izquierdo tenga un constructor conveniente.  Hay disponibles Los operadores relacionales (entre tuples con el mismo numero de elementos), y hay disponibles dos expresiones para comprobar las caracteristicas de un tuple (solamente durante la compilacion):  Una de las peticiones que mas se repiten es la inclusion en la biblioteca estandar de C++ de las tablas hash (contenedores asociativos sin orden). No fue adoptada en el estandar actual solo debido a restricciones de tiempo. Aunque esta solucion es menos eficiente que un arbol balanceado en el peor caso (en presencia de muchas colisiones), en muchas aplicaciones verdaderas se desempe\u00f1a mejor.  Las colisiones seran manejadas solo a traves de encadenamiento lineal porque el comite no considera oportuno estandardizar soluciones de direccionamiento abierto que introducen bastantes de problemas intrinsecos (sobre todo cuando es admitido el borrado de elementos). Para evitar los choques de nombres con las bibliotecas no estandar que desarrollaran sus propias implementaciones de la tabla hash, sera utilizado el prefijo \"unordered\" en vez del \"hash\".  La nueva utilidad tendra cuatro tipos de tablas hash, diferenciados en si aceptan o no elementos con la misma clave (claves unicas o claves equivalentes), y si mapean cada clave a un valor asociado.  Las nuevas clases satisfacen todos los requisitos de una clase container, y tienen todos los metodos necesarios para acceder elementos: insert, erase, begin, end.  Esta nueva utilidad no necesita ninguna extension del nucleo del lenguaje de C++, solamente una peque\u00f1a extension del encabezado <functional> y la introduccion de encabezados <unordered_set> y <unordered_map>, (aunque la implementacion tomara ventajas de varias caracteristicas del lenguaje C++11). No son necesarios otros cambios a cualquier clase estandar existente, y no depende de ninguna de las otras extensiones de la biblioteca estandar.  Muchas bibliotecas estandarizadas fueron creadas para manejar expresiones regulares. Puesto que el uso de estos algoritmos es muy comun, la biblioteca estandar los incluira usando todas las potencialidades de un lenguaje orientado a objetos.  La nueva biblioteca, definida en el nuevo encabezado <regex>, esta hecha de un par de clases:  La funcion std::regex_search es usada para buscar, mientras que para \u2018busqueda y reemplazo\u2019 es usada la funcion std::regex_replace, la cual retorna un nuevo string. Los algoritmos std::regex_search y std::regex_replace toman una expresion regular y un string y escriben las ocurrencias encontradas en la estructura std::match_results.  Aqui hay un ejemplo en el uso del std::match_results:  Note que se usan dobles barras inversas debido a que C++ usa la barra inversa simple como un caracter de escape. La caracteristica raw string del C++11 pudiera usarse para evitar este problema.  La biblioteca <regex> no requiere ni la alteracion de cualquier encabezado existente, (aunque los usara cuando sea apropiado), ni una extension del nucleo del lenguaje.  C++11 proporciona el std::unique_ptr, como tambien mejoras al std::shared_ptr  y  std::weak_ptr del TR1. std::auto_ptr es obsoleto.  La biblioteca estandar de C proporciona la capacidad de generar numeros pseudaleatorios (random) a traves de la funcion rand. Sin embargo, el algoritmo es delegado enteramente al proveedor de la biblioteca. C++ heredo esta funcionalidad sin cambios, pero C++11 proporcionara un nuevo metodo para generar numeros pseudaleatorios.  La funcionalidad del numero al azar (random) de C++11 esta dividida en dos partes: un motor generador que contiene el estado del generador de numero al azar y produce los numeros pseudaleatorios; y una distribucion, que determina el rango y la distribucion matematica del resultado. Estos dos son combinados para formar un objeto generador de numeros al azar.  A diferencia del rand estandar de C, el mecanismo del C++11 vendra con tres algoritmos de motor generador, cada uno con sus propias fuerzas y debilidades:  C++11 tambien proporcionara un numero de distribuciones estandar: uniform_int_distribution, bernoulli_distribution, geometric_distribution, poisson_distribution, binomial_distribution, uniform_real_distribution, exponential_distribution, normal_distribution, y gamma_distribution  El generador y las distribuciones son combinados como en el ejemplo siguiente:  Una referencia wrapper (envoltura) es obtenida de una instancia de la clase de plantilla reference_wrapper. Las referencias wrapper son similares a las referencias normales (\u2018&\u2019) del lenguaje C++. Para obtener una referencia wrapper de cualquier objeto es usada la referencia de plantilla de funcion ref (para una referencia constante es usado cref).  Las referencias wrapper son utiles sobre todo para las plantillas de funcion, donde son necesarias las referencias a los parametros en vez de a las copias:  Esta nueva utilidad sera agregada al encabezado existente <utility> y no necesita otras extensiones del lenguaje C++.  Los envoltorios polimorficos para los objetos de funcion son similares a los punteros de funcion en la semantica y la sintaxis, pero son menos fuertemente enlazados (tightly bound) y pueden referir indiscriminadamente cualquier cosa que puede ser llamada (punteros de funcion, punteros de miembro de funcion, o functors) cuyos argumentos son compatibles con las del envoltorio.  Con el ejemplo es posible entender sus caracteristicas:  La funcion de clase de plantilla sera definida dentro del encabezado <functional>, y no requiere ningun cambio al lenguaje C++.  La metaprogramacion consiste en crear un programa que crea o modifica otro programa (o a si mismo). Esto puede suceder durante la compilacion o durante la ejecucion. El comite de estandares de C++ ha decidido introducir una biblioteca que permite la metaprogramacion durante la compilacion a traves de plantillas.  Aqui hay un ejemplo de un meta-programa, usando el estandar actual de C++03: una recursion de instancias de plantillas para calcular exponentes enteros:  Muchos algoritmos pueden operar en diferentes tipos de datos; Las plantillas de C++ soportan la programacion generica y hacen el codigo mas compacto y util. Sin embargo es comun para los algoritmos necesitar informacion sobre los tipos de datos que son usados. Esta informacion puede ser extraida durante la instanciacion de una clase de plantilla usando type traits.  El type traits puede identificar la categoria de un objeto y todas las caracteristicas de una clase (o de un struct). Son definidos en el nuevo encabezado <type_traits>..  En el ejemplo siguiente esta la funcion de plantilla 'elaborate' que, dependiendo de los tipos de datos dados, instanciara uno de los dos algoritmos propuestos (algorithm.do_it).  A traves del type traits, definido en encabezado <type_transform>, es tambien posible crear operaciones de transformacion de tipos (static_cast y const_cast son insuficientes dentro de una plantilla).  Este tipo de programacion produce un codigo elegante y conciso; sin embargo el punto debil de estas tecnicas es la depuracion: incomodo durante la compilacion y muy dificil durante la ejecucion del programa.  La determinacion del tipo de retorno de un objeto de funcion de plantilla en tiempo de compilacion no es intuitiva, particularmente si el valor de retorno depende de los parametros de la funcion. Como un ejemplo:  Instanciar la plantilla de clase Calculus<Clear>, el objeto de funcion de calculus tendra siempre el mismo tipo de retorno que el objeto de funcion de Clear.. Sin embargo, dada la clase Confused de abajo:  El intentar instanciar Calculus<Confused> causara que el tipo de retorno de Calculus no sea igual que el de clase Confused. El compilador puede generar advertencias acerca de la conversion desde int a double y viceversa.  El TR1 introduce, y C++11 adopta, la clase de plantilla std::result_of que permite que uno determine y que use el tipo de retorno de un objeto de funcion para cada declaracion. El objeto CalculusVer2 usa al objeto std::result_of para derivar el tipo de retorno del objeto de funcion:  De esta manera en instancias del objeto de funcion CalculusVer2<Confused> no hay conversiones, advertencias, o errores.  El unico cambio de la version TR1 del std::result_of es que la version TR1 permitia a una implementacion fallar para poder determinar el tipo del resultado de una llamada de funcion. Debido a los cambios a C++ para soportar decltype, la version C++11 del std::result_of ya no necesita estos casos especiales; son requeridas las implementaciones para computar un tipo en todos los casos.  Movidas a otro reporte:  Pospuestas: ","snippet":"C++11 es una version del lenguaje de programacion C++ estandar aprobado por la Organizacion Internacional de Normalizacion (ISO) el 12 de agosto de 2011, reemplazando al anterior C++03. A partir del 1","enlaces_salientes":["C%2B%2B11","C%2B%2B11","C%2B%2B11","C%2B%2B14","C%2B%2B17","Multithreading","Programaci%C3%B3n_gen%C3%A9rica","Tiempo_de_ejecuci%C3%B3n","Tiempo_de_compilaci%C3%B3n","Compilador","Hard_code","C%C3%B3digo_duplicado","C_Sharp","Lenguaje_Java","Parser","Delegaci%C3%B3n_(inform%C3%A1tica)","Java_(lenguaje_de_programaci%C3%B3n)","C_Sharp","D_(lenguaje_de_programaci%C3%B3n)","String","Multitarea","Hilo_(inform%C3%A1tica)","Clase_(inform%C3%A1tica)","Objeto_(programaci%C3%B3n)","Recolecci%C3%B3n_de_basura","Argumento_(inform%C3%A1tica)","String","Vector_(inform%C3%A1tica)","UTF-8","UTF-16","Unicode","UTF-8","Bit","Juego_de_caracteres","UTF-8","UTF-16","Hexadecimal","XML","Lenguaje_de_script","Expresi%C3%B3n_regular","Punto_flotante","Hilo_(inform%C3%A1tica)","Variable_(programaci%C3%B3n)","C99","Aserci%C3%B3n_(inform%C3%A1tica)","Biblioteca_(inform%C3%A1tica)","Biblioteca_est%C3%A1ndar_de_C%2B%2B","Hilo_(inform%C3%A1tica)","Tabla_hash","Expresi%C3%B3n_regular","Mutex","Monitor_(concurrencia)","RAII","Instrucci%C3%B3n_at%C3%B3mica","Valor_futuro_(inform%C3%A1tica)","Tabla_hash","Expresi%C3%B3n_regular","Algoritmos","Lenguaje_orientado_a_objetos","Barra_inversa","Puntero_inteligente","N%C3%BAmero_pseudoaleatorio","Mersenne_twister","Distribuci%C3%B3n_uniforme_discreta","Distribuci%C3%B3n_de_Bernoulli","Distribuci%C3%B3n_geom%C3%A9trica","Distribuci%C3%B3n_de_Poisson","Distribuci%C3%B3n_binomial","Distribuci%C3%B3n_uniforme_continua","Distribuci%C3%B3n_exponencial","Distribuci%C3%B3n_normal","Distribuci%C3%B3n_gamma","Adapter_(patr%C3%B3n_de_dise%C3%B1o)","Adapter_(patr%C3%B3n_de_dise%C3%B1o)","Polimorfismo_(inform%C3%A1tica)","Metaprogramaci%C3%B3n","Recursi%C3%B3n","Programaci%C3%B3n_gen%C3%A9rica","Recolector_de_basura","Reflexi%C3%B3n_(inform%C3%A1tica)","Dr._Dobb%27s_Journal","C%2B%2B14","C%2B%2B17","ISO","International_Electrotechnical_Commission","ISO/IEC_14882","Wayback_Machine","Control_de_autoridades"]}
{"url":"Biblioteca_est%C3%A1ndar_de_C%2B%2B","titulo":"Biblioteca estandar de C++","contenido":"En C++, la biblioteca estandar es una coleccion de clases y funciones, escritas en el nucleo del lenguaje. La biblioteca estandar proporciona varios contenedores genericos, funciones para utilizar y manipular esos contenedores, funciones objeto, cadenas y flujos genericos (incluyendo E/S interactiva y de archivos) y soporte para la mayoria de las caracteristicas del lenguaje.[cita\u00a0requerida]  La biblioteca estandar de C++ tambien incorpora la biblioteca estandar de C. Las caracteristicas de la biblioteca estandar estan declaradas en el espacio de nombres std.[cita\u00a0requerida]  La Standard Template Library es un subconjunto de la biblioteca estandar de C++ que contiene los contenedores, algoritmos, iteradores, funciones objeto, etc; aunque algunas personas utilizan el termino STL indistintamente con la biblioteca estandar de C++.[cita\u00a0requerida]  Los archivos de cabecera de la biblioteca estandar de C++ no usan la extension \u00ab.h\u00bb.[cita\u00a0requerida] ","snippet":"En C++, la biblioteca estandar es una coleccion de clases y funciones, escritas en el nucleo del lenguaje. La biblioteca estandar proporciona varios contenedores genericos, funciones para utilizar y m","enlaces_salientes":["Biblioteca_est%C3%A1ndar_de_C%2B%2B","Biblioteca_est%C3%A1ndar_de_C%2B%2B","Biblioteca_est%C3%A1ndar_de_C%2B%2B","C%2B%2B","Clase_(inform%C3%A1tica)","Subrutina","Biblioteca_est%C3%A1ndar_de_C","Espacio_de_nombres","Standard_Template_Library","Bjarne_Stroustrup","Control_de_autoridades"]}
{"url":"C%2B%2B14","titulo":"C++14","contenido":"C++14 es una version del estandar del lenguaje de programacion C++. La Organizacion Internacional de Normalizacion (ISO) aprobo C++14 el 18 de agosto de 2014,\u200b y posteriormente lo publico como la norma ISO/IEC 14882:2014.\u200b C++14 reemplazo al anterior estandar C++11 y a su vez fue reemplazado en 2017 por una nueva version del estandar denominada C++17. El nombre sigue la tradicion de denominar a las versiones del lenguaje C++ a partir de la fecha de publicacion de la especificacion. Durante su fase de desarrollo se utilizo la denominacion C++1y para referirse al borrador del estandar, analogamente a como la denominacion C++0x se habia utilizado durante el desarrollo de C++11.  C++14 es una extension de C++11 que ofrece principalmente correcciones de errores y algunas mejoras. El proyecto del comite, la norma C++14, N3690, se publico el 15 de mayo 2013.\u200b El proyecto de trabajo N3936, fue publicado el 2 de marzo de 2014, el periodo de votacion definitivo se cerro el 15 de agosto 2014, y los resultados (aprobacion unanime) fueron anunciados el 18 de agosto.\u200b  Las caracteristicas descritas a continuacion son las que aparecen en el Proyecto de trabajo N3797. Todavia no han sido actualizadas para los cambios finales (relativamente menores) en la norma.  C++11 permite deducir el tipo de retorno para funciones lambda, C++14 proporciona esta capacidad en todas las funciones. Tambien se extiende para funciones que no son de la forma de expresion return.\u200b  Con el fin de deducir el tipo de retorno, la funcion debe ser declarada con auto como el tipo cambiado, pero sin el posterior retorno especificador de tipo del C++11:  Si multiples expresiones de retorno se utilizan en la implementacion de la funcion, todos ellos deben deducir del mismo tipo.\u200b  Funciones que deducen sus tipos de retorno pueden ser declaradas hacia adelante, pero no pueden ser utilizados hasta que hayan sido definidos. Sus definiciones deben estar disponibles para la unidad de traduccion que los utiliza.  La recursion se puede usar con una funcion de este tipo, pero la llamada recursiva debe ocurrir despues de al menos una instruccion de retorno en la funcion.\u200b  En C++11, son agregados dos metodos de deduccion de tipo. auto es una manera de crear una variable del tipo apropiado, basado en una expresion dada, y decltype es para computar el tipo de una expresion dada. Sin embargo, el camino decltype y auto deducen tipos diferentes. Especialmente, auto siempre deduce un tipo no por referencia, mediante el uso de std::remove_reference, mientras auto&& siempre deduce un tipo sobre referencia. Sin embargo, decltype puede ser forzado, sin importar si es deducido del tipo sobre la referencia, basado en la categoria de valor de la expresion y la naturaleza de la expresion deducida.\u200b  C++14 agregara la sintaxis decltype(auto). Esto permite auto declaraciones a usar las reglas de decltype sobre la expresion.  La sintaxis decltype(auto) tambien puede usarse mediante el uso de la sintaxis decltype(auto) en lugar de auto para la deduccion del tipo de retorno de la function.\u200b  C++11 introdujo el concepto de constexpr-declared, una funcion que podria ser ejecutada en tiempo de compilacion. Sus valores de retorno podrian ser consumidos por las operaciones que requieren expresiones constantes, como un argumento de plantilla entera, sin embargo, las funciones C++11 constexpr solo podian contener una sola expresion que se devuelve (como static_assert y un peque\u00f1o numero de otras declaraciones).  En C++14 las funciones Constexpr-declared ahora pueden tener y realizar:\u200b  Las instrucciones goto estan prohibidas en las funciones relajadas declaradas constexpr de C++14.  Tambien, C++11 sostiene que todos los miembros de las funciones no estaticas que son declaradas constexpr son tambien implicitamente declaradas const, con respecto a this. Eso ya se elimino, los miembros de las funciones no estaticas pueden ser no const.\u200b Sin embargo, por las restricciones anteriores, los miembros de las funciones no const constexpr solo puede modificar un miembro de la clase si esa vida de objeto comenzo dentro de la evaluacion de la expresion constante.  En versiones anteriores de C++, solo funciones, clases o alias de tipo podian ser plantillas. C++14 ahora permite la creacion de variables que son plantillas. Un ejemplo dado en la propuesta es una variable pi que se puede leer para obtener el valor de pi para varios tipos (ejemplo, 3 cuando se lee como un tipo integral, el valor mas cercano posible con precision float, double o long double cuando se lee como float, double o long double, respectivamente).  Las reglas habituales de las plantillas se aplican a este tipo de declaraciones y definiciones, incluyendo la especializacion.\u200b\u200b  C++11 agrego los inicializadores del miembro, expresiones que se aplicara a los miembros en el ambito de clase si un constructor no se ha inicializado el miembro. La definicion de los agregados se cambio para excluir explicitamente cualquier clase con la inicializacion del miembro, entonces no se les permite utilizar la inicializacion agregada.  C++14 relajara esta restriccion,\u200b permitiendo inicializacion agregada sobre dichos tipos. Si la lista de inicializacion arriostrados no proporciona un valor para este argumento, el inicializador miembro se hara cargo de ella.\u200b  Los literales numericos en C++14 se pueden especificar en el binario.\u200b La sintaxis utiliza los prefijos 0b o 0B. La sintaxis se utiliza tambien en otros lenguajes de programacion, como Java, Ruby, Python, OCaml, y como una extension no oficial en algunos compiladores de C por lo menos desde 2007.\u200b  En C++14, el caracter comilla simple, tambien puede usarse como separador de millares en los literales numericos, ambos entero literal (programacion) y puntos flotantes literales.\u200b Esto puede hacer que sea mas facil para los lectores humanos para analizar grandes cantidades a traves de la simultaneidad (matematica).  En C++11, en una funcion lambda los parametros tienen que ser declarados con tipos concretos. C++14 relaja este requerimiento, permitiendo que los parametros de funcion lambda que se declaran con la especificacion de tipo auto.\u200b  Como para la deduccion del tipo auto, los lambdas genericos siguen las reglas de la argumentacion plantilla de deduccion (que son similares, pero no identicos en todos los aspectos). El codigo anterior es equivalente a esto.\u200b  Las funciones lambda de C++11 las variables de captura declaran en su ambito exterior por valor copia o por referencia. Esto significa que los miembros de un valor lambda no pueden ser solo tipos de movimiento.\u200b C++14 permite miembros capturados para ser inicializados con expresiones arbitrarias. Esto permite que tanto la captura por valor movimiento y declarando miembros arbitrarias de la lambda, sin tener una variable correspondiente con nombre en un ambito exterior.\u200b  Esto se realiza mediante el uso de una expresion inicializador.  La funcion lambda sera return 1, que es valor fue inicializado con la captura declarada que deduce el tipo de la expresion de inicializacion como auto.  Esto puede ser usado para capturar por el movimiento, a traves del uso de la funcion std::move.  El atributo deprecated permite marcar una entidad , lo que lo hace todavia legal para utilizar, pero pone a los usuarios sobre aviso de que su uso no se recomienda y puede causar un mensaje de advertencia a imprimir durante la compilacion. Una cadena de caracteres literal opcional puede aparecer como argumento de deprecated, para explicar la razon de la depreciacion y/o sugerir un reemplazo.  C++14 agrega un tiempo silenciado compartido y un acompa\u00f1ante compartido de tipo de bloqueo\u200b\u200b  La biblioteca estandar de C++ define cuatro clases de contenedores asociativos. Estas clases permiten al usuario las operaciones de busqueda un valor basado en un valor de ese tipo. Los contenedores mapa permiten al usuario especificar una clave y un valor, donde las operaciones de busqueda se realiza por clave y devuelve un valor, sin embargo, la busqueda se realiza siempre por el tipo de clave especifica, si es la clave como en los mapas o el valor como en juegos.  C++14 permite la busqueda que se realiza a traves de un tipo arbitrario, siempre y cuando el operador de comparacion pueda comparar ese tipo con el tipo de clave real.\u200b Esto permitiria un mapa de std::string a algun valor para comparar contra un const char* o cualquier otro tipo para el que una operator sobrecarga esta disponible.  Para preservar la compatibilidad hacia atras, busqueda heterogenea solo se permite cuando el comparador dada al contenedor asociativo permite. Las clases de la biblioteca estandar std::less<> y std::greater<> estan aumentada para permitir las operaciones de busqueda heterogeneo.\u200b  C++11 definio la sintaxis para sufijos literales definidos por el usuario, pero la biblioteca estandar no utilizo ninguno de ellos. C++14 agrega los siguientes literales estandar.\u200b  Los dos literales \"s\" no interactuan, como la cadena solo se opera en literal string, y uno para el segundo opera solo en numeros.\u200b  El tipo std::tuple introducido en C++11 permite un conjunto de valores escritos para ser indexado por una constante entera en tiempo de compilacion, C++14 se extendera esto para permitir ir a buscar de una tupla por tipo en lugar de por el indice.\u200b Si la tupla tiene mas de un elemento del tipo, un error en tiempo de compilacion resultara.\u200b  std::make_unique se puede utilizar como std::make_shared para std::unique_ptr objetos.\u200b  std::integral_constant ganara un operator() sobrecarga para devolver el valor constante.\u200b  Las funciones globales std::begin/std::end seran aumentadas con las funciones std::cbegin/std::cend, que volveran iteradores constantes comienzo/fin del rango. ","snippet":"C++14 es una version del estandar del lenguaje de programacion C++. La Organizacion Internacional de Normalizacion (ISO) aprobo C++14 el 18 de agosto de 2014,\u200b y posteriormente lo publico como la norm","enlaces_salientes":["C%2B%2B14","C%2B%2B14","C%2B%2B14","Normalizaci%C3%B3n","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Organizaci%C3%B3n_Internacional_de_Normalizaci%C3%B3n","C%2B%2B11","C%2B%2B17","Recursi%C3%B3n","C%2B%2B","Pi","C%2B%2B11","Binario","Java_(lenguaje_de_programaci%C3%B3n)","Ruby","Python","Separador_de_millares","Simultaneidad","C%C3%A1lculo_lambda","Biblioteca_est%C3%A1ndar_de_C%2B%2B","C%2B%2B11","C%2B%2B17","ISO","Organizaci%C3%B3n_Internacional_de_Normalizaci%C3%B3n","Dr._Dobb%27s","Control_de_autoridades"]}
{"url":"C%2B%2B17","titulo":"C++17","contenido":"C++17 es la version mas reciente del estandar del lenguaje de programacion C++. La especificacion final de C++17 fue aprobada por el comite de estandarizacion de C++ (WG21) de la Organizacion Internacional de Normalizacion (ISO) el 6 de septiembre de 2017\u200b y fue publicada  oficialmente como la norma ISO/IEC 14882:2017 en diciembre del mismo a\u00f1o.\u200b C++17 reemplaza a la anterior especificacion C++14 publicada en el a\u00f1o 2014. El nombre sigue la tradicion de denominar a las versiones del lenguaje C++ a partir de la fecha de publicacion de la especificacion. Antes de conocerse la fecha exacta de su publicacion, el borrador del estandar era informalmente conocido como C++1z para distinguirlo de C++11 (C++1x) y C++14 (C++1y). La proxima revision de esta especificacion se denominara C++20.\u200b\u200b  Dado que la especificacion para C++17 apenas comienza, la siguiente lista es solo un comienzo, se a\u00f1adiran muchas caracteristicas en los proximos a\u00f1os.\u200b  Permite la definicion de variables en archivos de cabecera. El compilador elige donde se instancia la variable.  El especificador inline puede ser aplicado tanto a funciones como variables. Una variable declarada inline tiene la misma semantica que una funcion declarada inline: puede ser definida, de forma identica, en multiples unidades de traduccion (esto es, un archivo .c/.cpp una vez que todos los archivos de cabecera han sido incluidos), y ha de ser definida en cada una de esas unidades de traduccion donde va a ser usada.  El comportamiento del programa es como si hubiese exactamente una variable.   En C++14, aunque habia soporte para usar variables estaticas en plantillas de clase, no habia modo conveniente de hacerlo. Por tanto, uno debia recurrir a trucos como \u00a0este: Y desde C++17, podemos hacer en un archivo de encabezado: Para la inicializacion de copia de lista, la deduccion auto deducira un std::initializer_list (si los tipos de entradas en la lista de inicializacion arriostrada son todos identicos) o de lo contrario estara mal constituida.  Para la inicializacion de listas directa:  Las reglas para los for basados en rango no seran afectadas por los cambios propuestos aqui, ya que las reglas para la inicializacion de copia de lista no se han modificado.  Enlaza los nombres especificados a subobjetos o elementos del inicializador.  Como una referencia, un enlace estructurado es un alias a un objeto existente. Sin embargo, y al contrario que en una referencia, el tipo del enlace estructurado no tiene que ser un tipo referencia.   La declaracion de un enlace estructurado introduce todos los identificadores en la lista de identificadores como nombres del scope circundante y los enlaza a subobjetos o elementos del objeto denotado por expresion. Los enlaces de este tipo son llamados enlaces estructurados. Lo que permite expresiones como: Invoca cualquier llamable (puntero de funcion, funcion, puntero miembro) con una unica sintaxis. Viene del concepto del estandar INVOKE.  Como ejemplo, considera el deref_fn wrapper, que deberia aceptar cualquier objeto llamable f y retornar un functor que invoca al llamable proveido y desreferencia el resultado.   Usando C++14, podria implementarse asi: La funcion invoke propuesta permite una implementacion mas simple, que no depende del uso de la sobrecarga de funcion SFINAE: El actual sistema basado en rango para bucles es demasiado restrictivo. El iterador end nunca es incrementado, decrementado o desreferenciado. El requerimiento de que sea un iterador no tiene sentido por tanto.  Hoy en dia, los algoritmos STL requieren que el begin y end de un rango tengan el mismo tipo. Es algo sensato teniendo en cuenta que los algoritmos toman el begin y el end de un rango como parametros separados. En la ausencia de comprobacion, permitir que sus tipos difieran hace bastante facil el pasar iteradores que no se correspondan entre ellos. Esto no ocurre con el sistema basado en rango para bucles, puesto que se hace cargo de los rangos de forma completa.  Perder los requerimientos de tipo basados en rango para bucles proporciona a los usuarios de Ranges TS la mejor experiencia posible. Si los usuarios crean rangos con Ranges TS que no son usables con los rangos basados en bucle por defectos, se sentirian frustrados, y no tendra mucha utilidad. Con toda probabilidad, una solucion basada en macro como BOOST_FOREACH sera inventada para llenar el hueco.  Por tanto, es un apoyo a centinelas, o iteradores end que no son del mismo tipo que el begin iterator, que ayuda con los bucles terminados en null y parecidos.   Si necesitas una funcion suma, que admita un numero ilimitado de parametros, en C++17 se puede hacer de una forma muy simple:  Permite declarar varios namespaces en una sola \u00a0sentencia:  Se a\u00f1ade a la libreria estandar este namespace con el tipo path y metodos para iterar y operar con directorios:  Inicializadores en las sentencias if y switch, ahora permiten evaluar condiciones en inicializadores que no son convertibles a booleanos.  Un objeto de la clase any almacena una instancia de cualquier tipo que satisface los requisitos del constructor o que esta vacio,. El objeto almacenado es conocido como objeto contenido. Dos estados son equivalentes si ambos estan vacios o si los objetos contenidos son iguales. Las implementaciones de esta clase deben evitar el uso de memoria reservada dinamicamente para el objeto contenido.  Representa objetos que pueden o no existir. El uso mas comun para esto es asignarlo a un valor que devuelve una funcion que puede fallar.  El objeto contenido puede ser inicializado despues de que el objeto opcional haya sido inicializado, y puede ser destruido antes de que el objeto opcional lo haya sido. El estado de inicializacion del objeto contenido esta monitorizado por el objeto opcional.  La plantilla de clase std::variant representa un tipo de union segura. Una instancia de \u00a0std::variant en cualquier tiempo dado sostiene un valor de los tipos alternativos o, en caso de error, ningun valor. A la variante no se le permite asignar memoria dinamicamente.  Permite usar los switches en cascada sin que el compilador emita warning.","snippet":"C++17 es la version mas reciente del estandar del lenguaje de programacion C++. La especificacion final de C++17 fue aprobada por el comite de estandarizacion de C++ (WG21) de la Organizacion Internac","enlaces_salientes":["C%2B%2B17","C%2B%2B17","C%2B%2B17","Normalizaci%C3%B3n","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Organizaci%C3%B3n_Internacional_de_Normalizaci%C3%B3n","C%2B%2B14","C%2B%2B20","D%C3%ADgrafos_y_tr%C3%ADgrafos","UTF-8","Mapa_conceptual","C%2B%2B11","C%2B%2B14","Organizaci%C3%B3n_Internacional_de_Normalizaci%C3%B3n","Control_de_autoridades"]}
{"url":"Software_libre","titulo":"Software libre","contenido":"El software libre o  software de fuentes abiertas es un  software cuyo codigo fuente puede ser estudiado, modificado, y utilizado libremente con cualquier finalidad y redistribuido con cambios o mejoras sobre el.\u200b Su definicion esta asociada al nacimiento del movimiento de software libre, encabezado por el activista y experto informatico estadounidense Richard Stallman y la fundacion que presidia en 1985,\u200b la Free Software Foundation, una organizacion sin animo de lucro que pone la libertad del usuario informatico como proposito etico fundamental.\u200b  Un software es libre\u200b si otorga a los usuarios de manera adecuada las denominadas cuatro libertades: libertad de usar, estudiar, distribuir y mejorar, de lo contrario no se trata de software libre. Existen diversos esquemas de distribucion que no son libres, y si bien podemos distinguirlos sobre la base de cuanto les falta para llegar a ser libres, su uso bien puede ser considerado contrario a la etica en todos los casos por igual.  La expresion \u00absoftware libre\u00bb proviene de la expresion del ingles free software, que presenta ambiguedad entre los significados \u00ablibre\u00bb y \u00abgratis\u00bb asociados a la palabra free. Por esto es que suele ser considerado, de manera erronea,\u200b\u200b como software gratuito y no en su acepcion mas precisa como software que puede ser modificado y compartido sin infringir la licencia. El software libre suele estar disponible gratuitamente, o al precio de coste de la distribucion a traves de otros medios, sin embargo no es obligatorio que sea asi, por lo tanto no hay que asociar software \u00ablibre\u00bb a \u00abgratuito\u00bb (denominado usualmente freeware), ya que, conservando su caracter de libre, puede ser distribuido comercialmente. Analogamente, el software gratis o gratuito incluye en ocasiones el codigo fuente; no obstante, este tipo de software no es \u00ablibre\u00bb en el mismo sentido que el software libre, a menos que se garanticen los derechos de modificacion y redistribucion de dichas versiones modificadas del programa. En este sentido, es importante conocer las implicaciones juridicas que emanan del uso del software libre.\u200b  Tampoco debe confundirse el software libre con \u00absoftware de dominio publico\u00bb. Este ultimo es aquel que no requiere de licencia, pues sus derechos de explotacion son para toda la humanidad, porque permite el acceso a todos por igual. Cualquiera puede hacer uso de el, consignando su autoria original. Este software seria aquel cuyo autor lo dona a la humanidad o cuyos derechos de autor han expirado. Si un autor condiciona su uso bajo una licencia, por muy debil que sea, ya no es del dominio publico.  Entre los a\u00f1os 1960 y 1970, el software no se consideraba un producto sino un a\u00f1adido que los vendedores de las grandes computadoras de la epoca (las mainframes)\u200b aportaban a sus clientes para que estos pudieran usarlas. En dicha cultura, era comun que programadores y desarrolladores de software compartieran libremente sus programas unos con otros. Este comportamiento era particularmente habitual en algunos grupos de usuarios de la epoca, como DECUS (grupo de usuarios de computadoras DEC). A finales de la decada de 1970, las compa\u00f1ias iniciaron el habito de imponer restricciones a los usuarios, con el uso de acuerdos de licencia.  En 1971, cuando la informatica todavia no disfrutaba de su gran auge, las personas que hacian uso de ella, en ambitos universitarios y empresariales, creaban y compartian el software sin ningun tipo de restricciones.  Con la llegada de los a\u00f1os 1980 la situacion empezo a cambiar. Las computadoras mas modernas comenzaban a utilizar sistemas operativos privativos, forzando a los usuarios a aceptar condiciones restrictivas que impedian intercambiar, compartir o realizar modificaciones a dicho software.  En caso de que algun usuario o programador encontrase algun error en la aplicacion, lo unico que podia hacer era darlo a conocer a la empresa desarrolladora para que esta lo solucionara, si lo consideraba procedente. Aunque el programador estuviese capacitado para solucionar el problema y lo desease hacer sin pedir nada a cambio, el contrato le impedia que modificase el software.  En 1971, el estadounidense Richard Matthew Stallman, estudiante de Fisica de la Universidad de Harvard, formo parte como hacker del Laboratorio de Inteligencia Artificial del Instituto Tecnologico de Massachusetts (MIT por sus siglas en ingles). En la decada de 1980, la cultura hacker que constituia la vida de Stallman empezo a disolverse bajo la presion de la comercializacion en la industria del software. Los demas compa\u00f1eros de Stallman, tambien hackers del laboratorio, fundaron la compa\u00f1ia Symbolics que intentaba reemplazar el software libre producido en las instalaciones por software no libre de su propiedad. Stallman conto, a\u00f1os despues, que por aquellos a\u00f1os, en el laboratorio donde trabajaba, habian recibido una impresora donada por una empresa externa. El dispositivo, que era utilizado en red por todos los trabajadores, parecia no funcionar a la perfeccion, dado que cada cierto tiempo el papel se atascaba. Como agravante, no se generaba ningun aviso que se enviase por red e informase a los usuarios de la situacion.\u200b  La perdida de tiempo era constante, ya que en ocasiones, los trabajadores enviaban por red sus trabajos a imprimir y al ir a buscarlos se encontraban la impresora atascada y una cola enorme de trabajos pendientes. Richard Stallman decidio arreglar el problema, e implementar el envio de un aviso por red cuando la impresora se bloqueara. Para ello necesitaba tener acceso al codigo fuente de los controladores de la impresora. Pidio a la empresa propietaria de la impresora lo que necesitaba, comentando, sin pedir nada a cambio, que era lo que pretendia realizar. La empresa se nego a entregarle el codigo fuente. En ese preciso instante, Stallman se vio en una encrucijada: debia elegir entre aceptar el nuevo software propietario firmando acuerdos de no revelacion y acabar desarrollando mas software propietario con licencias restrictivas, que a su vez deberian ser mas adelante aceptadas por sus propios colegas, o comenzar un movimiento, el movimiento del software libre.  El dia 27 de septiembre de 1983, Stallman anuncio en varios grupos de noticias de Usenet el inicio del Proyecto GNU, que perseguia crear un sistema operativo completamente libre.\u200b En 1984, Stallman renuncio a su empleo al MIT para evitar que la universidad exigiera derechos sobre el software que estaba desarrollando en el marco del Proyecto GNU, viviendo de realizar programas libres y vender las copias en cintas.  En 1985, Stallman fundo la organizacion Free Software Foundation (FSF)\u200b y publico el Manifiesto GNU\u200b para describir el proposito del proyecto y explicar la importancia del software libre.  En 1986 publico la definicion de \"Software Libre\" \u200b  e introdujo el concepto de copyleft, que desarrollo para otorgar libertad a los usuarios y para restringir las posibilidades de apropiacion del software.  En 1989 publico la primera version de la Licencia Publica General GNU (General Public License - GPL)\u200b codificando las ideas del software libre en un documento legal.  De acuerdo con la definicion establecida por Richard Stallman, un software es \"libre\" cuando garantiza las siguientes libertades:\u200b  Ciertos teoricos usan este cuarto punto (libertad 3) para justificar parcialmente las limitaciones impuestas por la licencia GNU GPL frente a otras licencias de software libre (ver Licencias GPL).\u200b Sin embargo el sentido original es mas libre, abierto y menos restrictivo que el que le otorga la propia situacion de incompatibilidad, que ha sido resuelta a cierto grado en version 3 de la licencia GNU GPL.  Tanto la Open Source Initiative\u200b como la Free Software Foundation,\u200b mantienen en sus webs oficiales, listados de las licencias de software libre que aprueban.  El termino software no libre se emplea para referirse al software distribuido bajo una licencia de software mas restrictiva que no garantiza estas cuatro libertades. Las leyes de la propiedad intelectual reservan la mayoria de los derechos de modificacion, duplicacion, y redistribucion, para el due\u00f1o del copyright; el software dispuesto bajo una licencia de software libre rescinde especificamente la mayoria de estos derechos reservados.  La definicion de software libre no contempla la cuestion del precio; un eslogan frecuentemente usado es \u00ablibre como en libertad, no como en cerveza gratis\u00bb o en ingles \u00abFree as in freedom, not as in free beer\u00bb (aludiendo a la ambiguedad del termino ingles free), y es habitual ver a la venta CD de software libre como distribuciones Linux. Sin embargo, en esta situacion, el comprador del CD tiene el derecho de copiarlo y redistribuirlo. El software gratis puede incluir restricciones que no se adaptan a la definicion de software libre \u2014por ejemplo, puede no incluir el codigo fuente, puede prohibir explicitamente a los distribuidores recibir una compensacion a cambio, etc.\u2014.  Para evitar la confusion, algunas personas utilizan los terminos \u00ablibre\u00bb (software libre) y \u00abgratis\u00bb (software gratis) para evitar la ambiguedad de la palabra inglesa free. Sin embargo, estos terminos alternativos son usados unicamente dentro del movimiento del software libre, aunque estan extendiendose lentamente hacia el resto del mundo. Otros defienden el uso del termino open source software (software de codigo abierto). La principal diferencia entre los terminos \"open source\" y \"free software\" es que este ultimo tiene en cuenta los aspectos eticos y filosoficos de la libertad, mientras que el open source se basa unicamente en los aspectos tecnicos.  En un intento por unir los mencionados terminos que se refieren a conceptos semejantes, se esta extendiendo el uso de la palabra \"FLOSS\" con el significado de free/libre and open source software e, indirectamente, tambien a la comunidad que lo produce y apoya.  Los formatos abiertos permiten al software libre mantener sus cuatro libertades y la libre difusion de todo el codigo y formatos utilizados, su distribucion y estudio, debido a esto, los creadores de software libre desarrollan a la vez de programas libres, formatos libres para estos programas o utilizan formatos libres ya creados anteriormente.  Los formatos libres permiten a los usuarios poder trabajar con programas libres aunque al ser libres pueden ser implementados y utilizados en cualquier programa sea cerrado o no. Algunas compa\u00f1ias, como Microsoft, no suelen utilizar formatos libres en sus programas, no por impedimento sino por falta de voluntad de implementar formatos abiertos en sus programas, aun asi los usuarios pueden instalar software libre en sus sistemas para trabajar con estos formatos.  Una licencia de software libre es un documento que otorga al software derechos extensivos para modificar y redistribuir ese software. Estas acciones normalmente se prohiben por las leyes de derechos de autor, pero el que posee los derechos, normalmente es el creador del software, puede eliminar esas restricciones acompa\u00f1ando al software con una licencia de software que otorgue al receptor de estos derechos. El software que usa tales licencias se denomina software libre y esas libertades las concede el propietario del copyright.  Las licencias de software libre se aplican tanto al software en forma de codigo fuente o en codigo objeto binario, ya que las leyes de derechos de autor reconocen ambas formas.\u200b  Algunas licencias de software libre incluyen copyleft y esto requiere que todas las versiones futuras sean tambien distribuidas con estas libertades. Otras licencias de software \"permisivas\" son normalmente unas pocas lineas conteniendo la cesion de derechos y una garantia de renuncia. Esto permite a los distribuidores a\u00f1adir restricciones para receptores futuros.  Copyleft es el termino que se utiliza en el ambito informatico (y se aplica de manera analoga a la creacion literaria y artistica) para designar el tipo de proteccion juridica que confieren determinadas licencias que garantizan el derecho de cualquier usuario a utilizar, modificar y redistribuir un programa o sus derivados, siempre que se mantengan estas mismas condiciones de utilizacion y difusion.\u200b  Hay que hacer constar que el titular de los derechos de autor (copyright) de un software bajo licencia copyleft puede tambien realizar una version modificada bajo su copyright original, y venderla bajo cualquier licencia que desee, ademas de distribuir la version original como software libre. Esta tecnica ha sido usada como un modelo de negocio por una serie de empresas que realizan software libre\u200b (por ejemplo MySQL); esta practica no restringe ninguno de los derechos otorgados a los usuarios de la version copyleft.\u200b  En Espa\u00f1a, toda obra derivada esta tan protegida como una original, siempre que la obra derivada parta de una autorizacion contractual con el autor. En el caso generico de que el autor retire las licencias copyleft, no afectaria de ningun modo a los productos derivados anteriores a esa retirada, ya que no tiene efecto retroactivo. En terminos legales, el autor no tiene derecho a retirar el permiso de una licencia en vigencia. Si asi sucediera, el conflicto entre las partes se resolveria en un pleito convencional.  Desarrollo y mejoramiento continuo: El hecho de que se pueda acceder al codigo fuente permite que muchas personas revisen y prueben el codigo y, como consecuencia no solo hay un mejor resultado sino que ademas la seguridad es muy superior al software privativo.\u200b  Por otro lado, el software libre es atendido entre muchos usuarios que evaluan directamente las fallas o faltas que presenta el programa. Por eso no se tiene que esperar que la compa\u00f1ia fabricante lance al mercado una actualizacion o una version corregida, lo cual permite disminuir los tiempos de solucion de los problemas.  Permite la independencia tecnologica: Al no depender de los grandes fabricantes del software, los usuarios pueden decidir si es necesario realizar migraciones o actualizaciones del sistema, sin tener que someterse a decisiones impuestas por dicho fabricante.\u200b  Permite ahorrar en la adquisicion, mantenimiento y renovacion de tecnologias: Es mucho mas economico afrontar una actualizacion o una instalacion masiva de software abierto que de software privativos. Ademas, al no tener que invertir en licencias anuales, los usuarios pueden ahorrar dinero o usarlo para adquirir otros software necesario y vinculados al servicio de la empresa.  Permite ser copiado: Como mencionamos anteriormente con las libertades, el software libre permite ser copiado, asi que sin necesidad de adquirir nuevas licencias, este puede ser distribuido a todos aquellos que lo necesiten.\u200b  Antes de continuar con las licencias y beneficios que nos brinda un software de codigo abierto, estableceremos que existe una relacion implicita entre el software de codigo abierto y el usuario final, dependiendo del tratamiento de acceso al codigo fuente. El termino codigo fuente hace referencia a los archivos que contienen el codigo y programacion del programa o aplicacion segun la sintaxis del lenguaje utilizado por el programador.  Una licencia de codigo abierto brinda al usuario la posibilidad de editar, modificar, redistribuir y usar el software, pero se deben cumplir una serie de requisitos para que sea un verdadero software de codigo abierto.  Aunque en la practica el software de codigo abierto y el software libre comparten muchas de sus licencias, la Free Software Foundation opina que el movimiento del software de codigo abierto es filosoficamente diferente del movimiento del software libre.\u200b Aparecio en 1998 con un grupo de personas, entre los que cabe destacar a Eric S. Raymond y Bruce Perens, que formaron la Open Source Initiative (OSI). Ellos buscaban darle mayor relevancia a los beneficios practicos del compartir el codigo fuente, e interesar a las principales casas de software y otras empresas de la industria de la alta tecnologia en el concepto. Por otro lado, la Free Software Foundation y Richard Stallman prefieren plantear el asunto en terminos eticos empleando el termino \"software libre\".\u200b  Los defensores del termino \"Codigo abierto\" afirman que este evita la ambiguedad del termino en ese idioma que es free en free software. El termino \"codigo abierto\" fue acu\u00f1ado por Christine Peterson del instituto de investigacion Foresight Institute,\u200b y se registro para actuar como marca registrada el termino en ingles, para los productos de software libre.  Mucha gente reconoce el beneficio cualitativo del proceso de desarrollo de software cuando los desarrolladores pueden usar, modificar y redistribuir el codigo fuente de un programa. El movimiento del software libre hace especial enfasis en los aspectos morales o eticos del software, viendo la excelencia tecnica como un producto secundario de su estandar etico. El movimiento de codigo abierto ve la excelencia tecnica como el objetivo prioritario, siendo la comparticion del codigo fuente un medio para dicho fin. Por dicho motivo, la Fundacion del Software Libre se distancia tanto del movimiento de codigo abierto como del termino \"Codigo Abierto\".\u200b  Puesto que la OSI solo aprueba las licencias que se ajustan a la Open Source Definition (definicion de codigo abierto), la mayoria de la gente lo interpreta como un esquema de distribucion, e intercambia libremente los terminos \"codigo abierto\" y \"software libre\". Aun cuando existen importantes diferencias filosoficas entre ambos terminos, especialmente en terminos de las motivaciones para el desarrollo y el uso de tal software, raramente suelen tener impacto en el proceso de colaboracion.  Aunque el termino \"codigo abierto\" elimina la ambiguedad de libertad frente a precio (en el caso del ingles), introduce una nueva: entre los programas que se ajustan a la definicion de codigo abierto, que dan a los usuarios la libertad de mejorarlos, y los programas que simplemente tienen el codigo fuente disponible, posiblemente con fuertes restricciones sobre el uso de dicho codigo fuente. Mucha gente cree que cualquier software que tenga el codigo fuente disponible es de codigo abierto, puesto que lo pueden manipular (un ejemplo de este tipo de software seria el popular paquete de software gratuito Graphviz, inicialmente no libre, pero que incluia el codigo fuente, aunque luego AT&T le cambio la licencia). Sin embargo, mucho de este software no da a sus usuarios la libertad de distribuir sus modificaciones, restringe el uso comercial, o en general restringe los derechos de los usuarios.  Una vez que un producto de software libre ha empezado a circular, rapidamente esta disponible a un costo muy bajo. Al mismo tiempo, su utilidad no decrece. El software, en general, podria ser considerado un bien de uso inagotable, tomando en cuenta que su costo marginal es peque\u00f1isimo y que no es un bien sujeto a rivalidad.  Puesto que el software libre permite el libre uso, modificacion y redistribucion, da la oportunidad a muchos usuarios en situaciones de economicas desfavorables para obtener copias a bajo o ningun coste. Tambien es sencillo modificarlo localmente, lo que permite que sean posibles los esfuerzos de traduccion a idiomas que no son necesariamente rentables comercialmente.  La mayoria del software libre se produce por equipos internacionales que cooperan a traves de la libre asociacion. Los equipos estan tipicamente compuestos por individuos con una amplia variedad de motivaciones, y pueden provenir tanto del sector privado, del sector voluntario o del sector publico. Existen muchas posturas acerca de la relacion entre el software libre y el actual sistema politico-economico:  Las implicaciones politicas y economicas del software libre, o su afinidad con el antiautoritarismo, es discutida. Mientras para unos estas implicaciones son notorias y representan un factor importante a tomarse en cuenta, para otros si bien podria existir una leve relacion, no tiene suficiente relevancia.  El negocio detras del software libre se caracteriza por la oferta de servicios adicionales al software como: la personalizacion o instalacion del mismo, soporte tecnico, donaciones, patrocinios o como un elemento de responsabilidad social corporativa;\u200b en contraposicion al modelo de negocio basado en licencias predominante en el software privativo.\u200b  Existe una cierta controversia sobre la seguridad del software libre frente al software no libre (siendo uno de los mayores asuntos la seguridad por oscuridad). Un metodo usado de forma habitual para determinar la seguridad relativa de los productos es determinar cuantos fallos de seguridad no resueltos existen en cada uno de los productos involucrados. Por lo general, los usuarios de este metodo recomiendan que no sean usados productos que no suministren un metodo de solucionar los fallos de seguridad, al menos hasta que no este disponible un arreglo.  En 2006, OpenBSD comenzo la primera campa\u00f1a contra el uso de blobs en el nucleo del sistema operativo. Los blobs son instrucciones codificadas en formato binario generalmente destinadas a controlar dispositivos, que el proveedor distribuye libremente sin revelar el codigo fuente a los usuarios y desarrolladores. Esto impide modificarlos y distribuir nuevas versiones mejoradas. Ademas, dado que los blobs no estan documentados y pueden tener errores de software, suponen un riesgo para la seguridad de cualquier sistema operativo cuyo nucleo los incluya. El objetivo de la campa\u00f1a sobre los blobs es recopilar documentacion de hardware que permita a los desarrolladores escribir controladores de software libre para ese hardware, lo que finalmente permite que todos los sistemas operativos libres se conviertan o permanezcan libres de blobs.  El problema de los blobs binarios en el nucleo Linux y en otros controladores de dispositivos motivo a algunos desarrolladores en Irlanda a lanzar gNewSense, una distribucion basada en GNU/Linux exenta de blobs binarios. El proyecto recibio el apoyo de la Free Software Foundation y estimulo la creacion, encabezada por la Free Software Foundation Latin America, del nucleo Linux-libre.  El movimiento del software libre es un movimiento social\u200b con el objetivo de obtener y garantizar las libertades que permiten a los usuarios de software ejecutarlo, estudiarlo, cambiarlo y redistribuir copias del mismo con o sin cambios. Sobre la base de las tradiciones y filosofias de la cultura hacker y el mundo academico de los a\u00f1os 1970, Richard Stallman fundo formalmente el movimiento en 1983, con el lanzamiento del Proyecto GNU.\u200b Stallman establecio la Fundacion del Software Libre en 1985 para apoyar el movimiento.  Entre las causas que motivan el software libre se encuentran:  Aparte de estas motivaciones, quienes trabajan con software libre suelen hacerlo por muchas otras razones, que van desde la diversion a la mera retribucion economica, que es posible debido a modelos de negocio sustentables.\u200b  La mayoria de los desarrolladores de software libre provienen de paises industrializados. El mapa de desarrolladores del Proyecto Debian muestra que la mayoria de desarrolladores se encuentran en Europa y los Estados Unidos.\u200b  Un grupo de usuarios de Linux (LUG), grupo de usuarios de GNU/ Linux (GLUG) o grupo de usuarios de software libre, es una organizacion sin fines de lucro que brinda apoyo mutuo y/o educacion a los usuarios de Linux, especialmente para los inexpertos o recien llegados.\u200b El termino comunmente se refiere a grupos locales que se reunen en persona, pero tambien se usa para referirse a grupos de apoyo en linea que pueden tener miembros repartidos en un area muy amplia y que no organizan o no dependen de reuniones fisicas. Muchos LUG incluyen FreeBSD y otros sistemas operativos basados en Unix de software libre y de codigo abierto.  Entre los argumentos que sustentan la utilizacion de software libre en las administraciones publicas encontramos los siguientes:\u200b  Existen paises en los cuales, sus administraciones publicas, han mostrado apoyo al software libre, sea migrando total o parcialmente sus servidores y sistemas de escritorio, o subvencionandolo. Este es el caso de Alemania,\u200b\u200b\u200b Brasil,\u200b\u200b Cuba,\u200b Chile,\u200b China,\u200b Ecuador, Espa\u00f1a,\u200b\u200b\u200b Francia,\u200b Mexico,\u200b Republica Dominicana,\u200b Venezuela,\u200b Argentina,\u200b entre otros.  La inclusion de la gestion digital en el ambito sanitario ha permitido transformar la relacion entre los sistemas de salud y los usuarios, proporcionando  una mayor agilidad, rentabilidad y accesibilidad. Su uso radica en la aplicacion de las nuevas tecnologias para la mejora de los servicios dados a los pacientes y sus comunidades, a traves de estrategias que facilitan la informacion y la divulgacion; por ejemplo, la teleasistencia para minimizar los costes de la atencion domiciliaria y facilitar el acceso a comunidades remotas; la telefonia movil para permitir el acceso a la informacion y la comunicacion entre profesionales y pacientes; la historia clinica informatizada, que posibilita el acceso colectivo de un equipo sanitario de trabajo a los datos de un paciente, entre otros.  La informatizacion de los servicios dirigidos a los pacientes requiere una gestion eficiente de los recursos tecnologicos. Es imprescindible una adaptacion tecnologica de los sistemas de Informacion sanitarios con nuevos y mejores protocolos de comunicacion, por lo que, en este sentido,  el uso del software libre juega un papel fundamental, posibilitando el desarrollo colaborativo en red, su reutilizacion y disminuyendo los gastos economicos.\u200b  Segun sus impulsores, el software libre fomenta el conocimiento y la participacion de forma equitativa y colaborativa en el proceso educativo en particular, y en la cultura en general, pone al estudiante en situacion de \"crear\", de ser usuario y productor al mismo tiempo.\u200b Los gobiernos y las instituciones educativas deberian utilizar y ense\u00f1ar exclusivamente software libre porque este les permitiria adquirir independencia pedagogica y herramientas de conocimiento abiertas y accesibles a sus estudiantes y a toda la comunidad. Difundir el conocimiento y ense\u00f1ar a los estudiantes a ser buenos miembros de esa comunidad.\u200b El aprendizaje se promueve a partir de un acceso libre a la informacion\u200b   Por todo esto, el software libre parece tener beneficios\u200b \u200b  en el campo educativo como los siguientes:  El software libre o el de codigo abierto comparten las mismas limitaciones, y algunas de ellas tambien las comparten con el software comercial. Algunas limitaciones son:  En la Cuarta Revolucion Industrial, los sectores productivos han experimentado un gran cambio. Este cambio se debe principalmente a la evolucion de las tecnologias y su inclusion en dichos sectores. En esta Revolucion Industrial existe lo que llamamos \u201cEcosistema de herramientas\u201d de Software Libre y Abierto lo cual favorece el uso de las nuevas tecnologias permitiendo que las empresas sean mas competitivas y rentables.\u200b  Cada vez hay mas empresas y organizaciones que usan el Software Libre para su gestion empresarial. Esto se debe a las grandes ventajas que tiene su uso en dichas empresas, como por ejemplo la reduccion de costes, la libertad de uso y redistribucion, la independencia tecnologica, el aumento de la flexibilidad y la personalizacion del codigo entre otras.\u200b\u200b  En la actualidad, existen muchos proyectos en Software Libre para peque\u00f1as y medianas Organizaciones.\u200b De hecho, un 98% de las grandes empresas lo usan, pero menos del 30% colaboran en su desarrollo lo cual no es adecuado si queremos que estos programas sigan evolucionando.\u200b  En los ultimos a\u00f1os, el desarrollo del software ha beneficiado en diversos campos de la ciencia.  En la bioinformatica ha sido beneficioso por la gran cantidad de informacion y datos que se manejan. Es por ello que muchos de estos softwares se enfocan en las bases de datos biologicas, el analisis de secuencias, anotacion de genomas, medicion de la biodiversidad entre otras cosas.\u200b  El campo de la fisica cuenta con amplios recursos de software libre como programas para la mecanica de fluidos (Gerris Flow Solver) que permite resolver las ecuaciones de Navier-Stokes; la experimentacion de dispersion de neutrones (McStas); investigacion con la Teoria del funcional de la densidad del tiempo-dependiente y la Teoria del funcional de la densidad mediante la simulacion de la dinamica de electrones de iones (Octopus) o la ilustracion de los efectos de la relatividad especial en la apariencia de los objetos en movimiento (LightSpeed) entre otros.\u200b  Respecto al campo de la quimica y al software libre cabe destacar algunos programas usados para la investigacion en este ambito. Algunos ejemplos son: un avanzado editor molecular (Avogadro o BKChem), tablas periodicas interactivas con toda la informacion necesaria (Kalzium) y un proyecto de colaboracion con el fin de buscar, convertir, analizar o almacenar datos de cualquier area relacionada con la quimica.\u200b  En el campo de las matematicas el Software Libre ha contribuido en la resolucion de problemas matematicos como por ejemplo problemas con graficos, matrices, permutaciones, geometria entre otros. Algunos de estos programas son CompliCalc, Geogebra, Yacas y Axiom.\u200b  En cuanto al mundo del arte se refiere el software libre tambien ha permitido el desarrollo de diversos campos como el cine, los videojuegos, musica o la fotografia entre otros.  Existen gran cantidad de programas que sirven de apoyo o de herramienta para multiples tareas relacionadas con la musica como puede ser la escritura de partituras, composicion musical o su produccion.  Uno de los programas mas conocidos y destacados a la hora de realizar grabacion y edicion de audio es audacity, el cual permite trabajar en la generacion de tonos, en formas de ondas, aplicacion de efectos y muchas mas opciones permitiendo obtener resultados profesionales. Tambien se puede destacar el uso de Ardour, el cual es ideal en el uso de grabaciones de alta calidad para doblajes e incluso eventos en vivo y aunque su funcionalidad principal es la edicion y grabacion tambien permite masterizar audio.  En notacion musical cabe destacar el uso de MuseScore el cual posee un gran abanico de funcionalidades, ademas de poder integrarse con otros programas.  Por otra parte, no todos los programas relacionados con la musica tienen como objetivo grabar y editar, Guitarix es un simulador para amplificador de guitarras. Su uso es ideal para presentaciones en vivo ya que la amplificacion del sonido es muy rapida.  A la hora de la realizacion de producciones cinematograficas el software libre cuenta con un papel destacado, como fue el uso de GNU/Linux en la realizacion del agujero negro de la pelicula Interstellar de Christopher Nolan. Otro ejemplo fue el uso de Ubuntu y KDE a la hora de realizar los efectos especiales de la pelicula El hobbit: la desolacion de Smaug, por parte de Weta Digital. Hay que destacar tambien al programa Blender 3D, el cual es uno de los programas mas populares dedicados al modelado, donde se ha llegado a usar en peliculas como Spider-Man 2, Captain America: The Winter Soldier o Elephants Dream la cual es la primera pelicula realizada integramente con software libre.\u200b\u200b\u200b  El software libre ha supuesto un gran avance para el mundo de internet. Gracias a la creacion del proyecto GNU y a la sociedad resultante del Movimiento del Software Libre impulsado por Richard Stallman.  A dia de hoy, la vasta mayoria de paginas web se alojan en servidores Linux utilizando MySQL como gestion de base de datos, PHP como lenguaje y Apache como servidor web http. Su uso implica grandes niveles de seguridad y rendimiento. Los sistemas LAMP (Linux, Apache, MySQL y PHP) permiten la creacion y configuracion de servidores web sin implicar un alto coste. A raiz de esto, numerosos proveedores han emergido un numero considerable de proveedores de servicios, entre los que destacan los hostings y los proveedores cloud.  Cabe destacar el alto nivel de seguridad que proporciona el software libre debido a las constantes actualizaciones e incorporaciones de nuevos parches de seguridad.  A su vez, la mayoria de la infraestructura de internet esta basada en protocolos amparados en el software libre; algunos ejemplos son la gestion del funcionamiento de los correos electronicos (gracias a SendMail) o los servidores de nombre de dominio DNS (BIND).  Saltando a otro campo del mundo internauta, el desarrollo de software para cloud tambien se ha visto afectado de forma positiva por el software libre. Este ultimo ha permitido la creacion de repositorios, frameworks y utiles lenguajes de programacion. Asi mismo, las nuevas tecnicas de inteligencia artificial, el internet de las cosas o el big data han sido impulsadas por el software libre. ","snippet":"El software libre o  software de fuentes abiertas es un  software cuyo codigo fuente puede ser estudiado, modificado, y utilizado libremente con cualquier finalidad y redistribuido con cambios o mejor","enlaces_salientes":["Software_libre","Software_libre","Software_libre","Software_gratis","Xfce","Firefox","Vim","GIMP","VLC_media_player","Software","C%C3%B3digo_fuente","Richard_Stallman","Free_Software_Foundation","Usuario_(inform%C3%A1tica)","Gratis_frente_a_libre","Freeware","Software_comercial","Dominio_p%C3%BAblico","Licencia_de_software","Derechos_de_autor","Autor","Historia_del_software_libre_y_de_c%C3%B3digo_abierto","Richard_Stallman","Computadora","Computadora_central","Programador","Desarrollador_de_software","Programa_inform%C3%A1tico","DECUS","Licencia_de_software","Inform%C3%A1tica","Sistema_operativo","Software_propietario","Richard_Matthew_Stallman","Universidad_de_Harvard","Hacker","MIT_Artificial_Intelligence_Laboratory","Instituto_Tecnol%C3%B3gico_de_Massachusetts","Symbolics","Impresora","C%C3%B3digo_fuente","Controlador_de_dispositivo","Software_propietario","Usenet","Proyecto_GNU","Sistema_operativo","Manifiesto_GNU","Copyleft","GPL","Definici%C3%B3n_de_Software_Libre","C%C3%B3digo_fuente","Licencia_p%C3%BAblica_general_de_GNU","Licencia_p%C3%BAblica_general_de_GNU","Open_Source_Initiative","Free_Software_Foundation","Software_no_libre","Propiedad_intelectual","Copyright","Disco_compacto","Distribuci%C3%B3n_Linux","Movimiento_del_software_libre","C%C3%B3digo_abierto","Software_libre_y_de_c%C3%B3digo_abierto","Formato_abierto","Microsoft","Licencia_de_software_libre","Licencia_de_software_libre","Licencia_de_software_libre_permisiva","Derechos_de_autor","Licencia_de_software","C%C3%B3digo_fuente","C%C3%B3digo_objeto","Copyleft","Licencia_de_software_libre_permisiva","Software_libre_y_de_c%C3%B3digo_abierto","GNU_General_Public_License","GitHub","Licencia_MIT","Apache_License","Copyleft","Derechos_de_autor","MySQL","Copyleft","Obra_derivada","Software_libre_y_de_c%C3%B3digo_abierto","Software_libre_y_de_c%C3%B3digo_abierto","Software_de_c%C3%B3digo_abierto","Eric_S._Raymond","Bruce_Perens","Open_Source_Initiative","C%C3%B3digo_abierto","Christine_Peterson","Think_tank","Marca_registrada","Open_Source_Definition","Graphviz","AT%26T","Econom%C3%ADa_de_c%C3%B3digo_abierto","Bien_de_uso","Costo_marginal","Sector_privado","Sector_voluntario","Sector_p%C3%BAblico","Centralismo","Orden_espont%C3%A1neo","Anarquismo","Trabajo_colaborativo","Cooperativismo","Econom%C3%ADa_del_regalo","Cooperaci%C3%B3n","Asociaci%C3%B3n_voluntaria","Proyecto_de_desarrollo","Voluntariado","Antiautoritarismo","Soporte_t%C3%A9cnico","Donaci%C3%B3n","Mecenazgo","Responsabilidad_social_corporativa","Software_de_c%C3%B3digo_cerrado","Seguridad_inform%C3%A1tica","Seguridad_por_oscuridad","OpenBSD","Kernel","Sistema_operativo","N%C3%BAcleo_Linux","GNewSense","Free_Software_Foundation","Fundaci%C3%B3n_Software_Libre_Am%C3%A9rica_Latina","Linux-libre","Movimiento_del_software_libre","Movimiento_del_software_libre","Movimiento_social","Software","Cultura_Hacker","Richard_Stallman","Proyecto_GNU","Fundaci%C3%B3n_del_Software_Libre","Software","Software_privativo","Libertad_de_expresi%C3%B3n","Meritocracia","Tragedia_de_los_anticomunes","Debian_GNU/Linux","Grupo_de_usuarios_de_Linux","Universidad_Rutgers","Grupo_de_usuarios_de_Linux","Linux","FreeBSD","Unix","Software_libre_y_de_c%C3%B3digo_abierto","Software_libre_en_la_Administraci%C3%B3n_P%C3%BAblica","Modularidad_(inform%C3%A1tica)","Interoperabilidad","Est%C3%A1ndar_abierto","Administraci%C3%B3n_P%C3%BAblica","Alemania","Brasil","Cuba","Chile","China","Ecuador","Espa%C3%B1a","Francia","M%C3%A9xico","Rep%C3%BAblica_Dominicana","Venezuela","Argentina","Teleasistencia","Telefon%C3%ADa_m%C3%B3vil","Historia_cl%C3%ADnica_informatizada","Software_libre_en_educaci%C3%B3n","Cuarta_Revoluci%C3%B3n_Industrial","Bioinform%C3%A1tica","An%C3%A1lisis_de_secuencias","Genoma","Biodiversidad","F%C3%ADsica","Mec%C3%A1nica_de_fluidos","Ecuaciones_de_Navier-Stokes","Dispersi%C3%B3n_de_neutrones","Teor%C3%ADa_del_funcional_de_la_densidad_tiempo-dependiente","Electr%C3%B3n","Ion","Teor%C3%ADa_de_la_relatividad_especial","Qu%C3%ADmica","Avogadro_(software)","Tabla_peri%C3%B3dica_de_los_elementos","Kalzium","Matem%C3%A1ticas","Gr%C3%A1fica","Matriz_(matem%C3%A1tica)","Permutaci%C3%B3n","Geometr%C3%ADa","GeoGebra","Yacas","Axiom","Partitura","Composici%C3%B3n_musical","Producci%C3%B3n_musical","Audacity","Tono_(ac%C3%BAstica)","Onda_sonora","Ardour","Masterizaci%C3%B3n","MuseScore","Amplificador_de_audio","Agujero_negro","Interstellar","Christopher_Nolan","Ubuntu","KDE","Weta_Digital","Blender","Spider-Man_2","Elephants_Dream","Internet","GNU","Movimiento_del_software_libre","Richard_Stallman","Servidor_web","GNU/Linux","MySQL","PHP","Servidor_HTTP_Apache","Protocolo_de_transferencia_de_hipertexto","LAMP","GNU/Linux","Servidor_HTTP_Apache","MySQL","PHP","Alojamiento_web","Parche_(inform%C3%A1tica)","Correo_electr%C3%B3nico","Sendmail","DNS_mediante_HTTPS","BIND","Repositorio_(contenido_digital)","Framework","Lenguaje_de_programaci%C3%B3n","Inteligencia_artificial","Internet_de_las_cosas","Macrodatos","Asociaci%C3%B3n_de_Publicaciones_Acad%C3%A9micas_de_Acceso_Abierto","Biblioteca_libre","Contenido_abierto","Contenido_libre","Copyleft","Creative_Commons","Cultura_libre","Datos_abiertos","Dise%C3%B1o_abierto","Dominio_p%C3%BAblico","Est%C3%A1ndar_abierto","Formato_abierto","Free_Culture_Forum","Fuente_abierta","GNU","GNU_GPL","Hardware_libre","Licencia_de_software_libre","M%C3%BAsica_libre","Open_content","Publicaciones_de_acceso_abierto","Radio_libre","Recursos_educativos_abiertos","Software_gratis","Video_libre","Free_Software_Foundation","ISBN","Software_libre_para_una_sociedad_libre","Stallman","Eben_Moglen","La_catedral_y_el_bazar","ISSN","Digital_object_identifier","ISBN","ISBN","OCLC","ISBN","Free_Software_Foundation","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation"]}
{"url":"GNU","titulo":"GNU","contenido":"GNU es un sistema operativo de tipo Unix, asi como una gran coleccion de programas informaticos que componen al sistema, desarrollado por y para el Proyecto GNU y auspiciado por la Free Software Foundation. Esta formado en su totalidad por software libre, mayoritariamente bajo terminos de copyleft. GNU es el acronimo recursivo de \"GNU's Not Unix\" (en espa\u00f1ol: GNU no es Unix),\u200b\u200b nombre elegido debido a que GNU sigue un dise\u00f1o tipo Unix y se mantiene compatible con este, pero se distingue de Unix por ser software libre y por no contener codigo de Unix.\u200b\u200b\u200b\u200b  El \u00f1u es el logo o mascota de este proyecto.\u200b  El desarrollo de GNU ha sido liderado desde su inicio en 1983 por Richard Stallman,\u200b\u200b auxiliado por un numero de academicos, programadores voluntarios y formalmente empleados, con el objetivo de crear el primer sistema operativo completamente libre. A fecha de diciembre de 2013 todavia no hay un lanzamiento oficial de GNU\u200b\u200b\u200b\u200b pero el proyecto ha sido responsable por la creacion de varios programas ampliamente utilizados; como los compiladores GCC, el interprete de comandos Bash, el editor de texto Emacs e incluso el escritorio GNOME. La Free Software Foundation considera que el objetivo principal del Proyecto GNU ha sido alcanzado con la ayuda de otros programas de software libre ajenos a GNU, por lo que el desarrollo de un sistema operativo puramente GNU se ha vuelto una tarea secundaria al crecimiento y manutencion del sistema existente (GNU/Linux), y secundaria a la garantia de la libertad de sus usuarios y la promocion de tales ideas. Richard Stallman asi como muchos otros partidarios del movimiento del software libre considera al sistema operativo GNU como \u00abun medio tecnico para un fin social\u00bb.\u200b  El proyecto GNU originalmente pretendia reemplazar el nucleo de Unix con su propio nucleo llamado GNU Hurd, pero las implementaciones comunes de GNU siempre han usado Linux en lugar de Hurd; combinacion a la cual se le llama GNU/Linux o simplemente Linux.\u200b\u200b\u200b Linux-libre se ha convertido en un paquete oficial de GNU, a la par de Hurd, con el afan de limpiar las partes privativas en el nucleo Linux generico e incentivar a las distribuciones de GNU/Linux a que usen dicha version. Notese que el Proyecto GNU denomina a GNU como \"sistema operativo\" en el sentido coloquial del termino (similar al de \"distribucion\"), como sucede cuando se habla de sistemas operativos como Windows, Mac OS, Android e incluso Unix. Mientras tanto, en un sentido mas tecnico algunos programas particulares como Linux y GNU Hurd tambien son llamados sistemas operativos, pero en calidad de kernels o nucleos.  Articulo principal: Lista de paquetes GNU  Los componentes basicos del sistema incluyen el GNU Compiler Collection (GCC), la biblioteca glibc (GNU C library), y las utilidades del Core GNU (coreutils), ademas del depurador de GNU (GDB), las utilidades binarias de GNU (binutils) y el GNU Bash shell. Los desarrolladores del GNU han contribuido al proceso de adaptacion del software de las aplicaciones y utilidades de GNU para Linux en entornos diferentes para los que fueron desarrolladas, que ahora son ampliamente utilizados por otros sistemas operativos asi como las variantes BSD, Solaris y macOS.  Muchos programas GNU han sido traspasados a otros sistemas operativos, incluyendo plataformas de codigo cerrado como Microsoft Windows y macOS. Los programas GNU han mostrado que son mas fiables que las contrapartes de codigo cerrado.  En noviembre de 2015, habia un total de 466 paquetes de GNU (incluyendo paquetes obsoletos, sin incluirlos son 383 paquetes) alojados en el sitio oficial de desarrollo de GNU.  Articulo principal: Variantes GNU  En su sentido original, y del mismo modo que en ingenieria de hardware, el sistema operativo es un conjunto de funciones basicas en el control del hardware  y gestion de procesos como la gestion de tareas y las llamadas al sistema. En terminologia moderna, usada por desarrolladores software, el conjunto de estas funciones es referenciada normalmente como \"kernel\" o nucleo, mientras que de un 'sistema operativo' se espera una coleccion mas extensa de programas. El proyecto GNU mantiene dos nucleos en si mismo, permitiendo la creacion de sistemas operativos GNU puros, aunque las herramientas GNU tambien se utilizan en nucleos de tipo No-GNU. Debido a estas dos definiciones diferentes del termino 'sistema operativo', hay un debate en relacion con el nombre que darle a las distribuciones de los paquetes GNU sin un nucleo de tipo GNU.  El nucleo original del proyecto GNU es el \"GNU Hurd microkernel\", que era el foco central de la Free Software Foundation (FSF).  El 30 de abril de 2015, se lanzo el Debian GNU/Hurd 2015 distro, y ahora GNU ofrece todos los componentes requeridos para montar un sistema operativo que los usuarios puedan instalar y utilizar en un ordenador.  De todos modos, el nucleo Hurd no es aun considerado un producto listo para el mercado, pero si una base para conseguir un desarrollo mayor y uso de aplicaciones no tan criticas como las gestionadas por Hurd.  En 2012, una rama del nucleo de Linux se convirtio oficialmente en parte del proyecto GNU en la forma de Linux-libre, una variante de Linux donde todos sus componentes de codigo cerrado habian sido eliminados. El proyecto GNU avala las distribuciones de Linux-libre, asi como gNewSense, Trisquel y Parabola GNU/Linux-libre.  A causa del estado en desarrollo de Hurd, GNU es usualmente acompa\u00f1ado de otros nucleos como Linux o FreeBSD. Si la combinacion de librerias GNU con nucleos externos es un sistema operativo de tipo GNU con un nucleo (por ejemplo, GNU con Linux),  porque la coleccion GNU convierte el nucleo en un sistema operativo utilizable como se entiende en el desarrollo de software moderno, o bien el nucleo es un sistema operativo en si mismo con una capa GNU sobre el (por ejemplo, Linux con GNU) porque el nucleo puede operar en una maquina sin GNU, es aun materia de debate. La FSF mantiene que un sistema operativo construido utilizando el nucleo de Linux y las herramientas GNU deberia ser una variante de GNU, y promociona el termino GNU/Linux para esos sistemas (llevando a la controversia del nombre GNU/Linux). Este punto de vista no es exclusivo de la FSF. De forma notoria, Debian es una de las mayores y mas antiguas distribuciones de Linux, que se refiere a si misma como Debian GNU/Linux.  El proyecto GNU recomienda a los contribuyentes asignar el copyright de los paquetes GNU a la Free Software Foundation, a pesar de que la FSF considera aceptable publicar peque\u00f1os cambios a un proyecto de dominio publico. De cualquier forma, esto no es un requisito; los encargados del mantenimiento pueden mantener el copyright de los paquetes GNU que ellos mismos mantienen, aunque solo el titular de los derechos de autor puede hacer cumplir la licencia utilizada (como, por ejemplo, la licencia GPL de GNU), en este caso en propietario de los derechos de autor se encarga de ello en lugar de la Free Software Foundation.  Para el desarrollo de software necesario, Stallman escribio una licencia denominada Licencia Publica General GNU (GNU General Public License, originalmente denominado Emacs General Public License), con el objetivo de garantizar libertad a los usuarios de compartir y modificar el software libre. Stallman escribio esta licencia despues de su experiencia con James Gosling y un programa denominado UniPress, con la controversia en torno al codigo software utilizado en los programas GNU Emacs. Durante la mayoria de los a\u00f1os 80, cada paquete GNU tenia su propia licencia: la Licencia Publica General Emacs, la Licencia General Publica GCC, etc. En 1989, la FSF publico una unica licencia que podian utilizar en todo su software, la cual podria ser utilizada en proyectos No-GNU: la GNU General Public License o Licencia Publica General GNU (GPL).  Esta licencia es ahora utilizada por la mayoria de software GNU, asi como una gran cantidad de programas de software libre que no son partes del proyecto GNU; historicamente, ha sido la licencia mas utilizada (aunque recientemente ha sido desafiada por la licencia MIT).  Otorga a todos los destinatarios de un programa el derecho de ejecutarlo, copiarlo, modificarlo y distribuirlo, mientras que les prohibe imponer restricciones adicionales a las copias que distribuyen. Esta idea a menudo se denomina copyleft.  En 1991, la GNU Lesser General Public License (LGPL), por aquel entonces conocida como Library General Public License o Licencia General Publica de Libreria, fue escrita por la Libreria C de GNU para permitir su vinculacion con software de codigo cerrado. En 1991 tambien se lanzo la segunda version de la licencia GNU GPL. La Licencia de Documentacion Libre de GNU (FDL), para documentacion, aparecio en el a\u00f1o 2000. Tanto GPL como LGPL fueron revisadas y se lanzo su tercera version en 2007, a\u00f1adiendo clausulas para proteger a los usuarios de restricciones software que evitaban que los usuarios modificaran software en sus propios dispositivos.  Ademas de los paquetes de GNU, las licencias del Proyecto GNU son utilizadas por muchos proyectos no relacionados, como el nucleo de Linux, que a menudo se utiliza con el software GNU. Una minoria del software utilizado por la mayoria de las distribuciones de Linux, como el sistema X Window, tiene licencia de software libre permisivo. ","snippet":"GNU es un sistema operativo de tipo Unix, asi como una gran coleccion de programas informaticos que componen al sistema, desarrollado por y para el Proyecto GNU y auspiciado por la Free Software Found","enlaces_salientes":["GNU","GNU","GNU","GNU_(desambiguaci%C3%B3n)","Unix","Sistema_operativo","Richard_Stallman","Desarrollador_de_software","Richard_Stallman","Proyecto_GNU","Free_Software_Foundation","Ingenier%C3%ADa_de_software","Software_libre","27_de_septiembre","1983","Licencia_de_software","GNU_General_Public_License","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","GNU_Guile","N%C3%BAcleo_(inform%C3%A1tica)","GNU_Mach","Linux-libre","Microkernel","N%C3%BAcleo_monol%C3%ADtico","Plataforma_(inform%C3%A1tica)","IA-32","GNU_Hurd","Linux-libre","Interfaz_gr%C3%A1fica_de_usuario","GNOME","Entorno_de_escritorio","Sistema_de_gesti%C3%B3n_de_paquetes","GNU_Guix","Sistema_de_gesti%C3%B3n_de_paquetes","Sistema_operativo","Tipo_Unix","Proyecto_GNU","Free_Software_Foundation","Software_libre","Copyleft","Acr%C3%B3nimo_recursivo","%C3%91u","Richard_Stallman","GCC","Bash","Emacs","GNOME","GNU/Linux","N%C3%BAcleo_(inform%C3%A1tica)","GNU_Hurd","Linux","GNU/Linux","Linux-libre","Proyecto_GNU","Sistema_operativo","Distribuci%C3%B3n_de_software","Linux","GNU_Hurd","N%C3%BAcleo_(inform%C3%A1tica)","GNU_Compiler_Collection","Glibc","GNU_Core_Utilities","GNU_Debugger","GNU_Binutils","BSD/OS","Solaris_(sistema_operativo)","MacOS","Microsoft_Windows","GNU_Hurd","Free_Software_Foundation","Linux-libre","GNewSense","Trisquel_GNU/Linux","Parabola_GNU/Linux-libre","FreeBSD","Licencia_p%C3%BAblica_general_GNU","James_Gosling","GNU_Emacs","GNU_General_Public_License","Copyleft","GNU_Lesser_General_Public_License","Software_Libre","GNU_Hurd","Creative_Commons","Movimiento_del_software_libre","Historia_del_software_libre_y_de_c%C3%B3digo_abierto","ISBN","ISBN","Computerworld","Control_de_autoridades","Gemeinsame_Normdatei"]}
{"url":"G%2B%2B","titulo":"g++","contenido":"g++ es el alias tradicional de GNU C++, un conjunto libre de compiladores de C++. Forma parte del GCC, GNU Compiler Collection (del ingles, coleccion de compiladores GNU).  En sistemas operativos GNU, gcc es el comando usado para ejecutar el compilador de C, mientras que g++ ejecuta el compilador de C++. ","snippet":"g++ es el alias tradicional de GNU C++, un conjunto libre de compiladores de C++. Forma parte del GCC, GNU Compiler Collection (del ingles, coleccion de compiladores GNU).  En sistemas operativos GNU,","enlaces_salientes":["G%2B%2B","G%2B%2B","G%2B%2B","GNU","C%2B%2B","Software_libre","C%2B%2B","GNU_Compiler_Collection","Idioma_ingl%C3%A9s","Sistemas_operativos","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","GNU_Compiler_Collection","Control_de_autoridades"]}
{"url":"Xcode","titulo":"Xcode","contenido":"Xcode es un entorno de desarrollo integrado (IDE, en sus siglas en ingles) para macOS que contiene un conjunto de herramientas creadas por Apple destinadas al desarrollo de software para macOS, iOS, watchOS y tvOS. El entorno grafico se complementa con herramientas de linea de comando que posibilitan ademas un desarrollo al estilo UNIX usando la aplicacion Terminal de macOS. Su primera version tiene origen en el a\u00f1o 2003 y actualmente su version numero 12 se encuentra disponible de manera gratuita en el Mac App Store o mediante descarga directa desde la pagina para desarrolladores de Apple.  Xcode trabaja conjuntamente con Interface Builder, una herencia de NeXT, una herramienta grafica para la creacion de interfaces de usuario.  Xcode incluye la coleccion de compiladores del proyecto GNU (GCC), y puede compilar codigo C, C++, Swift, Objective-C, Objective-C++, Java y AppleScript mediante una amplia gama de modelos de programacion, incluyendo, pero no limitado a Cocoa, Carbon y Java. Otras compa\u00f1ias han a\u00f1adido soporte para GNU Pascal,\u200b Free Pascal,\u200b Ada y Perl.\u200b  Entre las caracteristicas mas apreciadas de Xcode esta la tecnologia para distribuir el proceso de construccion a partir de codigo fuente entre varios ordenadores, utilizando Bonjour.  Xcode se introdujo el 24 de octubre de 2003 junto con la version 10.3 de Mac OS X, siendo desarrollado a partir del anterior entorno de desarrollo, Project Builder, al que sustituyo. Project Builder, a su vez, tambien era una herencia de la compa\u00f1ia NeXT, fusionada con Apple en 1996.  La aparicion de Xcode 2.1 en junio de 2005 fue significativa porque proporciono a la comunidad de desarrolladores las herramientas para crear binarios universales que permiten al software creado para Mac OS X ser ejecutado tanto en la arquitectura PowerPC como en la nueva, basada en Intel (x86). Esta version integro ademas las herramientas y marcos de trabajo WebObjects de Apple para construir aplicaciones y servicios web de Java, que anteriormente se vendian como un producto separado por un precio de 699$.  Con el lanzamiento de Mac\u00a0OS X v10.5 tambien lo fue el Xcode 3.0, que tenia como principales novedades la inclusion de Objective-C 2.0, un nuevo Interface Builder, la opcion de refactorizar proyectos y hacer \"snapshosts\" del proyecto entre otras.  Xcode 4, lanzado a principios de 2011, incluia como novedades una nueva interfaz y la compatibilidad con Mac OS X 10.7 Lion. Con esta version, Xcode dejo de ser compatible con Mac OS X 10.5 Leopard.  7.0  7.0.1  7.1  7.1.1  7.2  7.2.1  7.3  7.3.1  8.0  8.1  8.2  8.2.1  8.3  8.3.1  8.3.2  8.3.3  9.0  9.0.1  9.1  9.2  9.3  9.3.1  9.4  9.4.1  10.0  10.1  10.2  10.2.1  10.3  11.0  11.1 ","snippet":"Xcode es un entorno de desarrollo integrado (IDE, en sus siglas en ingles) para macOS que contiene un conjunto de herramientas creadas por Apple destinadas al desarrollo de software para macOS, iOS, w","enlaces_salientes":["Xcode","Xcode","Xcode","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Apple_Inc.","Licencia_de_software","Freeware","C%C3%B3digo_abierto","Plataforma_(inform%C3%A1tica)","IOS","Ciclo_de_vida_del_lanzamiento_de_software","18_de_septiembre","2023","Ciclo_de_vida_del_lanzamiento_de_software","26_de_octubre","2023","Entorno_de_desarrollo_integrado","MacOS","Apple_Inc.","MacOS","IOS","WatchOS","TvOS","Unix","Mac_App_Store","Descarga_directa","NeXT","GNU","GCC","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Swift_(lenguaje_de_programaci%C3%B3n)","Objective_C","Lenguaje_de_programaci%C3%B3n_Java","AppleScript","Cocoa_(inform%C3%A1tica)","Carbon_(API)","Lenguaje_de_programaci%C3%B3n_Java","GNU_Pascal","Free_Pascal","Lenguaje_de_programaci%C3%B3n_Ada","Perl","C%C3%B3digo_fuente","Bonjour_(software)","24_de_octubre","2003","Project_Builder","NeXT","1996","2005","Binario_universal","PowerPC","Intel","X86","WebObjects","Servicio_web","Mac_OS_X_v10.5","Refactorizaci%C3%B3n","OS_X","OS_X","IOS","WatchOS","TvOS","OS_X_Yosemite","IOS_9","WatchOS","OS_X_Yosemite","IOS_9","TvOS","IOS_9","WatchOS","TvOS","TvOS","OS_X_El_Capitan","IOS_9","WatchOS","TvOS","OS_X","OS_X","IOS","WatchOS","TvOS","OS_X","OS_X","IOS","WatchOS","TvOS","OS_X_El_Capitan","MacOS_Sierra","IOS_10","WatchOS","TvOS","MacOS_Sierra","IOS_10","WatchOS","TvOS","MacOS_Sierra","IOS_10","WatchOS","TvOS","IOS_10","WatchOS","TvOS","MacOS_Sierra","MacOS_Sierra","IOS_10","WatchOS","TvOS","IOS_10","OS_X","OS_X","IOS","WatchOS","TvOS","MacOS_Sierra","MacOS_High_Sierra","IOS_11","WatchOS","TvOS","MacOS_High_Sierra","IOS_11","WatchOS","TvOS","MacOS_High_Sierra","IOS_11","WatchOS","TvOS","MacOS_High_Sierra","MacOS_High_Sierra","IOS_11","WatchOS","TvOS","IOS_11","TvOS","MacOS_High_Sierra","MacOS_Mojave","IOS_12","WatchOS","TvOS","MacOS_Mojave","IOS_12","WatchOS","TvOS","MacOS_Mojave","MacOS_Mojave","IOS_12","WatchOS","TvOS","MacOS_Mojave","IOS_12","WatchOS","TvOS","MacOS_Mojave","MacOS_Catalina","IOS_13","WatchOS","TvOS","IOS_13","GNUstep","Control_de_autoridades"]}
{"url":"Borland_C%2B%2B","titulo":"C++Builder","contenido":"C++Builder es un entorno de desarrollo rapido de aplicaciones en lenguaje C++ para Windows inicialmente propiedad de la empresa Borland, y actualmente de la empresa Embarcadero Technologies, quien compro de Borland la division Codegear encargada del producto. Codegear inicialmente se denominaba DTG='Developer Tools Group' hasta que adquirio el nombre oficial CodeGear previo a la venta.  C++Builder combina la biblioteca Visual Component Library y el IDE escrito en Delphi con un compilador de C++. El ciclo de lanzamiento es anual. Incluye herramientas que permiten desarrollo visual de arrastrar-y-soltar componentes sobre la aplicacion e incorpora constructor de interfaz grafica WYSIWYG en su IDE.  Lanzado en 1997, despues de Delphi, y con un entorno similar a este. Muchos componentes de Delphi pueden utilizarse en C++. En 1999 Borland anuncio la version 4.0; poco tiempo despues anuncio que Borland C++ seria discontinuado en favor del C++Builder.  En 2000 salio publicada la version 5.0 y en 2002 la version 6.0. Para aquella epoca las versiones de C++Builder salian un a\u00f1o o un poco mas de su contraparte Delphi.  En 2003 Borland publica C++BuilderX (CBX), que usaba el entorno de desarrollo (Galileo) de un producto hermano: JBuilder y tenia poca similitud con C++Builder o Delphi, pues proponia como framework a wxWindows (en lugar de OWL, OWLNext o VCL). Este producto estaba dirigido a grandes organizaciones y no tuvo mucha aceptacion. Al final del 2004 Borland anuncio que continuaria desarrollando el C++Builder e incluirlo junto con la suite de desarrollo de Delphi development suite, abandonando el C++BuilderX.  Cerca de un a\u00f1o despues del anuncio Borland publico 'Borland Developer Studio 2006' que incluia el Borland C++Builder 2006 que proveia un administrador de configuracion mejorado y varias correcciones. Borland Developer Studio 2006 es un paquete que incluida Delphi, C++Builder, y C#Builder.  En 2006 Borland's Developer Tools Group, la division encargada del C++Builder, fue transformada en una organizacion independiente (subsidiaria) denominada CodeGear.  En 2007 Borland publico C++Builder 2007, proveyendo completo soporte para la API de Microsoft Vista, soporte mejorado a ANSI C++, y hasta 500% mejor rendimiento en el proceso de compilacion desde el IDE, soporte para MSBuild, arquitectura de base de datos DBX4, \"VCL for the Web\" que permite el desarrollo visual de aplicaciones AJAX, y la biblioteca OWLNext. El soporte de la API de Microsoft Vista incluye aplicaciones 'temadas' y soporte a la interfaz Aero y Vista Desktop. CodeGear RAD Studio 2007 incorporo C++Builder 2007 y Delphi. Tambien en 2007 Borland revivio la linea \"Turbo\" y lanzo dos ediciones \"Turbo\" de C++Builder: Turbo C++ Professional, y Turbo C++ Explorer (no disponible actualmente de CodeGear), basado en Borland C++Builder 2006.  En 2008 CodeGear fue adquirida por Embarcadero Technologies, quien continuo el desarrollo. C++Builder 2009 fue publicado en agosto del 2008, las caracteristicas agregadas mas importantes fueron el soporte completo a Unicode tanto en la VCL como en la RTL, adopcion anticipada del estandar C++0x, soporte al ITE (Entorno de Traduccion Integrado), componentes Ribbon y la inclusion de la biblioteca Boost.  C++Builder 2010 fue publicado en agosto del 2009, fue el primer entorno de desarrollo que incluyo soporte a Windows 7, permitiendo desarrollar aplicaciones que soportan la interfaz 'Multitouch'. CodeGear ha anunciado sus planes de desarrollo que incluirian soporte a OSX y Linux.  C++Builder ha usado los siguientes a lo largo de su desarrollo: ","snippet":"C++Builder es un entorno de desarrollo rapido de aplicaciones en lenguaje C++ para Windows inicialmente propiedad de la empresa Borland, y actualmente de la empresa Embarcadero Technologies, quien com","enlaces_salientes":["C%2B%2BBuilder","C%2B%2BBuilder","C%2B%2BBuilder","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Borland","Embarcadero_Technologies","Licencia_de_software","Software_propietario","Ciclo_de_vida_del_lanzamiento_de_software","Desarrollo_r%C3%A1pido_de_aplicaciones","Borland","Embarcadero_Technologies","CodeGear","Biblioteca_(inform%C3%A1tica)","Visual_Component_Library","Compilador","Constructor_de_interfaz_gr%C3%A1fica","WYSIWYG","JBuilder","Biblioteca_(inform%C3%A1tica)","Unicode","Biblioteca_(inform%C3%A1tica)","Boost","Windows_7","MS-DOS","Windows_3.1x","Integrated_development_environment","OS/2","IBM","Windows_NT_3.51","Windows_NT_4.0","Embarcadero_Delphi","Visual_Component_Library","Wayback_Machine","Wayback_Machine","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Cygwin","titulo":"Cygwin","contenido":"Cygwin es una coleccion de herramientas desarrollada por Cygnus Solutions para proporcionar un comportamiento similar a los sistemas Unix en Microsoft Windows. Su objetivo es portar software que ejecuta en sistemas POSIX a Windows con una recompilacion a partir de sus fuentes.  En la actualidad, el paquete esta mantenido principalmente por trabajadores de Red Hat. Se distribuye habitualmente bajo los terminos de la GPL con la excepcion de que permite ser enlazada con cualquier tipo de software libre cuya licencia este de acuerdo con la definicion de software libre. Tambien es posible adquirir una licencia con costo para distribuirla bajo otros tipos de licencia.  El sistema Cygwin tiene varias partes diferenciadas:  Ademas se incluye una biblioteca denominada MinGW que funciona de forma analoga a la biblioteca nativa MSVCRT (que implementa la API de Windows). Esta biblioteca tiene una menor carga de memoria y tiene una licencia muy permisiva pero no implementa la API POSIX de forma tan completa como Cygwin.  Uno de los puntos debiles del sistema es la falta de soporte Unicode. Unicamente se soporta el juego de caracteres del sistema Windows sobre el que ejecuta.  Cygwin surge en 1995 como un proyecto de Steve Chamberlain (un ingeniero de Cygnus). Este ingeniero descubrio que Windows 95 y NT utilizan como formato para sus archivos objeto COFF y GNU incluia soporte para x86 y COFF. Esto supone, al menos en teoria, que no seria dificil adaptar el compilador GCC y crear un compilador cruzado que creara ejecutables para Windows. Tras demostrarlo en la practica, los primeros prototipos comenzaron a aparecer rapidamente.  El siguiente paso era intentar configurar el compilador en un sistema Windows pero esto precisa una emulacion de un entorno Unix para permitir que el script autoconf ejecutara correctamente. Por ello era necesario disponer de un shell como bash que facilitara los fork y la entrada/salida. Windows proporciona esa funcionalidad por lo que la biblioteca Cygwin unicamente necesitaba traducir las llamadas y gestionar de forma interna la informacion privada (descriptores de fichero...).  En 1996 se unieron mas ingenieros al proyecto puesto que quedaba demostrado que Cygwin seria una herramienta muy util para permitir que las herramientas de Cygnus ejecutaran en sistemas Windows (el mecanismo empleado hasta el momento era el uso del compilador DJGPP). En 1998, Cygnus empezo a distribuir el paquete Cygwin como un producto de suficiente interes por si mismo. ","snippet":"Cygwin es una coleccion de herramientas desarrollada por Cygnus Solutions para proporcionar un comportamiento similar a los sistemas Unix en Microsoft Windows. Su objetivo es portar software que ejecu","enlaces_salientes":["Cygwin","Cygwin","Cygwin","Windows_XP","Capa_de_compatibilidad","Desarrollador_de_software","Red_Hat","1995","Licencia_de_software","Licencia_p%C3%BAblica_general_de_GNU","Lenguaje_de_programaci%C3%B3n","C%2B%2B","C_(lenguaje_de_programaci%C3%B3n)","Plataforma_(inform%C3%A1tica)","Microsoft_Windows","Ciclo_de_vida_del_lanzamiento_de_software","Cygnus_Solutions","Sistema_operativo","Unix","Microsoft_Windows","POSIX","Red_Hat","Licencia_p%C3%BAblica_general_de_GNU","Biblioteca_de_enlace_din%C3%A1mico","Interfaz_de_programaci%C3%B3n_de_aplicaciones","API_de_Windows","GNU_toolchain","GCC","GDB","X_Window_System","Cygwin/X","MinGW","API_de_Windows","Unicode","COFF","X86","Compilador_cruzado","Shell_script","Autoconf","Bash","DJGPP","Boot_Camp","Fink","Wine","Software_libre","CrossOver_Office","Cedega","DOSBOX","Software_libre","Cygwin/X","X11","MinGW","Microsoft","CoLinux","GNOME","KDE","PuTTY","MS-DOS","Control_de_autoridades"]}
{"url":"MinGW","titulo":"MinGW","contenido":"MinGW (Minimalist GNU for Windows), anteriormente conocido como MinGW32, es una implementacion de los compiladores GCC para la plataforma Win32, que permite migrar la capacidad de este compilador en entornos Windows. Es un fork de Cygwin en su version 1.3.3. Ademas MinGW incluye un conjunto de la API de Win32, permitiendo un desarrollo de aplicaciones nativas para esa plataforma, pudiendo generar ejecutables y bibliotecas usando la API de Windows.\u200b  MinGW fue creado por Colin Peters, el 1 de julio de 1998, compilandolo con Cygwin.\u200b  MinGW se llamaba originariamente mingw32; se quitaron los numeros del nombre para evitar la implicacion que tendria el limitarlo a sistemas de 32 bits.\u200b La primera version nativa para Windows de MinGW fue realizada por Jan-Jaap van der Heijden, quien tambien tuvo participacion en el proyecto GCC; a\u00f1adiendo tambien binutils y make.\u200b\u200b Mumit Khan estuvo a cargo del mantenimiento del proyecto e incluyo al compilador algunas caracteristicas propias de Windows. Los archivos de cabecera del API de Windows fueron provistos por Anders Norlander. En 2000, el proyecto se traslado a SourceForge.net para pedir asistencia de la comunidad y centralizar su desarrollo.\u200b  MinGW fue seleccionado como Project of the Month en SourceForge en septiembre de 2005.\u200b  Para lenguajes de programacion distintos de C, MinGW utiliza las bibliotecas de tiempo de ejecucion GNU (por ejemplo, GNU libstdc ++ para C++).[cita\u00a0requerida]  Sin embargo, como GCC no proporciona su propia biblioteca C de tiempo de ejecucion, el compilador C de MinGW tiene como objetivo la antigua Biblioteca de tiempo de ejecucion de C Visual de Microsoft, MSVCRT, que fue lanzado en 1998 y por lo tanto, no incluye soporte para funciones de C99 (ni siquiera la especificacion C89 completa); aunque el uso de MSVCRT permite producir programas nativos que no requieren instalar componentes adicionales, la falta de soporte de C99 ha causado problemas de portabilidad, en particular en lo concerniente a los especificadores de conversion tipo printf. Estos problemas se han atenuado parcialmente mediante la implementacion de una biblioteca de compatibilidad de C99,  libmingwex, pero la amplia labor requerida esta lejos de completarse y no parece que pueda realizarse plenamente.\u200b Mingw-w64 ha resuelto estos problemas, y proporciona funcionalidad conforme a POSIX en las funciones tipo printf.  El proyecto de MinGW mantiene y distribuye un numero de diferentes componentes y paquetes complementarios, incluidos los diversos puertos de GNU toolchain, tales como GCC y binutils, traducido en paquetes equivalentes.\u200b\u200b Estas utilidades pueden utilizarse desde la linea de comandos de Windows o integradas en un IDE. MinGW admite bibliotecas nombradas de acuerdo con los convenios \"<name>.lib\" y \"<name>.dll\" ademas de la habitual convencion \"lib<name>.a\" comun en sistemas UNIX-like.  Ademas, un componente de MinGW, conocido como MSYS (Minimal SYStem) proporciona ports de win32 de un entorno de shell ligero de tipo Unix que incluye rxvt y una seleccion de herramientas POSIX suficientes para permitir a las secuencias de comandos (scripts) de autoconf ejecutarse.\u200b\u200b  Los mingwPORTs son a\u00f1adidos de usuario (contribuciones) a la coleccion de software MinGW. En lugar de proporcionar estos \"complementos\" como paquetes binarios precompilados, se suministran en forma de scripts interactivos de shell Bourne, que guia al usuario final a traves del proceso de descarga y revisiones (parcheo) del codigo fuente original automaticamente, para a continuacion compilarlo e instalarlo. Los usuarios que deseen construir cualquier aplicacion desde un mingwPORT deben instalar  primero MinGW y CYGWIN.\u200b\u200b  La ejecucion de archivos de cabecera de Win32 y bibliotecas de importacion de Win32 para vincular el tiempo de ejecucion son liberados bajo una licencia permisiva,\u200b mientras que los portes de GNU se liberan bajo licencia GNU. Estan disponibles en el hogar web de MinGW descargas binarias del paquete completo de CYGWIN y utilidades de GNU MinGW individuales.  MinGW surgio de una bifurcacion de la version 1.3.3 de Cygwin.\u200b Aunque Cygwin y MinGW pueden utilizarse para portar software de Unix a Windows, tienen diferentes enfoques:\u200b Cygwin pretende ofrecer una capa POSIX completa (similar a la encontrada en otros sistemas de Unix o Linux) de Windows, sacrificando el rendimiento cuando sea necesario para optimizar la compatibilidad. En consecuencia, este enfoque requiere programas Win32 escritos con Cygwin para ejecutar sobre una  biblioteca de compatibilidad copyleftada que debe ser distribuida con el programa, junto con el codigo fuente del mismo. MinGW pretende proporcionar funcionalidad nativa y rendimiento a traves de llamadas a la API de Windows directamente. A diferencia de Cygwin, MinGW no requiere una capa de compatibilidad DLL y por lo tanto los programas no necesitan distribuirse con el codigo fuente.  Como MinGW depende de llamadas a la API de Win32, no puede proporcionar una API completa POSIX; es incapaz de compilar algunas aplicaciones de Unix que se pueden compilar con Cygwin. Especificamente, esto se aplica a las aplicaciones que requieren la funcionalidad POSIX como fork(), mmap() o ioctl()\u200b y aquellos que se espera poder ejecutar en un entorno de POSIX. Las aplicaciones escritas con una biblioteca de plataforma cruzada que si se han portado a MinGW, como SDL, wxWidgets, Qt, o GTK+ se suelen compilar facilmente en MinGW como se haria en Cygwin.  La combinacion de MinGW y CYGWIN proporciona un entorno peque\u00f1o e independiente que puede cargarse en medios extraibles sin dejar  entradas en el registro de Windows o archivos en el equipo. Al proporcionar mas funcionalidad, Cygwin es mas complicado de instalar y mantener. ","snippet":"MinGW (Minimalist GNU for Windows), anteriormente conocido como MinGW32, es una implementacion de los compiladores GCC para la plataforma Win32, que permite migrar la capacidad de este compilador en e","enlaces_salientes":["MinGW","MinGW","MinGW","Compilador","Desarrollador_de_software","Licencia_de_software","Licencia_p%C3%BAblica_general_de_GNU","Lenguaje_de_programaci%C3%B3n","Ada_(lenguaje_de_programaci%C3%B3n)","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Fortran","Java_(lenguaje_de_programaci%C3%B3n)","Pascal_(lenguaje_de_programaci%C3%B3n)","Plataforma_(inform%C3%A1tica)","Plataforma_Java","Ciclo_de_vida_del_lanzamiento_de_software","Ciclo_de_vida_del_lanzamiento_de_software","4_de_octubre","2013","GNU","Microsoft_Windows","GNU_Compiler_Collection","Bifurcaci%C3%B3n_(desarrollo_de_software)","Cygwin","Interfaz_de_programaci%C3%B3n_de_aplicaciones","Biblioteca_(inform%C3%A1tica)","API_de_Windows","Cygwin","32_bits","Binutils","Make","SourceForge.net","Ingenier%C3%ADa_de_software","SourceForge","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","Tiempo_de_ejecuci%C3%B3n#Biblioteca_runtime","Biblioteca_est%C3%A1ndar_de_C%2B%2B","C%2B%2B","Visual_C%2B%2B","C99","ANSI_C","Printf","GNU_toolchain","GNU_Compiler_Collection","GNU_Binutils","Cmd_(Windows)","Entorno_de_desarrollo_integrado","UNIX-like","Portabilidad","Shell_(inform%C3%A1tica)","Tipo_Unix","POSIX","Script_(inform%C3%A1tica)","Autoconf","Bourne_Shell","Licencia_de_software_libre_permisiva","GNU_General_Public_License","Fork","Portabilidad","POSIX","Linux","Copyleft","C%C3%B3digo_fuente","API_de_Windows","Capa_de_compatibilidad","Biblioteca_de_enlace_din%C3%A1mico","POSIX","Simple_DirectMedia_Layer","WxWidgets","Qt_(biblioteca)","GTK%2B","Registro_de_Windows","Software_libre","Cygwin","DJGPP","Wayback_Machine","Control_de_autoridades","Open_Hub"]}
{"url":"Visual_C%2B%2B","titulo":"Microsoft Visual C++","contenido":"Microsoft Visual C++ (MSVC) es un compilador para los lenguajes de programacion C, C++, C++/CLI y C++/CX desarrollado por Microsoft. MSVC es software propietario. Originalmente era un producto independiente, pero luego se convirtio en parte de Visual Studio y estuvo disponible tanto en forma de software de prueba como software gratuito. Cuenta con herramientas para desarrollar y depurar codigo C++, especialmente codigo escrito para la API de Windows, DirectX y .NET.  Muchas aplicaciones requieren paquetes de biblioteca de tiempo de ejecucion de Visual C++ redistribuibles para funcionar correctamente. Estos paquetes a menudo se instalan independientemente de las aplicaciones, lo que permite que varias aplicaciones hagan uso del paquete y solo tengan que instalarlo una vez. Estos paquetes de tiempo de ejecucion y redistribuibles de Visual C++ se instalan principalmente para las bibliotecas estandar que utilizan muchas aplicaciones.  El predecesor de Visual C++ fue Microsoft C / C++. Tambien habia un Microsoft QuickC 2.5 y un Microsoft QuickC para Windows 1.0. El compilador de Visual C++ todavia se conoce como Microsoft C / C++ y, a partir del lanzamiento de Visual C++ 2015 Update 2, esta en la version 14.0.23918.0  ABI  La ABI del compilador de Visual C++ ha cambiado historicamente entre las versiones principales del compilador. Este es especialmente el caso de los contenedores STL, donde los tama\u00f1os de los contenedores han variado mucho entre las versiones del compilador. Por lo tanto, Microsoft recomienda no usar interfaces C++ en los limites de los modulos cuando se desea habilitar el codigo de cliente compilado con una version de compilador diferente. En lugar de C++, Microsoft recomienda utilizar interfaces C o COM, que estan dise\u00f1adas para tener una ABI estable entre las versiones del compilador.  Todas las versiones 14.x de MSVC tienen una ABI estable, y los binarios creados con estas versiones se pueden mezclar de manera compatible con versiones posteriores, teniendo en cuenta las siguientes restricciones:  Bibliotecas en tiempo de ejecucion de C  Visual C++ incluye diferentes versiones de bibliotecas en tiempo de ejecucion de C. Esto significa que los usuarios pueden compilar su codigo con cualquiera de las bibliotecas disponibles. Sin embargo, esto puede causar algunos problemas al usar diferentes componentes (DLL, EXE) en un mismo programa. Un ejemplo tipico es un programa que utiliza diferentes bibliotecas. El usuario debe usar el mismo C Run-Time para todos los componentes del programa a menos que se comprendan las implicaciones. Microsoft recomienda utilizar la biblioteca de vinculos dinamicos multiproceso (opcion de compilador / MD o / MDd) para evitar posibles problemas.  POSIX  Aunque el CRT de Microsoft implementa un gran subconjunto de interfaces POSIX, el compilador de Visual C++ emite una advertencia en cada uso de dichas funciones de forma predeterminada. La razon es que los estandares C y C++ requieren un prefijo de subrayado antes de las interfaces definidas por la implementacion, por lo que el uso de estas funciones no es estandar. Sin embargo, los sistemas que en realidad son compatibles con POSIX no aceptarian estos nombres subrayados, y es mas portable simplemente desactivar la advertencia.  C  Aunque originalmente era un IDE para el lenguaje de programacion C, durante muchos a\u00f1os el soporte del compilador para ese lenguaje se ajustaba unicamente a la edicion original del estandar C, que data de 1989, pero no a la revision C99 del estandar. No habia planes para apoyar el C99 incluso en 2011, mas de una decada despues de su publicacion.  Visual C++ 2013 finalmente agrego soporte para varias caracteristicas de C99 en su modo C (incluidos inicializadores designados, literales compuestos y el tipo _Bool), aunque aun no estaba completo. Visual C++ 2015 mejoro aun mas la compatibilidad con C99, con compatibilidad total con la biblioteca estandar C99, excepto para las funciones que requieren funciones del lenguaje C99 que aun no son compatibles con el compilador.  La mayoria de los cambios de la revision C11 del estandar aun no son compatibles con Visual C++ 2017. Por ejemplo, las selecciones genericas a traves de la palabra clave _Generic no son compatibles con el compilador y dan como resultado un error de sintaxis.  El preprocesador se reviso en 2018, con C11 a la vista:  El soporte para _Generic se ha comprometido con MSVC a partir de febrero de 2020, aunque no esta claro cuando sera incluido.  En septiembre de 2020, Microsoft anuncio la compatibilidad con los estandares C11 y C17 en MSVC. ","snippet":"Microsoft Visual C++ (MSVC) es un compilador para los lenguajes de programacion C, C++, C++/CLI y C++/CX desarrollado por Microsoft. MSVC es software propietario. Originalmente era un producto indepen","enlaces_salientes":["Microsoft_Visual_C%2B%2B","Microsoft_Visual_C%2B%2B","Microsoft_Visual_C%2B%2B","Microsoft_Visual_Studio","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Microsoft","Febrero","1994","Licencia_de_software","Software_propietario","Lenguaje_de_programaci%C3%B3n","Ciclo_de_vida_del_lanzamiento_de_software","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","C%2B%2B/CX","Windows_1.0","POSIX","Anjuta","Dev-C%2B%2B","Eclipse_(software)","KDevelop","Ultimate%2B%2B","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Carbide.c%2B%2B","titulo":"Carbide.c++","contenido":"Carbide.c++ es una herramienta para el desarrollo de software en lenguaje C++ destinado a dispositivos que funcionan bajo  Symbian OS. Se usa tanto para desarrollar los telefonos que incorporan dicho OS como para las aplicaciones que ejecutan estos.  Esta formada por una familia de IDEs desarrollada por Nokia, basada en Eclipse, al que se han incorporado plug-ins para el desarrollo de  Symbian OS. Reemplazo a  CodeWarrior  como primer entorno de desarrollo para  Symbian OS.  Desde la version 2.0,  Carbide.c++ es gratuito y se ofrece en tres versiones (Developer, Professional, y OEM).\u200b   ","snippet":"Carbide.c++ es una herramienta para el desarrollo de software en lenguaje C++ destinado a dispositivos que funcionan bajo  Symbian OS. Se usa tanto para desarrollar los telefonos que incorporan dicho ","enlaces_salientes":["Carbide.c%2B%2B","Carbide.c%2B%2B","Carbide.c%2B%2B","Compilador","Desarrollador_de_software","Nokia","Licencia_de_software","GPL","Lenguaje_de_programaci%C3%B3n","C%2B%2B","C%2B%2B","Symbian_OS","Entorno_de_desarrollo_integrado","Nokia","Eclipse_(software)","Wayback_Machine","Control_de_autoridades"]}
{"url":"Visual_Studio_Code","titulo":"Visual Studio Code","contenido":"Visual Studio Code (tambien llamado VS Code) es un editor de codigo fuente desarrollado por Microsoft para Windows, Linux, macOS y Web. Incluye soporte para la depuracion, control integrado de Git, resaltado de sintaxis, finalizacion inteligente de codigo, fragmentos y refactorizacion de codigo. Tambien es personalizable, por lo que los usuarios pueden cambiar el tema del editor, los atajos de teclado y las preferencias. Es gratuito y de codigo abierto,\u200b\u200b aunque la descarga oficial esta bajo software privativo e incluye caracteristicas personalizadas por Microsoft.\u200b  Visual Studio Code se basa en Electron, un framework que se utiliza para implementar Chromium y Node.js como aplicaciones para escritorio, que se ejecuta en el motor de dise\u00f1o Blink. Aunque utiliza el framework Electron, el software no usa Atom y en su lugar emplea el mismo componente editor (Monaco) utilizado en Visual Studio Team Services (anteriormente llamado Visual Studio Online).\u200b  Visual Studio Code fue anunciado el 29 de abril de 2015 por Microsoft en la conferencia Build de 2015. Una version preliminar se lanzo poco despues.\u200b  El 18 de noviembre de 2015, Visual Studio Code fue lanzado bajo la licencia MIT y su codigo fuente fue publicado en GitHub. Tambien fue anunciada una nueva capacidad para agregar extensiones.\u200b  El 14 de abril de 2016, Visual Studio Code graduo la etapa de vista previa publica y se lanzo a la web.\u200b  Visual Studio Code es un editor de codigo fuente construido sobre el framework Electron. Es compatible con varios lenguajes de programacion y un conjunto de caracteristicas que pueden o no estar disponibles para un lenguaje dado, como se muestra en la siguiente tabla. Muchas de las caracteristicas de Visual Studio Code no estan expuestas a traves de los menus o la interfaz de usuario. Mas bien, se accede a traves de la paleta de comandos o a traves de archivos .json (por ejemplo, preferencias del usuario). La paleta de comandos es una interfaz de linea de comandos. Sin embargo, desaparece si el usuario hace clic fuera de el o presiona una combinacion de teclas en el teclado para interactuar con algo que esta fuera de el. Esto tambien se aplica a los comandos que requieren mucho tiempo. Cuando esto sucede, el comando en progreso se cancela.  En el rol de editor de codigo fuente, Visual Studio Code permite cambiar la pagina de codigos en la que se guarda el documento activo, el caracter que identifica el salto de linea (una opcion entre LF y CRLF) y el lenguaje de programacion del documento activo.  Recientemente, se lanzo al publico la version web del editor bajo el dominio vscode.dev.\u200b A diferencia de la version de escritorio, esta no hace uso de Electron, no posee compatibilidades con ciertos complementos y no se puede acceder al terminal integrado que posee.  Visual Studio Code se puede extender a traves de complementos, disponible a traves de un repositorio central. Esto incluye adiciones al editor y soporte de lenguajes.\u200b\u200b Una caracteristica notable es la capacidad de crear extensiones que analizan codigo, como linters y herramientas para analisis estatico, utilizando el Protocolo de Servidor de Idioma.\u200b  Visual Studio Code recopila datos de uso y los envia a Microsoft, aunque esto puede ser deshabilitado.\u200b Ademas, debido a la naturaleza open-source de la aplicacion se puede ver exactamente que datos se recopilan.\u200b Los datos se comparten entre las filiales y subsidiarias controladas por Microsoft y con las autoridades conforme a la declaracion de privacidad.\u200b ","snippet":"Visual Studio Code (tambien llamado VS Code) es un editor de codigo fuente desarrollado por Microsoft para Windows, Linux, macOS y Web. Incluye soporte para la depuracion, control integrado de Git, re","enlaces_salientes":["Visual_Studio_Code","Visual_Studio_Code","Visual_Studio_Code","Microsoft_Visual_Studio","Editor_de_c%C3%B3digo_fuente","Desarrollador_de_software","Microsoft","Licencia_de_software","C%C3%B3digo_fuente","Licencia_MIT","Freeware","Idioma","Multiling%C3%BCe","Lenguaje_de_programaci%C3%B3n","TypeScript","JavaScript","CSS","Plataforma_(inform%C3%A1tica)","X86","X86-64","ARM","Ciclo_de_vida_del_lanzamiento_de_software","Editor_de_c%C3%B3digo_fuente","Microsoft","Microsoft_Windows","Linux","MacOS","World_Wide_Web","Depuraci%C3%B3n_de_programas","Git","Snippet","C%C3%B3digo_abierto","Software_privativo","Microsoft","Electron_(software)","Chromium_(navegador)","Node.js","Atom_(editor_de_textos)","Licencia_MIT","GitHub","Electron_(software)","Resaltado_de_sintaxis","Archivo_batch","C_(lenguaje_de_programaci%C3%B3n)","C_Sharp","C%2B%2B","CSS","Clojure","CoffeeScript","Diff","Docker_(software)","F_Sharp","Fortran","Go_(lenguaje_de_programaci%C3%B3n)","Groovy_(lenguaje_de_programaci%C3%B3n)","HLSL","HTML","INI_(extensi%C3%B3n_de_archivo)","JSON","Java_(lenguaje_de_programaci%C3%B3n)","JavaScript","LESS_(lenguaje_de_hojas_de_estilo)","Lua","Makefile","Markdown","Objective-C","Objective-C%2B%2B","PHP","Perl","Raku_(lenguaje_de_programaci%C3%B3n)","PowerShell","Python","R_(lenguaje_de_programaci%C3%B3n)","Ruby","Rust_(lenguaje_de_programaci%C3%B3n)","SQL","Sass","Swift_(lenguaje_de_programaci%C3%B3n)","TypeScript","Visual_Basic","XML","XQuery","XSL","YAML","Snippet","Groovy_(lenguaje_de_programaci%C3%B3n)","Markdown","Nim","PHP","Swift_(lenguaje_de_programaci%C3%B3n)","CSS","HTML","JavaScript","JSON","LESS_(lenguaje_de_hojas_de_estilo)","Sass","TypeScript","Refactorizaci%C3%B3n","C_Sharp","TypeScript","Depuraci%C3%B3n_de_programas","JavaScript","TypeScript","Node.js","C_Sharp","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Microsoft_Windows","Linux","MacOS","TechCrunch","Microsoft","Ars_Technica","Cond%C3%A9_Nast","Microsoft","Control_de_autoridades","Open_Hub"]}
{"url":"Visual_Studio","titulo":"Microsoft Visual Studio","contenido":"Microsoft Visual Studio es un entorno de desarrollo integrado (IDE, por sus siglas en ingles) para Windows y macOS. Es compatible con multiples lenguajes de programacion, tales como C++, C#, Visual Basic .NET, F#, Java, Python, Ruby y PHP, al igual que entornos de desarrollo web, como ASP.NET MVC, Django, etc., a lo cual hay que sumarle las nuevas capacidades en linea bajo Windows Azure en forma del editor Monaco.  Visual Studio permite a los desarrolladores crear sitios y aplicaciones web, asi como servicios web en cualquier entorno compatible con la plataforma .NET (a partir de la version .NET 2002). Asi, se pueden crear aplicaciones que se comuniquen entre estaciones de trabajo, paginas web, dispositivos moviles, dispositivos embebidos y videoconsolas, entre otros.  A partir de la version 2005, Microsoft lanzo gratuitamente las ediciones Express, que son versiones basicas separadas por lenguajes de programacion o plataforma orientadas a estudiantes y programadores aficionados. Estas ediciones son similares a las ediciones comerciales pero carecen de ciertas caracteristicas avanzadas de integracion. Dichas ediciones son:  Microsoft tambien publico de forma gratuita una version reducida de Microsoft SQL Server llamada SQL Server Express Edition, cuyas unicas limitaciones son que no soporta bases de datos superiores a 4 GB de tama\u00f1o, se ejecuta en un procesador y no cuenta con el Agente de SQL Server.  En el pasado se incluyeron los siguientes productos:  Visual Studio 6.0 es la segunda version de la suite de desarrollo de Microsoft. Fue lanzada en 1998 y fue la ultima version en ejecutarse en la plataforma Win9x.\u200b Los numeros de version de todas las partes constituyentes pasaron a 6.0, incluyendo Visual J++ y Visual InterDev, que se encontraban en las versiones 1.1 y 1.0 respectivamente. Esta version fue la base para el sistema de desarrollo de Microsoft por los siguientes cuatro a\u00f1os, en los que Microsoft cambio su estrategia de desarrollo al .NET Framework.  Visual Studio 6.0 fue la ultima version en que Visual Basic se incluia de la forma en que se conocia hasta entonces; en versiones posteriores se incorporaria una version muy diferente del lenguaje con muchas mejoras, fruto de la plataforma .NET. Esta tambien fue la ultima version en incluir Visual J++, que proporcionaba extensiones de la plataforma Java, lo que lo hacia incompatible con la version de Sun Microsystems. Esto acarreo problemas legales a Microsoft, que se resolvieron mediante un acuerdo en el que Microsoft deja de comercializar herramientas de programacion que utilizaran la maquina virtual Java.  Aunque el objetivo a largo plazo de Microsoft era unificar todas las herramientas en un unico entorno, en esta version solamente se a\u00f1adio un entorno a Visual Studio 5.0: Visual J++ y Visual InterDev se separaron del entorno de Visual C++, pero Visual FoxPro y Visual Basic mantuvieron su entorno especifico.  En esta version se produjo un cambio sustancial, puesto que supuso la introduccion de la plataforma .NET de Microsoft. .NET es una plataforma de ejecucion intermedia multilenguaje, de forma que los programas desarrollados en .NET no se compilan en lenguaje maquina, sino en un lenguaje intermedio (CIL - Common Intermediate Language) denominado Microsoft Intermediate Language (MSIL). En una aplicacion MSIL, el codigo no se convierte a lenguaje maquina hasta que se ejecuta, de manera que el codigo puede ser independiente de la plataforma (al menos de aquellas soportadas actualmente por .NET). Las plataformas han de tener una implementacion de Infraestructura de Lenguaje Comun (CLI) para poder ejecutar programas MSIL. Actualmente se pueden ejecutar programas MSIL en Linux y Mac OS X usando implementaciones de .NET que no son de Microsoft, tales como Mono y DotGNU.  Visual Studio .NET 2002 supuso tambien la introduccion del lenguaje C#, un lenguaje nuevo dise\u00f1ado especificamente para la plataforma .NET con base en C++ y Java. Se presento tambien el lenguaje J# (sucesor de J++), el cual, en lugar de ejecutarse en una maquina virtual Java, se ejecuta unicamente en el Framework .NET. En .NET, lenguaje Visual Basic fue remodelado completamente y evoluciono para adaptarse a las nuevas caracteristicas de la plataforma .NET, haciendolo mucho mas versatil y dotandolo con muchas caracteristicas. Algo similar se llevo a cabo con C++, a\u00f1adiendo extensiones al lenguaje llamadas Managed Extensions for C++, con el fin de que los programadores pudieran crear programas en .NET. Todos los lenguajes disponibles se unifican en un unico entorno. La interfaz mejora notablemente en esta version, siendo mas limpia y personalizable. Por otra parte, Visual FoxPro pasa a comercializarse por separado.  Visual Studio .NET puede usarse para crear programas basados en Windows (usando Windows Forms en vez de COM), aplicaciones y sitios web (ASP.NET y servicios web), al igual que dispositivos moviles (usando el .NET Compact Framework).  Esta version requiere un sistema operativo basado en NT. La version interna de Visual Studio .NET es la 7.0.  Visual Studio .NET 2003 supone una actualizacion menor de Visual Studio .NET. Se actualiza el .NET Framework a la version 1.1. Tambien se a\u00f1ade soporte con el fin de escribir aplicaciones para determinados dispositivos moviles, ya sea con ASP.NET o con el .NET Compact Framework. Ademas, el compilador de Visual C++ se mejora para cumplir con mas estandares: el Visual C++ Toolkit 2003.  Visual Studio 2003 se lanza en cuatro ediciones: Academic, Professional, Enterprise Developer y Enterprise Architect. La edicion Enterprise Architect incluia una implementacion de la tecnologia de modelado Microsoft Visio, que se centraba en la creacion de representaciones visuales de la arquitectura de la aplicacion basadas en UML. Tambien se introdujo \"Enterprise Templates\", para ayudar a grandes equipos de trabajo a estandarizar estilos de programacion e impulsar politicas de uso de componentes y asignacion de propiedades.  Microsoft lanzo el Service Pack 1 para Visual Studio 2003 el 13 de septiembre de 2006.  La version interna de Visual Studio .NET 2003 es la 7.1, aunque el formato del archivo que emplea es el de la 8.0.  Es compatible solo con Windows XP, Windows Server 2003 o versiones anteriores.  Visual Studio 2005 se empezo a comercializar a traves de Internet a partir del 4 de octubre de 2005, y la version en ingles llego a los comercios a finales del mes de octubre. La version en castellano no vio la luz hasta el 4 de febrero de 2006. Microsoft elimino el .NET de su nombre, pero eso no indica que sea diferente o rompedor respecto a la plataforma .NET, cuya version 2.0 se incluyo en esta.  La actualizacion mas importante que recibieron los lenguajes de programacion fue la inclusion de tipos genericos, similares en muchos aspectos a las plantillas de C++. El objetivo de esta actualizacion es conseguir encontrar muchos mas errores en la compilacion en vez de en la ejecucion, incitando a usar comprobaciones estrictas en areas donde antes no era posible. C++ tiene una actualizacion similar con la adicion de C++/CLI como sustituto de C# manejado.  Se incluye un dise\u00f1ador de implantacion, que permite que el dise\u00f1o de la aplicacion sea validado antes de su implantacion, asi como un entorno para publicacion web y pruebas de carga para comprobar el rendimiento de los programas bajo varias condiciones de carga.  Visual Studio 2005 tambien a\u00f1ade soporte para arquitecturas de 64 bits. Aunque el entorno de desarrollo sigue siendo una aplicacion de 32 bits, Visual C++ 2005 soporta compilacion para x86-64 (AMD64, Intel 64) e IA-64 (Itanium). El SDK incluye compiladores de 64 bits, asi como versiones de 64 bits de las librerias.  Visual Studio 2005 tiene varias ediciones radicalmente distintas entre si: Express, Standard, Professional, Tools for Office y cinco ediciones Visual Studio Team System. Estas ultimas se proporcionaban conjuntamente con suscripciones a MSDN cubriendo los cuatro principales roles de la programacion: Architects, Software Developers, Testers y Database Professionals. La funcionalidad combinada de las cuatro ediciones, Team System, se ofrecia como la edicion Team Suite. Por otra parte, Tools for the Microsoft Office System esta dise\u00f1ada para extender la funcionalidad a Microsoft Office.  Las ediciones Express se han dise\u00f1ado para principiantes, aficionados y peque\u00f1os negocios, todas disponibles gratuitamente a traves de la pagina de Microsoft.\u200b Se incluye una edicion independiente para cada lenguaje: Visual Basic, Visual C++, Visual C#, Visual J# para programacion .NET en Windows y Visual Web Developer para la creacion de sitios web ASP.NET. Las ediciones Express carecen de algunas herramientas avanzadas de programacion, asi como de opciones de extensibilidad.  El 14 de diciembre de 2006, tambien se lanzo el Service Pack 1 para Visual Studio 2005.  La version interna de Visual Studio 2005 es la 8.0, mientras que el formato del archivo que emplea es el de la 9.0.  Permite trabajar con los frameworks:  El IDE se redise\u00f1a para una mejor legibilidad. Se han eliminado gradientes y lineas innecesarias para simplificar su uso.  Las ventanas de documentos tales como el editor de codigo y la ventana de la vista dise\u00f1o ahora pueden colocarse fuera de la ventana IDE. Por ejemplo, puede arrastrar el editor de codigo en el IDE de modo que se puede ver la ventana de la vista de dise\u00f1o al lado.  Permite trabajar con los frameworks:  Fue la primera revision de Visual Studio en incluir una version Community, que basicamente ofrece las mismas capacidades que la version Professional pero limitando su uso a empresas de peque\u00f1o tama\u00f1o, desarrolladores de software libre y estudiantes. La gran ventaja de esta version de Visual Studio es que es gratuita.  Permite trabajar con los frameworks:  Permite trabajar con los frameworks:  Permite trabajar con los frameworks:  Permite trabajar con los frameworks:  Permite trabajar con los frameworks:  Versiones de Windows compatibles:  Versiones de Windows Server compatibles: ","snippet":"Microsoft Visual Studio es un entorno de desarrollo integrado (IDE, por sus siglas en ingles) para Windows y macOS. Es compatible con multiples lenguajes de programacion, tales como C++, C#, Visual Ba","enlaces_salientes":["Microsoft_Visual_Studio","Microsoft_Visual_Studio","Microsoft_Visual_Studio","Visual_Studio_Code","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Microsoft","Licencia_de_software","Software_propietario","Idioma","Lenguaje_de_programaci%C3%B3n","C%2B%2B","C_Sharp","Plataforma_(inform%C3%A1tica)","X86-64","Itanium","Ciclo_de_vida_del_lanzamiento_de_software","Entorno_de_desarrollo_integrado","Windows","MacOS","Lenguaje_de_programaci%C3%B3n","Visual_C%2B%2B","C_Sharp","Visual_Basic_.NET","F_Sharp","Java_(lenguaje_de_programaci%C3%B3n)","Python","Ruby","PHP","ASP.NET","Windows_Azure","Sitio_web","Aplicaci%C3%B3n_web","Microsoft_.NET","Microsoft_SQL_Server","Visual_InterDev","Visual_J%2B%2B","Visual_FoxPro","Visual_SourceSafe","Microsoft_Visual_Studio_6","Windows_9x",".NET_Framework","Sun_Microsystems","Lenguaje_m%C3%A1quina","Common_Intermediate_Language","Microsoft_Intermediate_Language","Infraestructura_de_Lenguaje_Com%C3%BAn","GNU/Linux","Mac_OS_X","Proyecto_Mono","DotGNU","Windows_Forms","Component_Object_Model","Servicios_web",".NET_Compact_Framework","Windows_NT","Microsoft_Visio","UML","Internet","AMD64","Intel_64","IA-64","Itanium","SDK","MSDN","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","BIBSYS"]}
{"url":"Dev-C%2B%2B","titulo":"Dev-C++","contenido":"Dev-C++ es un entorno de desarrollo integrado (IDE) para programar en lenguaje C/C++. Usa MinGW, que es una version de GCC (GNU Compiler Collection) como su compilador. Dev-C++ puede ademas ser usado en combinacion con Cygwin y cualquier compilador basado en GCC.  El Entorno esta desarrollado en el lenguaje Delphi de Borland. Tiene una pagina de paquetes opcionales para instalar, con diferentes bibliotecas de codigo abierto.  Hay un Bjarne Stroustrup (enlace roto disponible en Internet Archive; vease el historial, la primera version y la ultima). de desarrollo que ha tomado el IDE Dev-C++ y le ha agregado nuevas caracteristicas tales como ayuda para los recopiladores multiples y un dise\u00f1ador del RAD para los usos de los wxWidgets. Este IDE se puede encontrar bajo el nombre de wxDev-C++. No se ha actualizado desde octubre de 2011.  En septiembre de 2011, una version no oficial de Dev-C++, la 4.9.9.3, fue liberada por un desarrollador independiente,\u200b incluyendo el reciente compilador GCC 4.5.2, librerias SDK de Windows (Win32 y D3D), correccion de varios bugs, y mejora en estabilidad. En diciembre de 2011, luego de cinco a\u00f1os de estar oficialmente en una version beta, la version 5.0 fue liberada por este desarrollador (entrada en su blog). Esta version tiene su pagina por separado en SourceForge\u200b desde la version 5.0.0.5, debido a que el antiguo desarrollador no ha respondido a las peticiones de combinar el proyecto.  La ultima version disponible del IDE es del dia 27 de abril de 2015, Dev-C++ 5.11, (Dev-C++ Blog) con los siguientes cambios respecto a la version 5.10:  - Se corrigio el fallo relacionado con hacer doble clic en un error del compilador cuando se hacia una seleccion.  - Se actualizo el compilador predeterminado a TDM-GCC 4.9.2.  - Velocidad de arranque mejorada.  - Arreglado el boton Abort Compilation que ya no funciona.  - Se ha corregido el bloqueo en TCppParser.  - Se corrigieron algunos errores tipograficos en la traduccion al ingles.  - Actualizacion de la traduccion al catalan.  - Actualizada la traduccion al checo.  - Se corrigieron algunos problemas en el proceso de compilacion del propio Dev-C ++.   ","snippet":"Dev-C++ es un entorno de desarrollo integrado (IDE) para programar en lenguaje C/C++. Usa MinGW, que es una version de GCC (GNU Compiler Collection) como su compilador. Dev-C++ puede ademas ser usado ","enlaces_salientes":["Dev-C%2B%2B","Dev-C%2B%2B","Dev-C%2B%2B","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Embarcadero_Technologies","Licencia_de_software","Licencia_p%C3%BAblica_general_de_GNU","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Object_Pascal","Plataforma_(inform%C3%A1tica)","Microsoft_Windows","Ciclo_de_vida_del_lanzamiento_de_software","Entorno_de_desarrollo_integrado","Lenguaje_de_programaci%C3%B3n_C","C%2B%2B","MinGW","GCC","Compilador","Cygwin","GCC","Embarcadero_Delphi","Borland","C%C3%B3digo_abierto","Bjarne_Stroustrup","Internet_Archive","WxWidgets","WxDev-C%2B%2B","Doble_clic","WxDev-C%2B%2B","SourceForge","Control_de_autoridades"]}
{"url":"WxDev-C%2B%2B","titulo":"wxDev-C++","contenido":"wxDev-C++ es un entorno de desarrollo integrado libre basado en el popular Dev-C++ para C y C++.  Hay varias caracteristicas nuevas no encontradas en el Dev-C++ original. Uno de ellas es un dise\u00f1ador RAD visual que trabaja como el C++Builder para crear aplicaciones wxWidgets y agrega soporte para compiladores de Microsoft. y de GNU (MinGW). La version 7.4.2 fue liberada en junio de 2012. ","snippet":"wxDev-C++ es un entorno de desarrollo integrado libre basado en el popular Dev-C++ para C y C++.  Hay varias caracteristicas nuevas no encontradas en el Dev-C++ original. Uno de ellas es un dise\u00f1ador ","enlaces_salientes":["WxDev-C%2B%2B","WxDev-C%2B%2B","WxDev-C%2B%2B","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Licencia_de_software","Licencia_p%C3%BAblica_general_de_GNU","Lenguaje_de_programaci%C3%B3n","Embarcadero_Delphi","Plataforma_(inform%C3%A1tica)","Microsoft_Windows","Interfaz_gr%C3%A1fica_de_usuario","WxWidgets","Ciclo_de_vida_del_lanzamiento_de_software","Entorno_de_desarrollo_integrado","Software_libre","Dev-C%2B%2B","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","RAD","C%2B%2BBuilder","WxWidgets","Compilador","Microsoft","Arrastrar_y_soltar","Depurador","GDB","CVS","Pila_(inform%C3%A1tica)","Variable_(programaci%C3%B3n)","Desensamblado","Registro_(hardware)","CPU","Editor_de_texto","Resaltado_de_sintaxis","CVS","MinGW","Visual_C%2B%2B","Biblioteca_(programaci%C3%B3n)","DLL","Anjuta","Dev-C%2B%2B","DJGPP","Eclipse_(software)","KDevelop","Microsoft_Visual_C%2B%2B","Ultimate%2B%2B","SourceForge","Control_de_autoridades"]}
{"url":"Watcom#Open_Watcom","titulo":"Watcom","contenido":"Watcom International Corporation fue una empresa canadiense desarrolladora de software fundada en 1981 en la Universidad de Waterloo (Waterloo, Ontario, Canada) por tres exempleados del Computer Systems Group: Fred Crigger, Ian McPhee, and Jack Schueler. Watcom desarrollo una serie de herramientas, entre ellas el reconocido compilador Watcom C Compiler de 1988.  La empresa fue comprada por Powersoft en 1994, y esta a su vez por Sybase en 1995. Posteriormente Sybase fue comprada por SAP en mayo de 2010.  Lanzado en 1988 para entorno MS-DOS fue uno de los compiladores mas apreciados para dicho sistema operativo. Soportaba modo protegido 386 e incluia el extensor DOS/4GW.  Algunos de los mas celebres videojuegos de disparos en primera persona para MS-DOS de comienzos/mediados de los a\u00f1os 1990 fueron desarrollados con Watcom C Compiler, incluyendo Doom, Descent y Duke Nukem 3D.  El C Compiler paso a llamarse Watcom C/C++ Compiler en 1993 al incluir soporte para el lenguaje C++. Se publicaron versiones para Windows (con soporte Win32) y OS/2, que incluian su IDE en 1994.  La version 11 publicada en 1997 (y sus sucesivos parches) fue la ultima version comercial.  Ademas de los compiladores y entornos de desarrollo integrados para C/C++, Watcom tambien desarrollo este tipo de herramientas para otros lenguajes, incluyendo BASIC, PASCAL, COBOL, FORTRAN y REXX, para varios sistemas operativos.  En el a\u00f1o 2000 Sybase libero el codigo fuente del C/C++ Compiler y FORTRAN Compiler, creando asi, con la ayuda de SciTech Software el proyecto OpenWatcom cuya version 1.0 fue lanzada en 2003.  El OpenWatcom C/C++ y OpenWatcom FORTRAN pueden descargarse libremente de su sitio web. Existe una edicion para Microsoft Windows y otra para OS/2, asi como una version no oficial para Linux.  La ultima version estable de OpenWatcom es la 1.9 de junio de 2010.  Aparte de los compiladores Watcom tambien desarrollo un sistema gestor de bases de datos llamado Watcom SQL, lanzado en 1992. Actualmente es desarrollado por iAnywhere Solutions, filial de Sybase con el nombre de Adaptive Server Anywhere. ","snippet":"Watcom International Corporation fue una empresa canadiense desarrolladora de software fundada en 1981 en la Universidad de Waterloo (Waterloo, Ontario, Canada) por tres exempleados del Computer Syste","enlaces_salientes":["Watcom","Watcom","Watcom","Canad%C3%A1","Software","Universidad_de_Waterloo","Waterloo_(Ontario)","Ontario","Canad%C3%A1","Compilador","1994","Sybase","1995","Sybase","SAP","MS-DOS","Compilador","Videojuego_de_disparos_en_primera_persona","Doom","Descent_(videojuego)","Duke_Nukem_3D","1993","C%2B%2B","Win32","OS/2","Entorno_de_desarrollo_integrado","1994","Entorno_de_desarrollo_integrado","BASIC","PASCAL","COBOL","FORTRAN","REXX","2000","C%C3%B3digo_fuente","2003","Microsoft_Windows","GNU/Linux","2010","Bases_de_datos","1992","Adaptive_Server_Anywhere","Control_de_autoridades"]}
{"url":"CodeLite","titulo":"CodeLite","contenido":"CodeLite es un entorno de desarrollo integrado libre y multiplataforma para el lenguaje de programacion C/C++. CodeLite es distribuido bajo los terminos de la licencia GNU General Public License.  En agosto de 2006, Eran Ifrah, Creador de CodeLite, comenzo un peque\u00f1o proyecto llamado \"CodeLite\". Su idea era crear una libreria de Auto-completado basandose en ctags, SQLite (de ahi, CodeLite) y Yacc un parser que puede ser usado por otros IDEs.  Se desarrollo LiteEditor, una aplicacion para demostrar las funcionalidades de CodeLite. LiteEditor se convirtio con el tiempo en un eficiente entorno para programacion y asi nacio CodeLite.  CodeLite es una IDE multiplataforma libre y de codigo abierto para los lenguajes C/C++ que usa wxWidgets para su interfaz grafica. Para cumplir con el espiritu de codigo abierto de CodeLite, se compila y depura usando solo herramientas libres (MinGW y GDB).  CodeLite ofrece gestion de proyectos (espacios de trabajo/proyectos), completacion de codigo, navegacion por los ficheros fuente, resaltado de syntaxis, integracion con Subversion, Cscope y UnitTest++, un debugger interactivo montado sobre gdb y un editor de codigo potente, basado en Scintilla  CodeLite se distribuye bajo licencia la licencia GNU General Public License v2 o posterior. ","snippet":"CodeLite es un entorno de desarrollo integrado libre y multiplataforma para el lenguaje de programacion C/C++. CodeLite es distribuido bajo los terminos de la licencia GNU General Public License.  En ","enlaces_salientes":["CodeLite","CodeLite","CodeLite","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Licencia_de_software","GNU_General_Public_License","Lenguaje_de_programaci%C3%B3n","C%2B%2B","WxWidgets","Interfaz_gr%C3%A1fica_de_usuario","WxWidgets","Ciclo_de_vida_del_lanzamiento_de_software","Entorno_de_desarrollo_integrado","Software_libre","Multiplataforma","Lenguaje_de_programaci%C3%B3n_C","C%2B%2B","GNU_General_Public_License","SQLite","Yacc","Parser","Entorno_de_desarrollo_integrado","WxWidgets","MinGW","GDB","Subversion","GNU_Debugger","Scintilla","GNU_General_Public_License","Software_libre","Scintilla","SciTE","WxWidgets","Control_de_autoridades","Open_Hub"]}
{"url":"Geany","titulo":"Geany","contenido":"Geany (IPA:\u0292e\u02d0ni\u02d0\u200b) es un editor de texto peque\u00f1o y ligero de interfaz grafica de usuario (GUI) basado en Scintilla y bibliotecas graficas GTK, Incluye caracteristicas basica de IDE (Entorno de desarrollo integrado). Esta dise\u00f1ado para tener tiempos de carga reducidos, con poca dependencia en paquetes o bibliotecas externas en Linux. Entre la lista de lenguajes de programacion y lenguajes de marcado soportados por Geany se encuentran C, C++, C#, Java, JavaScript, PHP, HTML, LaTeX, , CSS, Python, Perl, Ruby, Pascal, Haskell, Erlang, Vala y muchos otros.  En contraste con otros editores de texto tradicionales basados en UNIX como Emacs o Vim, Geany se asemeja a editores de programacion comunes en Microsoft Windows como Notepad++, que tambien usa Scintilla.  Geany esta disponible para distintos sistemas operativos, como GNU/Linux, Mac OS X, BSD, Solaris y Microsoft Windows. Es distribuido como software libre bajo la Licencia Publica General de GNU.  Algunas de ellas son: ","snippet":"Geany (IPA:\u0292e\u02d0ni\u02d0\u200b) es un editor de texto peque\u00f1o y ligero de interfaz grafica de usuario (GUI) basado en Scintilla y bibliotecas graficas GTK, Incluye caracteristicas basica de IDE (Entorno de desarr","enlaces_salientes":["Geany","Geany","Geany","Ubuntu","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Licencia_de_software","GNU_General_Public_License","Idioma","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Interfaz_gr%C3%A1fica_de_usuario","GTK","Ciclo_de_vida_del_lanzamiento_de_software","19_de_octubre","2023","International_Phonetic_Alphabet","Editor_de_texto","Interfaz_gr%C3%A1fica_de_usuario","Scintilla","GTK","Entorno_de_desarrollo_integrado","Sistema_de_gesti%C3%B3n_de_paquetes","Biblioteca_(inform%C3%A1tica)","Lenguaje_de_programaci%C3%B3n","Lenguaje_de_marcado","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","C_sharp","Java_(lenguaje_de_programaci%C3%B3n)","JavaScript","PHP","HTML","LaTeX","Hoja_de_estilos_en_cascada","Python","Perl","Ruby","Pascal_(lenguaje_de_programaci%C3%B3n)","Haskell","Erlang","Vala_(lenguaje_de_programaci%C3%B3n)","Emacs","Vim","Microsoft_Windows","Notepad%2B%2B","GNU/Linux","Mac_OS_X","Berkeley_Software_Distribution","Solaris_(sistema_operativo)","Microsoft_Windows","Software_libre","GNU_General_Public_License","XML","HTML","C_(lenguaje_de_programaci%C3%B3n)","Java_(lenguaje_de_programaci%C3%B3n)","PHP","Python","Perl","Pascal_(lenguaje_de_programaci%C3%B3n)","TeX","Emulador_de_terminal","Control_de_autoridades","Open_Hub"]}
{"url":"Turbo_C","titulo":"Turbo C","contenido":"Turbo C era un entorno de desarrollo integrado y compilador desarrollado por Borland para programar en lenguaje C.  Su primera version es de 1987, a la que siguieron las versiones 1.5 y 2.0, de 1989. Fue el compilador mas popular para desarrollar en C en entornos MS-DOS. Se le considera el primer IDE para C disponible para dicha plataforma.  Fue sustituido por Turbo C++ en 1990. La siguiente version fue llamada Borland C++, y en la version 3.0 el nombre Turbo C++ fue retomado. Tras el Borland C++ llego el C++Builder.  Ambos productos, junto a los otros IDEs pero de ninguna manera el  de Borland, pasaron a la nueva filial, CodeGear (filial de Embarcadero Technologies). En noviembre de 2006 se relanzo el compilador Turbo C y las versiones para MS-DOS del Turbo C++ como freeware.\u200b ","snippet":"Turbo C era un entorno de desarrollo integrado y compilador desarrollado por Borland para programar en lenguaje C.  Su primera version es de 1987, a la que siguieron las versiones 1.5 y 2.0, de 1989. ","enlaces_salientes":["Turbo_C","Turbo_C","Turbo_C","Implementaci%C3%B3n_de_lenguaje_de_programaci%C3%B3n","Desarrollador_de_software","Borland","1987","Licencia_de_software","Freeware","C%2B%2BBuilder","Idioma","Idioma_ingl%C3%A9s","Archivo_COM","Entorno_de_desarrollo_integrado","Compilador","Borland","Lenguaje_de_programaci%C3%B3n_C","MS-DOS","C%2B%2BBuilder","Atari_ST","Entorno_de_desarrollo_integrado","CodeGear","Embarcadero_Technologies","Freeware","Wayback_Machine","Wayback_Machine","Wayback_Machine","Wayback_Machine","Control_de_autoridades"]}
{"url":"C%2B%2BBuilder","titulo":"C++Builder","contenido":"C++Builder es un entorno de desarrollo rapido de aplicaciones en lenguaje C++ para Windows inicialmente propiedad de la empresa Borland, y actualmente de la empresa Embarcadero Technologies, quien compro de Borland la division Codegear encargada del producto. Codegear inicialmente se denominaba DTG='Developer Tools Group' hasta que adquirio el nombre oficial CodeGear previo a la venta.  C++Builder combina la biblioteca Visual Component Library y el IDE escrito en Delphi con un compilador de C++. El ciclo de lanzamiento es anual. Incluye herramientas que permiten desarrollo visual de arrastrar-y-soltar componentes sobre la aplicacion e incorpora constructor de interfaz grafica WYSIWYG en su IDE.  Lanzado en 1997, despues de Delphi, y con un entorno similar a este. Muchos componentes de Delphi pueden utilizarse en C++. En 1999 Borland anuncio la version 4.0; poco tiempo despues anuncio que Borland C++ seria discontinuado en favor del C++Builder.  En 2000 salio publicada la version 5.0 y en 2002 la version 6.0. Para aquella epoca las versiones de C++Builder salian un a\u00f1o o un poco mas de su contraparte Delphi.  En 2003 Borland publica C++BuilderX (CBX), que usaba el entorno de desarrollo (Galileo) de un producto hermano: JBuilder y tenia poca similitud con C++Builder o Delphi, pues proponia como framework a wxWindows (en lugar de OWL, OWLNext o VCL). Este producto estaba dirigido a grandes organizaciones y no tuvo mucha aceptacion. Al final del 2004 Borland anuncio que continuaria desarrollando el C++Builder e incluirlo junto con la suite de desarrollo de Delphi development suite, abandonando el C++BuilderX.  Cerca de un a\u00f1o despues del anuncio Borland publico 'Borland Developer Studio 2006' que incluia el Borland C++Builder 2006 que proveia un administrador de configuracion mejorado y varias correcciones. Borland Developer Studio 2006 es un paquete que incluida Delphi, C++Builder, y C#Builder.  En 2006 Borland's Developer Tools Group, la division encargada del C++Builder, fue transformada en una organizacion independiente (subsidiaria) denominada CodeGear.  En 2007 Borland publico C++Builder 2007, proveyendo completo soporte para la API de Microsoft Vista, soporte mejorado a ANSI C++, y hasta 500% mejor rendimiento en el proceso de compilacion desde el IDE, soporte para MSBuild, arquitectura de base de datos DBX4, \"VCL for the Web\" que permite el desarrollo visual de aplicaciones AJAX, y la biblioteca OWLNext. El soporte de la API de Microsoft Vista incluye aplicaciones 'temadas' y soporte a la interfaz Aero y Vista Desktop. CodeGear RAD Studio 2007 incorporo C++Builder 2007 y Delphi. Tambien en 2007 Borland revivio la linea \"Turbo\" y lanzo dos ediciones \"Turbo\" de C++Builder: Turbo C++ Professional, y Turbo C++ Explorer (no disponible actualmente de CodeGear), basado en Borland C++Builder 2006.  En 2008 CodeGear fue adquirida por Embarcadero Technologies, quien continuo el desarrollo. C++Builder 2009 fue publicado en agosto del 2008, las caracteristicas agregadas mas importantes fueron el soporte completo a Unicode tanto en la VCL como en la RTL, adopcion anticipada del estandar C++0x, soporte al ITE (Entorno de Traduccion Integrado), componentes Ribbon y la inclusion de la biblioteca Boost.  C++Builder 2010 fue publicado en agosto del 2009, fue el primer entorno de desarrollo que incluyo soporte a Windows 7, permitiendo desarrollar aplicaciones que soportan la interfaz 'Multitouch'. CodeGear ha anunciado sus planes de desarrollo que incluirian soporte a OSX y Linux.  C++Builder ha usado los siguientes a lo largo de su desarrollo: ","snippet":"C++Builder es un entorno de desarrollo rapido de aplicaciones en lenguaje C++ para Windows inicialmente propiedad de la empresa Borland, y actualmente de la empresa Embarcadero Technologies, quien com","enlaces_salientes":["C%2B%2BBuilder","C%2B%2BBuilder","C%2B%2BBuilder","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Borland","Embarcadero_Technologies","Licencia_de_software","Software_propietario","Ciclo_de_vida_del_lanzamiento_de_software","Desarrollo_r%C3%A1pido_de_aplicaciones","Borland","Embarcadero_Technologies","CodeGear","Biblioteca_(inform%C3%A1tica)","Visual_Component_Library","Compilador","Constructor_de_interfaz_gr%C3%A1fica","WYSIWYG","JBuilder","Biblioteca_(inform%C3%A1tica)","Unicode","Biblioteca_(inform%C3%A1tica)","Boost","Windows_7","MS-DOS","Windows_3.1x","Integrated_development_environment","OS/2","IBM","Windows_NT_3.51","Windows_NT_4.0","Embarcadero_Delphi","Visual_Component_Library","Wayback_Machine","Wayback_Machine","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"NetBeans","titulo":"NetBeans","contenido":"NetBeans es un entorno de desarrollo integrado libre, hecho principalmente para el lenguaje de programacion Java. Existe ademas un numero importante de modulos para extenderlo. NetBeans IDE\u200b es un producto libre y gratuito sin restricciones de uso.  NetBeans es un proyecto de codigo abierto de gran exito con una gran base de usuarios, una comunidad en constante crecimiento. Sun Microsystems fundo el proyecto de codigo abierto NetBeans en junio de 2000 y continua siendo el patrocinador principal de los proyectos. Actualmente Sun Microsystems es administrado por Oracle Corporation.  La plataforma NetBeans permite que las aplicaciones sean desarrolladas a partir de un conjunto de componentes de software llamados modulos. Un modulo es un archivo Java que contiene clases de java escritas para interactuar con las API de NetBeans y un archivo especial (manifest file) que lo identifica como modulo. Las aplicaciones construidas a partir de modulos pueden ser extendidas agregandole nuevos modulos. Debido a que los modulos pueden ser desarrollados independientemente, las aplicaciones basadas en la plataforma NetBeans pueden ser extendidas facilmente por otros desarrolladores de software.  El NetBeans IDE permite el desarrollo de todos los tipos de aplicacion Java (J2SE, web, EJB y aplicaciones moviles). Entre sus caracteristicas se encuentra un sistema de proyectos basado en Ant, control de versiones y refactoring.  NetBeans IDE 6.5.2, la cual fue publicada el 19 de noviembre de 2008, extiende las caracteristicas existentes del Java EE (incluyendo soporte a persistencia, EJB 3 y JAX-WS). Adicionalmente, el NetBeans Enterprise Pack permite el desarrollo de aplicaciones empresariales con Java EE 5, incluyendo herramientas de desarrollo visuales de SOA, herramientas de esquemas XML, orientacion a web servicies (para BPEL) y modelado UML. El NetBeans C/C++ Pack soporta proyectos de C/C++, mientras el PHP Pack, soporta PHP 5.  Modularidad. Todas las funciones del IDE son provistas por modulos. Cada modulo provee una funcion bien definida, tales como el soporte de Java, edicion, o soporte para el sistema de control de versiones. NetBeans contiene todos los modulos necesarios para el desarrollo de aplicaciones Java en una sola descarga, permitiendole al usuario comenzar a trabajar inmediatamente.  Sun Studio, Sun Java Studio Enterprise, y Sun Java Studio Creator de Sun Microsystems han sido todos basados en el IDE NetBeans.  Desde julio de 2006, NetBeans IDE es licenciado bajo la Common Development and Distribution License (CDDL), una licencia basada en la Mozilla Public License (MPL).  En octubre de 2007, Sun anuncio que NetBeans desde entonces se ofrecera bajo licenciamiento dual de Licencia CDDL y la GPL version 2.  Es un framework que simplifica el desarrollo de aplicaciones para Java Swing. El paquete de NetBeans IDE para Java SE contiene lo que se necesita para empezar a desarrollar plugins y aplicaciones basadas en la plataforma NetBeans; no se requiere un SDK adicional.  Las aplicaciones pueden instalar modulos dinamicamente. Algunas aplicaciones pueden incluir un modulo de actualizacion para permitir a los usuarios descargar Actualizaciones de firma digital y nuevas caracteristicas directamente dentro de la aplicacion en ejecucion. Reinstalando una actualizacion o una nueva version, no obligando a los usuarios a descargar toda la aplicacion de nuevo.  La plataforma ofrece servicios reusables comunes para las aplicaciones de escritorio, permitiendo a los desarrolladores centrarse en la logica de sus aplicaciones. Algunas de las caracteristicas de la aplicacion son:  NetBeans IDE es libre, codigo abierto, multiplataforma con soporte integrado para el lenguaje de programacion Java.  Estos son algunos de los paquetes adicionales de NetBeans (algunos pueden ser descargados individualmente).  Provee Soporte para la creacion de aplicaciones orientadas a servicios (SOA), incluyendo herramientas de esquemas XML, un editor WSDL, y un editor BPEL para web services.  NetBeans permite crear aplicaciones web con PHP 7, un potente debugger integrado y ademas viene con soporte para Symfony, un gran framework MVC escrito en PHP. Al tener tambien soporte para AJAX, cada vez mas desarrolladores de aplicaciones LAMP o WAMP, estan utilizando NetBeans como IDE.  Lanzamientos del IDE NetBeans\u200b  Los datos mencionados a continuacion se obtuvieron usando 'SLOCCount' de David A. Wheeler's.  El NetBeans IDE 6.1 contiene aproximadamente 1.990.915 lineas de codigo de las cuales el 99.19% son de Java. El esfuerzo para producir un software de este tama\u00f1o segun el modelo COMO es de aproximadamente 582 persona / a\u00f1o. ","snippet":"NetBeans es un entorno de desarrollo integrado libre, hecho principalmente para el lenguaje de programacion Java. Existe ademas un numero importante de modulos para extenderlo. NetBeans IDE\u200b es un pro","enlaces_salientes":["NetBeans","NetBeans","NetBeans","Arch_Linux","Entorno_de_desarrollo_integrado","Kit_de_desarrollo_de_software","Desarrollador_de_software","Apache_Software_Foundation","Oracle_Corporation","Licencia_de_software","CDDL","GNU_General_Public_License#Versi.C3.B3n_2","Idioma","Lenguaje_de_programaci%C3%B3n","Java_(lenguaje_de_programaci%C3%B3n)","Plataforma_(inform%C3%A1tica)","Java_SE","Java_EE","Java_FX","Ciclo_de_vida_del_lanzamiento_de_software","Entorno_de_desarrollo_integrado","Software_libre","Lenguaje_de_programaci%C3%B3n","Java_(lenguaje_de_programaci%C3%B3n)","C%C3%B3digo_abierto","Sun_Microsystems","Oracle_Corporation","Componente_de_software","EJB","JAX-WS","SOA","XML","BPEL","UML","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","PHP","Control_de_versiones","Sun_Studio","Sun_Microsystems","CDDL","Mozilla_Public_License","Framework","Swing_(biblioteca_gr%C3%A1fica)","Kit_de_desarrollo_de_software","C%2B%2B","Slackware","Aplicaciones_web","PHP","Debugger","Symfony","Framework","Modelo%E2%80%93vista%E2%80%93controlador","PHP","AJAX","LAMP","WAMP","IDE","Java_(lenguaje_de_programaci%C3%B3n)","JSP","Haskell","CPP","Yacc","Sh","Lex","Perl","Programas_para_control_de_versiones","Entorno_de_desarrollo_integrado","Git","Subversion_(software)","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Open_Hub"]}
{"url":"Eclipse_(software)","titulo":"Eclipse (software)","contenido":"Eclipse es una plataforma de software compuesto por un conjunto de herramientas de programacion de codigo abierto multiplataforma para desarrollar lo que el proyecto llama \"Aplicaciones de Cliente Enriquecido\", opuesto a las aplicaciones \"Cliente-liviano\" basadas en navegadores. Esta plataforma, tipicamente ha sido usada para desarrollar entornos de desarrollo integrados (del ingles IDE), como el IDE de Java llamado Java Development Toolkit (JDT) y el compilador (ECJ) que se entrega como parte de Eclipse (y que son usados tambien para desarrollar el mismo Eclipse).  Eclipse es tambien una comunidad de usuarios, extendiendo constantemente las areas de aplicacion cubiertas. Un ejemplo es el recientemente creado Eclipse Modeling Project, cubriendo casi todas las areas de Model Driven Engineering.  Eclipse fue desarrollado originalmente por IBM como el sucesor de su familia de herramientas para VisualAge. Eclipse es ahora desarrollado por la Fundacion Eclipse, una organizacion independiente sin animo de lucro que fomenta una comunidad de codigo abierto y un conjunto de productos complementarios, capacidades y servicios.  Eclipse fue liberado originalmente bajo la Common Public License, pero despues fue re-licenciado bajo la Eclipse Public License. La Free Software Foundation ha dicho que ambas licencias son licencias de software libre, pero son incompatibles con Licencia publica general de GNU (GNU GPL).\u200b  La base para Eclipse es la Plataforma de cliente enriquecido (del ingles Rich Client Platform RCP). Los siguientes componentes constituyen la plataforma de cliente enriquecido:  Los widgets de Eclipse estan implementados por una herramienta de widget para Java llamada Standard Widget Toolkit, a diferencia de la mayoria de las aplicaciones Java, que usan las opciones estandar Abstract Window Toolkit (AWT) o Swing. La interfaz de usuario de Eclipse tambien tiene una capa GUI intermedia llamada JFace, la cual simplifica la construccion de aplicaciones basadas en SWT.  El entorno de desarrollo integrado (IDE) de Eclipse emplea modulos (en ingles plug-in) para proporcionar toda su funcionalidad al frente de la plataforma de cliente enriquecido, a diferencia de otros entornos monoliticos donde las funcionalidades estan todas incluidas, las necesite el usuario o no. Este mecanismo de modulos es una plataforma ligera para componentes de software. Adicionalmente a permitirle a Eclipse extenderse usando otros lenguajes de programacion como son C/C++ y Python, permite a Eclipse trabajar con lenguajes para procesado de texto como LaTeX, aplicaciones en red como Telnet y Sistema de gestion de base de datos. La arquitectura plugin permite escribir cualquier extension deseada en el ambiente, como seria Gestion de la configuracion. Se provee soporte para Java y CVS en el SDK de Eclipse. Y no tiene por que ser usado unicamente con estos lenguajes, ya que soporta otros lenguajes de programacion.  La definicion que da el proyecto Eclipse acerca de su software es: \"una especie de herramienta universal - un IDE abierto y extensible para todo y nada en particular\".  En cuanto a las aplicaciones clientes, Eclipse provee al programador con frameworks muy ricos para el desarrollo de aplicaciones graficas, definicion y manipulacion de modelos de software, aplicaciones web, etc. Por ejemplo, GEF (Graphic Editing Framework - Framework para la edicion grafica) es un plugin de Eclipse para el desarrollo de editores visuales que pueden ir desde procesadores de texto wysiwyg hasta editores de diagramas UML, interfaces graficas para el usuario (GUI), etc. Dado que los editores realizados con GEF \"viven\" dentro de Eclipse, ademas de poder ser usados conjuntamente con otros plugins, hacen uso de su interfaz grafica personalizable y profesional.  El SDK de Eclipse incluye las herramientas de desarrollo de Java, ofreciendo un IDE con un compilador de Java interno y un modelo completo de los archivos fuente de Java. Esto permite tecnicas avanzadas de refactorizacion y analisis de codigo. Mediante diversos plugins estas herramientas estan tambien disponibles para otros lenguajes como C/C++ (Eclipse CDT) y en la medida de lo posible para lenguajes de script no tipados como PHP o Javascript. El IDE tambien hace uso de un espacio de trabajo, en este caso un grupo de metadatos en un espacio para archivos planos, permitiendo modificaciones externas a los archivos en tanto  Eclipse dispone de un Editor de texto con un analizador sintactico. La compilacion es en tiempo real. Tiene pruebas unitarias con JUnit, control de versiones con CVS, integracion con Ant, asistentes (wizards) para creacion de proyectos, clases, tests, etc., y refactorizacion.  Asimismo, a traves de \"plugins\" libremente disponibles es posible a\u00f1adir control de versiones con Subversion.\u200b e integracion con Hibernate.\u200b  Eclipse comenzo como un proyecto de IBM Canada. Fue desarrollado por OTI (Object Technology International) como reemplazo de VisualAge tambien desarrollado por OTI. En noviembre de 2001, se formo un consorcio para el desarrollo futuro de Eclipse como codigo abierto. En 2003, fue creada la fundacion independiente de IBM.  Resumen de las versiones de Eclipse:  Los datos y cifras relacionados con Eclipse, mostrados a continuacion, permitiran profundizar un poco mas en el producto.  Como puede verse en la tabla siguiente, la version 3.2.1 posee mas de 2 millones de lineas de codigo (para el proyecto Eclipse). Estos datos son de acuerdo a SLOCCount.\u200b Utilizando esta cifra y aplicando el modelo COCOMO, podemos ver que requeriria un esfuerzo para producir un software de este tama\u00f1o de 604 persona-a\u00f1o (para ello se ha utilizado la formula 2.4*(KSLOC ** 1.05)).  Para tener un estimado de los costes se toma en consideracion el salario de 56.286 $/a\u00f1o, que es el salario promedio de un programador en los Estados Unidos, y luego se multiplica ese resultado por 2,40, que incluye cualquier gasto extra diferente de los programadores como pueden ser luz, telefono, papeleria, etc.  Un punto muy importante a notar son los diversos lenguajes de programacion utilizados en el desarrollo del proyecto. De acuerdo al analisis realizado usando SLOCCount, el lenguaje mas utilizado es Java, seguido de ANSI C.  En julio de 2008, los siguientes paquetes de lenguas estan disponibles para Eclipse 3.2.x (En orden alfabetico): Aleman, Arabe, Checo, Chino Simplificado, Chino tradicional, Coreano, Espa\u00f1ol, Frances, Hungaro, Ingles, Italiano, Japones, Polaco, Portugues (Brasil) y Ruso.\u200b  Consultado en 2018: traducido total o parcialmente a mas de 40 idiomas. Puede consultarse la lista de idiomas en: http://babel.eclipse.org/babel/languages.php ","snippet":"Eclipse es una plataforma de software compuesto por un conjunto de herramientas de programacion de codigo abierto multiplataforma para desarrollar lo que el proyecto llama \"Aplicaciones de Cliente Enr","enlaces_salientes":["Eclipse_(software)","Eclipse_(software)","Eclipse_(software)","Entorno_de_desarrollo_integrado","Desarrollador_de_software","Eclipse_Foundation","7_de_noviembre","2001","Licencia_de_software","Licencia_Publica_de_Eclipse","Lenguaje_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n_Java","Plataforma_(inform%C3%A1tica)","M%C3%A1quina_virtual_Java","Interfaz_gr%C3%A1fica_de_usuario","SWT","Ciclo_de_vida_del_lanzamiento_de_software","C%C3%B3digo_abierto","Entorno_de_desarrollo_integrado","Lenguaje_de_programaci%C3%B3n_Java","Model_Driven_Engineering","IBM","Fundaci%C3%B3n_Eclipse","Licencia_P%C3%BAblica_Com%C3%BAn","Eclipse_Public_License","Free_Software_Foundation","Licencia_p%C3%BAblica_general_de_GNU","OSGi","SWT","Widget_toolkit","JFace","SWT","Abstract_Window_Toolkit","Swing_(biblioteca_gr%C3%A1fica)","Interfaz","GUI","JFace","Entorno_de_desarrollo_integrado","Lenguaje_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n_C","C%2B%2B","Python","LaTeX","Telnet","Sistema_de_gesti%C3%B3n_de_base_de_datos","Gesti%C3%B3n_de_la_configuraci%C3%B3n","CVS","Python","Framework","Wysiwyg","GUI","Metadatos","Editor_de_texto","JUnit","CVS","Ant","Refactorizaci%C3%B3n","Subversion","Hibernate","IBM","Canad%C3%A1","2001","2003","COCOMO","ANSI_C","Lenguaje_de_programaci%C3%B3n_Java","ANSI_C","C%2B%2B","JSP","Bourne_Shell","Perl","Php","Sed_(inform%C3%A1tica)","Idioma_alem%C3%A1n","Idioma_%C3%A1rabe","Idioma_checo","Simplificaci%C3%B3n_de_los_caracteres_chinos","Chino_tradicional","Idioma_coreano","Idioma_espa%C3%B1ol","Idioma_franc%C3%A9s","Idioma_h%C3%BAngaro","Idioma_ingl%C3%A9s","Idioma_italiano","Idioma_japon%C3%A9s","Idioma_polaco","Idioma_portugu%C3%A9s","Idioma_ruso","Vala_(lenguaje_de_programaci%C3%B3n)","Wayback_Machine","Control_de_autoridades","Gemeinsame_Normdatei","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Emacs","titulo":"GNU Emacs","contenido":"GNU Emacs es un editor de texto extensible, personalizable y autodocumentado\u200b, desarrollado por Richard Stallman como parte del proyecto GNU. Se clasifica como software libre y se encuentra en constante desarrollo gracias a la colaboracion activa de una comunidad de voluntarios.  Se distingue de otros editores por incluir un interprete de Emacs Lisp escrito en C, al que se le han agregado funciones en Lisp para la edicion de texto. Esta estructura permite la modificacion en tiempo real del codigo de GNU Emacs, lo que ha dado lugar a una amplia gama de paquetes que cubren diversas actividades relacionadas con el texto. Estos paquetes posibilitan desde la escritura, compilacion y ejecucion interactiva de programas en varios lenguajes de programacion, hasta la revision de correos electronicos, chat, navegacion por Internet, entre otras tareas.  A lo largo de los a\u00f1os, han sido lanzadas diversas versiones de Emacs, pero solo dos han alcanzado una amplia adopcion: GNU Emacs, iniciado por Richard Stallman y XEmacs, una bifurcacion de GNU Emacs. No obstante, hasta el dia de hoy, la mas popular, extensamente utilizada y continuamente desarrollada es GNU Emacs.  Emacs nacio en los laboratorios del MIT durante los a\u00f1os 70. Antes de su introduccion, el editor de textos predeterminado en el Sistema Incompatible de Tiempo Compartido (ITS), el sistema operativo en los laboratorios de Inteligencia Artificial PDP-6 y PDP-10, era un editor de lineas conocido como TECO. A diferencia de los editores de texto modernos, en TECO la introduccion de texto, la edicion y la vista del mismo se hacia de manera separada, como Vi lo haria luego. Los caracteres tecleados no aparecian dentro del documento, habia que introducir una serie de instrucciones, en el lenguaje de TECO, indicandole que debia colocar los caracteres requeridos. El texto no se mostraba en la pantalla. Este comportamiento es similar al del programa ed, que todavia se utiliza hoy en dia.  Richard Stallman visito el Laboratorio de Inteligencia Artificial de Stanford en 1972 o 1974 y conocio al editor de textos \"E\". Escrito por Fred Wright, el editor, tenia un comportamiento intuitivo WYSIWYG (lo que ves es lo que obtienes) como es comun en los editores de textos modernos. Impresionado por esta caracteristica, Stallman volvio al MIT donde Carl Mikkelsen, uno de los hackers en el Laboratorio de Inteligencia Artificial, habia agregado un modo de edicion-muestreo llamado \"Control-R\" a TECO, que le permitia a la pantalla mostrar lo que el usuario ingresaba desde el teclado. Stallman reimplemento este modo para que corriera eficientemente. Agrego una caracteristica al modo edicion-muestreo de TECO, para que el usuario pueda redefinir cualquier atajo de teclado para ejecutar un programa TECO.  Otra caracteristica de E, que no tenia TECO, era corregir el acceso aleatorio. Desde la implementacion, el TECO original fue un editor secuencial, dise\u00f1ado para editar cinta de papel perforada en el PDP-1. La edicion tipica podia ser llevada a cabo en una pagina a la vez, en el orden que las paginas aparecen en el archivo.  La nueva version de TECO fue popular en el Laboratorio de IA, y pronto acumulo una coleccion de macros, cuyos nombres terminaban en \"MAC\" o \"MACS\". Dos a\u00f1os despues, Guy Steele unifico una diversidad de macros de teclado en uno solo.  Despues de una noche de hacking conjunto por Steele y Stallman, este acabo la implementacion, que incluia utilidades para extender y documentar el nuevo conjunto de macros. El sistema resultante fue llamado EMACS, es decir, \"Editing MACroS\". Una version alternativa sostiene que EMACS queria decir \"E con MACroS\", refiriendose a la falta de capacidades de macros en E. Segun Stallman, el tomo el nombre Emacs \"porque <E> no estaba en uso como abreviatura en el ITS en aquel momento\". Se ha comentado tambien que \"Emack & Bolio's\" era el nombre de una heladeria popular en Boston, a poca distancia del MIT. Un programa de formateo de texto usado en ITS fue llamado mas tarde BOLIO por Dave Moon, que frecuentaba la heladeria. No obstante, a Stallman no le gustaba ese helado, y ni siquiera lo conocia cuando eligio el nombre \"Emacs\"; esta ignorancia es la base de un Hacker koan, Emacs and Bolio).  Stallman se dio cuenta del peligro que entra\u00f1aba demasiadas personalizaciones del programa y las bifurcaciones de facto que podria llegar a suponer, y establecio ciertas condiciones para el uso del programa. Mas tarde escribio:  El Emacs original, como el TECO, se ejecutaba unicamente en la familia de ordenadores PDP. Su comportamiento era suficientemente distinto de TECO como para ser considerado un editor de texto por derecho propio. Rapidamente se convirtio en el programa estandar de edicion en ITS. Tambien fue portado de ITS al Tenex y a sistemas operativos TOPS-20 por Michael McMahon, pero no a Unix inicialmente. Otros colaboradores en versiones tempranas de Emacs fueron Kent Pitman, Earl Killian y Eugene Ciccarelli.  Durante los siguientes a\u00f1os, se escribieron muchos editores similares a Emacs para otros sistemas operativos. Entre ellos SINE (Sine Is Not EMACS), EINE (\"Eine Is Not EMACS\") y ZWEI (\"ZWEI Was EINE Initially\", para la maquina Lisp), que fueron escritos por Michael McMahon y Daniel Weinreb (Los nombres EINE y ZWEI significan respectivamente \"uno\" y \"dos\" en aleman). En 1978, Bernard Greenberg escribio Multics Emacs en el Cambridge Information Systems Lab de Honeywell.  El primer editor similar a Emacs que funciono sobre Unix fue el Gosling Emacs, escrito en 1981 por James Gosling (que mas tarde invento el lenguaje de programacion Java). Fue escrito en el lenguaje de programacion C y utilizaba un lenguaje de extension conocido como Mocklisp, con sintaxis similar a la del lenguaje Lisp. En 1984 era software propietario.  En 1984, Stallman empezo a trabajar en GNU Emacs para producir una alternativa de software libre al Gosling Emacs. Inicialmente se baso en el Gosling Emacs, pero Stallman reemplazo el interprete de Mocklisp con un interprete de Lisp, lo que le obligo a sustituir casi todo el codigo. GNU Emacs se convirtio en el primer programa publicado por el emergente Proyecto GNU.  GNU Emacs esta escrito en Emacs Lisp (a su vez implementado en C) como lenguaje de extension. La primera version ampliamente distribuida de GNU Emacs fue la 15.34, que aparecio en 1985. Las versiones de la 2 a la 12 no existieron nunca. Las primeras versiones habian sido numeradas con la forma \"1.x.x\", pero antes de la version 1.12 se decidio quitar el \"1\" inicial, ya que se pensaba que este numero nunca cambiaria. La version 13, la primera que fue publica, se libero el 20 de marzo de 1985.  GNU Emacs se ejecutaba en Unix, al igual que Gosling Emacs. No obstante, GNU Emacs tenia mas funciones, como por ejemplo, el Lisp (completo) como lenguaje de extension. Como resultado, pronto reemplazo a Gosling Emacs como editor Emacs de facto sobre Unix.  Hasta 1999, el desarrollo de GNU Emacs fue relativamente cerrado, hasta el punto en que fue utilizado como ejemplo del modelo de desarrollo de \"catedral\" en La catedral y el bazar. El proyecto ha adoptado desde entonces una lista de correo publica de desarrollo, y acceso anonimo al sistema CVS. El desarrollo tiene lugar en una unica rama de CVS, que esta actualmente en la version 23.4.1.  A partir de 1991, Jamie Zawinski y otros desarrollaron Lucid Emacs en Lucid Inc., basandose en una version alfa de GNU Emacs 19. Las dos bases de codigo divergieron pronto, y los dos equipos de desarrollo desistieron\u200b de intentar combinarlas de nuevo en un solo programa. Este fue uno de los mas famosos forks de un programa de software libre. Lucid Emacs ha sido renombrado como XEmacs. Este y GNU Emacs son las dos variedades actuales en uso mas populares. La \"X\" en XEmacs se deriva, bien de un enfoque inicial para soportar el sistema X Window como interfaz grafica de usuario, o bien un \"nombre de compromiso\" entre las partes que desarrollaban XEmacs.\u200b Tanto GNU Emacs como XEmacs soportan interfaces graficas y terminales de texto.  GNU Emacs fue inicialmente pensado para computadores con un espacio de direcciones de 32-bit, y al menos 1 MiB de RAM, en una epoca en la cual esos computadores eran considerados de alta calidad. Esto dejo una puerta abierta para peque\u00f1as reimplementaciones. Algunas destacables se nombran a continuacion:  Para GNU Emacs (y en general para los paquetes de software GNU), la politica sigue consistiendo en aceptar contribuciones significativas de codigo solamente si el titular del copyright renuncia adecuadamente a sus derechos de copia. No obstante, se hizo una excepcion a esta politica para el codigo de MULE (MULtilingual Extension, extension multilingue que maneja Unicode y metodos mas avanzados de tratar con otros lenguajes), ya que el titular del copyright es el gobierno japones y la transferencia de copyright no era posible.\u200b  Esta politica, sin embargo, no se aplica a contribuciones de codigo extremadamente peque\u00f1as o correccion de fallos. No hay una definicion estricta de contribucion peque\u00f1a, pero a modo de orientacion, se considera que seria menos de 10 lineas de codigo.  Esta politica esta pensada para facilitar el refuerzo del copyleft, de manera que la FSF pueda defender el software en un juicio, si este se produjera.  El resto de este articulo trata sobre las versiones modernas de Emacs, es decir, GNU Emacs y XEmacs, las unicas encarnaciones de Emacs que son ampliamente usadas hoy en dia. El termino \"Emacs\" se usara para referirse a ambos programas, ya que tienen caracteristicas muy similares; XEmacs comenzo como un fork de GNU Emacs y sus versiones siguientes se han mantenido mas o menos compatibles con GNU Emacs.  A pesar de (o quizas a causa de) su venerable pasado, Emacs es uno de los editores de texto mas potentes y versatiles hoy en dia. Debe remarcarse que es principalmente un editor de texto, y no un procesador de texto; su enorme conjunto de caracteristicas esta orientado a ayudar el usuario a manipular trozos de texto, mas que manipular el tipo de letra de los caracteres o imprimir documentos (aunque Emacs puede tambien hacer eso). Emacs tiene una gran cantidad de caracteristicas que permiten lidiar con la aparentemente sencilla tarea de editar texto, que van desde comandos para manipular palabras y parrafos (borrarlos, moverlos, moverse por entre ellos, etc.), hasta resaltado de sintaxis para hacer el codigo fuente mas facil de leer, o ejecutar \"macros de teclado\" que contienen lotes de comandos de edicion definidos por el usuario.  La rica variedad de caracteristicas que se encuentran en Emacs es el resultado de su dise\u00f1o poco habitual. Casi toda la funcionalidad del editor, desde las operaciones basicas de edicion (como la insercion de caracteres en un documento) hasta la configuracion de la interfaz de usuario, es controlada por un dialecto del lenguaje de programacion Lisp. En este entorno Lisp, variables e incluso funciones enteras pueden ser modificadas al vuelo, sin tener que recompilar o ni siquiera reiniciar el editor. Como resultado, el comportamiento de Emacs puede ser modificado casi sin limite, bien directamente por el usuario, o (mas habitualmente) cargando fragmentos de codigo Emacs Lisp. Estos fragmentos son conocidos como \"bibliotecas\", \"librerias\", \"paquetes\" o \"extensiones\".  Emacs contiene un gran numero de bibliotecas escritas en Emacs Lisp, y en Internet se pueden encontrar mas bibliotecas de terceras partes. Muchas bibliotecas implementan ayudas para la programacion de ordenadores, lo que es un reflejo de la popularidad de Emacs entre los programadores. Emacs se puede usar como un entorno de desarrollo integrado (IDE), que permite a los programadores editar, compilar y depurar su codigo con una unica interfaz. Otras bibliotecas realizan funciones menos habituales. A continuacion se enumeran varios ejemplos:  El problema del dise\u00f1o de Emacs, basado en Lisp, es una penalizacion de rendimiento resultante del hecho de cargar e interpretar el codigo Lisp. En los sistemas donde fue implementado en primer lugar, Emacs era a menudo mucho mas lento que otros editores de texto. Algunos acronimos bromistas aluden a este hecho: Eight Megabytes And Constantly Swapping (de los dias en que ocho megabytes era mucha memoria), Emacs Makes A Computer Slow, Eventually Mallocs All Computer Storage, y Eventually Makes All Computers Sick. No obstante, los ordenadores modernos son suficientemente rapidos, de manera que Emacs raramente se nota lento. De hecho, Emacs se inicia mas rapidamente que la mayoria de procesadores de texto modernos. Otros acronimos de broma hacen alusion al uso de teclas modificadoras para acceder a funcionalidades avanzadas: Escape Meta Alt Control Shift.  Emacs es uno de los programas de ordenador no triviales mas portados a otras plataformas. Se ejecuta en una amplia variedad de sistemas operativos, entre ellos los sistemas de tipo Unix (GNU/Linux, BSD, Solaris, AIX, IRIX), Mac OS X,\u200b \u200b etc., MS-DOS, Microsoft Windows \u200b\u200b\u200b y OpenVMS. Los sistemas Unix, tanto libres como propietarios, proporcionan frecuentemente Emacs junto con el sistema operativo.  Emacs se ejecuta tanto en entornos de terminal de texto como en entornos de interfaz grafica de usuario (GUI). Emacs utiliza el Sistema de ventanas X para generar su GUI, ya sea directamente, o bien usando un \"widget toolkit\" como Motif, LessTif o GTK+. Emacs puede usar tambien los sistemas graficos nativos de Mac OS X (utilizando la API Carbon) y de Microsoft Windows. La interfaz grafica proporciona barras de menu, barras de herramientas, barras de scroll y menus contextuales.  Emacs adapta su comportamiento al tipo de texto que esta editando mediante modos de edicion llamados \"modos principales\" (\"major modes\"). Los modos principales se definen para texto ordinario, codigo fuente para diversos lenguajes de programacion, documentos HTML, TeX y LaTeX y muchos otros tipos de texto. Cada modo mayor modifica ciertas variables en Lisp para que Emacs se comporte de forma mas conveniente para ese tipo concreto de texto. Habitualmente, definen las tablas para resaltado de sintaxis, usando distintos tipos de letra o colores para mostrar las palabras clave, comentarios, etc. Los modos principales tambien ofrecen comandos especiales de edicion. Por ejemplo, los modos principales para lenguajes de programacion definen habitualmente comandos para saltar al principio o al final de una funcion.  El comportamiento de Emacs puede ser mas personalizado aun utilizando los \"modos menores\" (\"minor modes\"). Mientras que solamente se puede asociar un modo mayor con un buffer a la vez, se puede tener activos varios modos menores. Por ejemplo, el modo mayor para el lenguaje de programacion C define un modo menor diferente para cada uno de los estilos de sangria mas populares.  Muchos usuarios de Emacs personalizan el editor para adaptarlo a sus necesidades. Hay tres formas principales de personalizar Emacs. La primera es la extension customize, que permite que el usuario asigne valores a variables comunes de personalizacion, como el esquema de color, usando una interfaz grafica. Esto esta orientado a principiantes en Emacs que no quieren trabajar con codigo en Emacs Lisp.  La segunda forma es registrar pulsaciones de teclados en macros y reproducirlas para automatizar tareas complejas y repetitivas. Esto se suele hacer de forma ad hoc, descartando cada macro tras su uso, aunque las macros pueden ser guardadas e invocadas cuando se necesiten.  El tercer metodo para personalizar Emacs es usar Emacs Lisp. Habitualmente, el codigo Emacs Lisp proporcionado por el usuario se guarda en un fichero llamado .emacs, que se carga cuando Emacs comienza. El fichero .emacs se usa con frecuencia para asignar a variables y atajos de teclado valores distintos de la configuracion por defecto, y para definir nuevos comandos para el usuario. Muchos usuarios avanzados tienen ficheros .emacs de cientos de lineas, con personalizaciones que hacen que Emacs funcione de forma muy diferente del comportamiento por defecto.  Si un fragmento de codigo Emacs Lisp es util en general, a menudo se empaqueta en forma de biblioteca y se distribuye a otros usuarios. Muchas bibliotecas de terceras partes se pueden encontrar en Internet. Por ejemplo, una biblioteca llamada Wikipedia-mode para editar articulos de Wikipedia. Hay incluso un grupo de noticias de Usenet, gnu.emacs.sources (enlace roto disponible en Internet Archive; vease el historial, la primera version y la ultima)., usado para enviar nuevas bibliotecas. Algunas bibliotecas externas pueden convertirse en una biblioteca \"estandar\" de Emacs.  El primer Emacs incluia una potente biblioteca de ayuda que podia mostrar la documentacion para cada comando, variable y funcion interna (es posible que haya originado esta tecnica)  A causa de esto, Emacs fue calificado de \"programa autodocumentado\". Este termino no significa que Emacs escriba su propia documentacion, sino que presenta su propia documentacion al usuario. Esta caracteristica hace que la documentacion de Emacs sea muy accesible. Por ejemplo, el usuario puede averiguar que comando esta asociado a una combinacion de teclas introduciendo simplemente C-h k (que invoca al comando describe-key), seguido de la combinacion de teclas. Cada funcion incluia una cadena de documentacion, pensada especificamente para ser mostrada al usuario en caso de que este lo pidiera. Esta practica se extendio posteriormente a varios lenguajes de programacion, como Lisp y Java.  El sistema de ayuda de Emacs es util no solamente para principiantes, sino tambien para usuarios avanzados que escriban codigo en Emacs Lisp. Si la documentacion para una funcion o variable no es suficiente, el sistema de ayuda puede ser utilizado para navegar entre el codigo fuente de Emacs Lisp, tanto para bibliotecas predefinidas como para bibliotecas externas instaladas. Por tanto, es muy conveniente programar en Emacs Lisp usando el mismo Emacs.  Ademas de la documentacion incluida en el programa, Emacs tiene un manual especialmente largo, detallado y bien escrito. Una copia electronica del Manual de GNU Emacs, escrita por Richard Stallman, se incluye con GNU Emacs y se puede ver con el navegador de Info predeterminado. XEmacs tiene un manual parecido, que se bifurco del Manual de GNU Emacs al mismo tiempo que el programa XEmacs. Otros dos manuales, el Emacs Lisp Reference Manual (Manual de Referencia de Emacs Lisp), por Bill Lewis, Richard Stallman y Dan Laliberte, y Programming in Emacs Lisp (Programando en Emacs Lisp) por Robert Chassell, se incluyen tambien. Ademas de las versiones electronicas, los tres manuales estan disponibles en forma de libro, publicado por la Free Software Foundation.  Emacs tambien tiene un tutorial. Cuando Emacs se inicia sin especificar ningun fichero para editar, muestra instrucciones para ejecutar comandos simples de edicion y para invocar el tutorial.  Emacs soporta la edicion de texto escrito en muchos lenguajes humanos. Hay soporte para muchos alfabetos, guiones, sistemas de escritura y convenciones culturales. Emacs proporciona revision ortografica para muchos lenguajes mediante la llamada a programas externos como ispell. Muchos sistemas de codificacion estan soportados, como por ejemplo UTF-8. La version 21.5 de XEmacs tiene soporte parcial para Unicode. La version 21.4 de GNU Emacs tiene un soporte similar. Emacs 22 tendra mejor soporte. Todos estos esfuerzos para soportar Unicode utilizan una codificacion interna especifica de Emacs, con lo cual se necesita una conversion para cargar y guardar. UTF-8 sera el sistema de codificacion interna de Emacs en una version futura de XEmacs 21.5, y seguramente en GNU Emacs 23.  No obstante, la interfaz de usuario de Emacs esta en ingles y no ha sido traducida a otros idiomas, con la excepcion del tutorial para principiantes. De modo no oficial, existen varios proyectos de traduccion de la documentacion de GNU Emacs, asi como un proyecto de internacionalizacion y localizacion completas de GNU Emacs al espa\u00f1ol (veanse los enlaces).  Para usuarios con deficiencias visuales, hay un subsistema llamado Emacspeak que permite que el editor sea usado unicamente mediante una interfaz de audio.  El codigo fuente del programa, que incluye tanto los componentes en lenguaje C como en Emacs Lisp, esta disponible libremente para su examen, modificacion y redistribucion, bajo los terminos de la Licencia publica general de GNU (GNU GPL). Las versiones mas antiguas de la documentacion de GNU Emacs fueron liberadas bajo una licencia ad hoc que requeria la inclusion de ciertos textos en cualquier copia modificada. En el manual de usuario de GNU Emacs, por ejemplo, esto incluia la forma de obtener GNU Emacs y el ensayo politico de Richard Stallman, \"El Manifesto de GNU\". Los manuales de XEmacs, que fueron heredados de los antiguos manuales de GNU Emacs cuando el fork tuvo lugar, tienen la misma licencia. En cambio, las versiones mas modernas de la documentacion de GNU Emacs usan la licencia GFDL y usan \"secciones invariantes\" para requerir la inclusion de los mismos documentos, y tambien que los manuales se autoproclamen como Manuales GNU.  Desde el shell de Unix, un fichero se puede abrir para ser editado escribiendo \"emacs [nombre del fichero]\". Si el fichero cuyo nombre se ha introducido no existe, se creara un nuevo fichero con este nombre. Por ejemplo, escribiendo \"emacs xorg.conf\" se editara el fichero xorg.conf en el directorio actual, si existe. No obstante, la documentacion de Emacs recomienda iniciar el programa sin introducir un nombre de fichero, para evitar el mal habito de iniciar un proceso separado para cada fichero a editar. La manera de sacarle partido completamente a Emacs es abrir todos los ficheros desde una unica instancia del programa.  En el modo de edicion normal, Emacs se comporta como otros editores de texto: Las teclas de caracteres (a, b, c, 1, 2, 3, etc.) sirven para insertar los caracteres correspondientes, las teclas de flecha mueven el punto de edicion, la tecla backspace borra texto, etc. Otros comandos pueden ser invocados mediante teclas modificadoras, presionando Control o Meta (equivalente a la actual tecla Alt) o ambas, junto con otra tecla. Cada comando de edicion es en realidad una llamada a una funcion en el entorno de Emacs Lisp. Incluso un comando tan simple como escribir a para insertar el caracter a implica una llamada a una funcion. En este caso, la funcion seria self-insert-command.  Mas abajo se muestran algunos de los comandos basicos. Se pueden encontrar mas en la lista de comandos de Emacs. La tecla de control se representa con una C mayuscula y la tecla de alternativa (Alt) o meta se representa con una M mayuscula.  Los comandos save-buffer y save-buffers-kill-emacs usan el presionado de teclas multiple. Por ejemplo, C-x C-c significa: mientras se mantiene presionada la tecla control, presionar x; mientras se mantiene presionada la tecla control, presionar c. Esta tecnica, permite tener mas comandos para el teclado, que cuando se utiliza el presionado simple de teclas, esta metodologia fue popularizado por Emacs, proveniente desde TECMAC, una de las colecciones macro de TECO, predecesor de Emacs. Desde entonces ha sido una caracteristica, inclusive hasta en redactores modernos de codigo como Visual Studio.  Cuando Emacs esta ejecutando una interfaz grafica, muchos comandos se pueden invocar desde el menu principal o la barra de herramientas en vez de utilizar el teclado. Sin embargo, muchos usuarios experimentados de Emacs prefieren utilizar el teclado porque es mas rapido y conveniente una vez que las secuencias de teclas se han memorizado.  Algunos comandos Emacs trabajan mediante la invocacion de programas externos (tal como ispell para la comprobacion de ortografia o gcc para la compilacion de programas), analizando la salida del programa, y mostrando el resultado en Emacs.  El minibuffer, normalmente la linea inferior de la pantalla, es el espacio en el que Emacs pide informacion. En el minibuffer se puede introducir el texto que se debe encontrar en una busqueda, el nombre de un fichero para leer o guardar e informacion similar. Cuando es aplicable, es posible utilizar el completado mediante la tecla del tabulador (tab completion).  Emacs mantiene texto en objetos denominados buffers. El usuario puede crear nuevos buffers y destruir los indeseados, y pueden existir al mismo tiempo varios buffers. La mayoria de los buffers contienen informacion cargada desde archivos de texto binarios, que el usuario puede editar y guardar de nuevo a disco. Los buffers se usan tambien para almacenar texto temporal, como las cadenas de documentacion mostradas por la biblioteca help.  Tanto en modo de terminal de texto como en modo grafico, Emacs es capaz de dividir el area de edicion en secciones separadas (a las cuales se refiere como \"ventanas\" desde el a\u00f1o 1975, lo cual puede resultar confuso en sistemas con otro concepto de \"ventana\"), de forma que mas de un buffer pueda ser mostrado a la vez. Esto tiene muchos posibles usos. Por ejemplo, una seccion puede ser utilizada para mostrar el codigo fuente de un programa, mientras que otra muestra los resultados de compilar ese programa. En entornos graficos, Emacs puede lanzar tambien multiples ventanas graficas, conocidas como \"marcos\" (\"frames\") en la terminologia propia de Emacs.  Debido a que Emacs requiere un uso frecuente de las teclas modificadoras (y en particular, de la tecla Control, la cual normalmente se pulsa con el me\u00f1ique), muchos usuarios asiduos de Emacs sufren lesiones por esfuerzo repetitivo, las cuales se manifiestan como molestias y dolor en los dedos me\u00f1iques. Este problema es tan frecuente que ha llegado a conocerse entre la comunidad de usuarios como el me\u00f1ique de Emacs.  Una solucion comun consiste en intercambiar las funciones de las teclas Control y Caps Lock en la parte izquierda del teclado, o definir ambas teclas como Control.\u200b Tambien existen teclados especiales (Kinesis Contoured Keyboard) que colocan las teclas modificadoras en una posicion en la que pueden ser facilmente pulsadas con el pulgar, o con teclas modificadoras de gran tama\u00f1o en una posicion en la que se puedan pulsar con la palma de la mano (Microsoft Natural Keyboard).  La \"Iglesia de Emacs\" formada por Richard Stallman es una parodia sobre una religion para los usuarios de Emacs. En esa se refiere a Vi como el \"editor de la bestia\" (vi-vi-vi que seria 6-6-6 en numeracion romana) pero esto no quiere decir que se este en contra del uso de Vi (se dice que usar una version libre de vi es solo una penitencia).  Stallman, tambien, encarna a un santo de la iglesia de Emacs que tiene el nombre de San Ignucio, el cual usa un antiguo disco duro como aureola. ","snippet":"GNU Emacs es un editor de texto extensible, personalizable y autodocumentado\u200b, desarrollado por Richard Stallman como parte del proyecto GNU. Se clasifica como software libre y se encuentra en constan","enlaces_salientes":["GNU_Emacs","GNU_Emacs","GNU_Emacs","Editor_de_texto","Editor_de_texto","Richard_Stallman","Desarrollador_de_software","Proyecto_GNU","Ingenier%C3%ADa_de_software","Software_libre","Licencia_de_software","Licencia_p%C3%BAblica_general_de_GNU#Versi\u00f3n_3","Idioma","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","Emacs_Lisp","Plataforma_(inform%C3%A1tica)","Multiplataforma","Parche_(inform%C3%A1tica)","Ciclo_de_vida_del_lanzamiento_de_software","Richard_Stallman","Proyecto_GNU","Software_libre","Emacs_Lisp","C_(lenguaje_de_programaci%C3%B3n)","Lisp","XEmacs","MIT","A%C3%B1os_1970","Incompatible_Timesharing_System","Sistema_operativo","Inteligencia_Artificial","PDP-6","PDP-10","Editor_y_corrector_de_texto","Vi","Ed_(Unix)","Richard_Stallman","WYSIWYG","Hacker","IA","Hacking","Boston","M%C3%A1quina_Lisp","Honeywell","Unix","James_Gosling","Lenguaje_de_programaci%C3%B3n_Java","Lenguaje_de_programaci%C3%B3n_C","Lisp","Software_propietario","GNOME","Parabola_GNU/Linux-libre","Software_libre","Lisp","GNU","Emacs_Lisp","1999","La_catedral_y_el_bazar","CVS","XEmacs","Jamie_Zawinski","Fork","Software_libre","XEmacs","XEmacs","X_Window","Terminal_de_texto","Mebibyte","Linus_Torvalds","Mg_(editor)","OpenBSD","UNIX-like","DOS","Kibibyte","Copyright","Unicode","Copyleft","Procesador_de_texto","Tipo_de_letra","Palabra","P%C3%A1rrafo","Resaltado_de_sintaxis","C%C3%B3digo_fuente","Dialecto_(programaci%C3%B3n)","Lenguaje_de_programaci%C3%B3n_Lisp","Variable_(programaci%C3%B3n)","Biblioteca_(programaci%C3%B3n)","Internet","Entorno_de_desarrollo_integrado","Compilador","Depuraci%C3%B3n_de_programas","ELIZA","Psicoterapia","Carl_Rogers","Dunnet","Aventura_conversacional","Diff","Navegador_web","Dired","Midnight_Commander","Internet_Relay_Chat","Gnus","Grupos_de_noticias","Correo_electr%C3%B3nico","Unicode","Info_(Unix)","Gestor_de_informaci%C3%B3n_personal","Tetris","Pong","Megabyte","Malloc","Tecla_modificadora","Sistema_operativo","Unix","GNU/Linux","BSD","Solaris_(sistema_operativo)","AIX","IRIX","Mac_OS_X","MS-DOS","Microsoft_Windows","OpenVMS","Sistema_operativo","Terminal_de_texto","Interfaz_gr%C3%A1fica_de_usuario","Sistema_de_ventanas_X","Motif","GTK%2B","Microsoft_Windows","C%C3%B3digo_fuente","Lenguaje_de_programaci%C3%B3n","HTML","TeX","LaTeX","Resaltado_de_sintaxis","Macros","Grupo_de_noticias","Usenet","Internet_Archive","Lisp","Lenguaje_de_programaci%C3%B3n_Java","Texinfo","Free_Software_Foundation","Tutorial","Lenguaje","Ispell","UTF-8","Unicode","UTF-8","Licencia_p%C3%BAblica_general_de_GNU","Manifiesto_GNU","GNU_Free_Documentation_License","Control_(tecla)","Meta_(tecla)","Alt_(tecla)","Microsoft_Visual_Studio","Ispell","GNU_Compiler_Collection","C%C3%B3digo_fuente","Me%C3%B1ique_de_la_mano","Richard_Stallman","Vi","San_Ignucio","AUCTeX","GNU_TeXmacs","Lista_de_programas_para_Unix","Iglesia_de_Emacs","Wayback_Machine","MIT_Artificial_Intelligence_Laboratory","Internet_Archive","Richard_Stallman","Internet_Archive","Jamie_Zawinski","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional"]}
{"url":"Microsoft_Edge","titulo":"Microsoft Edge","contenido":"Microsoft Edge (pronunciado\u00a0/\u025bd\u0292/\u00a0( escuchar)) es un navegador web desarrollado por Microsoft, basado en Chromium de Google. Fue lanzado por primera vez para Windows 10 y Xbox One en julio de 2015, luego para Android y iOS en octubre de 2017,\u200b\u200b para macOS en mayo de 2019, en Windows 7, 8 y 8.1 en enero de 2020 y para GNU/Linux en octubre de 2020.\u200b  Originalmente construido con los propios motores EdgeHTML y Chakra de Microsoft, el 2 de octubre de 2018 Edge cambio su motor de renderizado propietario EdgeHTML por el motor de renderizado de Google, Chromium,\u200b\u200b utilizando los motores Blink y V8. Como parte de este cambio (cuyo nombre en codigo es Anaheim), Microsoft ha hecho que las versiones preliminares de Edge basadas en Chromium esten disponibles en Windows 7, Windows 8, Windows 8.1, Windows 10 y MacOS, ademas del nuevo Windows 11.\u200b Microsoft lanzo la primera version de Edge estable basada en Chromium el 15 de enero de 2020.\u200b  Edge incluia inicialmente integracion con el asistente virtual Cortana. Cuenta con soporte para extensiones alojadas en su propia tienda de Microsoft Store; y a la vez con soporte para extensiones de la Chrome Web Store desde que se reconstruyo en Chromium. A diferencia de Internet Explorer, Edge no es compatible con las tecnologias heredadas de ActiveX y BHO.  Microsoft Edge es el navegador web predeterminado en Windows 10, Windows 10 Mobile (ya descontinuado), Windows 11, Xbox One y Xbox Series X y Series S, reemplazando a Internet Explorer 11 e Internet Explorer Mobile.\u200b Como su desarrollo y lanzamiento depende del modelo de Windows como servicio, no se incluye en las compilaciones del canal de mantenimiento a largo plazo (LTSC) empresarial de Windows 10.\u200b\u200b\u200b  Microsoft anuncio inicialmente que Edge admitiria el motor Trident (MSHTML) motor de dise\u00f1o para la compatibilidad con versiones anteriores, pero mas tarde dijo que, debido a la \u201cfuerte retroalimentacion\u201d, Edge usaria un nuevo motor, mientras que Internet Explorer continuaria proporcionando el motor heredado.\u200b  Los favoritos, la lista de lectura, el historial de exploracion y las descargas se ven en el hub,\u200b una barra lateral que proporciona una funcionalidad similar al administrador de descargas y el centro de favoritos de Internet Explorer.\u200b  Edge cuenta con un lector PDF y admite asm.js.\u200b Hasta enero de 2021, Edge tambien contaba con un Adobe Flash Player integrado (con una lista blanca interna que permitia que los applets de Flash en los sitios web de Facebook se cargaran automaticamente, evitando todos los demas controles de seguridad que requieren la activacion del usuario).\u200b  Edge no admite tecnologias heredadas como ActiveX y Browser Helper Objects, sino que usa un sistema de extensiones.\u200b\u200b\u200b  Internet Explorer 11 sigue estando disponible junto con Edge en Windows 10 por compatibilidad; sigue siendo identico a la version de Windows 8.1 y no utiliza el motor de Edge como se anuncio anteriormente.\u200b\u200b\u200b  Edge se integra con las plataformas en linea de Microsoft para proporcionar control de voz, funcionalidad de busqueda e informacion dinamica relacionada con las busquedas dentro de la barra de direcciones. Los usuarios pueden realizar anotaciones en paginas web que se pueden almacenar y compartir con OneDrive,\u200b y pueden guardar paginas HTML y MHTML en sus equipos. Tambien se integra con la funcion \u201cLista de lectura\u201d y proporciona un \u201cModo de lectura\u201d que elimina el formato innecesario de las paginas para mejorar su legibilidad.\u200b  El soporte preliminar para extensiones de navegador se agrego en marzo de 2016, con la compilacion 14291, inicialmente se admitieron tres extensiones. Microsoft indico que el retraso en permitir extensiones y el peque\u00f1o numero se debio a problemas de seguridad.\u200b  Edge es compatible con Microsoft Defender para analizar sitios webs infectados o malintencionados, bloquear las descargas de aplicaciones o archivos con baja reputacion o no autorizadas y proteger de sitios potencialmente no deseados que recopilen informacion privada.\u200b  EdgeHTML fue el motor proprietario desarrollado originalmente para Edge. Era una bifurcacion de Trident que elimino todo el codigo heredado de versiones anteriores de Internet Explorer, con la mayoria de su codigo fuente reescrito para admitir estandares web e interoperabilidad con otros navegadores modernos.\u200b\u200b EdgeHTML fue escrito en C++.\u200b  El motor de representacion se lanzo por primera vez como una opcion experimental en Internet Explorer 11 como parte de la compilacion de Windows 10 Preview 9926.\u200b  EdgeHTML estaba destinado a ser totalmente compatible con el motor de dise\u00f1o WebKit utilizado por Safari, Chrome y otros navegadores. Microsoft declaro sus criterios de aceptacion originales: \u201cCualquier bug en Chromium y WebKit son errores que nos interesa corregir\u201d.\u200b  Una revision del motor en la version beta de Windows 10 por AnandTech encontro mejoras sustanciales de referencia sobre Trident, particularmente el rendimiento motor de JavaScript, que habia llegado a la par con el de Google Chrome.\u200b Otros puntos de referencia centrados en el rendimiento de la  WebGL API encontro que EdgeHTML funciona mucho mejor que Google Chrome y Mozilla Firefox.\u200b  Edge originalmente carecia de soporte para estandares de medios abiertos como WebM y Opus, pero estos fueron a\u00f1adidos mas tarde en Edge 14.14291.\u200b La version EdgeHTML de Microsoft Edge permanece instalada por motivos de compatibilidad, pero Windows la ocultara (version 44.19041.1.0).\u200b  Edge 84 habia puntuado 496 de 555 puntos en HTML5test.\u200b  La cadencia de lanzamiento del legado de Microsoft Edge estaba vinculada al ciclo de lanzamiento Windows 10 y usaba Windows Insider para obtener una vista previa de las nuevas versiones del navegador. Estas compilaciones preliminares se conocian como \u201cEdge Preview\u201d. Cada version principal de Windows incluia una version actualizada de Edge y su motor de renderizado.  El 8 de abril de 2019, Microsoft anuncio la introduccion de cuatro canales de vista previa: Canary, Dev, Beta y Stable y lanzo el canal Canary and Dev ese mismo dia con las primeras compilaciones de vista previa del nuevo Edge. Microsoft llama colectivamente a los canales Canary, Dev y Beta los \u201cInsider Channels de Microsoft Edge\u201d.\u200b Como resultado, las actualizaciones de Edge se desacoplaron de las nuevas versiones de Windows. Las versiones principales de Edge Stable ahora estan programadas para su lanzamiento cada 4 semanas, pero antes de la version 94, fue cada 6 semanas, siguiendo de cerca las versiones de Chromium.\u200b  En Chrome, cuando no se tiene internet y el mensaje \u201cSin conexion a internet\u201d se muestra, arriba, un Tiranosaurio rex de \u201c8-bit\u201d se muestra y se puede manejar, este juego fue cambiado por un colorido juego de surf basado en SkiFree, con la habilidad de cambiar de personaje, tener mas obstaculos, tres modos de juego y ser en dos dimensiones (el de Chrome es en una dimension)\u200b  Microsoft Edge incluye un modo de navegar privadamente, llamado modo InPrivate (similar a la navegacion privada de Safari, Firefox u Opera; o el modo incognito de Google Chrome) que permite navegar por Internet, con cierta privacidad, la cual al ser cerrada borra todas las cookies y el historial, ademas, las busquedas con Microsoft Bing no son asiociadas con el usuario. A pesar de esto, el navegador asegura que es posible que algunos sitios web puedan seguir rastreando. El historial, los favoritos y la configuracion no se pueden abrir y al escribir edge://history, edge://favorites o edge://settings (sus paginas web respectivamente) se abre una nueva ventana en el modo normal.\u200b  Es un modo agregado en la version 78 (que solo se lanzo en el canal Beta), el cual permite a las paginas web abrirse a un modo similar al que hacia Internet Explorer, esto permite poder abrir paginas web que requieran algun software antiguo que Microsoft Edge ya no utilice (como Java), lo cual significa que se podra abrir paginas web compatibles con este despues de su descontinuacion en 2022. Cuando este modo esta activado, el icono de Internet Explorer se muestra al lado de la informacion del sitio.\u200b  En diciembre de 2014, escribiendo para ZDNet, la escritora de tecnologia Mary Jo Foley informo que Microsoft estaba desarrollando un nuevo navegador web con nombre en codigo \u201cSpartan\u201d para Windows 10. Dijo que \u201cSpartan\u201d seria tratado como un nuevo producto separado de Internet Explorer, con Internet Explorer 11 siendo mantenido junto a el por compatibilidad.\u200b  A principios de enero de 2015, The Verge obtuvo mas detalles sobre \u201cSpartan\u201d de fuentes cercanas a Microsoft, incluidos informes de que reemplazaria a Internet Explorer en las versiones de escritorio y moviles de Windows 10.\u200b Microsoft presento oficialmente \u201cSpartan\u201d durante una conferencia magistral centrada en Windows 10 el 21 de enero de 2015.\u200b Fue descrito como un producto separado de Internet Explorer, su nombre final no fue anunciado.\u200b  \u201cSpartan\u201d se puso a disposicion del publico por primera vez como el explorador predeterminado de Windows 10 Technical Preview compilacion 10049, lanzado el 30 de marzo de 2015.\u200b El nuevo motor utilizado por \u201cSpartan\u201d estaba disponible en las compilaciones de Windows 10 como parte de Internet Explorer 11, Microsoft anuncio mas tarde que Internet Explorer estaria en desuso en Windows 10 y no usaria el motor \"Spartan\u201d.\u200b\u200b  El 29 de abril de 2015, durante la Build Conference keynote, se anuncio que \u201cSpartan\u201d seria conocido oficialmente como Microsoft Edge.\u200b El logotipo y la marca del navegador se dise\u00f1aron para mantener la continuidad con la marca de Internet Explorer.\u200b La marca \u201cSpartan\u201d del proyecto se uso en versiones publicadas despues de la compilacion de 2015. El 25 de junio de 2015, Microsoft lanzo la version 19.10149 para Windows 10 Mobile que incluia la nueva marca. El 28 de junio de 2015, la version 20.10158 siguio para las versiones de escritorio, incluyendo tambien la marca actualizada. El 15 de julio de 2015, Microsoft lanzo la version 20.10240 como la version final de Insiders. La misma version se lanzo a los consumidores el 29 de julio de 2015.  El 12 de agosto de 2015, Microsoft inicio el programa de vista previa para la proxima version de Microsoft Edge. Lanzaron la version 20.10512 para usuarios moviles. 6 dias mas tarde seguido de la version 20.10525 para usuarios de escritorio. La vista previa recibio varias actualizaciones. El 5 de noviembre de 2015, Microsoft lanzo la version 25.10586 como la version final de la segunda version publica de Edge para usuarios de escritorio. El 12 de noviembre, la actualizacion se lanzo tanto a los usuarios de escritorio como a los usuarios de Xbox One como parte de la Nueva actualizacion de la experiencia de Xbox. El 18 de noviembre de 2015, la actualizacion fue a Windows 10 Mobile. Por ultimo, el 19 de noviembre de 2015, la actualizacion tambien estuvo disponible como parte de Windows Server 2016 Technical Preview 4. [cita\u00a0requerida]  En noviembre de 2017, Microsoft lanzo la version de Edge para Android y iOS. Las aplicaciones incluyen integracion y sincronizacion con la version de escritorio en equipos con Windows 10. Debido a las restricciones de la plataforma y otros factores, estos puertos no usan el mismo motor de dise\u00f1o que la version de escritorio y, en su lugar, usan motores basados en WebKit nativos del sistema operativo.\u200b\u200b\u200b  En abril de 2018, Edge agrego el silenciamiento de audio de pesta\u00f1as.\u200b En junio de 2018, se agrego compatibilidad con las autenticaciones web a las compilaciones de Windows Insider, con compatibilidad con Windows Hello y tokens de seguridad externos.\u200b\u200b  Microsoft dejo de admitir (y por lo tanto de actualizar) Microsoft Edge Legacy el 9 de marzo de 2021.\u200b\u200b El 13 de abril de 2021, Microsoft lanzo una actualizacion de seguridad mensual acumulativa que reemplaza a Edge heredado con el nuevo Edge.\u200b  El 6 de diciembre de 2018, Microsoft anuncio su intencion de basar Edge en Chromium y Blink, utilizando el mismo motor de renderizado que Google Chrome pero con mejoras desarrolladas por Microsoft. Tambien se anuncio que habria versiones de Edge disponibles para Windows 7, Windows 8 y macOS, ademas de que todas las versiones se actualizaran con mas frecuencia.\u200b\u200b Segun el ejecutivo de Microsoft Joe Belfiore, la decision del cambio se produjo despues de que el CEO Satya Nadella le dijera al equipo en 2017 que el producto necesitaba ser mejor y presionara para reemplazar su motor de renderizado interno por uno de codigo abierto.\u200b  El 8 de abril de 2019, se lanzaron al publico las primeras compilaciones del nuevo Edge para Windows.\u200b El 20 de mayo de 2019, se lanzaron al publico las primeras compilaciones preliminares de Edge para macOS, marcando la primera vez en 13 a\u00f1os que un navegador de Microsoft estaba disponible en la plataforma macOS.\u200b La ultima vez que un navegador de Microsoft estuvo disponible en la plataforma macOS fue Microsoft Internet Explorer para macOS, que fue retirado en enero de 2006.  El 18 de junio de 2019 el post IAmA en Reddit, un desarrollador de Microsoft Edge declaro que teoricamente era posible desarrollar una version de Linux en el futuro, pero en realidad no se habia comenzado a trabajar en esa posibilidad.\u200b  El 19 de junio de 2019, Microsoft puso Edge a disposicion tanto en Windows 7 como en Windows 8 en versiones Insider.\u200b  El 20 de agosto de 2019, Microsoft puso su primera compilacion beta de Edge disponible para Windows 7, Windows 8, Windows 10 y macOS.\u200b  En agosto de 2019 tambien se eliminaron los soportes para el formato de archivo EPUB.\u200b En Microsoft Ignite, Microsoft lanzo una version actualizada del logotipo de Edge.\u200b  El nuevo Edge fue lanzado el 15 de enero de 2020.\u200b\u200b  El 22 de septiembre de 2020, Microsoft anuncio que una version beta de Edge para Linux estaria disponible en forma de vista previa en octubre de 2020. Esto se produce despues de que la compa\u00f1ia anunciara en noviembre de 2019 que se desarrollaria una version de Linux y se confirmaria en mayo de 2020 que la version de Linux estaba en desarrollo.\u200b\u200b La primera version preliminar para Linux se lanzo el 20 de octubre de 2020.  El soporte para el nuevo Edge en Windows 7 finalizo el 15 de enero de 2023.\u200b  Los primeros resultados del motor de renderizado EdgeHTML (incluido en el lanzamiento de la primera beta de Edge en Windows 10 compilacion 10049) demostro haber mejorado drasticamente el rendimiento en JavaScript en comparacion a Trident en Internet Explorer 11, y que el nuevo navegador tuvo un rendimiento similar a Google Chrome 41 y Mozilla Firefox 37. En los resultados de SunSpider, Edge es mas rapido que los otros navegadores,\u200b mientras que en otros resultados operaba mas lento que Google Chrome, Mozilla Firefox y Opera.\u200b  Resultados posteriores realizados con la version 10122 mostraron una mejora significativa del rendimiento en comparacion con Internet Explorer 11 y Edge version 10049. Segun Microsoft, esta iteracion de Edge ha obtenido mejores resultados que Chrome y Firefox en Google Octane 2.0 y Apple Jetstream.\u200b  En julio de 2015, Edge obtuvo 402 de 555 puntos en HTML5test.  Chrome 43 y Firefox 38 obtuvieron 526 y 467 respectivamente, mientras que Internet Explorer 11 obtuvo 336.\u200b  En agosto de 2015, Microsoft lanzo Windows 10 compilacion 10532, que incluye Edge en su version 21.10532.0. Esta version beta obtuvo 440 de 555 puntos en HTML5test, sin embargo, esta puntuacion es inferior en 5 puntos, debido a un error en la deteccion de caracteristicas en la prueba, la puntuacion real deberia ser 445 de 555 puntos.\u200b  En septiembre de 2015, Microsoft lanzo Windows 10 compilacion 10547, el cual incluye Edge en su version 21.10547.0 con el motor EdgeHTML actualizado a la version 13.10547. Esta version obtuvo 453 de 555 puntos en HTML5test, pero al igual que en la version anterior, su puntaje se redujo en 5 puntos debido a un error de no deteccion en la prueba de HTML5.  En noviembre de 2017, Microsoft lanzo Windows 10 compilacion 16299, el cual incluye Edge en su version 41.16299.15.0 con el motor EdgeHTML actualizado a la version 16.16299. Esta version obtuvo 476 de 555 puntos en HTML5test.  Desde el a\u00f1o 2018 Microsoft anuncio que Edge estaria basado en el proyecto de codigo abierto Chromium, desde entonces durante el 2019 estuvo lanzando una serie de Betas para el publico en general, para que asi fuera testado y las personas les enviaran comentarios. El nuevo Microsoft Edge tiene integrado un lector PDF, un lector EPUB y soporte para asm.js,\u200b y tenia integrado Adobe Flash Player, pero actualmente no se admite tras su descontinuacion el 31 de diciembre de 2020.  Edge no es compatible con las tecnologias antiguas, tales como ActiveX y Browser Helper Object (BHO), reemplazando su uso mediante un sistema de extensiones.\u200b Internet Explorer 11 se mantuvo disponible junto a Edge en Windows 10 por razones de compatibilidad, este siguio siendo identico a la version que se incluye en Windows 8.1, aunque desde enero de 2020 Internet Explorer es remplazado por una nueva funcionalidad integrada en Edge que permite adaptar el navegador al modo en el que se abrian las paginas webs en Internet Explorer.  Finalmente, el dia 15 de enero de 2020 Microsoft lanzo la version estable del nuevo navegador para Windows 7, Windows 8.1, Windows 10, macOS, Android, iOS y en octubre de ese mismo a\u00f1o una version para distribuciones Linux (Debian, Ubuntu, Fedora, OpenSUSE, etc.).  En una revision de agosto de 2015 de Windows 10 por Dan Grabham de TechRadar, Microsoft Edge fue elogiado por su rendimiento, a pesar de no estar en un estado completo de caracteristicas en el lanzamiento.\u200b Andrew Cunningham de Ars Technica elogio el navegador por ser \u201ctremendamente prometedor\u201d y \u201cun navegador mucho mejor de lo que Internet Explorer nunca fue\u201d pero lo critico por su falta de funcionalidad en el lanzamiento.\u200b Thom Holwerda de OSNews critico a Edge en agosto de 2015 por su barra de URL oculta, falta de facilidad de uso, dise\u00f1o deficiente y un sistema de pesta\u00f1as que esta \u201ctan completamente roto que nunca deberia haberse enviado en una version final\u201d. Describio las caracteristicas implementadas del navegador como \u201cuna especie de broma cosmica\u201d, diciendo que \u201ces exasperante sin ni siquiera comienzar a describirlo\u201d.\u200b  Los datos de agosto de 2015, unas semanas despues del lanzamiento, mostraron que la aceptacion de Edge por parte de los usuarios era baja, con solo el 2% de los usuarios totales de computadoras usando el nuevo navegador. Entre los usuarios de Windows 10, el uso alcanzo un maximo del 20% y luego cayo al 14% hasta agosto de 2015.\u200b  En octubre de 2015, un investigador de seguridad publico un informe que describe un error en el modo \u201cInPrivate\u201d de Edge, lo que hace que los datos relacionados con los sitios visitados sigan siendo cache en el directorio de perfiles del usuario, lo que teoricamente hace posible que otros determinen los sitios visitados. El error gano la atencion general a principios de febrero de 2016,\u200b y se corrigio con una actualizacion acumulativa el 9 de febrero de 2016.\u200b  El cambio de Microsoft a Blink como motor de Edge ha enfrentado una recepcion mixta. El movimiento aumenta la coherencia de la compatibilidad de la plataforma web entre los principales navegadores. Por esta razon, la medida ha atraido criticas, ya que reduce la diversidad en el mercado general de navegadores web y aumenta la influencia de Google (desarrollador de Blink) en el mercado general de navegadores por Microsoft cediendo su motor de navegador desarrollado de forma independiente.\u200b\u200b  Segun Douglas J Leith, un profesor de ciencias de la computacion de Trinity College de Dublin, Microsoft Edge es uno de los navegadores menos privados.\u200b En respuesta, un portavoz de Microsoft Edge explico que usa datos de diagnostico de usuario para mejorar el producto.\u200b  En junio de 2020, los usuarios criticaron las actualizaciones recien lanzadas de Windows 7, Windows 8.1 y Windows 10 que instalaron Edge e importaron algunos datos de usuario de Chrome y Firefox antes de obtener el permiso del usuario. Microsoft respondio indicando que si un usuario rechaza dar permiso de importacion de datos de Edge, Edge eliminara los datos importados. Sin embargo, si el explorador se bloquea antes de que el usuario tenga la oportunidad de rechazar la importacion, los datos ya importados no se borraran.\u200b\u200b The Verge llamo a estas \u201ctacticas de spyware\u201d y llamo a la \u201cexperiencia de primera ejecucion\u201d de Edge un \u201cpatron oscuro\u201d.\u200b  Las versiones se identifican con un numero de version en 4 partes (ejemplo: 91.0.864.37, la primera version 91). Las partes son mayor.menor.build.patch  Ejemplo: La version mas reciente el 1 de julio de 2021, 91.0.864.59, significa que la version mayor ha sido 91, menor casi como siempre es 0, ha habido 864 builds (desde que se lanzo) y es el patch 59  Similar a Google Chrome, Microsoft Edge posee 3 canales de pruebas, llamados:  El canal Beta recibe una actualizacion mayor cada 4 semanas, pero antes de lanzarse la version 94, era cada 6 semanas.\u200b  Segun StatCounter, en agosto de 2019 Edge supero la cuota de mercado de Internet Explorer (IE) en PC, Edge en cuarto lugar e IE en quinto. Si bien la cuota de IE se redujo, ninguna version unica de Edge es mas popular que Internet Explorer 11. La cuota de mercado de Edge sigue siendo baja, con IE siguiendo esta tendencia. Sin embargo, combinando la cuota de mercado de Edge e IE, los navegadores de Microsoft ocupan el tercer lugar en la cuota de mercado del navegador de PC, Chrome es el primero y Safari el segundo. Existen versiones moviles de Edge para Android e iOS. En las consolas de Microsoft, Edge reemplazo a IE como el navegador dominante unos meses despues de su lanzamiento en 2015.\u200b  La cuota de mercado varia segun la region. Algunos dias de la semana, Edge ocupa el segundo lugar con una cuota del 13,58\u00a0% en los Estados Unidos en PC.  Tras el lanzamiento de Edge Chromium, segun StatCounter es el 3.\u00ba navegador mas usado en septiembre de 2023, detras de Chrome, Safari.\u200b En PC, esta detras de Chrome y Safari, con un 10,63% de uso, superando asi a Firefox con un 4,49% mas, ademas de lograr poder hacer que alguna version unica de Edge tenga mayor uso que Internet Explorer 11.\u200b \u200b De acuerdo tambien por StatCounter, las computadoras de escritorio son su punto fuerte, llegando al uso de 10,63%\u200b comparado con los moviles, donde aparece bajo otros,\u200b en consolas hubo un cambio drastico de sus uso pasando de tener un 15,29% en consolas donde 12,82% pertenecian a la version \u201cLegacy\u201d, que esta sin soporte y 2,47% pertenecian a la version con Chromium a tener un 96,85% del mercado de navegadores de consola superando rapidamente al navegador de Sony PlayStation 4 y con la version basada en Chromium superando a la version \"Legacy\" quedando con un 96,21% con la version con Chromium y un 0,64% con la version \"Legacy\"\u200b\u200b   ","snippet":"Microsoft Edge (pronunciado\u00a0/\u025bd\u0292/\u00a0( escuchar)) es un navegador web desarrollado por Microsoft, basado en Chromium de Google. Fue lanzado por primera vez para Windows 10 y Xbox One en julio de 2015, lu","enlaces_salientes":["Microsoft_Edge","Microsoft_Edge","Microsoft_Edge","Internet_Explorer","Windows_10","Windows_11","Xbox_One_System_Software","Navegador_web","Microsoft","Desarrollador_de_software","Microsoft","Ingenier%C3%ADa_de_software","Software_propietario","EdgeHTML","Chromium_(navegador)","Licencia_de_software","Software_propietario","EdgeHTML","Plataforma_(inform%C3%A1tica)","Windows_7","Windows_8.1","Windows_10","Windows_11","Windows_10X","Xbox_One","Xbox_Series_X_y_Series_S","Android","IOS","Linux","MacOS","EdgeHTML","Blink","WebKit","Blink","Blink","Ciclo_de_vida_del_lanzamiento_de_software","24_de_octubre","2023","Ciclo_de_vida_del_lanzamiento_de_software","Windows_10","Windows_11","Xbox_One_System_Software","Internet_Explorer","Navegador_web","Microsoft","Chromium_(navegador)","Google","Windows_10","Xbox_One","Android","IOS","MacOS","Windows_7","Windows_8","Windows_8.1","GNU/Linux","Motor_de_renderizado","EdgeHTML","EdgeHTML","Google","Chromium_(navegador)","Blink","V8_(Ingenieria_JavaScript)","Microsoft","Windows_7","Windows_8","Windows_8.1","Windows_10","MacOS","Windows_11","Microsoft","Chromium_(navegador)","15_de_enero","2020","Microsoft_Cortana","Microsoft_Store_(software)","Chrome_Web_Store","Internet_Explorer","ActiveX","Browser_Helper_Object","Windows_10","Windows_10_Mobile","Windows_11","Xbox_One","Xbox_Series_X_y_Series_S","Internet_Explorer_11","Internet_Explorer_Mobile","Trident","Barra_lateral_(inform%C3%A1tica)","PDF","Adobe_Flash_Player","Lista_blanca","Facebook","Browser_Helper_Object","Microsoft","Barra_de_direcciones","OneDrive","HTML","Complemento_(inform%C3%A1tica)","Microsoft_Defender","Sitio_web","Privacidad_en_Internet","EdgeHTML","Software_propietario","Bifurcaci%C3%B3n_(desarrollo_de_software)","Trident","Est%C3%A1ndares_web","C%2B%2B","WebKit","Apple_Safari","Google_Chrome","JavaScript","Google_Chrome","WebGL","EdgeHTML","Google_Chrome","Mozilla_Firefox","WebM","Opus_(c%C3%B3dec)","HTML5test","Windows_10","Windows_Insider","Microsoft","Versi%C3%B3n_de_software","Chromium_(navegador)","Google_Chrome","Apple_Safari","Firefox","Opera_(navegador)","Google_Chrome#Modo_Inc\u00f3gnito","Google_Chrome","Cookies","Microsoft_Bing","Sitio_web","P%C3%A1gina_web","Internet_Explorer","Software","Java_(lenguaje_de_programaci%C3%B3n)","Internet_Explorer","ZDNet","Microsoft","Windows_10","Internet_Explorer","Internet_Explorer_11","The_Verge","Internet_Explorer","Windows_10","Microsoft","Windows_10_Mobile","Windows_Server_2016","Android_(sistema_operativo)","IOS","Windows_10","WebKit","Pesta%C3%B1a","Windows_Hello","EdgeHTML","Chromium_(navegador)","Blink","Google_Chrome","Windows_7","Windows_8","MacOS","Satya_Nadella","Microsoft_Windows","Reddit","GNU/Linux","Windows_7","Windows_8","Windows_7","Windows_8","Windows_10","MacOS","EPUB","Microsoft","GNU/Linux","GNU/Linux","GNU/Linux","Windows_7","Motor_de_renderizado","EdgeHTML","Windows_10","JavaScript","Trident","Internet_Explorer_11","Google_Chrome","Mozilla_Firefox","Google_Chrome","Mozilla_Firefox","Opera_(navegador)","Internet_Explorer_11","Microsoft","Google_Chrome","Mozilla_Firefox","Google_Chrome","Internet_Explorer_11","Microsoft","Windows_10","Microsoft","Windows_10","EdgeHTML","HTML5","Microsoft","Windows_10","EdgeHTML","Chromium_(navegador)","PDF","EPUB","Adobe_Flash_Player","ActiveX","Browser_Helper_Object","Internet_Explorer_11","Windows_10","Windows_8.1","Internet_Explorer","Internet_Explorer","Windows_7","Windows_8.1","Windows_10","MacOS","Android","IOS","GNU/Linux","Debian","Ubuntu","Fedora_(distribuci%C3%B3n_Linux)","OpenSUSE","Ars_Technica","Cach%C3%A9_web","Google","Blink","Ciencias_de_la_computaci%C3%B3n","Trinity_College_Dublin","Windows_7","Windows_8.1","Windows_10","Google_Chrome","Firefox","Microsoft","The_Verge","Versi%C3%B3n_de_software","EdgeHTML","Windows_10","Microsoft_Cortana","Windows_10_Mobile","Xbox_One","Microsoft_Cortana","Blink","Windows_7","Windows_8","Windows_8.1","MacOS","Internet_Explorer","Adobe_Flash_Player","Microsoft_Bing","Google_Chrome","Semana","D%C3%ADa","Google_Chrome","Safari_(navegador)","Mozilla_Firefox","Opera_(navegador)","Internet_Explorer","Internet_Explorer","Google_Chrome","Safari_(navegador)","Google_Chrome","Safari_(navegador)","Google_Chrome","Safari_(navegador)","Mozilla_Firefox","Internet_Explorer","EdgeHTML","Chromium_(navegador)","Sony","PlayStation_4","Chromium_(navegador)","EdgeHTML","Chromium_(navegador)","EdgeHTML","The_Verge","Microsoft","Microsoft","The_Verge","Vox_Media","The_Verge","Vox_Media","ZDNet","CBS_Interactive","Microsoft","ZDNet","CBS_Interactive","The_Verge","Vox_Media","The_Verge","Vox_Media","Ars_Technica","Cond%C3%A9_Nast","The_Verge","Vox_Media","CNET","CBS_Interactive","Microsoft","ZDNet","CBS_Interactive","ZDNet","Ars_Technica","Internet_Explorer","Control_de_autoridades"]}
{"url":"Google_Chrome","titulo":"Google Chrome","contenido":"Windows, macOS, Linux (119.0.6045.105)31 de octubre de 2023 (5 dias)\u200b  Android (119.0.6045.66)31 de octubre de 2023 (5 dias)\u200b  Windows, macOS, Linux (120.0.6099.5 Beta)1 de noviembre de 2023 (4 dias)\u200b  Android (120.0.6099.4 Beta)1 de noviembre de 2023 (4 dias)\u200b  Google Chrome es un navegador web de codigo cerrado\u200b\u200b desarrollado por Google, aunque derivado de proyectos de codigo abierto (como el motor de renderizado Blink).\u200b\u200b\u200b Esta disponible gratuitamente. El nombre del navegador deriva del termino en ingles usado para el marco de la interfaz grafica de usuario (\u00abchrome\u00bb).  Cuenta con mas de 3.400 millones de usuarios,\u200b y dependiendo de la fuente de medicion global, se considera el navegador mas usado de la Web, logrando la popularidad mundial en la primera posicion con el 77,3% de usuarios de red mundial. \u200b  Los lanzamientos de Chrome son obtenidos a partir de Chromium, el proyecto de software libre que tambien sirve de base para el sistema operativo Chrome OS.\u200b Chromium es publicado con una licencia de derechos de autor laxa.\u200b En esencia, los aportes hechos por el proyecto libre Chromium fundamentan el codigo fuente del navegador base sobre el que esta construido Chrome y por tanto tendra sus mismas caracteristicas, a las cuales Google adiciona otras que no son software libre. Tambien se cambia el nombre y logotipo por otros ligeramente diferentes para proteger la marca comercial de Google. El resultado se publica bajo terminos de software privativo.\u200b De acuerdo a la documentacion para desarrolladores, \u00ab\u201cChromium\u201d es el nombre del proyecto, no del producto, y no deberia aparecer nunca entre las variables del codigo, nombres de APIs, etc. Utilicese \u201cchrome\u201d en su lugar\u00bb.\u200b  El 2 de septiembre de 2008, salio a la luz la primera version al mercado, siendo esta una version beta.\u200b Finalmente, el 11 de diciembre de 2008, se lanzo una version estable al publico en general.\u200b Actualmente el navegador esta disponible para Windows, macOS, Linux, Android y iOS.  Actualmente, Google Chrome cuenta con cuatro canales de distribucion para la descarga y prueba de todas sus compilaciones. Los canales comunes denominados \u00abStable\u00bb, \u00abBeta\u00bb y \u00abDev\u00bb son accesibles desde el sitio web del proyecto Chromium,\u200b siendo los dos ultimos repositorios para versiones de desarrollo. El 22 de julio de 2010, Google anuncio un nuevo sistema de lanzamientos mas frecuente para ofrecer a los usuarios caracteristicas nuevas cuanto antes, con la meta de entregar versiones estables cada 6 semanas.\u200b\u200b Debido a esto, se incorporo un nuevo canal de distribucion (denominado \u00abCanary\u00bb) en aras de proporcionar una version diaria para pruebas en conjunto con otros canales de desarrollo del navegador;\u200b el nombre del canal hace referencia a la practica de llevar un canario a las minas de carbon para permitir a los trabajadores la deteccion temprana de .\u200b  En febrero de 2012, Google lanzo \u201cChrome para Android Beta\u201d, cuya version esta disponible solo para Android 4.0 'Ice Cream Sandwich' en telefonos inteligentes y tabletas. Con la posibilidad de abrir multiples pesta\u00f1as, sincronizacion de marcadores y pesta\u00f1as con la version de escritorio, modo incognito, y ver sitios de uso recientes.\u200b A finales de junio Chrome para Android se volvio una version estable.  En junio de 2012, durante el Google I/O 2012, se anuncio que Chrome se utilizara como navegador por defecto en Android 4.1 \u2018Jelly Bean\u2019 junto con el lanzamiento de la tableta Nexus 7.\u200b Tambien se anuncia Chrome para iOS, el cual esta disponible en iPhone, iPod touch y iPad.\u200b  En enero de 2013, las versiones Beta de Chrome tambien estan disponibles en Android para telefonos y tabletas,\u200b las cuales son de las versiones mas descargadas.  En abril de 2013, Google anuncia su nuevo motor de renderizado basado en WebKit para Chrome y Chromium, llamado Blink, el cual se utilizara desde la version 28. Las razones meramente tecnicas del cambio desde WebKit, son optimizar el codigo base y orientar su desarrollo especificamente para contribuir a la Web y optimizar Chrome.\u200b Opera, otro navegador web, tambien usa Blink,\u200b y Microsoft Edge tambien lo hace desde la version 79.  Solo Windows: Desempe\u00f1o un 30\u00a0% mas rapido que la version 3.0. Soporte para mas de 1500 extensiones, sincronizacion de marcadores en linea. Mejoras en HTML5 para notificaciones personalizadas, bases de datos en web, almacenamiento local, y soporte para Ruby. Aumento en el rendimiento de JavaScript V8, y Skia. Un 42\u00a0% mas rapida en rendimiento que la version 3.0.\u200b\u200b  En Develop Liverpool 2011, Paul Kinlan anuncio que en una futura version de Google Chrome (que seria lanzada en el primer trimestre del 2012), este soportaria reconocimiento de dispositivos plug-and-play (enchufar y jugar) y camaras web.\u200b  Las metas primordiales al dise\u00f1ar el navegador fueron mejorar la seguridad, velocidad y estabilidad que los navegadores existentes ofrecian. Se realizaron tambien cambios importantes a la interfaz de usuario. Chrome fue ensamblado partiendo de 26 diferentes bibliotecas de codigo de Google y otras de terceros tales como Netscape.\u200b  Chrome descarga periodicamente actualizaciones de dos listas negras (para sitios de suplantacion de identidad y para aquellos que contengan software malicioso) y advierte a los usuarios cuando intenten visitar una pagina de contenido peligroso. Este servicio tambien esta disponible para su uso por terceros a traves de un API publico y gratuito llamado \u00abGoogle Safe Browsing API\u00bb. En el proceso de mantenimiento de estas listas negras, Google tambien notifica a los propietarios de los sitios enumerados que pueden no ser conscientes de la presencia de los programas da\u00f1inos.[cita\u00a0requerida]  El equipo de desarrollo a cargo de Gears estaba considerando la posibilidad de un navegador multiproceso (cabe se\u00f1alar que un problema con las implementaciones actuales para navegadores web es que son inherentemente de un unico proceso) y Chrome ha aplicado este concepto con arquitectura de multiprocesamiento similar al que utiliza Internet Explorer 8. Se asigna a cada tarea (por ejemplo, pesta\u00f1as, plugins) un proceso separado. Esto evita que las tareas se interfieran unas a otras, lo que es bueno para la seguridad y la estabilidad; cada pesta\u00f1a en Chrome se aisla (del ingles sandbox, textualmente caja de arena) para \u00abimpedir la instalacion de software malicioso\u00bb o \u00abimpedir que lo que ocurre en una pesta\u00f1a pueda afectar a lo que sucede en otra\u00bb, en un modelo de asignacion de procesos complejo.\u200b  Si por algun motivo una mala programacion de una pagina web o un plugin determinado ocasionan un cuelgue, solo se perjudicara la pesta\u00f1a actual dejando las demas intactas. Esa pesta\u00f1a que falla pasara a ser una \u00abpesta\u00f1a triste\u00bb, concepto similar a la pantalla de error de versiones anteriores del sistema operativo Mac OS, la sad Mac.  Siguiendo el principio de minimo privilegio, cada proceso es despojado de sus derechos y con ello no puede escribir ni leer archivos en zonas sensibles (por ejemplo, documentos, escritorio). Este metodo es similar al \u00abmodo protegido\u00bb que utiliza Internet Explorer en Windows Vista. El equipo de desarrollo a cargo de \u00abSandbox\u00bb dice haber \u00abconvertido las actuales fronteras de los procesos en una carcel\u00bb, segun sus propias palabras. Por ejemplo, el software malicioso que se ejecuta en una pesta\u00f1a no puede robar numeros de tarjetas de credito, interactuar con el raton o decirle al sistema operativo que ejecute un programa al inicio del sistema y, ademas, este proceso desaparecera cuando la pesta\u00f1a se cierre. Esto no es mas que la imposicion de un simple modelo de seguridad informatica segun el cual hay dos niveles de seguridad multinivel: usuario y caja de arena. La caja de arena solo puede responder a solicitudes de comunicacion iniciadas por el usuario.  Algunos plugins como el Adobe Flash Player no siguen algunos estandares de seguridad y por ello no pueden ser aislados como las pesta\u00f1as. Estos a menudo necesitan ejecutarse en o por encima del nivel de seguridad del propio navegador. Para reducir la exposicion a un ataque, los plugins se ejecutan en procesos separados que se comunican con el motor de renderizado, que a su vez opera con \u00abmuy bajos privilegios\u00bb en procesos dedicados para cada pesta\u00f1a. Dichos complementos tendran que ser modificados para operar dentro de esta arquitectura de software y seguir asi los principios de minimos privilegios.  Ademas, Chrome cuenta con una utilidad administradora de procesos, denominada Administrador de tareas que permitira conocer el estado del navegador en su totalidad, ver individualmente estadisticas de sitios web o plugins (los cuales tambien van en procesos separados) sobre uso de memoria del sistema, ancho de banda usado (velocidad medida en bytes/s) y consumo de tiempo de CPU, ademas de dar la opcion de poder finalizar la ejecucion de cada elemento individualmente.  Chrome incluye un modo de navegar de Incognito\u200b (similar a la Navegacion privada de Safari, Firefox u Opera; o el modo InPrivate de Internet Explorer y Microsoft Edge) que permite navegar por Internet con cierta privacidad, ya que no registra ninguna actividad y borra de los archivos temporales las cookies utilizadas, pero aun puede ser visible para el proveedor de servicios o los sitios web visitados. Comunmente utilizado para ver contenido para mayores de edad.  La maquina virtual para JavaScript se considero un proyecto suficientemente importante como para separarlo, tal como se hizo con Tamarin de Adobe/Mozilla, y fue desarrollado por un equipo situado en Dinamarca. Las actuales implementaciones se dise\u00f1aron \u00abpara los peque\u00f1os programas, donde el rendimiento y la interactividad del sistema no eran importantes\u00bb. Sin embargo, aplicaciones Web como Gmail \u00abestan utilizando el navegador web al maximo cuando se trata de manipulaciones DOM y JavaScript\u00bb. El resultante motor JavaScript V8, fue dise\u00f1ado poniendo enfasis en la velocidad, e introduce nuevas caracteristicas a este fin como transiciones de clase ocultas, generacion dinamica de codigo, y recoleccion precisa de basura (refiriendose a liberacion de memoria). Pruebas de Google demuestran que V8 es aproximadamente dos veces mas rapido que Firefox 3 y que la version beta de Safari 4.\u200b  Muchos sitios web han realizado pruebas de rendimiento usando la herramienta Benchmark SunSpider para JavaScript, asi como un conjunto de pruebas de computo intensivas propias de Google, las cuales incluyen ray tracing y la resolucion de restricciones.\u200b De manera unanime reportaron que Chrome rindio mucho mas rapido que todos sus competidores con los que habia sido comparado, incluyendo Safari, Firefox 3, Internet Explorer 7 e Internet Explorer 8.\u200b\u200b\u200b\u200b  Chrome tambien guarda y utiliza una cache de direcciones DNS para acelerar la carga de los sitios web.\u200b  La interfaz de usuario incluye opciones para ir atras, adelante, recargar pagina, ir y cancelar. Las opciones son similares a las del navegador Safari. El dise\u00f1o de la ventana esta basado en el tema nativo de Windows Vista.  Chrome incluye Google Gears, que a\u00f1ade caracteristicas para desarrolladores que podrian o no convertirse en estandar web, y por lo general relacionadas con la construccion de aplicaciones web (incluyendo soporte para uso sin conexion).  La pagina de inicio del navegador se sustituye de manera predeterminada por la misma que aparece cada vez que se abre una nueva pesta\u00f1a. Esta muestra miniaturas de los nueve sitios web mas visitados con las ultimas busquedas realizadas, los ultimos marcadores accedidos y pesta\u00f1as cerradas.\u200b Este concepto existia ya antes en el navegador Opera, conocido como \u00abMarcado rapido\u00bb.  Una novedad introducida en Chrome es Omnibox, siendo esta la barra de direcciones que aparece en la parte superior de cada pesta\u00f1a, similar a la de Opera. Incluye funcionalidades de autocompletar texto (unicamente autocompletara URLs que se hayan introducido manualmente en lugar de todos los enlaces), sugerencias de busqueda, paginas visitadas previamente, paginas populares (sin visitar) y busqueda en el historial de navegacion. Los motores de busqueda tambien pueden ser capturados por el navegador cuando se utilicen su respectiva interfaz de usuario presionando la tecla Tab \u21b9. Otra funcionalidad de la Omnibox es la modalidad de \u00abPegar y buscar\u00bb, accesible con el menu contextual.\u200b  Chrome permite crear accesos directos en el escritorio que permitan lanzar aplicaciones web directamente en el navegador. Cuando el navegador se abre de esta manera, la ventana no muestra ningun control sino unicamente la barra de titulo. Esto limita la interfaz del navegador a \u00abno interrumpir cualquier cosa que el usuario esta tratando de hacer\u00bb, lo que permite a las aplicaciones web ejecutarse junto a software local (similar a Mozilla Prism, Adobe AIR y Fluid).  Chrome utilizaba el motor de renderizado WebKit como recomendacion del equipo que desarrollo Android. Al igual que la mayoria de los navegadores, Chrome fue probado exhaustivamente antes de ser lanzado al publico. Las nuevas compilaciones del navegador son probadas de manera automatizada en cientos de miles de sitios web comunmente visitados, los cuales estan en el indice de Google y son accedidos en menos de 20-30 minutos.  Chrome soporta la interfaz de programacion de aplicaciones de Netscape (NPAPI),\u200b\u200b pero no soporta controles ActiveX.\u200b Ademas, Chrome no tiene un sistema de extensiones como el de Mozilla con la arquitectura XPInstall.\u200b El soporte para applets de Java se encuentra disponible en Chrome a partir de la actualizacion del entorno de ejecucion de Java 6 actualizacion 10 o superior.\u200b  Para desarrolladores web, Chrome incluye un elemento de inspeccion similar al que se incluye en la extension para Firefox, Firebug.\u200b  Las pesta\u00f1as son el principal componente de la interfaz de usuario de Chrome y, como tal, se han movido a la parte superior de la ventana en lugar de por debajo de los controles (similar al navegador Opera). Cada pesta\u00f1a tiene su propio conjunto de controles, entre ellos la barra de direcciones Omnibox. Las ventanas emergentes (en ingles pop-ups) \u00abestan confinadas a las pesta\u00f1as de las que provienen\u00bb y no aparecen por encima de la pesta\u00f1a actual sino como una peque\u00f1a barra de titulo en la parte inferior; podran usarse cuando el usuario explicitamente las arrastre hacia afuera. Las ventanas emergentes no se ejecutan en su propio proceso.  De forma predeterminada, no hay barra de estado, a diferencia de otros navegadores que muestran una en la zona inferior de la ventana de navegacion. Sin embargo, si el cursor del raton se mueve sobre un enlace, la direccion de este se mostrara en la parte inferior izquierda de la pantalla. Al igual que otros navegadores web como Microsoft Edge o Firefox, Chrome tiene un modo de pantalla completa, accesible mediante la tecla F11, que al contrario que en Explorer o Firefox, carece de una miniatura de la barra de herramientas de navegacion.  Una de las caracteristicas incluidas en el navegador, es la posibilidad de realizar busquedas sin tocar el teclado mediante el comando por voz.\u200b  Google Chrome tiene algunas paginas ocultas, no accesibles dentro de la interfaz de usuario. Para acceder a ellas, se pueden teclear diversas ordenes \"about:\" en la barra de direcciones. Ademas, Google Chrome usa el URI \u00abchrome\u00bb para varias herramientas de desarrollo. Se pueden ver todas las herramientas en \u00abchrome://chrome-urls\u00bb.  Son funciones que en futuras actualizaciones se podrian incorporar por defecto, ya que se encuentran en pruebas. Para utilizarlas, hay que dirigirse a \u00abchrome://flags\u00bb.  Los atajos de teclado y raton que incluye Google Chrome se pueden encontrar en su sitio web para distintos sistemas operativos.  Las paginas web se envian a traves de los servidores de Google, donde los datos son optimizados y comprimidos antes de ser recibidos por el dispositivo.\u200b\u200b Esta funcionalidad se puede activar en el navegador Chrome para Android,\u200b para la version de escritorio se activa mediante la extension \"Economizador de datos\".\u200b Esta funcionalidad no esta disponible para dispositivos iPhone o iPad por el momento.\u200b  En 2008, posterior al recientemente lanzado Chrome, el periodista del Daily Telegraph Matthew Moore resumio el veredicto de muchas revisiones tempranas en una sola frase: \u00abGoogle Chrome es atractivo, rapido y tiene algunas nuevas caracteristicas impresionantes, pero podria no estar listo para su rival Microsoft.\u00bb\u200b  Microsoft reporto no estar \u00abinquieto por una posible amenaza de Chrome\u00bb y predijo que \u00abmuchas personas acogeran Internet Explorer 8.\u00bb En Opera Software se dijo que \u00abChrome fortalecera la Web como la plataforma de aplicaciones mas grande del mundo\u00bb.\u200b La fundacion Mozilla comunico que la introduccion de Chrome en el mercado de navegadores web no fue \u00abninguna sorpresa\u00bb, que \u00abel objetivo de Chrome no es competir contra Firefox\u00bb, y que ademas no deberia afectar la financiacion de Google a Firefox.  El dia domingo, 18 de marzo de 2012, Google Chrome se convirtio en el navegador Web mas utilizado del planeta durante todo ese dia con 32,7\u00a0% de acogida de usuarios, superando a Internet Explorer por primera vez en su historia, con 32,5\u00a0% de preferencia de usuarios. Brasil, India y Rusia fueron los paises que mas utilizaron este navegador ese dia.\u200b  El desarrollador de juegos Plarium ha declarado que Chrome es \u00abel mejor navegador para juegos, simplemente porque es mas rapido y esta mejor configurado para juegos HTML5\u00bb.\u200b  En abril de 2019, el exejecutivo de Mozilla, Jonathan Nightingale, acuso a Google de sabotear intencional y sistematicamente el navegador Firefox durante la ultima decada para impulsar la adopcion de Chrome.\u200b\u200b    Chrome envia detalles sobre sus usuarios y sus actividades a Google a traves de mecanismos de rastreo forzosos y facultativos, los ultimos estando en su mayoria activados por defecto.\u200b  Algunos de estos mecanismos pueden ser deshabilitados opcionalmente durante el proceso de instalacion\u200b Ademas de su instalacion, Chrome necesita de Google Updater, el cual se conecta periodicamente a Google.\u200b Sin embargo, existe un paquete de instalacion independiente desde el sitio de Google y que no lo necesita.\u200b\u200b y mediante el apartado de opciones del navegador.\u200b\u200b  Algunos programas gratuitos como UnChrome pueden remover el numero de identificacion unico del navegador sin necesidad de hacer cambios mayores.\u200b Algunos forks como SRWare Iron, Iridium y Ungoogled Chromium aspiran a ofrecer versiones del navegador que no exfiltren informacion de los usuarios.\u200b\u200b  En marzo de 2010 Google introdujo un nuevo metodo de recoleccion de estadisticas: un identificador unico que se envia junto con las estadisticas cuando Google Update actualiza el navegador.\u200b  El servicio de sugerencias de busqueda ha sido criticado, ya que envia los terminos de busqueda a Google incluso antes de que el usuario presione \"enter\". Esto permite que el motor de busquedas web provea las sugerencias, pero tambien le revela un historial de busquedas asociadas a la sesion activa o direccion IP.\u200b  En 2022, fue criticado duramente por medios de comunicacion acerca de un estudio de Atlas VPN de que el navegador registro 3.159 vulnerabilidades desde sus inicios, a diferencia de Firefox con 1.100 y Opera Browser con 317, Segun los datos recogidos por Atlas VPN, Chrome registro hasta un 61\u202f% mas de errores que en todo el a\u00f1o 2021 y a\u00f1os anteriores, lo que se cree como  \u201cuna cifra inusualmente alta\u201d para un navegador que, desde su lanzamiento en 2008, solo ha tenido 806 vulnerabilidades.\u200b\u200b  La caracteristica de autocorreccion ortografica no funciona localmente, por lo que tambien posee implicaciones a la privacidad de los usuarios.\u200b  En junio de 2015 la comunidad de Debian GNU/Linux reporto que Chrome y Chromium estaban programados para descargar y tal vez activar un modulo extra\u00f1o de reconocimiento de voz (conocido como OK Google) que envia lo que escucha a los servidores de Google. Este comportamiento pasaba desapercibido por los usuarios, asi como por los encargados de Chromium en el sistema operativo Debian, lo cual causo conmocion en la prensa y grupos de defensa de los derechos de los usuarios.\u200b\u200b    El 27 de mayo de 2017, el blog oficial de Chrome\u200b anuncia que solo aceptara extensiones previamente validadas en su Chrome Web Store debido a su intento por mantener la seguridad de los usuarios que utilizan el navegador. Este cambio afecta a todos los usuarios del sistema operativo Windows.  Desde el lanzamiento de Chrome 56, que fue en enero de 2017, el navegador marcara las conexiones HTTP como no seguras con un icono en la barra de direcciones. Inicialmente solo se mostrara la advertencia cuando se requiera ingresar contrase\u00f1as o tarjetas de credito, mientras que paulatinamente en futuras versiones se planea marcar toda conexion HTTP como no segura.  Segun lo que ha publicado la compa\u00f1ia en su blog, \u201clos usuarios no perciben como advertencia la falta de un icono marcando un sitio seguro\u201d, ignorando el riesgo que contrae navegar por estos sitios.\u200b ","snippet":"Windows, macOS, Linux (119.0.6045.105)31 de octubre de 2023 (5 dias)\u200b  Android (119.0.6045.66)31 de octubre de 2023 (5 dias)\u200b  Windows, macOS, Linux (120.0.6099.5 Beta)1 de noviembre de 2023 (4 dias)\u200b","enlaces_salientes":["Google_Chrome","Google_Chrome","Google_Chrome","Navegador_web","Desarrollador_de_software","Google","Licencia_de_software","Freeware","Idioma","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Python","JavaScript","Plataforma_(inform%C3%A1tica)","IA-32","X86-64","Arquitectura_ARM","Interfaz_gr%C3%A1fica_de_usuario","GTK","Cocoa_(API)","Blink","V8_(int%C3%A9rprete_de_JavaScript)","WebKit","Ciclo_de_vida_del_lanzamiento_de_software","Ciclo_de_vida_del_lanzamiento_de_software","Navegador_web","Google","C%C3%B3digo_abierto","Motor_de_renderizado","Blink","Freeware","Idioma_ingl%C3%A9s","Interfaz_gr%C3%A1fica_de_usuario","Chromium_(navegador)","Software_libre","Chrome_OS","Licencia_permisiva","C%C3%B3digo_fuente","Google","Google","Software_privativo","2_de_septiembre","2008","Fases_del_desarrollo_de_software#Beta","11_de_diciembre","2008","Windows","MacOS","Linux","Android","IOS","Fases_del_desarrollo_de_software","22_de_julio","2010","Google","Serinus_canaria","Febrero","2012","Google","Android","Android","Tel%C3%A9fonos_inteligentes","Tableta_(computadora)","Android","Google_I/O","Nexus_7","IOS_(sistema_operativo)","IPhone","IPod_touch","IPad","Abril","2013","WebKit","Blink","Opera_(navegador)","Microsoft_Edge","WebKit","V8_(motor_JavaScript)","Gears","V8_(motor_JavaScript)","JavaScript","HTML_5","Acid3","Debian_GNU/Linux","Ubuntu","Fedora_(distribuci%C3%B3n_Linux)","OpenSUSE","32_bits","64_bits","Mac_OS_X_v10.5","HTML_5","V8_(motor_JavaScript)","Google_Translate","HTML5","Geolocalizaci%C3%B3n","Socket_de_Internet","Greasemonkey","WebM","PDF","HTML5","File_Transfer_Protocol","AppleScript","MacOS","PDF","Linux","PDF","Adobe_Flash","Chrome_Web_Store","Chrome_Web_Store","Adobe_Flash_Player","WebGL","GPU","JavaScript","V8_(motor_JavaScript)","Malware","GPU","CPU","Adobe_Flash_Player","Logotipo","Minimalista","GPU","3D","Hojas_de_estilo_en_cascada","API","HTML5","Cookie_(inform%C3%A1tica)","Adobe_Flash","Google_Gears","Adobe_Flash","Google","Windows","Linux","MacOS","PDF","Ubuntu","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","HTML5","JavaScript","Mac_OS_X_Lion","Favicon","API","Javascript","Chrome_Web_Store","Android","Canvas_(HTML)","GPU","IOS_(sistema_operativo)","API","Gamepad","Plug-in","WebRTC","Alta_resoluci%C3%B3n","Retina_Display","GPU","API","Plug-in","HTML5","JavaScript","Transport_Layer_Security","Opus_(c%C3%B3dec)","Idioma_coreano","Idioma_tamil","Idioma_alban%C3%A9s","DNS","IOS","Android","IOS","Blink","Blink","Windows","Chrome_OS","Android","API","CodeWeavers","Wine","Mac_OS_X_10.1","CrossOver_Office","SRWare_Iron","Biblioteca_(inform%C3%A1tica)","Netscape_Navigator","Timestamp","Lista_negra","Phishing","Malware","Interfaz_de_programaci%C3%B3n_de_aplicaciones","Ubuntu","Google_Gears","Multiproceso","Navegadores_web","Multiprocesamiento","Internet_Explorer_8","Aislamiento_de_procesos_(inform%C3%A1tica)","Malware","Mac_OS","Sad_Mac","Internet_Explorer","Windows_Vista","Plugin","Adobe_Flash_Player","Aislamiento_de_procesos_(inform%C3%A1tica)","Arquitectura_de_software","Proceso_(inform%C3%A1tica)","Plugin","Memoria_de_acceso_aleatorio","Byte","Tiempo_de_CPU","Modo_privado","Safari_(navegador)","Firefox","Opera_(navegador)","Microsoft_Edge#Modo_InPrivate","Internet_Explorer","Microsoft_Edge","Cookie_(inform%C3%A1tica)","M%C3%A1quina_virtual","JavaScript","Tamarin","Adobe","Mozilla_Application_Suite","Dinamarca","Aplicaciones_Web","Gmail","Document_Object_Model","V8_(motor_JavaScript)","Firefox","Safari_(navegador)","Benchmark_(inform%C3%A1tica)","WebKit#SunSpider","Raytracing","Internet_Explorer_7","Internet_Explorer_8","DNS","Windows_7","Interfaz_de_usuario","Safari_(navegador)","Ventana_(inform%C3%A1tica)","Windows_Vista","Google_Gears","Est%C3%A1ndares_web","Opera_(navegador)","Opera_(navegador)","Motor_de_b%C3%BAsqueda","Interfaz_de_usuario","Acceso_directo","Aplicaci%C3%B3n_Web","Software","Mozilla_Prism","Adobe_AIR","WebKit","Android","ActiveX","Mozilla_Firefox","Java_applet","Desarrollo_web","Firebug","Pesta%C3%B1a_(inform%C3%A1tica)","Interfaz_de_usuario","Opera_(navegador)","Ventana_emergente","Barra_de_estado","Chrome_Web_Store","Scripts","Greasemonkey","Extensible_Messaging_and_Presence_Protocol","Android","IOS_(sistema_operativo)","Google_Translate","HTML5","Geolocalizaci%C3%B3n","HTML5","Google_Maps","Flash_Player","Adobe_Systems_Incorporated","PDF","Chrome_Web_Store","HTML","XHTML","JavaScript","Hojas_de_estilo_en_cascada","Adobe_Flash","Lenguaje_de_programaci%C3%B3n_Java","AJAX","HTML5","WebGL","CSS3","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","WebGL","HTML5","Linux","MacOS","Windows","WebM","C%C3%B3dec","VP8","Vorbis","Matroska","YouTube","WebRTC","Barra_de_direcciones","Identificador_de_recursos_uniforme","IPhone","IPad","Daily_Telegraph","Internet_Explorer_8","Opera_Software","Fundaci%C3%B3n_Mozilla#Financiaci\u00f3n","18_de_marzo","2012","Brasil","India","Rusia","Plarium","Mozilla_(comunidad)","Mozilla_Firefox","Google","Google","Freeware","Direcci%C3%B3n_IP","Debian_GNU/Linux","OK_Google","HTTP","HTTP","Chrome","Chrome_Web_Store","Chrome_OS","Google_Chrome_Frame","Chromium_(navegador)","Google_Chrome_Canary","Microsoft_Edge","SRWare_Iron","Mozilla_Firefox","Opera_(navegador)","Safari_(navegador)","Internet_Explorer","Dinosaur_Game","2008","Google_Code","Google_Code","CodeWeavers","2_de_septiembre","2008","Internet_Archive","Plarium","Google","CNET","CBS_Interactive","Internet_Archive","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Bitcoin","titulo":"Bitcoin","contenido":"Bitcoin[nota 1]\u200b (simbolo:  o \u20bf; codigo: BTC) es una moneda digital descentralizada y un sistema de pago\u200b\u200b sin banco central o administrador unico.\u200b\u200b  La criptomoneda fue concebida en 2008 por una persona o grupo de personas bajo el seudonimo de Satoshi Nakamoto,\u200b cuya identidad concreta se desconoce.\u200b En 2009 se presenta su implementacion como codigo libre y la red entre iguales comienza a funcionar.\u200b  Se han planteado criticas sobre el elevado uso de electricidad del proceso de mineria, uso en comercio ilicito y pagos de extorsiones, la perdida de la descentralizacion conforme incrementa la dificultad de minado, estafas que se aprovechan de nuevos usuarios interesados en adquirir bitcoines, asi como la creciente especulacion financiera en comparacion con su uso como moneda corriente.\u200b\u200b Al tratarse de un fenomeno financiero inedito, las opiniones de los economistas sobre las criptomonedas varian enormemente en cuanto a su verdadero valor y estabilidad a largo plazo.\u200b\u200b\u200b Por ejemplo, el Parque Nacional de Virunga, declarado Patrimonio de la Humanidad por la UNESCO y situado en el este del Congo (Africa), paga sus operaciones mediante una rentable explotacion minera de Bitcoin alimentada por la central hidroelectrica del Parque.\u200b  Bitcoin es moneda oficial en El Salvador\u200b y Republica Centroafricana.\u200b  Multinacionales como MicroStrategy\u200b Time Inc.\u200b y Dish Network\u200b permiten el pago con bitcoines, asi como Virgin Galactic\u200b\u200b y Reddit,\u200b entre otros.  En la actualidad una cantidad considerable de empresas y peque\u00f1os negocios aceptan bitcoines como medio de pago\u200b para servicios de todo tipo. Su alcance internacional, y el hecho de que los usuarios pueden comerciar de forma pseudoanonima, ha permitido que se abra paso en sectores cada vez mas regulados, como apuestas en linea y partidas de poker.\u200b  Los intercambios entre Bitcoin y moneda local suelen llevarse a cabo a traves de plataformas en linea, encuentros presenciales\u200b y cajeros automaticos especializados.\u200b\u200b\u200b\u200b\u200b  Existen diversidad de plataformas que facilitan el intercambio de Bitcoin por otras criptomonedas, incluyendo monedas de precio estable denominadas stablecoins.  Normalmente las transacciones con bitcoines se suelen hacer mediante un tipo de plataformas llamadas \u00abcarteras\u00bb o \u00abbilleteras\u00bb, bien intangibles, en forma de programas informaticos, bien tangibles, en forma de dispositivos electronicos. Algunos ejemplos de carteras electronicas pueden ser las fabricadas por las empresas Trezor, OpenDime y Ledger, entre otras. Tambien se pueden realizar transacciones usando billetes de papel con la clave privada impresa o monedas Casascius.\u200b  Existen complementos para la mayor parte de las plataformas de comercio electronico, como WordPress, Drupal, entre otras, que facilitan su uso como medio de pago.\u200b  El uso de Bitcoin y los servicios relacionados con el estan sujetos a la legislacion de cada pais, provincia, municipio, u otras entidades administrativas, pudiendo ser legal o ilegal dependiendo de si se han realizado decretos al respecto, o como consecuencia de la decision expresa de reconocer o tratarlo como divisa, valor, mercancia, etc., por alguna entidad reguladora con jurisdiccion en alguna de esas materias. Por lo general, cuando no existe un marco regulador, se asume su alegalidad (estatus de \u00abno regulado\u00bb) en funcion del principio de legalidad del Derecho, el cual se\u00f1ala que solo pueden castigarse las conductas expresamente descritas como delitos en una ley anterior a la comision de la accion, lo que, dicho de otro modo, establece que esta permitido todo aquello que no esta expresamente prohibido por la ley.\u200b  El 31 de octubre de 2008 se envia un mensaje firmado con el pseudonimo Satoshi Nakamoto y titulado \u00abBitcoin P2P e-cash paper\u00bb, a una lista de correo sobre criptografia que pertenece a la sociedad limitada  Metzger, Dowdeswell & Co. LLC.\u200b\u200b\u200b\u200b  En este mensaje se describe \u00abun nuevo sistema de efectivo electronico\u00bb llamado Bitcoin \u00abque es totalmente peer-to-peer y que no esta basado en terceros de confianza\u00bb, ademas, se hace referencia a un documento tecnico titulado Bitcoin: A Peer-to-Peer Electronic Cash System.\u200b\u200b\u200b\u200b  El 3 de enero de 2009 entra en funcionamiento la primera red peer-to-peer basada en dicho protocolo (tambien bajo el nombre de \u00abBitcoin\u00bb) luego de la puesta en marcha del primer software de codigo abierto para correr nodos de la moneda, lo cual supuso tambien la creacion de los primeros bitcoines y el inicio de la mineria de esta. El primer bloque de bitcoines, conocido como el bloque de genesis, es minado por el propio Satoshi Nakamoto.\u200b  El 9 de enero de 2009 se lanza el primer cliente de software de codigo abierto para correr nodos de la moneda a traves de la plataforma SourceForge.\u200b\u200b\u200b  Entre 2010 y 2011 comenzaron a surgir plataformas de intercambio que facilitaban la compraventa de bitcoins con dinero local a traves de transferencias bancarias. A estas le siguieron las pasarelas de pago que ofrecian a los comerciantes la posibilidad de aceptar pagos con bitcoins cobrando el importe de las ventas en moneda local directamente en sus cuentas bancarias.  En 2011 organizaciones como la Electronic Frontier Foundation,\u200b Internet Archive,\u200b Freenet,\u200b la Free Software Foundation,\u200b\u200b comienzan a aceptar donaciones en bitcoines.  El 14 de junio de 2011 Wikileaks\u200b tambien comienza a aceptar donaciones de bitcoines tras el bloqueo orquestado por los procesadores de pago electronico Visa, MasterCard y PayPal.\u200b  En octubre de 2013, el precio de la moneda cayo mas de un 25% tras al cierre de Silk Road (un mercado negro en linea en el que se podian comerciar drogas ilegales con bitcoines) por parte del FBI.\u200b  El 27 de noviembre de 2013, Bitcoin supero por primera vez el umbral de los 1.000 dolares, lo que supuso un incremento de 4.000% de su precio desde inicios de a\u00f1o.\u200b  En 2014 la Fundacion Wikimedia\u200b y la Fundacion Mozilla\u200b comienzan a aceptar donaciones en bitcoines.  Una investigacion realizada por la Universidad de Cambridge estimo que, en 2017, habia entre 2,9 y 5,8 millones de usuarios unicos que usaban una billetera de criptomonedas, la mayoria de ellos con bitcoin. El 15 de julio de 2017, se aprobo la controvertida actualizacion del software Segregated Witness [SegWit]. Segwit estaba destinado a admitir Lightning Network y mejorar la escalabilidad. Posteriormente, SegWit se activo en la red el 24 de agosto de 2017. El precio de bitcoin aumento casi un 50% en la semana posterior a la aprobacion de SegWit.  El 21 de julio de 2017, bitcoin cotizaba a US$2748, un 52% mas que los $1835 del 14 de julio de 2017. Los partidarios de bloques grandes que no estaban satisfechos con la activacion de SegWit bifurcaron el software el 1 de agosto de 2017 para crear Bitcoin Cash (BCH), convirtiendose en una de las muchas bifurcaciones de bitcoin como Bitcoin Gold.\u200b  El 20 de junio de 2017, el estandar Unicode a\u00f1adio el punto de codigo U+20BF como representacion del simbolo de Bitcoin.\u200b  Los precios de Bitcoin se vieron afectados negativamente por varios ataques o robos de los intercambios de criptomonedas, incluidos los robos de Coincheck en enero de 2018, Bithumb en junio y Bancor en julio. Durante los primeros seis meses de 2018, se reporto el robo de $761 millones en criptomonedas de los intercambios. El precio de Bitcoin se vio afectado a pesar de que se robaron otras criptomonedas en Coinrail y Bancor, ya que los inversores estaban preocupados por la seguridad de los intercambios de criptomonedas.  En febrero de 2019, el intercambio de criptomonedas canadiense Quadriga Fintech Solutions fracaso y faltaron aproximadamente $200 millones. Para junio de 2019, el precio se habia recuperado a $13.000. Para septiembre de 2019, Intercontinental Exchange (el propietario de NYSE) comenzo a negociar futuros de bitcoin en su bolsa llamada Bakkt. Bakkt tambien anuncio que lanzaria opciones sobre bitcoin en diciembre de 2019. En diciembre de 2019, YouTube elimino los videos de bitcoines y criptomonedas, pero luego restauro el contenido despues de considerar que \"habian tomado la decision equivocada\".\u200b  El 7 de enero de 2021, el precio de 1 BTC alcanzo por primera vez los $40.000 dolares y ya han sido acu\u00f1ados alrededor de 18.593.000 BTC de los 21 millones totales.\u200b  El 16 de febrero de 2021, el precio de cada unidad de Bitcoin alcanzo por primera vez un millon de pesos mexicanos, al mismo tiempo que alcanzaba los $50.000 llego a un precio de 1,014,345 pesos mexicanos en exchanges mexicanas.\u200b  El 19 de mayo de 2021 el bitcoin cayo hasta los $30.000, registrando una caida del 30% con respecto al dia anterior.\u200b  El 9 de junio de 2021 El Salvador es el primer pais en legalizar el bitcoin como moneda oficial.\u200b\u200b\u200b La ley entro en vigencia el 7 de septiembre. La implementacion de la ley ha sido recibida con protestas y llamados a hacer que la moneda sea opcional, no obligatoria. De acuerdo con una encuesta de la Universidad Centroamericana, la mayoria de los salvadore\u00f1os no esta de acuerdo con el uso de criptomonedas como moneda de curso legal, y una encuesta del Centro de Estudios Ciudadanos (CEC) mostro que el 91% del pais prefiere el dolar sobre Bitcoin.  A partir de octubre de 2021, el gobierno del pais centroamericano estaba explorando la mineria de bitcoin con energia geotermica y emitiendo bonos vinculados a bitcoin. Segun una encuesta realizada por la Universidad Centroamericana a 100 dias de la entrada en vigor de la Ley Bitcoin: el 34,8% de la poblacion no tiene confianza en Bitcoin, el 35,3% tiene poca confianza, el 13,2% tiene algo de confianza y el 14,1% tiene mucha confianza. El 56,6% de los encuestados ha descargado la billetera Bitcoin del gobierno; entre ellos, el 62,9% nunca lo ha usado o solo una vez, mientras que el 36,3% usa Bitcoin al menos una vez al mes. En 2022, el Fondo Monetario Internacional (FMI) insto a El Salvador a revertir su decision luego de que el  valor del Bitcoin cayera 50% en dos meses. El FMI tambien advirtio que seria dificil obtener un prestamo de la institucion.\u200b  El 16 de octubre de 2021, la SEC aprobo el ETF ProShares Bitcoin Strategy, un fondo cotizado en bolsa (ETF) de futuros liquidados en efectivo. El primer ETF de bitcoin en los Estados Unidos gano un 5\u00a0% en su primer dia de negociacion el 19 de octubre de 2021.  El 25 de marzo de 2022, Pavel Zavalny declaro que Rusia podria aceptar bitcoines para pagar las exportaciones de petroleo y gas, en respuesta a las sanciones derivadas de la invasion rusa de Ucrania en 2022. El 27 de abril de 2022, la Republica Centroafricana adopto bitcoin como moneda de curso legal junto con el franco CFA.\u200b  En 2023, la Universidad UCA El Salvador, la primera universidad privada fundada en ese estado, realizo una encuesta que resulto en que el 71% de los salvadore\u00f1os votaron que la introduccion de Bitcoin no mejoraba su situacion familiar. Un expresidente del banco central de El Salvador, Carlos Acevedo, afirma que no se utiliza por falta de confianza entre la poblacion. El banco central de El Salvador dijo que entre enero y julio de 2023, solo el 1% de la cantidad de flujos de dinero del exterior ingresaron a Bitcoin.\u200b  Para la gestion de los bitcoines se requiere de programas y/o aplicaciones que sirvan como clientes[nota 2]\u200b y permitan ejecutar:  Las mismas generalmente se instalan o ejecutan en ordenadores o telefonos inteligentes\u200b\u200b[nota 3]\u200b y suelen reconocer estandares como el esquema URI de bitcoin.\u200b  Para interactuar con la red, los nodos y carteras de Bitcoin, se gestiona un numero arbitrario de pares de claves criptograficas que pueden ser generadas sin ninguna restriccion.\u200b A partir de las claves publicas, se generan hashes que popularmente se conocen como direcciones, y que se usan como entidades remitentes y receptoras de los pagos, mientras que, a partir de las claves privadas correspondientes, se autorizan los pagos mediante firmas criptograficas. Las direcciones no necesariamente contienen ni revelan a priori informacion sobre su propietario, y para generarlas no se requiere de ningun contacto con otros.\u200b  Bitcoin es un sistema basado en UTXO (siglas en ingles de \u00abUnspent Transaction Output\u00bb, comunmente traducido al espa\u00f1ol como \"monedas no gastadas\"). Las cantidades de los UTXO estan vinculadas a las direcciones que las pueden gastar por medio del registro de la cadena de bloques. Cuando un usuario (A) desea transferir unidades monetarias a otro usuario (B), construye una transaccion \u2013especificando en ella la cantidad de bitcoines que cede de los UTXO que desea gastar y la direccion del destinatario (B)\u2013, la firma con su clave privada y la transmite a la red Bitcoin (BTC).\u200b Los nodos que reciben la transaccion verifican las firmas criptograficas y la validez de la posesion del UTXO antes de aceptarla y retransmitirla. Este procedimiento propaga la transaccion de manera indefinida hasta alcanzar a todos los nodos de la red. Finalmente, la transaccion es validada por un minero y minada en un bloque. Una vez que una transaccion se encuentra en la cadena de bloques y ha recibido la confirmacion de un numero razonable de bloques posteriores, la transaccion se puede considerar parte permanente de la cadena de bloques, y, por tanto, es aceptada por todos los participantes.\u200b  A la generacion de nuevos bloques se le conoce como \u00abmineria\u00bb, por analogia con la mineria del oro.\u200b  La construccion de la cadena de bloques se hace por medio de esta actividad, la cual permite mantener una red peer-to-peer basada en la tecnologia blockchain actualizada y segura.  Todos los mineros de la red compiten para ser los primeros en encontrar la solucion al problema criptografico de su bloque candidato actual, bajo las reglas de un sistema de pruebas de trabajo. El objetivo concreto de los mineros es buscar un nonce valido para el bloque que estan minando. Este proceso de prueba-error hace costosa la generacion de bloques e incentiva a los mineros a invertir su trabajo en acciones honestas.  Cuando un minero encuentra la solucion al problema criptografico de su bloque, lo transmite al resto de los nodos a los que esta conectado. En el caso de que dicho bloque sea valido dichos nodos lo retransmiten y lo agregan a la cadena de bloques. Este proceso se repite indefinidamente hasta que el bloque ha alcanzado todos los nodos de la red. Para que un bloque sea valido el minero que lo produjo debe incluir como referencia en la cabecera de este hash o resumen criptografico del ultimo bloque de la cadena mas larga de la que tienen conocimiento.[nota 4]\u200b\u200b La cadena de bloques contiene el historial de posesion de todas las monedas desde su emision hasta la direccion del actual due\u00f1o.\u200b  Actualmente los hard forks de Bitcoin son los siguientes:  \u200b Bitcoin Cash (BCH)\u200b Bitcoin Gold (BTG)\u200b Bitcoin (BTC) Las tres cadenas tienen el mismo numero de unidades 21,000,000 criptomonedas.  Las tres monedas de bitcoin juntas daran un total de 63,000,000 activos monetarios creados desde el inicio del proyecto.  Si un usuario quiere funcionar de manera anonima en la red, es condicion indispensable que no haga publica la relacion entre su identidad en la vida real y sus direcciones.\u200b Por otro lado, algunas organizaciones e individuos pueden asociar de manera intencionada sus identidades con sus direcciones para proporcionar un cierto grado de transparencia. Por esta razon, algunos autores prefieren clasificar a Bitcoin como una red basada en seudonimos en lugar de una red anonima. El uso de seudonimos, al contrario que el anonimato, ofrece la posibilidad de generar una reputacion y confianza entre los usuarios.  Para facilitar el analisis de todos los movimientos, varios sitios web (generalmente denominados exploradores de la cadena de bloques) proporcionan informacion actualizada de todas las transacciones, incluyendo variables agregadas como el numero de bitcoines en circulacion, numero de transacciones por hora y comisiones de transaccion.\u200b  Como todas las transacciones son publicas,\u200b cualquier observador externo puede analizar en cualquier momento su contenido, el origen y el destino de todos los mensajes. Esta caracteristica contrasta con el modelo bancario tradicional que oculta las transacciones del escrutinio publico.\u200b  Las criticas a la criptomoneda Bitcoin se fundamentan esencialmente en tres aspectos:  Los poseedores de bitcoines podrian sufrir perdidas patrimoniales en el caso de:  El Banco Central Europeo indica que no existe proteccion de depositos para fondos en bitcoines, y que es el propio usuario el que debe hacer frente directamente a todos esos riesgos.\u200b  La sociedad podria transformarse significativamente si el uso del bitcoin consiguiera generalizarse:  Segun digiconomist,\u200b un sitio citado por varios periodicos, una sola transaccion de Bitcoin consume hasta 1,122,196 pagos con una tarjeta Visa, equivalente a 36 dias de consumo de electricidad en una casa familiar estadounidense promedio e igual a ver YouTube durante 84,388 horas. Segun varios periodicos independientes, incluido CBS,\u200b se estima que solo el 40% de la energia consumida por las criptomonedas proviene de fuentes renovables y el 60% restante proviene de combustibles fosiles, estimacion confirmada en septiembre de 2022 tambien por la Universidad de Cambridge.\u200b Si el precio de las criptomonedas aumentara, el consumo de electricidad tambien aumentaria.\u200b En 2021 la mineria en bitcoin consume la misma energia que Argentina.\u200b Un estudio academico publicado en 2018 en Nature, una de las mas prestigiosas revistas cientificas a nivel mundial,\u200b afirmo que se necesitaba mas del doble de energia para extraer 1 dolar de bitcoin que para extraer 1 dolar de oro, plata o cobre;\u200b\u200b Otro estudio academico mostro que en 2019 el consumo de electricidad de bitcoin se cuadruplico en comparacion con el a\u00f1o anterior.\u200b\u200b  Michel Khazzaka en un estudio cientifico impugno la validez de la comparacion de las cifras anteriores porque una transaccion de Bitcoin no es equiparable a la de una tarjeta Visa.\u200b De hecho, la creacion de un canal de pagos en la Lightning Network requiere en la practica de una unica transaccion en la cadena de bloques, pero a partir de ahi se pueden ejecutar miles de transacciones con un coste minimo,\u200b aunque aun, en 2021, 4 a\u00f1os despues de su creacion, la Lightning Network sigue siendo experimental\u200b\u200b y apenas utilizado, de hecho, en 2022, se estima su uso en 240 millones de dolares de transacciones contra 11.500 mil millones de uso de la cadena Bitcoin, equivalente al 0,0021%. \u200b  Elon Musk en mayo de 2021 dijo que Tesla no aceptaria pagos de bitcoin debido al alto interes de carbono que produce la transaccion, y agrego que el carbono es la fuente de energia mas da\u00f1ina de todas para el medio ambiente,\u200b incluso el Banco Central Europeo en un comunicado oficial ha definido la contaminacion por carbono de bitcoin como \"exorbitante\".\u200b Wikipedia tambien dejo de aceptar donaciones de bitcoin despues de 8 a\u00f1os, a pedido de Wikimedia, precisamente por la proteccion del medio ambiente.  El Banco de Italia declaro, en un comunicado oficial, que durante 2019 el consumo electrico de toda la red de pago con transferencia instantanea y domiciliacion bancaria (TIPS) en toda Europa fue 40.000 veces menor que la red Bitcoin sola.\u200b  En un estudio cientifico publicado en 2018 en Nature, se estimo que solo el dioxido de carbono producido por Bitcoin provocara un aumento de la temperatura global de mas de 2\u00a0\u00b0C en menos de 3 decadas.\u200b  Segun moneysupermarket.com, un sitio que estudia el consumo citado por Fortune, una sola transaccion de bitcoin (como comprar leche) consume $173 en electricidad.\u200b  Un estudio de 2022 publicado en Scientific Reports de Nature destaco como el da\u00f1o ambiental, entendido como la emision de dioxido de carbono, de Bitcoin es menor que la produccion de gas y gasolina, pero mayor que el de la ganaderia intensiva de vacuno,\u200b causando da\u00f1os ambientales, en el quinquenio 2016-2021, por valor de 12 mil millones de dolares,\u200b  periodo en el que no hubo evidencia de transicion a fuentes de energia renovables.\u200b  En 2023, en Pensilvania, recibio cobertura mediatica una propuesta de una empresa minera de Bitcoin a los organismos estatales pertinentes, para quemar neumaticos y utilizar la energia de la combustion para extraer Bitcoin, provocando reacciones de ambientalistas y ciudadanos.\u200b  Un estudio academico publicado en diciembre de 2022 por la National Bureau of Economic Research afirma, despues de observar 29 exchanges regulados durante 1 a\u00f1o, que el 70% de las transacciones en criptomonedas (incluidas las de Bitcoin) son el resultado de operaciones de lavado, es decir, intercambios ficticios en los que 2 las contrapartes que cumplen se venden activos de manera falsa, alterando tanto los volumenes como el precio.\u200b  El 16 de febrero de 2022 el Consejo de Estabilidad Financiera declaro que las criptomonedas pueden representar una amenaza para la estabilidad financiera mundial debido a su tama\u00f1o, su vulnerabilidad estructural y su creciente interconexion con el sistema financiero tradicional, incluidos los riesgos crediticios y de operaciones, concentracion de comercio plataformas, opacidad, desequilibrios de liquidez, mayor apalancamiento, pero tambien el bajo nivel de comprension de los inversores, blanqueo de capitales, ciberdelincuencia y Ransomware. Tambien advirtio del peligro de una escalada y pidio una intervencion regulatoria.\u200b  Chainanalisys ha estimado en 2022 que el porcentaje de transacciones ilicitas ronda el 0.15%, por un valor de 24 mil millones de dolares estadounidenses\u200b sin embargo, Fabio Panetta disputo este bajo porcentaje afirmando que el bajo porcentaje podria deberse a que el denominador se refiere al volumen de comercio (flujos de inversion) y no a los pagos estimacion en efecto 74 mil millones de dolares por un porcentaje estimado en 23%.\u200b  Muchos especialistas en economia y aficionados al bitcoin y las criptomonedas estan constantemente opinando y vaticinando acerca del futuro de bitcoin.  Estas opiniones suelen ser publicadas en comunidades formadas en redes sociales y medios de comunicacion especializados, entre otros.  Para algunos detractores de bitcoin \u00abexiste un riesgo muy elevado de colapso del bitcoin que, segun muchos economistas, tiene un valor real de cero. El bitcoin es hoy en dia una mina a la deriva y casi todos los reguladores financieros advierten contra el\u00bb (diciembre de 2017).\u200b Al tratarse de un sistema sin respaldo politico alguno, ni de gobiernos ni de entidad economica ni financiera, sus poseedores se encontrarian protegidos unicamente por las propiedades matematicas y criptograficas en las que se basa.  A finales de 2017, bitcoin supera y multiplica los umbrales que algunos expertos de corrientes de la economia tradicional utilizan para detectar las burbujas financieras y situaciones de colapso (sobrevaloracion especulativa y volatilidad).  Otros factores que son dificiles de evaluar, y que podrian condicionar o impedir la viabilidad del bitcoin (teniendo en cuenta una posible crisis importante de la deuda y la masa monetaria fiduciaria\u200b) serian los siguientes:\u200b  Para otros, Bitcoin tiene un futuro prometedor como medio de intercambio, almacen de valor y unidad de cuenta. Existen multitud de teorias sobre el avance exponencial del bitcoin como elemento tractor de la nueva economia e internet del valor. Durante 2017, Bitcoin ha sufrido distintas amenazas y ataques desde frentes mediaticos, politicos, tecnicos y economicos, sin embargo, ha salido airoso de todos ellos, sobreviviendo y manteniendose como criptomoneda de referencia en el naciente cluster empresarial de la criptoeconomia.  Desde el punto de vista tecnico, Bitcoin esta en permanente evolucion y tiene una nutrida comunidad de desarrolladores y probadores beta.  Algunas de las caracteristicas que se encuentran en desarrollo son:  En 2021 el gobierno de El Salvador aprueba una iniciativa de ley, para reconocer al Bitcoin como moneda de curso legal en el pais.\u200b  El 7 de septiembre, entra en vigor la ley que reconoce al Bitcoin como moneda de curso legal en El Salvador, convirtiendose este en el primer pais del mundo en adoptarlo.\u200b  El 20 de septiembre, el presidente Nayib Bukele anuncio en Twitter se\u00f1alando que El Salvador compro 150 nuevos Bitcoin, mientras esta caia en su nivel de precio, ahora con esta nueva adquisicion el pais posee 700 BTCs.\u200b  La Republica Centroafricana aprobo, a fines de abril de 2022, una ley que hizo que el Bitcoin fuera de curso legal.  El capitulo Bitcoin for Dummies de la serie The Good Wife trata de forma escenica las particularidades de una moneda digital llamada bitcoin y el juicio a su presunto inventor.\u200b  El capitulo Bit By Bit de la serie CSI: Cyber relata la persecucion a los ladrones de una joyeria, cuya intencion real no es el robo de joyas sino el de los bitcoines alli guardados.\u200b\u200b  En el capitulo Yellow Subterfuge, septimo episodio de la vigesimoquinta temporada de la serie animada Los Simpson, Krusty el Payaso es llevado a la bancarrota tras el desplome del mercado Bitcoin. Asimismo, en el capitulo Clown in the Dumps, perteneciente a la vigesimosexta temporada, se aprecia un cartel grande que dice: \u00ab\u00a1Envieme su dinero de almuerzo en linea! Aceptamos bitcoin\u00bb durante la escena de apertura.\u200b En el capitulo 18 de la temporada 32, titulado \"Burgers King\" se vuelve a mencionar Bitcoin se\u00f1alando un precio de infinito.\u200b  En el undecimo capitulo de la Decimocuarta temporada de Family Guy, Peter Griffin sugiere invertir en Bitcoin para solucionar la mala situacion economica que atraviesa la familia.  En la pelicula Dope, el protagonista vende la droga que ha acabado involuntariamente en su poder a traves de la web profunda mediante Bitcoin. Las entradas para ver la pelicula en el cine se podian adquirir con bitcoines.\u200b  La serie Mr. Robot, en su episodio numero 11 de la segunda temporada, hace referencia al miedo de algunas corporaciones y miembros del gobierno a que Bitcoin se extienda, asi como al miedo de los partidarios de Bitcoin a que se convierta en una herramienta de las mismas instituciones a las que intenta transformar.\u200b\u200b  El capitulo El enredo del Bitcoin de la serie The Big Bang Theory relata la busqueda de un monedero de bitcoines que los protagonistas olvidaron a\u00f1os atras en un ordenador portatil.\u200b  En la serie Grey's Anatomy dos episodios de la temporada 14 hablan de los Bitcoins, ya que se basan en un hackeo al Grey Sloan Memorial que amenazaba con detener todo el servicio medico a menos que se pagase un rescate con Bitcoins. ","snippet":"Bitcoin[nota 1]\u200b (simbolo:  o \u20bf; codigo: BTC) es una moneda digital descentralizada y un sistema de pago\u200b\u200b sin banco central o administrador unico.\u200b\u200b  La criptomoneda fue concebida en 2008 por una per","enlaces_salientes":["Bitcoin","Bitcoin","Bitcoin","Ticker","Desarrollador_de_software","White_paper","26_de_mayo","2023","Bifurcaci%C3%B3n_(desarrollo_de_software)","Proof-of-work_system","Funci%C3%B3n_hash","SHA-256","Capitalizaci%C3%B3n_de_mercado","Moneda_digital","Sistema_de_pago_electr%C3%B3nico","Curso_legal","Inversi%C3%B3n","Dinero_electr%C3%B3nico","Satoshi_Nakamoto","Desarrollador_de_software","Satoshi_Nakamoto","Licencia_de_software","MIT_License","Idioma","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Ciclo_de_vida_del_lanzamiento_de_software","Criptomoneda","Satoshi_Nakamoto","Software_libre_y_de_c%C3%B3digo_abierto","Peer-to-peer","Curso_legal","El_Salvador","Rep%C3%BAblica_Centroafricana","MicroStrategy","Time_Inc.","Dish_Network","Virgin_Galactic","Reddit","Alias","Over_The_Counter","Cajero_autom%C3%A1tico","Complemento_(inform%C3%A1tica)","Comercio_electr%C3%B3nico","WordPress","Drupal","Legalidad_de_bitcoin","Legislaci%C3%B3n_(derecho)","Pa%C3%ADs","Provincia","Municipio","Legalizaci%C3%B3n","Ilegalizaci%C3%B3n","Moneda_(divisa)","Valor_(%C3%A9tica)","Mercanc%C3%ADa","Jurisdicci%C3%B3n","Principio_de_legalidad","Derecho","Historia_de_bitcoin","31_de_octubre","2008","Satoshi_Nakamoto","Lista_de_correo_electr%C3%B3nico","Sociedad_de_responsabilidad_limitada","Efectivo_electr%C3%B3nico","Peer-to-peer","Tercero_de_confianza","3_de_enero","2009","Peer-to-peer","C%C3%B3digo_abierto","Satoshi_Nakamoto","9_de_enero","C%C3%B3digo_abierto","SourceForge","D%C3%B3lar_estadounidense","Exchange_(criptomonedas)","Electronic_Frontier_Foundation","Internet_Archive","Freenet","Free_Software_Foundation","Visa_(tarjeta_de_cr%C3%A9dito)","MasterCard","PayPal","Silk_Road","Mercado_negro","Droga","FBI","D%C3%B3lar_estadounidense","Fundaci%C3%B3n_Wikimedia","Fundaci%C3%B3n_Mozilla","Universidad_de_Cambridge","Bitcoin_Cash","Bitcoin_Gold","Unicode","NYSE","El_Salvador","Moneda_oficial","Universidad_Centroamericana_Jos%C3%A9_Sime%C3%B3n_Ca%C3%B1as","Rep%C3%BAblica_Centroafricana","Franco_CFA","Funcionamiento_t%C3%A9cnico_de_Bitcoin","Familia_de_protocolos_de_Internet","Modelo_TCP/IP","Transmission_Control_Protocol","Internet_Protocol","IPv4","IPv6","Ethernet","Token_Bus","Token_Ring","FDDI","Bitcoin_Core","Cliente_(inform%C3%A1tica)","Cadena_de_bloques","URI_scheme","Criptograf%C3%ADa_asim%C3%A9trica","Miner%C3%ADa_de_bitcoin","Proof-of-work_system","Funci%C3%B3n_hash","Bifurcaci%C3%B3n_(blockchain)","Bitcoin_Cash","Bitcoin_Gold","Volatilidad_(finanzas)","Virus_inform%C3%A1tico","Ataque_de_denegaci%C3%B3n_de_servicio","Banco_Central_Europeo","Sistema_de_pago","Regulaci%C3%B3n_financiera","Pol%C3%ADtica_monetaria","Lavado_de_dinero","Evasi%C3%B3n_de_impuestos","Fondo_Monetario_Internacional","Especulaci%C3%B3n_(econom%C3%ADa)","Combustibles_f%C3%B3siles","Argentina","Nature","Revista_cient%C3%ADfica","Elon_Musk","Banco_Central_Europeo","Banco_de_Italia","Nature","Fortune_(revista)","Ganader%C3%ADa_intensiva","Pensilvania","Consejo_de_Estabilidad_Financiera","Ransomware","Fabio_Panetta","Dinero_fiduciario","Botnet","El_Salvador","Adopci%C3%B3n_del_bitcoin_en_El_Salvador","Curso_legal","El_Salvador","Nayib_Bukele","Rep%C3%BAblica_Centroafricana","The_Good_Wife","Dibujo_animado","Los_Simpson","Padre_de_familia","Dope_(pel%C3%ADcula_de_2015)","Mr._Robot","The_Big_Bang_Theory","Grey%27s_Anatomy","Agorismo","Anarcocapitalismo","Billetera_digital","Bitcoin_Core","Criptomoneda","Libertarismo","Historia_de_bitcoin","Miner%C3%ADa_de_bitcoin","Teor%C3%ADa_del_ciclo_econ%C3%B3mico_en_la_Escuela_Austriaca","ISBN","ISBN","ISBN","ISBN","ISBN","Protocolo_(inform%C3%A1tica)","Red_de_computadoras","Peer-to-peer","Microsoft_Word","Microsoft_Excel","Microsoft_Windows","Android","Google_Play","IPhone","App_Store","Universidad_George_Mason","Commodity_Futures_Trading_Commission","The_New_Yorker","Asamblea_Legislativa_de_El_Salvador","BusinessWeek","Infobae","Agence_France-Presse","Wayback_Machine","ISBN","ISBN","Electronic_Frontier_Foundation","Internet_Archive","Freenet","Free_Software_Foundation","Forbes","ISSN","RT_en_Espa%C3%B1ol","Fundaci%C3%B3n_Wikimedia","Fundaci%C3%B3n_Mozilla","Internet_Assigned_Numbers_Authority","Reuters","IEEE","Banco_Central_Europeo","ISBN","Nature","U.S._Securities_and_Exchange_Commission","Wall_Street_Journal","The_Wall_Street_Journal","Foundation_for_Economic_Education","Fotogramas_(revista)","Control_de_autoridades","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","Art_%26_Architecture_Thesaurus","Enciclopedia_Brit%C3%A1nica","Open_Hub"]}
{"url":"%CE%9CTorrent","titulo":"\u03bcTorrent","contenido":"\u00b5Torrent (tambien conocido como uTorrent, cuya pronunciacion correcta seria miTorrent, y abreviado como \u00b5T o uT) es un cliente BitTorrent freeware desarrollado por BitTorrent, Inc.. Esta disponible para los sistemas operativos Microsoft Windows y macOS. Tambien esta planeada una version nativa para GNU/Linux.\u200b Todas las versiones de \u00b5Torrent estan escritas en C++ y cuenta con traducciones a 54 idiomas.\u200b Esta dise\u00f1ado para usar pocos recursos del ordenador y ofrecer las funcionalidades de otros clientes como Vuze o BitComet.  El programa ha recibido buenas criticas por sus caracteristicas, rendimiento y soporte para hardware y versiones de Windows antiguas, pero se le reprocha que durante la instalacion a\u00f1ada adware y un motor de busqueda propio que predefine sin consultar ni quitarse limpiamente cuando el usuario desinstala la aplicacion. Un informe mostro que \u00b5Torrent es el segundo cliente BitTorrent mas popular (despues del chino Xunlei).\u200b  \u00b5Torrent ha estado en desarrollo activo desde su primera version en el a\u00f1o 2005. Aunque originalmente fue desarrollado por Ludvig Strigeus, desde el 7 de diciembre de 2006 es propiedad de BitTorrent, Inc.\u200b\u200b  Segun un estudio de Arbor Networks, la adopcion del protocolo IPv6 en \u00b5Torrent en 2008 causo que el trafico IPv6 aumentara 15 veces en un periodo de 10 meses.\u200b  Recientemente se lanzo la version web, llamada uTorrent Web, la cual reproduce los archivos al instante, guarda todo lo que quieras con descargas rapidas.  El autor de \u03bcTorrent escribio en 2005: \"Por lo general, digo 'u (tu, en ingles) torrent' porque parece una u\", ademas \"microtorrent\", \"mytorrent\" (como \"my\" [my\u02d0] es la pronunciacion sueca de la letra griega \u03bc) y \"mutorrent\" como pronunciaciones alternativas.\u200b En Grecia, donde el software es ampliamente utilizado, se le llama 'me torrent', ya que la letra \u03bc del alfabeto griego se pronuncia [mi] en el griego moderno.\u200b El simbolo \u03bc es la letra griega minuscula mi, que significa micro en el prefijo SI .  \u03bcTorrent incorpora dos curiosidades: al abrir el menu de ayuda y pulsar en \"Acerca de \u03bcTorrent\", se abre un cuadro de dialogo con el logo de \u03bcTorrent y especificaciones de la version. Si entonces se pulsa el logo, se oye un sonido similar al sonido de la empresa THX; ademas, al pulsar la letra 't' se inicia un juego Tetris que se controla con las flechas (para ponerlo en pausa, se pulsa la tecla 'p'). ","snippet":"\u00b5Torrent (tambien conocido como uTorrent, cuya pronunciacion correcta seria miTorrent, y abreviado como \u00b5T o uT) es un cliente BitTorrent freeware desarrollado por BitTorrent, Inc.. Esta disponible pa","enlaces_salientes":["%CE%9CTorrent","%CE%9CTorrent","%CE%9CTorrent","Cliente_(inform%C3%A1tica)","BitTorrent","Desarrollador_de_software","BitTorrent,_Inc.","Licencia_de_software","Freeware","Adware","Idioma","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Plataforma_(inform%C3%A1tica)","Android","MacOS","Microsoft_Windows","Linux","Ciclo_de_vida_del_lanzamiento_de_software","Cliente_(inform%C3%A1tica)","BitTorrent","Freeware","BitTorrent,_Inc.","Sistema_operativo","Microsoft_Windows","MacOS","GNU/Linux","C%2B%2B","Vuze","BitComet","Hardware","Adware","Motor_de_b%C3%BAsqueda","IPv6","Servidor_web","GNU/Linux","Wine","Grecia","Micro_(prefijo)","Prefijos_del_Sistema_Internacional","Cuadro_de_di%C3%A1logo","THX","Micro_Transport_Protocol","Wine","TorrentFreak","TorrentFreak","TorrentFreak","Control_de_autoridades"]}
{"url":"BitTorrent_(programa)","titulo":"BitTorrent (programa)","contenido":"BitTorrent es un programa del tipo peer-to-peer desarrollado por Bram Cohen y BitTorrent, Inc. en 2001. Es usado para el intercambio de archivos entre usuarios mediante el protocolo BitTorrent. Desde el lanzamiento de la version 6.0, dejo de ser de codigo abierto, siendo una version modificada del cliente \u00b5Torrent.El protocolo BitTorrent fue desarrollado originariamente por el programador Bram Cohen y esta basado en software libre.  BitTorrent fue el primer programa escrito para el protocolo BitTorrent. Es a menudo llamado Mainline por los desarrolladores denotando su origen oficial.  Este cliente BitTorrent permite buscar y descargar archivos .torrent usando una caja de busqueda incluida en la ventana principal, el cual abre el sistema de busqueda de BitTorrent con los resultados de la busqueda en el navegador web predeterminado del usuario final. ","snippet":"BitTorrent es un programa del tipo peer-to-peer desarrollado por Bram Cohen y BitTorrent, Inc. en 2001. Es usado para el intercambio de archivos entre usuarios mediante el protocolo BitTorrent. Desde ","enlaces_salientes":["BitTorrent_(programa)","BitTorrent_(programa)","BitTorrent_(programa)","Peer-to-peer","Bram_Cohen","Desarrollador_de_software","BitTorrent,_Inc.","2001","Licencia_de_software","Software_no_libre","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Plataforma_(inform%C3%A1tica)","Microsoft_Windows","Interfaz_gr%C3%A1fica_de_usuario","WxWidgets","Ciclo_de_vida_del_lanzamiento_de_software","25_de_mayo","2012","23_de_julio","2012","Ciclo_de_vida_del_lanzamiento_de_software","1_de_junio","2011","Peer-to-peer","Bram_Cohen","BitTorrent,_Inc.","BitTorrent","C%C3%B3digo_abierto","%CE%9CTorrent","Software_libre","Programa_inform%C3%A1tico","BitTorrent","Navegador_web","Streaming","Control_de_autoridades"]}
{"url":"Haiku_(sistema_operativo)","titulo":"Haiku (sistema operativo)","contenido":"Haiku\u200b es un sistema operativo de codigo abierto en desarrollo que se centra especificamente en la informatica personal y multimedia. Inspirado por el extinto BeOS (Be Operating System), Haiku es un sistema rapido, eficiente, facil de aprender y usar, sin descuidar su potencia para los usuarios de todos los niveles. Actualmente se encuentra en fase beta: contiene ports de la gran mayoria de las aplicaciones para BeOS, muchas aplicaciones graficas de GNU/Linux y BSD y desarrollos nativos de proposito general, como ofimatica, editores de video, de audio, de imagenes, navegadores web, etcetera. El primer lanzamiento alfa se realizo en septiembre de 2009 y el ultimo en noviembre de 2012; la primera version beta se lanzo en septiembre de 2018, seguida de la beta 2 en junio de 2020 y la beta 3 en julio de 2021\u200b. El proyecto esta dirigido por Haiku, Inc., una organizacion sin fines de lucro situada en Rochester, Nueva York, fundada en 2003 por Michael Phipps, anterior lider de proyecto de BeOS.\u200b  Haiku esta centrado en la informatica personal y cuenta con un micronucleo modular propio, llamado NewOS, el cual esta altamente optimizado para trabajar con audio, video, graficos y animaciones en tres dimensiones, estando inspirado en el utilizado en BeOS. Su arquitectura de nucleo ofrece capacidad para multiples procesadores, un alto rendimiento, ancho de banda de entrada/salida modular y un penetrante sistema multihilo para su sistema de procesos multitarea reentrante, flexibilidad grafica y respuesta en tiempo real. A diferencia de otros sistemas operativos, Haiku Os es nativamente grafico, caracteristica heredada de BeOS. Tambien dispone de programacion visual por nodos a partir de las salidas de los programas a traves de un software nativo llamado Cortex.  Actualmente cuenta con navegador propio basado en webkit llamado Web+ o WebPositive el cual tiene soporte para HTML5, dando la posibilidad de ver videos en YouTube y Dailymotion entre otras muchas paginas que soportan los formatos multimedia.  Algunas otras caracteristicas con las que cuenta son:  Es compatible con BeOS, en el origen y a nivel binario, permitiendo que el software escrito y compilado para BeOS se pueda compilar y ejecutar sin modificaciones en Haiku. Esto proporciona a los usuarios de Haiku una biblioteca instantanea de aplicaciones para elegir (incluso programas cuyos desarrolladores no hayan actualizado), ademas de permitir el desarrollo de aplicaciones creadas para BeOS. Esta dedicacion a la compatibilidad tiene sus inconvenientes, por ejemplo el requerir el uso de la version 2.95 del compilador GCC, que tiene mas de 10 a\u00f1os. El cambio a una version mas moderna de GCC romperia la compatibilidad con BeOS, algo que los desarrolladores de Haiku intentan evitar.  Estos problemas de compatibilidad solo se aplican a los sistemas x86, y no a la version PowerPC de BeOS R5. Como consecuencia, las versiones para arquitecturas ARM, 68k y PPC de Haiku deben usar la version 4 de GCC. Por causa de esto ocurren problemas con la compatibilidad con un numero del sistema de complementos utilizados en API privadas, las cuales no se implementaran. Esto incluyen complementos del sistema de archivos y de codecs.  Algunas aplicaciones importadas de BeOS R5 ejecutadas con exito en Haiku (a mayo de 2006) son: Opera, Firefox, NetPositive, Quake II, Quake III Arena, SeaMonkey, Vision y VLC media player.  La compatibilidad con los controladores es incompleta, y es improbable que lleguen a abarcar la gran cantidad de controladores disponible en BeOS. Por otra parte, Haiku ofrece una capa de compatibilidad con controladores de red basada en FreeBSD, lo que significa que puede soportar el hardware de red que funcione en FreeBSD. La API de los controladores de audio y los controladores de bajo nivel para dispositivos de almacenamiento y adaptadores SCSI no seran compatibles con BeOS, al contrario que los dispositivos USB 2.0 y 3.0, soportados ya en BeOS en las versiones R5 y R5.1 (\"Dano\").  En otros aspectos, Haiku esta mas avanzado que el BeOS. Por ejemplo, el kit de interfaz permite el uso de un sistema de dise\u00f1o para colocar automaticamente los elementos en la ventana, mientras que en BeOS el desarrollador tiene que especificar la posicion exacta de cada elemento a mano. Esto permite interfaces graficas de usuario que se representara correctamente con cualquier tama\u00f1o de la fuente y hace que la localizacion de aplicaciones sea mucho mas facil, cambiando automaticamente el tama\u00f1o del elemento al cambiar la longitud de las frases en diferentes idiomas.    Al ser Haiku un sistema operativo libre ofrece la posibilidad de que cada individuo pueda crear y compilar su propia distribucion. Existen actualmente dos distribuciones con programas ya instalados: TiltOs\u200b\u200b y Senryu.\u200b Las dos distribuciones tienen maquinas virtuales ya preparadas para poder probarlas sin tener que instalarlas en un ordenador fisico.   ","snippet":"Haiku\u200b es un sistema operativo de codigo abierto en desarrollo que se centra especificamente en la informatica personal y multimedia. Inspirado por el extinto BeOS (Be Operating System), Haiku es un s","enlaces_salientes":["Haiku_(sistema_operativo)","Haiku_(sistema_operativo)","Haiku_(sistema_operativo)","BeOS","Unix-like","Desarrollador_de_software","Ingenier%C3%ADa_de_software","Software_libre_y_de_c%C3%B3digo_abierto","2002","Licencia_de_software","Licencia_MIT","Idioma","Multiling%C3%BCismo","Lenguaje_de_programaci%C3%B3n","C%2B%2B","N%C3%BAcleo_h%C3%ADbrido","Plataforma_(inform%C3%A1tica)","X86","MIPS_(procesador)","Arquitectura_ARM","PowerPC","Interfaz_gr%C3%A1fica_de_usuario","Sistema_de_gesti%C3%B3n_de_paquetes","Ciclo_de_vida_del_lanzamiento_de_software","Ciclo_de_vida_del_lanzamiento_de_software","BeOS","Ciclo_de_vida_del_lanzamiento_de_software#Beta","Port_(inform%C3%A1tica)","Ofim%C3%A1tica","Edici%C3%B3n_de_video","Editor_de_audio","Edici%C3%B3n_de_im%C3%A1genes","Navegador_web","Ciclo_de_vida_del_lanzamiento_de_software#Alfa","Haiku_Inc.","Rochester_(Nueva_York)","Nueva_York","2001","Palm,_Inc.","Software","2004","Poes%C3%ADa","Jap%C3%B3n","2009","Fases_del_desarrollo_de_software#Alfa","2010","2011","2011","WebKit","WebPositive","HTML5","WebPositive","Escritorio_Remoto","Audio","V%C3%ADdeo","Gr%C3%A1fico","BeOS","Unidad_central_de_procesamiento","Eficiencia","Multihilo","Sistema","Tiempo","Cortex","Webkit","WebPositive","WebPositive","HTML5","YouTube","Dailymotion","Memoria_secundaria","BeOS","C%C3%B3dec","BeOS","Wayback_Machine","Haiku_Inc.","BeOS","BeBox","Control_de_autoridades","Gemeinsame_Normdatei"]}
{"url":"Windows_Phone_8.1","titulo":"Windows Phone 8.1","contenido":"Windows Phone 8.1 es la ultima y definitiva version de Windows Phone 8, el sistema operativo movil de Microsoft. Fue anunciada  el 2 de abril de 2014, en la conferencia Build para desarrolladores, y lanzada el 14 de abril del mismo a\u00f1o para desarrolladores y a lo largo de mayo y junio para el publico en general. Todos los actuales modelos con Windows Phone 8 fueron actualizables gratuitamente a esta version 8.1. Actualmente se considera descontinuado y no mantiene ningun tipo de soporte.  El 21 de enero de 2015, se presento su sucesor, Windows 10 Mobile, con nuevas funcionalidades y mejor rendimiento.\u200b Algunos terminales podran actualizarse a Windows 10 Mobile.\u200b Aunque finalmente, despues de varios retrasos, los dispositivos que se pueden actualizar son menos de los prometidos por Microsoft.\u200b  Desde que se presento Windows 10 Mobile al publico, Windows Phone 8.1 fue la ultima version de Windows Phone.  Windows Phone 8.1 forma parte de la serie de actualizaciones Blue de Windows. En oto\u00f1o de 2013 se lanzo Windows 8.1, para ordenadores, y desde entonces se esperaba la presentacion de Windows Phone 8.1, el equivalente para telefonos inteligentes. La nueva version fue finalmente confirmada el 10 de febrero de 2014, con la filtracion del lanzamiento del SDK para los desarrolladores mas importantes. Desde ese dia y hasta la presentacion oficial se fueron filtrando poco a poco las novedades.  Windows Phone 8.1 trae una gran cantidad de novedades que ponen a Windows Phone al nivel de Android y de iOS.  Cortana es un asistente personal virtual similar a Google Now y a Siri. El nombre deriva de la serie de videojuegos Halo, una franquicia exclusiva de Windows y de Xbox. Cortana reconoce el lenguaje natural (sin necesidad de utilizar comandos concretos) y utiliza Bing, Yelp y Foursquare como bases de datos. Sustituye a la busqueda integrada de Bing en Windows Phone 8 y se activa pulsando el boton de buscar (uno de los tres botones obligatorios en Windows Phone).  Se diferencia de Google Now y de Siri en que es el primer asistente virtual que incluye una \"Libreta\", donde Cortana guarda toda la informacion que tiene sobre ti, tus intereses y tus rutinas. De esa manera la informacion que el sistema tiene del usuario es facilmente controlable, pudiendo borrar todo rastro nuestro o introducir a proposito nuestros gustos y demas para mejorar el servicio. Tambien es el primer asistente que permite a los desarrolladores integrarse con el, permitiendo utilizar sus aplicaciones mediante la voz.  Entre las funciones de Cortana estaran establecer recordatorios, realizar busquedas en Internet, contestar preguntas concretas, manejar Quiet Hours (horas en las cuales no queremos que nos molesten), buscar en todo el telefono (Bing SmartSearch en Windows 8.1), etc.  Esta disponible solo en ingles en beta en los Estados Unidos. Se espera que estara disponible en otros paises en 2015. No obstante sera posible utilizarla desde el principio en cualquier pais unicamente cambiando la region del terminal.  Windows Phone 8.1 trae incluido Internet Explorer 11 como el explorador web por defecto, pudiendose utilizar otros descargandolos desde la Tienda. Incluye soporte mejorado para OpenGL y para normal mapping. Tambien hace posible una nueva aplicacion de YouTube dise\u00f1ada en HTML5 siguiendo las indicaciones de Google.  Microsoft ha incluido tres nuevas aplicaciones\u00a0:  Tambien ha redise\u00f1ado completamente el calendario, incluyendo ahora tambien una vista de semana completa y el tiempo de cada dia, de manera similar a como se ve en Outlook.com  Se ha optimizado hasta un 100% la utilizacion de la memoria RAM en los terminales, eliminando el \"Reanudando...\". Tambien se ha mejorado enormemente la vista de multitarea, a la que se accede manteniendo pulsado el boton atras. De esta manera es posible cerrar aplicaciones deslizando hacia abajo en esa vista o con la X en la esquina, presente desde la Update 3 de Windows Phone 8. Ademas ahora el boton atras no cierra las aplicaciones , sino que las deja suspendidas como hacen Android e iOS.  Xbox Music y Xbox Video suministran servicios de streaming de musica, peliculas y series de television, siendo ahora aplicaciones separadas en vez de una sola denominada Musica+Videos. De esa manera las aplicaciones se podran actualizar sin depender de actualizar el sistema operativo completo, sino a traves de la Tienda.  Windows Phone 8.1 tambien a\u00f1ade soporte para controles de volumen por separado (tonos y notificaciones por un lado y multimedia por el otro), edicion de audio y video integrada acelerada por hardware (permitiendo aplicaciones como Flipagram), soporte para 3D,  soporte para mostrar la pantalla del telefono en otra pantalla y muchas otras opciones.  La aplicacion de camara ha sufrido un redise\u00f1o copiando la interfaz de Windows 8.1, siendo ahora mucho mas completa.  Se a\u00f1ade la opcion de a\u00f1adir una tercera fila de Live Tiles a la pantalla de inicio, una caracteristica ya disponible para terminales con resolucion 1080p y GDR3. Asimismo se incluye la posibilidad de establecer un fondo para la pantalla de inicio, mostrandose en los Live Tiles creando un efecto de ventanal.  Windows Phone 8.1 a\u00f1ade la posibilidad de que terceras personas (como los fabricantes o los desarrolladores de aplicaciones) personalicen la pantalla de bloqueo con temas, cambiando su dise\u00f1o y su comportamiento.  Se ha a\u00f1adido al fin un centro de notificaciones denominado Action Center. Dentro del mismo existiran cuatro o cinco accesos directos para gestionar el terminal (apagar/encender conexiones, por ejemplo).  Microsoft ha a\u00f1adido una caracteristica denominada Word Flow al teclado de Windows Phone. De esta manera podemos escribir deslizando los dedos por encima de las letras que componen cada palabra. Es una caracteristica parecida al teclado Swype de Android, pero junto con la prediccion de palabras ya presente en Windows Phone 8 ha conseguido ser el teclado mas rapido de los sistemas operativos moviles, creando un Record Guiness. Para ello se dise\u00f1o una prueba que llevaria a cabo un estudiante de 15 a\u00f1os utilizando para ello un Lumia 520 equipado con Windows Phone 8.1. Este estudiante batio el anterior record que ostentaba el Samsung Galaxy S4 sacandole mas de 8 segundos de ventaja.[cita\u00a0requerida]  Ahora es posible pasar de llamada de voz a videollamada con un solo boton directamente desde un boton durante la llamada. Cortana tambien puede iniciar llamadas de Skype. Actualmente Microsoft no da soporte de Skype en Windows Phone.  Las aplicaciones dise\u00f1adas para Windows Phone 7 y Windows Phone 8 funcionan en Windows Phone 8.1. Las aplicaciones dise\u00f1adas para Windows Phone 8.1 no funcionan en versiones anteriores.  Microsoft ha creado tambien las denominadas aplicaciones universales, que funcionan en Windows Phone, Windows y Xbox One sin que el desarrollador haga grandes cambios en el codigo.  Se ha a\u00f1adido el denominado File Picker, un explorador de archivos limitado pero que constituye una gran novedad respecto a Windows Phone 8. SkyDrive pasa a ser OneDrive y se soporta al fin USB OTG, con lo que se puede conectar un pendrive o un disco duro externo y utilizarlo desde el movil.  Windows Phone 8.1 a\u00f1ade soporte para VPN, Wi-Fi Direct y Bluetooth 4.0 (ya presente desde GDR3 en toda la gama Lumia).  Nokia / Microsoft, HTC, Lenovo, Samsung, LG, Xolo, Huawei, ZTE, Micromax, Prestigio, Gionee, JSR, Karbonn, Longcheer y Blu fabricaran telefonos inteligentes con Windows Phone 8.1.  Con Windows Phone 8.1 se han eliminado ciertos requisitos para permitir que mas fabricantes comiencen su andadura con Windows Phone. De esta manera ya no es necesario que los dispositivos lleven los tres botones fisicos de forma obligatoria, sino que los pueden llevar tactiles, integrados en la pantalla. Tampoco es necesario que incluyan un boton especifico para la camara.  Delantera: 5 MP  Delantera: 5 MP (HD)  Delantera: 0.9 MP (HD)  Delantera: 1.3 MP (HD)  Delantera: 0.3 MP  Delantera: 0.3 MP   ","snippet":"Windows Phone 8.1 es la ultima y definitiva version de Windows Phone 8, el sistema operativo movil de Microsoft. Fue anunciada  el 2 de abril de 2014, en la conferencia Build para desarrolladores, y l","enlaces_salientes":["Windows_Phone_8.1","Windows_Phone_8.1","Windows_Phone_8.1","Windows_8#Windows_8.1","Windows_Mobile","Windows_Phone","Sistema_operativo_m%C3%B3vil","Desarrollador_de_software","Microsoft","Ingenier%C3%ADa_de_software","Software_propietario","Licencia_de_software","EULA","Idioma","Lenguaje_de_programaci%C3%B3n","C%2B%2B","C_(lenguaje_de_programaci%C3%B3n)","Windows_NT","Plataforma_(inform%C3%A1tica)","Arquitectura_ARM","Parche_(inform%C3%A1tica)","Windows_Update","Ciclo_de_vida_del_lanzamiento_de_software","Windows_Phone","Windows_Phone_8","Windows_10_Mobile","Windows_Phone_8","Microsoft","Windows_Phone_8","Windows_10_Mobile","Windows_10_Mobile","Windows_10_Mobile","Microsoft_Cortana","Pantalla_de_bloqueo","Swype","Skype","GLONASS","Nokia_Lumia_530","Microsoft_Lumia_535","Nokia_Lumia_630","Nokia_Lumia_635","Nokia_Lumia_830","Nokia_Lumia_930","Nokia_Lumia_520","Windows_Phone_8","Sistema_operativo","Tel%C3%A9fono_inteligente","Microsoft_Windows","Windows_10_Mobile","Control_de_autoridades"]}
{"url":"Open_Broadcaster_Software","titulo":"Open Broadcaster Software","contenido":"Open Broadcaster Software (tambien conocido por su sigla OBS) es una aplicacion libre y de codigo abierto para la grabacion y transmision de video por internet (streaming), mantenida por OBS Project.  Open Broadcaster Software esta escrito en C y C++, y permite captura de fuentes de video en tiempo real, composicion de escena, codificacion, grabacion y retransmision. La transmision de datos puede realizarse a traves del protocolo Real Time Messaging Protocol (RTMP), y puede ser enviado a cualquier destino que soporte RTMP (por ejemplo Youtube), incluyendo muchos presets para sitios de streaming como Twitch, Admefy y DailyMotion.\u200b  Para la codificacion de video, OBS es capaz de utilizar el codec libre x264, y la aceleracion por hardware de Intel (Quick Sync Video o QSV), AMD (Advanced Media Framework o AMF/VCE) y Nvidia (NVENC) para codificar transmisiones de video en el formato H.264/MPEG-4 AVC.\u200b Existe ademas una version no oficial de OBS Classic que permite utilizar la aceleracion por hardware de AMD (VCE), mientras que OBS Studio lo soporta en forma oficial. El audio puede ser codificado utilizando MP3 o AAC.  Recibe soporte a traves de varias plataformas de streaming, entre las cuales podemos incluir Youtube Gaming,Admefy, Hitbox o Twitch, entre otras. Da posibilidad de configurar todo tipo de emisiones y grabaciones con paneles simplificados gracias a su sencilla interfaz, asi como de realizar mezclas de grabacion de video y audio en tiempo real, pudiendo personalizar transiciones, contando asimismo con un amplio soporte de filtros para utilizar en la edicion y montaje de videos.\u200b  OBS comenzo como un peque\u00f1o proyecto creado por Hugh \"Jim\" Bailey, pero crecio rapidamente con la ayuda de muchos colaboradores que trabajan para mejorar la aplicacion y para difundir el conocimiento sobre la misma. En 2014,\u200b comenzo a desarrollarse una nueva version conocida como OBS Multiplatform (mas tarde renombrada OBS Studio) para soporte multiplataforma, siendo un programa mas completo y con una API mas potente.\u200b OBS Studio es un trabajo en progreso, ya que hasta febrero de 2016 no alcanzo la paridad de caracteristicas con el OBS Classic (original).\u200b Aunque OBS Classic aun esta disponible en el sitio, los desarrolladores recomiendan utilizar OBS Studio ya que OBS Classic esta considerado como obsoleto. La ultima version de OBS Classic es la 0.659b.\u200b  A junio de 2016, Open Broadcaster Software esta disponible en 41 idiomas.\u200b  Muchas personas han contribuido traducciones para OBS, e idiomas adicionales se a\u00f1aden con frecuencia.  La funcionalidad puede ser extendida a traves de plug-ins que se encuentran en los foros oficiales.  Hay varios tipos de complementos, tales como automatizadores de cambio de escena, acceso remoto, y nuevas fuentes y dispositivos. A continuacion estan algunos de los tipos populares de plugins, y los desarrolladores asociados a ellos:  OBS Project utiliza el sistema Git de control de revision, proporcionado por GitHub.\u200b Desde mayo de 2013, el GitHub de OBS ha recibido mas de 1.000 contribuciones, por parte de varios desarrolladores, testers, y traductores de todo el mundo.\u200b ","snippet":"Open Broadcaster Software (tambien conocido por su sigla OBS) es una aplicacion libre y de codigo abierto para la grabacion y transmision de video por internet (streaming), mantenida por OBS Project. ","enlaces_salientes":["Open_Broadcaster_Software","Open_Broadcaster_Software","Open_Broadcaster_Software","Streaming","Screencast","Desarrollador_de_software","Licencia_de_software","GPLv2","Idioma","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Plataforma_(inform%C3%A1tica)","Computadora","Interfaz_gr%C3%A1fica_de_usuario","Qt_(biblioteca)","Ciclo_de_vida_del_lanzamiento_de_software","Software_libre_y_de_c%C3%B3digo_abierto","Streaming","Youtube","Twitch","DailyMotion","Free_software","Aceleraci%C3%B3n_por_hardware","Intel","AMD","Nvidia","AMD","MP3","Advanced_Audio_Coding","Streaming","Hitbox","Twitch","Interfaz","Multiplataforma","Navegador_web","Common_Language_Runtime","HTML5","JavaScript","Git_(software)","Revision_control","GitHub","DirectShow","Streamlabs","Kdenlive","X264","Control_de_autoridades","Open_Hub"]}
{"url":"Opera_(navegador)","titulo":"Opera (navegador)","contenido":"Opera es un navegador web creado por la empresa noruega Opera Software. Actualmente propiedad de Golden Brick Capital, empresa China de inversion.\u200b Usa el motor de renderizado Blink.\u200b Tiene versiones para computadoras de escritorio, telefonos moviles y tabletas.  Los sistemas operativos compatibles con Opera de escritorio son Microsoft Windows, macOS y GNU/Linux (Ubuntu, Fedora 64-bit) entre otros.\u200b Los sistemas operativos moviles soportados son Maemo, BlackBerry, Symbian, Windows Mobile, Windows Phone, Android e iOS; asi como la plataforma Java ME.  Existe tambien una suite de Internet antigua de Opera, basada en el motor Presto, que aun sigue recibiendo soporte de seguridad (version 12.17 para Windows y version 12.16 para otros sistemas operativos).\u200b\u200b  Opera ha sido pionero en originar caracteristicas que han sido posteriormente adoptadas por otros navegadores web, como por ejemplo el Acceso Rapido (Speed Dial).  El navegador comenzo en 1995 como un proyecto de investigacion en Telenor, una empresa de telecomunicaciones noruega. En 1995, la empresa se ramifico y quedo en manos de Opera Software.\u200b  La primera version publica del software vio la luz el 30 de abril de 1996 en su version 2.0,\u200b la cual solo funcionaba en Microsoft Windows. La version 3.0, lanzada el 1 de diciembre de 1997 introdujo el bloqueo de ventanas emergentes.\u200b En 1998 se desarrollo el primer navegador para dispositivos moviles.\u200b Opera 4.0, publicado el 28 de junio del 2000,\u200b incluyo la navegacion por pesta\u00f1as.\u200b  Opera era trialware (tenia que comprarse despues de terminado el periodo de prueba). Pero la version 5.0, lanzada el 6 de diciembre del 2000,\u200b se financiaba con anuncios que se mostraban a los usuarios que utilizaban el navegador gratis.\u200b Las versiones siguientes de Opera dieron al usuario la opcion de ver los anuncios de banners o anuncios de texto de Google.  La version 6, lanzada el 18 de diciembre del 2001, introdujo el estandar unicode\u200b La version 7 conto con Presto un nuevo motor de javascript y compatibilidad total con especificaciones como Document Object Model, CSS2.1 (Cascading Style Sheets, segunda revision) y XHTML (Extensible Hypertext Markup Language o HTML extensible). La version 7.6, una version alfa, incorporo un novedoso sistema de reconocimiento de voz basado en XML (VoiceXML), para facilitar la accesibilidad. Posteriormente, se agrego en la version 8 soporte nativo de graficos SVG Tiny.  En 2005, Adobe Systems Incorporated integro el motor Presto en varias de sus aplicaciones como Adobe GoLive, Adobe Photoshop, Adobe Dreamweaver y otros componentes de Adobe Creative Suite.\u200b  El 20 de septiembre del 2005 surgio la version 8.5,\u200b en la que se retiraron los anuncios y el principal apoyo financiero para el navegador fue a traves de los ingresos de Google, el cual por contrato es el motor de busqueda por defecto de Opera.\u200b  En 2006, fueron lanzados Canal Internet y Nintendo DS Browser; los cuales son los navegadores de las consolas de juegos Nintendo Wii y Nintendo DS.\u200b  La version 9.1, publicada el 18 de diciembre del 2006,\u200b trajo proteccion contra el phishing mediante la tecnologia de GeoTrust, proveedor de certificados digitales, y PhishTank.\u200b  La version 10 (nombre en clave Peregrine, como el Falco peregrinus) fue lanzada el 2 de septiembre de 2009.\u200b La version 10 trajo una interfaz de usuario mejorada, soporte para estandares aumentada, correcciones de errores de software, mejoras de rendimiento enfocadas sobre todo a JavaScript, y nuevas herramientas para programadores web.\u200b\u200b El 25 de noviembre de 2009, Opera saco la version 10.10, que incluia caracteristicas como Vistas previas en las pesta\u00f1as, Opera Turbo, Opera Link y Opera Unite.  El 22 de marzo de 2010 salio la version 10.51 de Opera que incluyo un nuevo motor Javascript llamado Carakan que lo coronaba como el navegador mas rapido del mundo hasta entonces.\u200b La version 10.51 tenia un nuevo entorno grafico llamado Vega que lo proveia de aceleracion por hardware, ademas de mejoras en estabilidad y en seguridad.  El 14 de junio de 2012 aparecio la version 12. La version 12 tiene una interfaz mas limpia y con temas elegantes; asi como un mejor soporte de HTML5, arrastre de archivos a paginas web, interaccion con las paginas y la camara web sin necesidad de instalar programas adicionales (WebRTC). A la version 12 se le a\u00f1adio de manera experimental la aceleracion por Hardware, WebGL y soporte para versiones de 64 Bits en Windows y Mac Os. Ademas, la version 12 aisla los plugins del proceso principal para evitar que el navegador se bloquee si falla algun complemento (como Java, Adobe Flash, etc...).  El 13 de febrero de 2013, Opera Software informo que cambiaria su motor de renderizado Presto por WebKit y que contribuiria con el desarrollo de WebKit y de Chromium.\u200b El 4 de abril de 2013, Opera Software anuncio que descarto Webkit para unirse a Google en la construccion del motor de renderizado Blink.\u200b El 27 de mayo de 2013, salio la version de prueba Opera Next 15 en la que se incorporo el nuevo motor.\u200b El 2 de julio de 2013 aparecio la version estable de Opera 15 con el motor Blink.\u200b  El 23 de abril de 2014, Opera Software lanzo para Windows la version 12.17 que es una actualizacion del navegador con el motor Presto.\u200b Esta version tiene arreglada la vulnerabilidad con respecto al agujero de seguridad, Heartbleed.\u200b Los sistemas operativos Mac OS X y Linux no tendran version 12.17 de Opera.\u200b  El programa instalador, descargable desde el sitio oficial de Opera, permite escoger en \u00abOpciones\u00bb la alternativa \u00abInstalacion autonoma (USB)\u00bb para lanzar el navegador como aplicacion portatil. La version portable puede ser ejecutada desde un disco duro, un CD o una memoria USB. No crea accesos directos ni queda como navegador predeterminado.\u200b Tampoco interfiere con otros navegadores instalados.\u200b Opera portable puede ser eliminado con simplemente borrar la carpeta que lo contiene.\u200b Opera portable no deja en la computadora rastros de navegacion (excepto una entrada en el registro: HKEY_CURRENT_USER/Software/Opera Software).\u200b  Otros sitios web que cuentan con autorizacion de Opera Software ASA para ofrecer la version portable son PortableApps.com y Opera@USB.\u200b\u200b  Opera tiene dos versiones de prueba para computadoras de escritorio: Opera Beta y Opera Developer.\u200b Ambas versiones de prueba pueden instalarse y usarse sin afectar otros navegadores Opera instalados.\u200b Opera Beta es la version inmediata al producto final.\u200b Opera Developer es mas inestable y esta dirigida a desarrolladores y usuarios avanzados para que ensayen las nuevas caracteristicas que seran incorporadas en la version final.\u200b  Opera Mini es un micronavegador gratuito para telefonos moviles, telefonos inteligentes, pocket PC y tabletas.\u200b Trabaja con Java Micro Edition, asi como con otros sistemas operativos moviles. Opera Mini carga las paginas web mas rapidamente al pasarlas primero por los servidores de Opera Mini para comprimirlas y enviarlas de vuelta al dispositivo.\u200b  El proceso de compresion hace que las paginas web sean vistas en telefonos de poca capacidad.\u200b El 11 de febrero de 2015 fue lanzada una version beta para Windows Phone 8 y 8.1.\u200b  Navegador Opera para Android es un navegador web para telefonos moviles y tabletas que emplean el sistema operativo Android. Posee el motor de renderizado Blink. Fue lanzado el 21 de mayo de 2013.\u200b Tiene las siguientes caracteristicas:\u200b  Opera Coast es un navegador web para iPhone e iPad.\u200b Fue lanzado el 9 de septiembre de 2013.\u200b  Opera TV browser es un navegador para aparatos de TV conectados a Internet y para set-top boxes.\u200b  Las versiones con el motor Presto recibieron algunas criticas por los problemas de compatibilidad con ciertos sitios web.\u200b Opera Software intento solucionarlo mediante un archivo JavaScript que arreglaba el renderizado de esas webs.\u200b Por otra parte, las versiones con el motor Presto eran elogiadas por tener nuevas funciones (como el apilamiento de pesta\u00f1as, el Unite o el Speed Dial), buen rendimiento, mejor cumplimiento de los estandares web y soporte para las ultimas tecnologias web.\u200b\u200b Las versiones con el motor Presto ganaron varios premios:  Las versiones con el motor Blink han generado opiniones mixtas entre los usuarios. Algunos alaban la sencillez y elegancia de la interfaz, la velocidad y mayor compatibilidad con sitios web.\u200b\u200b\u200b Otros reprueban la perdida de muchas caracteristicas presentes en la version Presto como por ejemplo el correo integrado o las notas; asi como el gran consumo de memoria.\u200b\u200b\u200b  Para enero de 2015, Opera tenia 350 millones de usuarios, segun Opera Software.\u200b El numero de usuarios se distribuia en 51 millones para la version de escritorio y 270 millones para las versiones moviles.\u200b ","snippet":"Opera es un navegador web creado por la empresa noruega Opera Software. Actualmente propiedad de Golden Brick Capital, empresa China de inversion.\u200b Usa el motor de renderizado Blink.\u200b Tiene versiones ","enlaces_salientes":["Opera_(navegador)","Opera_(navegador)","Opera_(navegador)","Navegador_web","Desarrollador_de_software","Opera_Software","Allmennaksjeselskap","Ingenier%C3%ADa_de_software","Software_propietario","Software_de_c%C3%B3digo_abierto","Licencia_de_software","Freeware","Idioma","Lenguaje_de_programaci%C3%B3n","C%2B%2B","Ciclo_de_vida_del_lanzamiento_de_software","Ciclo_de_vida_del_lanzamiento_de_software","Opera_Mobile","Opera_Mini","Navegador_web","Noruega","Opera_Software","Blink","Tableta_(computadora)","Microsoft_Windows","MacOS","GNU/Linux","Ubuntu","Fedora_(distribuci%C3%B3n_Linux)","X86-64","Sistema_operativo_m%C3%B3vil","Maemo","BlackBerry","Symbian","Windows_Mobile","Windows_Phone","Android","IOS_(sistema_operativo)","Java_ME","Suite_de_Internet","Presto_(motor_de_renderizado)","Microsoft_Windows","Opera_Software","Hojas_de_estilo_en_cascada","Acid3","30_de_abril","1996","Microsoft_Windows","1_de_diciembre","1997","1998","28_de_junio","2000","Trialware","6_de_diciembre","2000","Adware","Google","18_de_diciembre","2001","Unicode","Javascript","Document_Object_Model","Hojas_de_estilo_en_cascada","XHTML","HTML","Fases_del_desarrollo_de_software#Alpha_.2F_Alfa","XML","Accesibilidad","Scalable_Vector_Graphics","2005","Adobe_Systems_Incorporated","Adobe_GoLive","Adobe_Photoshop","Adobe_Dreamweaver","Adobe_Creative_Suite","20_de_septiembre","2005","2006","Canales_Wii#Canal_Internet","Nintendo_DS_Browser","Wii","Nintendo_DS","Certificado_digital","Falco_peregrinus","2_de_septiembre","2009","Interfaz_de_usuario","25_de_noviembre","2009","22_de_marzo","2010","Javascript","14_de_junio","2012","HTML5","Hardware","WebGL","Plugins","13_de_febrero","2013","WebKit","Chromium_(navegador)","4_de_abril","2013","Webkit","Google","27_de_mayo","2013","2_de_julio","2013","23_de_abril","2014","Agujero_de_seguridad","Heartbleed","Clic_(inform%C3%A1tica)","Marcador_de_Internet","Atajo_de_teclado","Ventana_emergente","Dialecto","Google_Chrome","Navegaci%C3%B3n_privada","Phishing","VPN","Aplicaci%C3%B3n_port%C3%A1til","Memoria_USB","PortableApps.com","Fases_del_desarrollo_de_software","Opera_Mini","Micronavegador","Java_Micro_Edition","11_de_febrero","2015","IPhone","IPad","Set-top_box","JavaScript","About.com","PC_World","ZDNet","My_Opera","Opera_Mail","Opera_Software","CNET","Radiotelevisi%C3%B3n_Espa%C3%B1ola","Control_de_autoridades"]}
{"url":"CATIA","titulo":"CATIA","contenido":"CATIA (computer-aided three dimensional interactive application) es un programa informatico de dise\u00f1o, fabricacion e ingenieria asistida por computadora comercial realizado por Dassault Systemes. El programa esta desarrollado para proporcionar apoyo desde la concepcion del dise\u00f1o hasta la produccion y el analisis de productos. Esta disponible para Microsoft Windows, Solaris, IRIX y HP-UX.  Provee una arquitectura abierta para el desarrollo de aplicaciones o para personalizar el programa. Las interfaces de programacion de aplicaciones, CAA2 (o CAAV5), se pueden programar en Visual Basic y C++.  Fue inicialmente desarrollado para servir en la industria aeronautica. Se ha hecho un gran hincapie en el manejo de superficies complejas. CATIA tambien es ampliamente usado en la industria del automovil para el dise\u00f1o y desarrollo de componentes de carroceria. Concretamente empresas como el Grupo VW (Volkswagen, Audi, SEAT y Skoda), BMW, Renault, Peugeot, Daimler AG, Chrysler, Smart y Porsche hacen un amplio uso del programa. La industria de la construccion tambien ha incorporado el uso del software para desarrollar edificios de gran complejidad formal; el Museo Guggenheim Bilbao, en Espa\u00f1a, es un hito arquitectonico que ejemplifica el uso de esta tecnologia.  Actualmente los desarrolladores de CATIA siguen innovando su software. Esta en desarrollo la version de CATIA-V5-6R2019; una nueva experiencia de colaboracion inmersiva en la que los equipos pueden colaborar mediante una realidad virtual que les conecta a traves de \"plug and play\" (una pantalla para ponerse en la cabeza HTC Vive) para pasar inmediatamente a una experiencia de realidad virtual compartida en la que podra pasear e interactuar con el producto.\u200b  CATIA fue desarrollado en 1971 de manera interna por la empresa francesa productora de aviones Avions Marcel Dassault. En aquel momento, los clientes del software CADAM utilizaron CATIA para desarrollar el avion de combate Mirage. Mas tarde fue empleado en el sector aeroespacial, automovilistico, construccion de barcos y otras industrias.  Inicialmente se llamo CATI (Conception assistee tridimensionnelle interactive- en frances para dise\u00f1o asistido e interactivo en tres dimensiones), fue renombrado como CATIA en 1981 cuando Dassault creo una sucursal para desarrollar y vender el software y firmar una acuerdo de distribucion no exclusivo con IBM.\u200b  En 1984, la compa\u00f1ia Boeing eligio CATIA v2 como su principal herramienta de CAD en 3D, convirtiendose en su cliente mas longevo.  En 1988, CATIA v3 fue transferido de la computadora central a un sistema operativo portable (UNIX).  En 1990, General Dynamics Electric Boat Coorporation establecio, al igual que Boeing, empleo CATIA como su principal herramienta de CAD en 3D para dise\u00f1ar el buque de la armada estadounidense Virginia class submarine. Ademas, Lockheed estaba vendiendo su sistema CADAM de forma mundial a traves del canal de IBM desde 1978.  En 1992, CADAM fue vendido por IBM, y al a\u00f1o siguiente CATIA CADAM V4 fue publicado.  En 1996, fue transferido de una a cuatro sistemas operativos de Unix, incluyendo IBM AIX, Silicon Graphics IRIX, Sun Microsystems SunOS, y Hewlett-Packard HP-UX.  En 1998, se lanzo V5 y fue una version totalmente reescrita de CATIA con soporte para UNIX, Windows NT y Windows XP (desde 2001).\u200b  En los a\u00f1os anteriores al 2000, los problemas causados debido a la incompatibilidad entre las versiones de Catia (V4 y V5) dejo $6.1B en costes adicionales debido a a\u00f1os de retrasos en los proyectos de produccion del Airbus A380.\u200b  En 2008, Dassault Systemes lanzo CATIA V6.\u200b Mientras los servidores pueden funcionar en Microsoft Windows, UNIX o AIX, la atencion al cliente para cualquier otro sistema que no fuese Microsoft fue eliminada.\u200b  En noviembre de 2010, Dassault Systemes lanzo CATIA V6R2011x, el ultimo lanzamiento de su plataforma PLM2.0, mientras continua financiando y mejorando su software de CATIA V5.  En junio de 2011, Dassault Systemes lanzo V6 R2012.  En 2012, Dassault Systemes lanzo V6 2013x.  En 2014, Dassault Systemes lanzo 3DEXPERIENCE Platform R2014x\u200b y CATIA en la Nube, una version en la nube de su software.\u200b\u200b  CATIA puede ser aplicado a una amplia variedad de industrias, desde aeronautica y defensa, automovilistica y equipamiento industrial, hasta altas tecnologias tales como construccion de barcos, bienes de consumo, dise\u00f1o en planta, embalaje de bienes de consumo, ciencias biologicas, arquitectura y construccion, procesos de generacion de energia y petroleras; y otros servicios.  CATIA V4, CATIA V5, Pro/ENGINEER, NX, y son los sistemas dominantes de la plataforma.  Solidwork es considerado como el hermano peque\u00f1o de Catia puesto que tambien pertenece a Dassault Systemes  La Compa\u00f1ia Boeing utilizo CATIA V3 para desarrollar su avion comercial 777 y CATIA V5 para la serie de aeronaves 787. La empresa tiene contratado el rango completo de los productos de dise\u00f1o en 3D pertenecientes a Dassault Systemes- CATIA, DELMIA, y ENOVIA LCA- utilizados para el desarrollo de las aplicaciones de Boeing.  Numerosas empresas ademas de Boeing utilizan CATIA, de las que cabe destacar las siguiente: Airbus, BAE Systems, Embraer, FNSS, Vought, AgustaWestland, Dassault Aviation\u2026    Muchas compa\u00f1ias automovilisticas utilizan CATIA en distintos grados, incluyendo BMW, Porsche, McLaren Automotive,\u200b Chrysler, Honda,\u200b Audi,\u200b Jaguar Land Rover, Volkswagen, SEAT, Skoda, Bentley Motors Limited, Volvo, Fiat, PSA Peugeot Citroen,\u200b Renault,\u200b Toyota,\u200b Ford, Scania, Hyundai, Tesla Motors,\u200b Rolls-Royce Motors, Valmet Automotive, Proton, Elba, Tata motors\u200b and Mahindra & Mahindra Limited. Goodyear lo utiliza para realizar neumaticos para automoviles y aeronaves y ademas utiliza un CATIA personalizado para su dise\u00f1o y desarrollo.  Muchas compa\u00f1ias automovilistica usan CATIA para la estructura de los coches. Bombardier Transportation (empresa canadiense de venta y fabricacion de equipos de ferrocarril) esta utilizando este software para dise\u00f1ar toda su flota de motores de tren y vagones de pasajeros. Webasto utiliza CATIA para dise\u00f1ar su techo.  Dassault Systemes ha empezado a ser utilizado por los constructores de barcos con la version de CATIA V5 edicion 8, la cual incluye caracteristicas especiales muy utiles para los constructores. GD Electric Boat emplea CATIA para dise\u00f1ar el ultimo modelo de los submarinos de ataque rapido pertenecientes a la Armada de los Estados Unidos, el Submarino clase Virginia. El Newport News Shipbuildings tambien utiliza CATIA para dise\u00f1ar para dise\u00f1ar el Clase Gerald R.Ford de portaviones para la Armada estadounidense.\u200b En 2004, el Grupo Beneteau (empresa vendedora de velas y motores de barcos) comenzo a utilizar CATIA para el desarrollo de los nuevos motores para los barcos de vela y de ocio.\u200b  CATIA tiene una fuerte presencia en la industria del Equipamiento Industrial. La compa\u00f1ias de Manufactura como Schuler y Metso emplean CATIA, al igual que las compa\u00f1ias de maquinaria pesada como Claas, y tambien varias compa\u00f1ias de producto de equipamiento industrial como Alstom y ABB. Otras empresas, como Michelin, lo utilizan tambien en su produccion.\u200b  Algunas de las empresas de altas tecnologias estan utilizando CATIA para dise\u00f1ar sus productos. Un ejemplo de dichas empresas son: Nokia,\u200b Nikon,\u200b Pegatron\u200b (empresa taiwanesa de electronica)\u2026  Suzlon Energy utiliza CATIA para fabricar palas de turbinas.\u200b Por otro lado, Gamesa lo emplea para dise\u00f1ar y fabricar aerogeneradores.  Procter & Gamble optimiza sus embalajes mediante el uso de CATIA.\u200b  El arquitecto Frank Gehry ha utilizado el software para sus galardonados edificios curvilineos. Su rama dedicada a la tecnologia, ha estado desarrollando un software basado en CATIA V5 llamado Digital Project. Este proyecto compite por ser el numero uno del mercado con Graphisoft's ARCHICAD, Revit, Bentley Systems y otras aplicaciones de modelado de informacion de construccion.  Comunmente se hace referencia al paquete de software referido al tratamiento del ciclo de vida del producto en 3D, CATIA aparece en multiples etapas del desarrollo del producto (CAx), incluyendo la conceptualizacion, dise\u00f1o (CAD), ingenieria (CAE) y produccion (CAM). CATIA facilita la colaboracion con la ingenieria mediante las disciplinas referidas a plataformas de experiencia en 3D (3DEXPERIENCE), donde se incluyen aspectos de superficies y dise\u00f1os nuevos, dise\u00f1o de sistemas fluidos y electronicos, ingenieria mecanica e ingenieria de sistemas.  CATIA facilita el dise\u00f1o de sistemas electronicos, electricos y distributivos como los sistemas HVAC.  CATIA posibilita la creacion de piezas en 3D, bocetos en 2D, chapa, materiales compuestos, moldeados, forjados o piezas de herramientas hasta la definicion de su montaje mecanico. El software proporciona una tecnologia avanzada para el mecanizado de superficies y BIW. Proporciona herramientas para completar las definiciones del producto, incluyendo tolerancias funcionales asi como definiciones cinematicas. CATIA aporta un amplio rango de aplicaciones para el dise\u00f1o de utillaje. En el caso de la ingenieria aeroespacial se incluye un modulo nuevo que ofrece a los usuarios una combinacion de las capacidades de generacion de dise\u00f1o de laminados y dise\u00f1os de superficies.\u200b  CATIA ofrece una solucion para facilitar el proceso de trabajo y visualizacion para crear, modificar,\u200b y validar formas complejas e innovadoras para el dise\u00f1o industrial. CATIA aparece en multiples etapas del dise\u00f1o del producto desde sus primeros bocetos o desde los bocetos en 2D.\u200b  La solucion de ingenieria de sistemas de CATIA reparte un unico, abierto y extensible desarrollo de la plataforma de sistemas (de ingenieria) que integra completamente el area multidisciplinar de moldeado, simulacion, verificacion y la ayuda en el proceso de negocio requerido para desarrollar productos cyber-fisicos complejos. Esto permite a las organizaciones evaluar propuestas de cambios, o desarrollar nuevos productos o variantes del sistema utilizando una actuacion unificada basada en el enfoque de los sistemas de ingenieria. La solucion se dirige a la ingenieria de sistemas basada en modelos (MBSE), el cual necesita que los usuarios desarrollen los productos y sistemas inteligentes de hoy en dia, y que comprende los siguientes elementos: Requisitos de la Ingenieria, Modelado de los Sistemas de Arquitectura, Modelado de los Sistemas de Comportamiento y Simulacion, Gestion de Configuracion y Trazabilidad del Ciclo de la Vida, Desarrollo de Sistemas de Automotriz Insertada (Constructor AUTOSAR) y Desarrollo de los Sistemas de Automatizacion Industrial (ControlBuild).  CATIA hace uso de un lenguaje abierto conocido como \"Modelica\" tanto en el Modelado de Comportamiento Dinamico de CATIA, como en Dymola, para conseguir un modelo \u00b4rapido y facil, y asi simular complejos que abarcan multiples disciplinas de ingenieria. CATIA y Dymola estan extendidas gracias a la disponibilidad de un gran numero de industrias y el dominio de bibliotecas especificas del lenguaje complejo Modelica que permiten al usuario modelar y simular un amplio rango de sistemas complejos (abarcando desde la dinamica de vehiculos automotrices hasta la dinamica del vuelo de aeronaves).\u200b  CATIA V5 ofrece una solucion para desarrollar el dise\u00f1o y produccion de sistemas electricos que abarcan el proceso completo desde el dise\u00f1o conceptual hasta su produccion. Con esta version de CATIA se puede crear facilmente arneses de cables dise\u00f1andolos directamente en 3D. Ademas permite crear las diferentes piezas y unirlos con los arneses de cables creados.\u200b  CATIA proporciona una solucion para facilitar el dise\u00f1o y la produccion de sistemas de distribucion, incluyendo tramos de tuberias (ca\u00f1erias), canalizacion, calefaccion, ventilacion y aire acondicionado (HVAC). Las capacidades de CATIA para este aspecto incluye diagramas en 2D para elementos hidraulicos, neumaticos, sistemas HVAC, asi como diagramas de tuberias e instrumentacion (P&ID). Tambien posee capacidades mayores que permiten que dichos diagramas en 2D puedan interactuar con la planificacion de ruta y colocacion de las componentes del sistema, en el contexto de la realizacion de modelo a escala de manera digital de la planta de proceso o produccion completa, desde el reparto de la informacion de produccion incluyendo rese\u00f1as y planos isometricos de canalizacion.\u200b  Dassault Systemes proporciona herramientas para convertir los archivos de CATIA V4 de forma que sean accesibles para las nuevas versiones de CATIA V5 y V6. Sin embargo, algunos casos muestran que pueden existir problemas en la conversion de datos de CATIA V4 a CATIAV5 desde diferencias en el modelado de conversion geometrica de ambas o debido a los metodos de modelado utilizados por el usuario final. El porcentaje de perdida de dichos datos puede minimizarse utilizando una apropiada limpieza de preconversion, eligiendo las opciones de conversion mas apropiadas, realizando una limpieza previa despues de la conversion.  La conversion de CATIA de las versiones 4 a la 5 han causado problemas para los Airbus A380. Dichos problemas dejaron $6,1 millardos en costes adicionales debido a a\u00f1os de retrasos en los proyectos cuando se dieron cuenta de que el cableado era demasiado corto para realizar las conexiones.  La transicion de la version V5 a la version V6 fue mas sencilla debido a que comparten el mismo modelado de conversion geometrica. La tercera parte de los archivos referidos a la traduccion entre versiones tambien convierten los archivos de CATIA entre las dos versiones.  Parte norte de la torre Eiffel  Concepto de producto  Renderizado hecho con CATIA  Renderizado de un diamante con CATIA  Chasis de un coche  Analisis de una helice realizado con CATIA ","snippet":"CATIA (computer-aided three dimensional interactive application) es un programa informatico de dise\u00f1o, fabricacion e ingenieria asistida por computadora comercial realizado por Dassault Systemes. El p","enlaces_salientes":["CATIA","CATIA","CATIA","Dise%C3%B1o_asistido_por_computadora","Desarrollador_de_software","1977","Licencia_de_software","Software_propietario","Ciclo_de_vida_del_lanzamiento_de_software","STL","Programa_inform%C3%A1tico","Dise%C3%B1o_asistido_por_computadora","Fabricaci%C3%B3n_asistida_por_computadora","Ingenier%C3%ADa_asistida_por_computadora","Dassault_Syst%C3%A8mes","Microsoft_Windows","Solaris_(sistema_operativo)","IRIX","HP-UX","Interfaz_de_programaci%C3%B3n_de_aplicaciones","Visual_Basic","C%2B%2B","Industria_aeron%C3%A1utica","Industria_del_autom%C3%B3vil","Carrocer%C3%ADa","Volkswagen","Audi","SEAT","%C5%A0koda","BMW","Renault","Peugeot","Daimler_AG","Chrysler","Smart_(autom%C3%B3vil)","Porsche","Museo_Guggenheim_Bilbao","Avions_Marcel_Dassault","Mirage","IBM","Boeing","Computadora_central","UNIX","IBM","IBM","AIX","IRIX","SunOS","HP-UX","Windows_NT","Windows_XP","Airbus_A380","Microsoft_Windows","Pro/ENGINEER","NX","Dassault_Syst%C3%A8mes","Boeing","777","787","Airbus","BAE_Systems","Embraer","Vought","AgustaWestland","Dassault_Aviation","Xian_JH-7","Eurofighter_Typhoon","Bell_Boeing_V-22_Osprey","BMW","Porsche","McLaren_Automotive","Chrysler","Honda","Audi","Land_Rover","Volkswagen","SEAT","%C5%A0koda_Auto","Bentley_Motors_Limited","Volvo","Fiat","PSA_Peugeot_Citro%C3%ABn","Renault","Toyota_Motor_Corporation","Ford_Motor_Company","Scania_AB","Hyundai_Motor_Company","Tesla_Motors","Rolls-Royce","Mahindra_%26_Mahindra_Limited","Goodyear","Bombardier_Transportation","Armada_de_los_Estados_Unidos","Submarinos_clase_Virginia","Portaviones","Manufactura","Claas","Alstom","ABB","Michelin","Nokia","Nikon","Pegatron","Suzlon_Energy","Gamesa","Procter_%26_Gamble","Frank_Gehry","Revit","Bentley_Systems","Modelado_de_informaci%C3%B3n_de_construcci%C3%B3n","CAx","CAD","CAE","CAM","HVAC","Chapa","Materiales_compuestos","Cinem%C3%A1tica","Ingenier%C3%ADa_de_sistemas","Ingenier%C3%ADa_de_sistemas_basada_en_modelos","HVAC","Diagrama_de_tuber%C3%ADas_e_instrumentaci%C3%B3n","Airbus_A380","Wayback_Machine","Wayback_Machine","Digital_object_identifier","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa"]}
{"url":"Linus_Torvalds","titulo":"Linus Torvalds","contenido":"Linus Benedict Torvalds  (Helsinki, Finlandia, 28 de diciembre de 1969\u200b) es un ingeniero de software finlandes-estadounidense,\u200b conocido por iniciar y mantener el desarrollo del kernel (en espa\u00f1ol, nucleo) Linux, basandose en el sistema operativo libre Minix creado por Andrew S. Tanenbaum y en algunas herramientas, varias utilidades y los compiladores desarrollados por el proyecto GNU. Actualmente es responsable de la coordinacion del proyecto. Tambien ha desarrollado el software de control de versiones Git.  Linus nacio en Helsinki, Finlandia, el 28 de diciembre de 1969. Sus padres son Anna y Nils Torvalds,\u200b ambos periodistas. Es nieto del estadistico Leo Tornqvist  y del poeta Ole Torvalds, y bisnieto del periodista y soldado Toivo Karanko. Torvalds pertenece a la comunidad sueco-parlante de Finlandia. Sus padres tomaron su nombre de Linus Pauling (estadounidense, Premio Nobel de Quimica 1954). Comenzo sus andanzas informaticas a los 11 a\u00f1os cuando su abuelo Leo Tornqvist, un matematico y estadistico de la Universidad de Helsinki, compro uno de los primeros microordenadores Commodore VIC-20 en 1980 y le pidio ayuda para usarlo;\u200b\u200b de esta manera su primera linea de codigo fue hecha en lenguaje BASIC.\u200b  A finales de los a\u00f1os 1980 tomo contacto con los ordenadores IBM, PC y en 1991 adquirio un ordenador con procesador modelo 80386 de Intel. En 1988 fue admitido en la Universidad de Helsinki, donde estudio ciencias de la computacion. Ese mismo a\u00f1o el profesor Andrew S. Tanenbaum saco a la luz el S.O. Minix con propositos didacticos. Su carrera academica se interrumpio despues de su primer a\u00f1o de estudios cuando se unio a la Brigada Nyland de la Armada finlandesa en el verano de 1989, seleccionando el programa de entrenamiento de oficiales de 11 meses para cumplir con el servicio militar obligatorio de Finlandia. Obtuvo el grado de segundo teniente, con el papel de observador de artilleria.\u200b En 1990 empezo a aprender el lenguaje de programacion C en su universidad.  A la edad de 21 a\u00f1os, con un a\u00f1o de experiencia programando (en C), ya conocia lo suficiente del sistema operativo Minix como para tomar prestadas algunas ideas y empezar un proyecto personal. Basandose en Design of the Unix Operating System, publicado por Maurice J. Bach en 1986, creo una implementacion que ejecuta cualquier tipo de programa, pero sobre una arquitectura de ordenadores compatibles, IBM/PC.  Este proyecto personal desemboco el 5 de octubre de 1991 con el anuncio\u200b de la primera version de Linux capaz de ejecutar BASH (Bourne Again Shell) y el compilador conocido como GCC (GNU Compiler Collection).  En enero de 1992 se adopto la Licencia Publica General (GPL) para Linux. Esta a\u00f1ade libertades de uso a Linux totalmente opuestas a las del software propietario, permitiendo su modificacion, redistribucion, copia y uso ilimitado. Este modelo de licencia facilita lo que es conocido como el modelo de desarrollo de bazar, que ha dado estabilidad y funcionalidad sin precedentes a este sistema operativo.  En 1997 recibio los premios 1997 Nokia Foundation Award de Nokia y Lifetime Achievement Award at Uniforum Pictures. Ese mismo a\u00f1o finalizo los estudios superiores (1988-1997) tras un decenio como estudiante e investigador en la Universidad de Helsinki, coordinando el desarrollo del nucleo del sistema operativo desde 1992.  Trabajo en Transmeta desde febrero de 1997 hasta junio de 2003. Actualmente trabaja para el Open Source Development Labs en Beaverton, Oregon. Solo el 2\u00a0% del codigo del Linux actual esta escrito por el, pero, ademas de su paternidad, en su persona sigue descansando la direccion de la gestion nucleo del sistema operativo.  En 2005 creo Git, un software de control de versiones, pensando en la eficiencia y la confiabilidad del mantenimiento de versiones de aplicaciones cuando estas tienen un gran numero de archivos de codigo fuente.  En Finlandia, Linus Torvalds, por entonces estudiante de Ciencias de la Computacion de la Universidad de Helsinki, decidio realizar la entonces cuantiosa inversion de 3500 dolares estadounidenses para adquirir un nuevo ordenador con el microprocesador 80386 de Intel, el cual funcionaba a 33\u00a0MHz y tenia 4\u00a0MB de memoria RAM. El pago lo realizaria a plazos, pues no disponia de tal cantidad de dinero en efectivo.  Normalmente, este ordenador lo usaba para tener acceso por linea telefonica a la red informatica de su Universidad, pero debido a que no le gustaba el sistema operativo con el cual trabajaba, denominado Minix, decidio crear uno el mismo. Inicialmente, escribio un programa con lenguaje de bajo nivel prescindiendo de Minix. En los primeros intentos, consiguio arrancar el ordenador y ejecutar dos procesos que mostraban la cadena de caracteres \u201cAAAAABBBBB\u201d. Uno lo utilizaria para leer desde el modem y escribir en la pantalla, mientras que el otro escribiria al modem y leeria desde el teclado. Inicialmente, el programa arrancaba desde un disquete.  La siguiente necesidad que tuvo fue la de poder descargar y subir archivos de su universidad, pero para implementar esta funcionalidad en el software emulador era necesario crear un controlador de disco. Asi que despues de un trabajo continuo y duro, creo un controlador compatible con el sistema de archivos de Minix. En ese momento, se percato de que estaba creando algo mas que un simple emulador de terminal, asi que, emprendio la tarea de crear un sistema operativo partiendo de cero. Sin embargo, ante la opcion de quedarse con el nucleo inacabado, decidio compartirlo. \"Mis razones para lanzar Linux fueron bastante egoistas\", declaro, \"no queria el dolor de cabeza de tratar de lidiar con partes del sistema operativo que veia como una mierda. Queria ayuda\".\u200b  De forma privada, Linus nombraba Linux a su nuevo sistema, pero cuando decidio hacer una presentacion publica penso que era demasiado egocentrico llamarlo asi y propuso llamarlo Freax (una combinacion de free (\"gratis\") y la letra X para indicar que es un sistema similar a Unix). Sin embargo, su amigo Ari Lemmke, quien administraba el servidor FTP donde el kernel se alojo por primera vez para su descarga, lo renombro, sin consultar a Linus, porque consideraba que Freax no era un buen nombre.\u200b  Despues de anunciar el 25 de agosto de 1991 su intencion de seguir desarrollando su sistema para construir un reemplazo de Minix, el 17 de septiembre sube al servidor de FTP proporcionado por su universidad la version 0.01 de Linux con 10\u00a0000 lineas de codigo. A partir de ese momento Linux empezo a evolucionar rapidamente.  A medida que la popularidad de Linux se extendia, Microsoft lo califico como un cancer describiendo al software de codigo abierto como una afrenta al capitalismo. Linus fue presentado como un activista socialista de software finlandes que amenazaba a la industria del software. Sin embargo, Linus declaro que encontraba a la \"gente que piensa que el codigo abierto es anticapitalismo algo ingenuo y un poco estupido\".\u200b En una entrevista, Linus declaro que \"no creo que las economias planificadas a cinco a\u00f1os funcionen, y tampoco creo que funcione cuando se dise\u00f1a software. El desarrollo de Linux siempre ha sido una especie de mercado abierto, donde la direccion del desarrollo se establece segun la demanda de los clientes, junto con, obviamente, mucho de lo que simplemente llamo buen gusto: evitar cosas que obviamente seran problematicas a largo plazo\".\u200b Aunque Linus cree que \"el codigo abierto es la unica forma correcta de hacer software\", tambien ha dicho que usa \"la mejor herramienta para el trabajo\", incluso si eso incluye software propietario.\u200b  A partir de 2006, se estima que aproximadamente el dos por ciento del nucleo Linux fue escrito por el propio Linus.\u200b Debido a que miles de personas han contribuido al nucleo Linux, este porcentaje es una de las mayores contribuciones al mismo. Sin embargo, declaro en 2012 que su propia contribucion personal ahora es principalmente un codigo de fusion escrito por otros, con poca programacion.\u200b Linus conserva la maxima autoridad para decidir que nuevo codigo se incorpora al nucleo estandar de Linux.\u200b  Posee la marca registrada \"Linux\" y supervisa\u200b el uso de la marca a traves de la organizacion sin animo de lucro Linux International.  Linus Torvalds esta casado con Tove Torvalds (karateka finlandesa). Se conocieron en 1993. A\u00f1os despues, Tove Torvalds y Linus Torvalds se casaron y tuvieron tres hijas, dos de las cuales nacieron en los Estados Unidos.  Linus Torvalds se define a si mismo como ateo, a lo cual a\u00f1ade que en Estados Unidos, a diferencia con Europa donde la religion es una cuestion personal, esta se encuentra muy politizada. Cuando se le pregunta a Torvals sobre su opinion respecto a la separacion entre estado y religion, este contesta: \"Es un poco ironico, que en muchos paises Europeos, haya una estrecha vinculacion entre el estado y la religion\".\u200b  En 2010, Torvalds se convirtio en ciudadano estadounidense fue registrado para poder votar en Estados Unidos. No esta afiliado a ningun partido, afirmando \"Tengo demasiado orgullo personal como para querer estar asociado con alguno de ellos, francamente.\"\u200b  Linus ha desarrollado desde el a\u00f1o 2000 bastante interes por el buceo, lo que le ha llevado a conseguir numerosas certificaciones. Tambien es el motivo de que posteriormente desarrollara el proyecto Subsurface.  Linus se ha ganado la reputacion de persona con la que nadie quiere trabajar.\u200b\u200b En una conferencia en la Universidad Aalto declaro que NVIDIA era \u201cla peor empresa con la que habian tratado\u201d y \u201cfoco de continuos problemas para Linux\u201d mostrandoles luego el dedo medio.\u200b Linus tambien critico a Richard Stallman por tener un pensamiento de \"blanco o negro\".\u200b Sin embargo, a pesar de que Linus declaro que \"no [era] una buena persona y no me importa\"\u200b y abogar por la intimidacion personal y la violencia,\u200b a traves de un comunicado anuncio que se tomaria un descanso de sus actividades para aprender a controlar sus emociones.\u200b ","snippet":"Linus Benedict Torvalds  (Helsinki, Finlandia, 28 de diciembre de 1969\u200b) es un ingeniero de software finlandes-estadounidense,\u200b conocido por iniciar y mantener el desarrollo del kernel (en espa\u00f1ol, nu","enlaces_salientes":["Linus_Torvalds","Linus_Torvalds","Linus_Torvalds","Helsinki","Finlandia","Portland_(Oreg%C3%B3n)","Oreg%C3%B3n","Finlandia","Estadounidense","Agnosticismo","Sueco_de_Finlandia","Nils_Torvalds","Universidad_de_Helsinki","Ingenier%C3%ADa_de_software","Linux_(n%C3%BAcleo)","Git","Universidad_de_Helsinki","Transmeta","Fundaci%C3%B3n_Linux","N%C3%BAcleo_Linux","Git","Helsinki","Finlandia","Ingenier%C3%ADa_de_software","Nacionalidad_estadounidense","N%C3%BAcleo_(inform%C3%A1tica)","N%C3%BAcleo_(inform%C3%A1tica)","Linux_(n%C3%BAcleo)","Sistema_operativo","Minix","Andrew_S._Tanenbaum","Compilador","Proyecto_GNU","Git","Helsinki","Finlandia","Nils_Torvalds","Hablantes_de_sueco_en_Finlandia","Linus_Pauling","Estadounidense","Premio_Nobel_de_Qu%C3%ADmica","Matem%C3%A1tico","Estad%C3%ADstico","Universidad_de_Helsinki","Commodore_VIC-20","BASIC","IBM","Ordenador_personal","Intel_80386","Intel","Universidad_de_Helsinki","Ciencias_de_la_computaci%C3%B3n","Andrew_S._Tanenbaum","Minix","Armada_Finlandesa","Lenguaje_de_programaci%C3%B3n_C","Lenguaje_de_programaci%C3%B3n_C","Minix","Linux_(n%C3%BAcleo)","BASH","Compilador","GCC","Licencia_p%C3%BAblica_general_de_GNU","Software_libre","Software_propietario","Nokia","Transmeta","Beaverton","Oreg%C3%B3n","Linux_(n%C3%BAcleo)","Git","Ciencias_de_la_Computaci%C3%B3n","Minix","Controlador_de_dispositivo","Terminal_(inform%C3%A1tica)","Unix","Protocolo_de_transferencia_de_archivos","25_de_agosto","1991","17_de_septiembre","File_Transfer_Protocol","Microsoft","Software_de_c%C3%B3digo_abierto","Capitalismo","Anticapitalismo","Econom%C3%ADa_planificada","Software","Software_propietario","Marca_registrada","Organizaci%C3%B3n_sin_%C3%A1nimo_de_lucro","Linux_International","Universidad_Aalto","Nvidia","Dedo_medio","Richard_Stallman","Intimidaci%C3%B3n","Asteroide","Electronic_Frontier_Foundation","Universidad_de_Estocolmo","Universidad_de_Helsinki","Revista_Time","Richard_Stallman","Revista_Time","Revista_Time","Shin%27ya_Yamanaka","Internet_Society","Sal%C3%B3n_de_la_Fama_de_Internet","Institute_of_Electrical_and_Electronics_Engineers","Institute_of_Electrical_and_Electronics_Engineers","GNU/Linux","C%C3%B3digo_fuente","Lawrence_Lessig","Creative_Commons","Ley_de_Linus","Bruce_Perens","Debian_GNU/Linux","GNU_General_Public_License","Eric_S._Raymond","Unix","Open_Source","Richard_Stallman","Ideolog%C3%ADa","Debate_Tanenbaum%E2%80%93Torvalds","Le_Monde","ISBN","Youtube","California","Forbes","ISSN","ISSN","Slashdot","The_Oregonian","ISSN","Wayback_Machine","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Francia","Biblioteca_de_Catalu%C3%B1a","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Syst%C3%A8me_universitaire_de_documentation","Scopus","BIBSYS","Istituto_Centrale_per_il_Catalogo_Unico","Open_Library","Enciclopedia_Brit%C3%A1nica","Internet_Movie_Database"]}
{"url":"Richard_Stallman","titulo":"Richard Stallman","contenido":"Richard Matthew Stallman (Manhattan, Nueva York; 16 de marzo de 1953), con frecuencia abreviado como \u00abrms\u00bb,\u200b es un fisico, programador estadounidense, activista y fundador del movimiento del software libre, del sistema operativo GNU y de la Free Software Foundation (Fundacion para el Software Libre).  Entre sus logros destacados como programador se incluye la realizacion del editor de texto GNU Emacs,\u200b el compilador GCC,\u200b el depurador GDB,\u200b y el lenguaje de construccion GNU Make;\u200b todos bajo la rubrica del Proyecto GNU. Sin embargo, es principalmente conocido por el establecimiento de un marco de referencia moral, politico y legal para el software libre: un modelo de desarrollo y distribucion alternativo al software privativo. Es tambien inventor del concepto de copyleft (aunque no del termino): un metodo legal para licenciar obras contempladas por el derecho de autor, de tal forma que su uso y modificacion (asi como de sus derivados) permanezcan siempre permitidos.  Su innovador trabajo y activismo en torno al software libre y los derechos digitales le han merecido numerosas distinciones; incluyendo mas de una docena de doctorados y profesorados honorificos, la prestigiosa beca de la Fundacion MacArthur, el premio Pioneer de la Electronic Frontier Foundation y varios premios de la ACM. Es miembro del salon de la fama de Internet.  Richard Matthew Stallman nacio en la ciudad de Nueva York en el a\u00f1o 1953, en una familia judia, hijo de Alice Lippman y Daniel Stallman.\u200b Su primera experiencia con computadoras fue en el Centro Cientifico de IBM en Nueva York cuando cursaba la preparatoria. Fue contratado durante un verano para escribir un programa de analisis numerico en Fortran. Completo el trabajo despues de un par de semanas, y dedico el resto del verano escribiendo un editor de textos en el lenguaje de programacion APL.\u200b Stallman invirtio el verano de su graduacion de la preparatoria en escribir otro programa, un preprocesador para el lenguaje de programacion PL/1 en el IBM S/360.  Durante este tiempo, Stallman fue tambien asistente voluntario de laboratorio en el departamento de biologia de la Universidad Rockefeller. Aunque ya estaba ingresando a la carrera de fisica o matematicas, su maestro tutor en el Rockefeller penso que el podria ser biologo en un futuro.\u200b  En 1971, siendo estudiante de primer a\u00f1o de fisica en la Universidad Harvard, Stallman se convirtio en un hacker del Laboratorio de Inteligencia Artificial del Instituto Tecnologico de Massachusetts (MIT), donde trabajaba manteniendo el sistema operativo de la casa: el Incompatible Time-sharing System (ITS). Era conocido por su alto rendimiento en Math 55: el curso de matematicas de pregrado mas avanzado de Harvard. Se graduo con honores en 1974 de esta universidad. Curso un a\u00f1o de doctorado en fisica en el MIT, abandonando el programa para concentrarse en su programacion en el Laboratorio de Inteligencia Artificial.\u200b  En 1976 mientras trabajaba como asistente de investigacion de Gerald Sussman,\u200b publico junto con Sussman un influyente articulo sobre un sistema de mantenimiento de la verdad (TMS en ingles) llamado dependency-directed backtracking (retropropagacion dirigida por dependencias), con el proposito de resolver circuitos electricos mediante computadora.\u200b Fue un trabajo pionero sobre retropropagacion inteligente para el problema de satisfaccion de restricciones. A la fecha de 2009, el algoritmo introducido por Stallman y Sussman sigue siendo la forma mas general y potente de retropropagacion inteligente.\u200b\u200b La tecnica de aprendizaje de restricciones, mediante la cual se guardan los resultados parciales de una busqueda para volver a usarla en el futuro, tambien fue descrita por primera vez en el mismo articulo.\u200b  En los a\u00f1os 1980, la cultura hacker que constituia la vida de Stallman empezo a disolverse bajo la presion de la comercializacion en la industria del software. En particular, otros hackers del laboratorio de IA fundaron la compa\u00f1ia Symbolics,\u200b la cual intentaba activamente reemplazar el software libre del Laboratorio con su propio software privativo.\u200b  Entre 1982 y 1983, Stallman por si solo duplico los esfuerzos de los programadores de Symbolics para impedir que adquirieran un monopolio sobre los ordenadores del laboratorio. En ese momento, el era el ultimo de su generacion de hackers en el laboratorio. Cuando intento mejorar el firmware de las nuevas impresoras del laboratorio como habia hecho anteriormente, el fabricante le pidio que firmara un acuerdo de no divulgacion (non-disclosure agreement), y que llevara a cabo otras acciones que el considero traiciones a sus principios eticos. Harto de lo que el llamaba un creciente \"acaparamiento del software\" en la industria, el 27 de septiembre de 1983 Stallman anuncio en varios grupos de noticias de Usenet el inicio del proyecto GNU, que perseguia crear un sistema operativo completamente libre para las mas recientes microcomputadoras PC.\u200b  El 16 de septiembre de 2019 dejo su puesto no remunerado como cientifico y profesor visitante del MIT y, renuncio como presidente de la FSF, el 5 de agosto de 2020 se anunciaria a Geoffrey Knauth como sucesor a la presidencia.\u200b  El nuevo sistema operativo seria portable para evitar que cayera en la obsolescencia, como sucedio con ITS. Stallman renuncio a su empleo en el MIT a fin de desligar los derechos de autor sobre su nuevos programas, si bien el laboratorio ofrecio albergar el proyecto.  Al anuncio inicial del proyecto GNU siguio en 1985 la publicacion del Manifiesto GNU, en el cual Stallman declaraba sus intenciones y motivaciones para crear una alternativa libre al sistema operativo Unix, al que denomino GNU (GNU No es Unix), pronunciado de forma parecida a \u00f1u, en ingles (de ahi los dibujos-logotipos que lo representan). Poco tiempo despues fundo la organizacion sin animo de lucro Free Software Foundation para coordinar el esfuerzo. Como Stallman no deseaba dejar su nuevo software a la suerte del dominio publico, termino por inventar el recurso legal del copyleft, que cristalizo en la Licencia Publica General GNU (conocida generalmente como la \u00abGPL\u00bb) en 1989. La mayor parte del sistema GNU, excepto el nucleo, se completo aproximadamente al mismo tiempo. En 1991, Linus Torvalds libero el nucleo Linux bajo los terminos de la GPL. Se trabajo para hacer a GNU y a Linux mutuamente compatibles, completando un sistema ciento por ciento funcional: el sistema operativo GNU/Linux.  Stallman insiste en la utilizacion del termino \u00absoftware libre\u00bb, y no codigo abierto, porque el objetivo de su proyecto es otorgar libertad y derechos a los usuarios de computadoras. El discurso del codigo abierto por el contrario pretende evitar hablar de tales programas en terminos morales. Tambien busca que se diga \"GNU/Linux\" y no solamente \"Linux\" cuando se habla del sistema operativo (ver Controversia por la denominacion GNU/Linux). Para Stallman el software libre no quiere decir que sea gratis. Ademas considera que en la ense\u00f1anza no deberia utilizarse software privativo.\u200b  Las motivaciones politicas y morales de Richard Stallman lo han convertido en una figura controvertida. Muchos programadores influyentes que se encuentran de acuerdo con el concepto de compartir el codigo difieren con las posturas morales, filosofia personal o el lenguaje que utiliza Stallman para describir sus posiciones. Un resultado de estas disputas condujo al establecimiento de una alternativa al movimiento de Software Libre, el movimiento de codigo abierto.\u200b  Hasta 2019 Stallman tuvo una posicion no remunerada como investigador en el MIT.\u200b Ha declarado ser \"un ateo de ascendencia judia\"\u200b y a menudo lleva un boton que dice \"Enjuicien a Dios\" (\"Impeach God\").\u200b\u200b Niega ser un anarquista a pesar de su cautela de algunas leyes y el hecho de que ha \"defendido energicamente la privacidad de los usuarios y su propia vision de la libertad del software\".\u200b  Stallman se refiere a los telefonos moviles como \"dispositivos de vigilancia y seguimiento\" y \"el sue\u00f1o de Stalin\".\u200b Se niega a poseer un telefono celular debido a que su hardware esta total o parcialmente bajo el control de las compa\u00f1ias telefonicas, en lugar de los usuarios. Tambien evita el uso de una tarjeta-llave para entrar en su oficina,\u200b ya que estos sistemas llevan un seguimiento de cada lugar y hora en que alguien entra en el edificio. A excepcion de unos pocos sitios web relacionados con su trabajo en GNU y la FSF, por lo general no navega por la web directamente desde su ordenador personal con el fin de evitar ser conectado con su historial de navegacion. En su lugar, usa wget o programas similares que recuperan el contenido de los servidores web y luego envian el contenido a su correo electronico.\u200b Mas recientemente, ha declarado haber comenzado a navegar la web directamente a traves de Tor.  Su imagen y manias se han vuelto un icono en la cultura hacker, llegando a aparecer en tiras comicas.\u200b  San Ignucio (Saint Ignucius) es el nombre de un personaje que, a manera de broma, interpreta Richard Stallman.\u200b El nombre de esta auto-parodia es una mezcla de Ignacio y GNU.\u200b Es un santo autoelegido en la Iglesia de Emacs.\u200b  El origen de este personaje lo podemos encontrar en el caracter \"evangelizador\" de Stallman, predicando las bondades del software libre y haciendo frecuentes analogias entre este movimiento y una religion. Para su interpretacion suele vestirse con una tunica negra, colocarse en la cabeza el plato de un antiguo disco duro, a modo de aureola dorada, y sostener su computadora portatil que asegura solo contiene software libre. En algunas ocasiones los asistentes a las conferencias que Stallman dicta a nivel mundial, Espa\u00f1a incluida, no entienden esta clase de humor. Sin embargo, Stallman, con mucha paciencia, siempre finaliza su representacion.\u200b  Stallman predica acerrimamente la supremacia del editor Emacs sobre vi; rivalidad conocida como \"editor war\" (en espa\u00f1ol guerras de editores). Tambien habla acerca del kernel de GNU y del software privativo, al que llama anatema.\u200b  Stallman ha escrito numerosos ensayos sobre la libertad del software y ha sido un orador politico en favor del movimiento del software libre desde principios de los 1990s.\u200b Los discursos que ha dado regularmente se titulan \"El Proyecto GNU y el movimiento del software libre\",\u200b \"Los peligros de las patentes de software\",\u200b \"Copyright y globalizacion en la era de las redes informaticas\".\u200b  La firme defensa de Stallman por el software libre inspiro la creacion del Virtual Richard M. Stallman (vrms), un software que analiza los paquetes instalados en un sistema Debian GNU/Linux, e informa de aquellos que no son libres.\u200b Stallman no esta de acuerdo con parte de la definicion de software libre de este proyecto.\u200b  En 1999 promovio la creacion de una enciclopedia libre, la GNUPedia, considerada como un antecedente directo de Wikipedia. El proyecto resultante se retiro finalmente en favor de esta ultima, que tenia objetivos similares y estaba contando con un exito mayor.\u200b  Stallman es un viajero incansable. Ha visitado al menos 65 paises, sobre todo para hablar sobre el software libre y el proyecto GNU.\u200b Segun Stallman, el movimiento del software libre tiene mucho en comun con aquel liderado por Mahatma Gandhi.\u200b  En abril de 2006, Stallman llevo un cartel de protesta contra el software propietario -\"No compre ATI, enemigo de su libertad\"- en un discurso pronunciado por el representante de esa firma, dando lugar a una llamada a la policia.\u200b ATI se fusiono luego con AMD Corporation y tomo medidas para que su documentacion de hardware este disponible para uso por la comunidad de software libre.\u200b  En agosto de 2006, en reuniones con el gobierno del estado indio de Kerala, convencio a los funcionarios de desprenderse del software propietario en escuelas estatales. Esto dio lugar a la decision historica de migrar todas las computadoras en 12.500 escuelas secundarias de Windows a un sistema operativo de software libre.\u200b  En Venezuela, Stallman ha pronunciado discursos publicos y promovido la adopcion de software libre en la petrolera estatal PDVSA, el gobierno municipal y el ejercito de la nacion. En reuniones con Hugo Chavez y en discursos publicos, Stallman critico algunas politicas sobre la radiodifusion televisiva, derechos de libertad de expresion y privacidad.\u200b Stallman estuvo en el Consejo Asesor de la cadena de television Telesur desde su lanzamiento,\u200b pero renuncio en febrero de 2011 criticando la propaganda pro-Gadafi durante la Primavera Arabe.\u200b  Luego de reuniones personales, Stallman obtuvo declaraciones en favor del movimiento del software libre del presidente de la India, Dr. APJ Abdul Kalam,\u200b la candidata presidencial francesa en 2007 Segolene Royal,\u200b y el entonces presidente de Ecuador Rafael Correa.\u200b  El 30 de noviembre de 2012, Stallman dio la conferencia de apertura en el Foro Goiano Software Libre en Brasil, hablando de casos exitosos de migracion a software libre en el gobierno, los negocios y las universidades.\u200b  Stallman ha participado en protestas contra el uso de patentes de software,\u200b DRMs,\u200b y software propietario. Linus Torvalds ha criticado a Stallman por lo que considera un pensamiento \"de blanco o negro\".\u200b  Actualmente mantiene una postura critica contra Facebook por suministrar masivamente informacion de sus usuarios a agencias gubernamentales como la NSA de Estados Unidos y empresas de todo tipo.\u200b\u200b  Stallman ha brindado regularmente una conferencia titulada \"Derechos de autor versus comunidad\", donde revisa el estado de los DRMs y se pronuncia en contra de ciertos productos y empresas que los utilizan. Su vision sobre los DRMs se resume en la campa\u00f1a de la FSF Defectuoso por Dise\u00f1o. En sus charlas se manifiesta en favor de un \"copyright reducido\" y sugiere un limite de 10 a\u00f1os para los derechos de autor. Sugiere que, en lugar de las restricciones al intercambio, se apoye a los autores utilizando un impuesto y se distribuyan los ingresos sobre la base de las raices cubicas de su popularidad. Esto aseguraria que \"los exitosos no sean estrellas\" y reciban, sin embargo, una recompensa mayor comparada con el gravamen por copia privada asociada a los defensores del copyright. Otra opcion seria un sistema de micropago anonimo para que la gente apoye de manera directa a los autores.  Stallman se pronuncia por que ninguna forma de intercambio no-comercial de copias sea considerada una violacion a los derechos de autor.\u200b Ha abogado por la desobediencia civil en un comentario sobre la Ley Sinde.\u200b  Tambien ha apoyado al Proyecto Biblioteca Internacional de Partituras Musicales, para volver a estar en linea luego de haber sido retirado el 19 de octubre de 2007, tras una orden de cese y desista de Universal Edition.\u200b  Stallman destaca los peligros que algunos e-libros tienen en comparacion con los libros de papel. Un ejemplo es el lector electronico Kindle de Amazon, que impide la copia de libros electronicos y permite a la empresa la eliminacion remota de contenido. Considera que tales desarrollos presentan un gran paso atras con respecto a los libros de papel, por ser menos faciles de usar, copiar, prestar a los demas o vender, ademas de que los Kindle no se pueden comprar de forma anonima. Su cuento \"El derecho a leer\" ofrece una imagen de un futuro distopico en el que se impide el derecho a compartir los libros. Se opone a muchos de los terminos dentro de los acuerdos de licencia de usuario final que acompa\u00f1an a tales dispositivos.\u200b  Stallman desalienta el uso de varias tecnologias de almacenamiento, como discos de video DVD o Blu-ray, debido a que estos estandares fueron dise\u00f1ados para cifrar el contenido en desventaja de los clientes. Considera el uso de cifrado de datos por parte de los fabricantes (para obligar al usuario a ver cierto material promocional) como una conspiracion.\u200b  Reconocio el escandalo de proteccion de copia rootkit de Sony BMG como un acto criminal. Stallman apoya un boicot a Sony por sus acciones legales contra George Hotz.\u200b  En septiembre de 2019 Stallman renuncio a su puesto como investigador del Proyecto MAC en el MIT y a la presidencia de la Free Software Foundation (FSF), el 5 de agosto de 2020 se anunciaria en su reemplazo a Geoffrey Knauth.\u200b  En marzo de 2021 durante el evento LibrePlanet, Stallman anuncia, de manera sorpresiva,\u200b su reincorporacion a la mesa directiva de la FSF.\u200b Ante esto, diversos grupos del software libre presentaron una carta abierta\u200b donde exigen la salida de RMS y toda la mesa directiva de la FSF.\u200b  Stallman ha recibido numerosos premios y reconocimientos por su trabajo, entre ellos:  Articulos en revistas cientificas:  Manuales:  Recopilaciones de ensayos:  Biografia: ","snippet":"Richard Matthew Stallman (Manhattan, Nueva York; 16 de marzo de 1953), con frecuencia abreviado como \u00abrms\u00bb,\u200b es un fisico, programador estadounidense, activista y fundador del movimiento del software ","enlaces_salientes":["Richard_Stallman","Richard_Stallman","Richard_Stallman","Manhattan","Estados_Unidos","Boston","Ate%C3%ADsmo","Idioma_ingl%C3%A9s","Universidad_de_Harvard","Bachelor_of_Arts","Instituto_de_Tecnolog%C3%ADa_de_Massachusetts","Philosophi%C3%A6_doctor","Programador","Bloguero","Ingeniero","Inventor","Activista","Software_libre","Proyecto_GNU","Free_Software_Foundation","Movimiento_del_software_libre","Altermundialismo","GNU","Free_Software_Song","GNU_General_Public_License","GNU_Compiler_Collection","GNU_Debugger","El_derecho_a_leer","Manifiesto_GNU","Academia_Estadounidense_de_las_Artes_y_las_Ciencias","Academia_Nacional_de_Ingenier%C3%ADa_(Estados_Unidos)","Becas_MacArthur","Premio_Grace_Murray_Hopper","EFF_Pioneer_Award","Sal%C3%B3n_de_la_Fama_de_Internet","Manhattan","Nueva_York","F%C3%ADsico","Programador","Estados_Unidos","Movimiento_del_software_libre","GNU","Free_Software_Foundation","GNU_Emacs","GCC","GNU_Debugger","GNU_Make","Proyecto_GNU","Moral","Pol%C3%ADtico","Legal","Software_libre","Software_propietario","Inventor","Copyleft","Derecho_de_autor","Electronic_Frontier_Foundation","Association_for_Computing_Machinery","Sal%C3%B3n_de_la_fama_de_Internet","Nueva_York","IBM_Research","Fortran","APL","Preprocesador","PL/1","IBM_S/360","Voluntario","Biolog%C3%ADa","Universidad_Rockefeller","F%C3%ADsica","Matem%C3%A1ticas","F%C3%ADsica","Universidad_Harvard","Hacker","MIT_Artificial_Intelligence_Laboratory","Instituto_Tecnol%C3%B3gico_de_Massachusetts","Incompatible_Timesharing_System","Gerald_Sussman","Circuitos_el%C3%A9ctricos","Problema_de_satisfacci%C3%B3n_de_restricciones","Symbolics","Acuerdo_de_confidencialidad","27_de_septiembre","1983","Usenet","Sistema_operativo","Software_libre","Microcomputadora","Free_Software_Foundation","Manifiesto_GNU","Unix","GNU","%C3%91u","Free_Software_Foundation","Copyleft","Licencia_p%C3%BAblica_general_de_GNU","Licencia_p%C3%BAblica_general_de_GNU","N%C3%BAcleo_(inform%C3%A1tica)","Linus_Torvalds","Linux_(n%C3%BAcleo)","Sistema_operativo","GNU/Linux","Software_libre","C%C3%B3digo_abierto","C%C3%B3digo_abierto","Controversia_por_la_denominaci%C3%B3n_GNU/Linux","Software_libre","C%C3%B3digo_abierto","Ate%C3%ADsmo","Disco_duro","Telefon%C3%ADa_m%C3%B3vil","Vigilancia_masiva","I%C3%B3sif_Stalin","GNU_Wget","Tor_(red_de_anonimato)","Tira_c%C3%B3mica","GNU","Software_libre","Emacs","Vi","Guerras_de_editores","Anatema","Debian_GNU/Linux","Enciclopedia","GNUPedia","Ciudad","Puno","Mahatma_Gandhi","Kerala","Microsoft_Windows","Venezuela","PDVSA","Hugo_Ch%C3%A1vez","Telesur","Primavera_%C3%81rabe","Abdul_Kalam","S%C3%A9gol%C3%A8ne_Royal","Rafael_Correa","Universidad_Nacional_de_Colombia","Patente_de_software","Digital_Rights_Management","Software_propietario","Linus_Torvalds","Facebook_(empresa)","National_Security_Agency","Estados_Unidos","Defective_by_Design","Derecho_de_autor","Ra%C3%ADz_c%C3%BAbica","Micropago","Desobediencia_civil","Ley_Sinde","Proyecto_Biblioteca_Internacional_de_Partituras_Musicales","Cese_y_desista","Universal_Edition","EBook","Amazon_Kindle","Amazon.com","El_derecho_a_leer","End_User_License_Agreement","DVD","Disco_Blu-ray","Cifrado_(criptograf%C3%ADa)","Rootkit","Sony_BMG","George_Hotz","Free_Software_Foundation","LibrePlanet","Software_libre","1991","Emacs","Doctor_honoris_causa","Suecia","2001","Argentina","Per%C3%BA","Universidad_de_Pav%C3%ADa","Canad%C3%A1","Doctor_honoris_causa","Universidad_Nacional_de_C%C3%B3rdoba","2012","2012","2012","2013","Sal%C3%B3n_de_la_Fama_de_Internet","Universidad_Concordia","Universidad_Pierre_y_Marie_Curie","GNU_Solidario","Universidad_Nacional_de_Jujuy","Universidad_Nacional_de_Tucum%C3%A1n","IEEE","ISSN","Digital_object_identifier","Elsevier","Digital_object_identifier","ISBN","ISBN","ISBN","Traficantes_de_Sue%C3%B1os","ISBN","ISBN","ISBN","GNE","Free_Software_Song","SLUC","Software_libre_para_una_sociedad_libre","Proyecto_GNU","Proyecto_GNU","Proyecto_GNU","Google_Libros","O%27Reilly_Media","ISBN","O%27Reilly_Media","ISBN","Stuart_J._Russell","Peter_Norvig","Google_Libros","Daniel_Weinreb","Proyecto_GNU","Free_Software_Foundation","Instituto_Tecnol%C3%B3gico_de_Massachusetts","O%27Reilly_Media","ISBN","ISBN","Google_Libros","International_Data_Group","ISSN","ISSN","Wayback_Machine","Universidad_Nacional_de_C%C3%B3rdoba","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Biblioteca_Nacional_de_Espa%C3%B1a","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Dieta","Biblioteca_Nacional_de_Israel","CiNii","Syst%C3%A8me_universitaire_de_documentation","BIBSYS","Istituto_Centrale_per_il_Catalogo_Unico","Deutsche_Biographie","Open_Library","Enciclopedia_Brit%C3%A1nica","Dialnet","Proyecto_Gutenberg","Internet_Movie_Database"]}
{"url":"Ken_Thompson","titulo":"Ken Thompson","contenido":"Kenneth Lane Thompson (Nueva Orleans, Luisiana; 4 de febrero de 1943), mas conocido como Ken Thompson, es un pionero en las ciencias de la computacion. Su trabajo con el lenguaje de programacion B y el sistema operativo UNIX y Plan 9 para los laboratorios Bell. Se le adjudica a Thompson, junto a  Dennis Ritchie, la creacion de UNIX.  En 1965 se diploma en ciencias y en 1966 consigue un master en ingenieria electrica y ciencias de la computacion, por la universidad de California.  En los a\u00f1os 60, Thompson y Dennis Ritchie trabajaron el sistema operativo Multics. Mientras escribia Multics, Thompson creo el lenguaje de programacion B, al que llamo asi por su esposa, Bonnie, (tambien se dice que fue probablemente una contraccion de \"BCPL\"), el cual seria el precursor del C. Tanto Thompson como Ritchie abandonaron el desarrollo de Multics por su creciente complejidad, y en 1969 crean el sistema operativo UNIX.  Thompson habia desarrollado la version de CTSS del editor de texto QED (Quick Editor), que incluyo las expresiones regulares para buscar el texto. QED y un editor mas moderno ed (el editor por defecto en Unix) contribuyeron al desarrollo de las expresiones regulares. Estas llegaron a ser importantes en procesadores de texto. Casi todos los programas que trabajan con expresiones regulares hoy, utilizan una cierta variante de la notacion de Thompson.  Tambien trabajo en el desarrollo de la PDP-11 y en la introduccion de las pipes o tuberias en los sistemas operativos.  El 2 de septiembre de 1992, inventa junto a Rob Pike el codigo de caracteres UTF-8, pero no fue presentado oficialmente hasta enero de 1993 en una conferencia en San Diego.  Junto con Joseph Condon, creo el hardware y el software para Belle, un ordenador de ajedrez. Mas adelante, con la ayuda del experto ajedrecista John Roycroft, Thompson distribuyo sus primeros resultados en CD-ROM.  El estilo de programacion de Thompson ha influenciado notablemente a otros programadores.  A finales de 2000, Thompson se retiro de los laboratorios de Bell, para trabajar en Entrisphere donde estuvo hasta 2006. Actualmente trabaja para Google en el desarrollo del lenguaje Go.   ","snippet":"Kenneth Lane Thompson (Nueva Orleans, Luisiana; 4 de febrero de 1943), mas conocido como Ken Thompson, es un pionero en las ciencias de la computacion. Su trabajo con el lenguaje de programacion B y e","enlaces_salientes":["Ken_Thompson","Ken_Thompson","Ken_Thompson","4_de_febrero","1943","Nueva_Orleans","Idioma_ingl%C3%A9s","Universidad_de_California_en_Berkeley","Bachelor_of_Science","Master_of_Science","Bell_Labs","Google","Unix","Go_(lenguaje_de_programaci%C3%B3n)","Plan_9","Multics","DBM_(inform%C3%A1tica)","Ed_(Unix)","Academia_Nacional_de_Ciencias_(Estados_Unidos)","Academia_Estadounidense_de_las_Artes_y_las_Ciencias","Academia_Nacional_de_Ingenier%C3%ADa_(Estados_Unidos)","Premio_Turing","1983","Nueva_Orleans","Luisiana","4_de_febrero","1943","Ciencias_de_la_computaci%C3%B3n","Lenguaje_de_programaci%C3%B3n_B","Sistema_operativo","Unix","Plan_9_from_Bell_Labs","Laboratorios_Bell","Dennis_Ritchie","Ciencias_de_la_computaci%C3%B3n","Universidad_de_California","Dennis_Ritchie","Multics","Lenguaje_de_programaci%C3%B3n_B","BCPL","Lenguaje_de_programaci%C3%B3n_C","UNIX","CTSS","QED_(editor_de_texto)","Expresiones_regulares","Ed_(Unix)","PDP-11","Pipes","Tuber%C3%ADa_(inform%C3%A1tica)","Rob_Pike","C%C3%B3digo_de_caracteres","UTF-8","San_Diego_(California)","Ajedrez","John_Roycroft","Google","Go_(lenguaje_de_programaci%C3%B3n)","Premio_Turing","1983","1999","1999","IEEE","Internet_Archive","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Scopus","Enciclopedia_Brit%C3%A1nica","Stephen_A._Cook","Premio_Turing","1983","Niklaus_Wirth"]}
{"url":"Recolector_de_basura","titulo":"Recolector de basura","contenido":"Un recolector de basura (del ingles garbage collector) es un mecanismo implicito de gestion de memoria implementado en algunos lenguajes de programacion de tipo interpretado o semiinterpretado.  El concepto de recoleccion de basura fue inventado por John McCarthy en 1958 para evitar la gestion manual de memoria en el lenguaje Lisp.\u200b  Cualquier programa informatico hace uso de una cierta cantidad de memoria de trabajo puesta a su disposicion por el sistema operativo. Esta memoria tiene que ser gestionada por el propio programa para:  Generalmente, el programador dispone de una biblioteca de codigo que se encarga de estas tareas. No obstante, el propio programador es responsable de utilizar adecuadamente esta biblioteca.  Esto tiene la ventaja de que se hace un uso eficiente de la memoria, es decir, los espacios de memoria quedan libres cuando ya no son necesarios. No obstante, este mecanismo explicito de gestion de memoria es propenso a errores. Por ejemplo, un programador puede olvidar liberar la memoria de manera que, tarde o temprano, no quede memoria disponible, abortando la ejecucion del programa.  Como alternativa es necesaria una gestion implicita de memoria, con lo que el programador no es consciente de la reserva y liberacion de memoria. Esto es obligado en algunos lenguajes de programacion en los que no se maneja el concepto de memoria. Por ejemplo, en lenguajes declarativos como Lisp o Prolog.  Cuando un lenguaje dispone de recoleccion de basura, el programador no tiene que invocar a una subrutina para liberar memoria. La reserva de memoria tambien es mas o menos automatica sin la intervencion del programador. Por ejemplo:  Cuando se compila el programa, automaticamente se incluye en este una subrutina correspondiente al recolector de basura. Esta subrutina tambien es invocada periodicamente sin la intervencion del programador.  El recolector de basura es informado de todas las reservas de memoria que se producen en el programa. Ademas, el compilador colabora para que sea posible llevar una cuenta de todas las referencias que existen a un determinado espacio de memoria reservado.  Cuando se invoca el recolector de basura, recorre la lista de espacios reservados observando el contador de referencias de cada espacio. Si un contador ha llegado a cero significa que ese espacio de memoria ya no se usa y, por tanto, puede ser liberado.  Naturalmente, este proceso consume un cierto tiempo en el que no se hace nada verdaderamente util para el proposito del programa. Por tanto, no puede ser invocado con demasiada frecuencia.  En consecuencia, el unico inconveniente a este mecanismo es determinar cuando se tiene que ejecutar el recolector de basura. Existen varios algoritmos para hacerlo, pero el mas eficiente es el primero de ellos:  Las ventajas y desventajas de este mecanismo de gestion de memoria son las opuestas al mecanismo explicito:  Existe la posibilidad de implementar la recoleccion de basura como una biblioteca de codigo mas, pero por norma general no es asi. El propio dise\u00f1o de ciertos lenguajes de programacion hace necesaria la existencia del recolector de basura. Para poder implementar estos lenguajes se requieren dos actuaciones: ","snippet":"Un recolector de basura (del ingles garbage collector) es un mecanismo implicito de gestion de memoria implementado en algunos lenguajes de programacion de tipo interpretado o semiinterpretado.  El co","enlaces_salientes":["Recolector_de_basura","Recolector_de_basura","Recolector_de_basura","Asignaci%C3%B3n_de_memoria","Lenguaje_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n_interpretado","John_McCarthy_(cient%C3%ADfico)","Lisp","Programa_inform%C3%A1tico","Memoria_(inform%C3%A1tica)","Sistema_operativo","Biblioteca_(inform%C3%A1tica)","Lenguaje_de_programaci%C3%B3n","Lisp","Prolog","Programaci%C3%B3n_orientada_a_objetos","Programaci%C3%B3n_declarativa","Compilaci%C3%B3n","Subrutina","Entorno_de_ejecuci%C3%B3n","M%C3%A1quina_virtual","ALGOL_68","C_Sharp","Caml","Clean","Lenguaje_de_programaci%C3%B3n_D","Eiffel_(lenguaje_de_programaci%C3%B3n)","Go_(lenguaje_de_programaci%C3%B3n)","Haskell","Lenguaje_de_programaci%C3%B3n_Java","JavaScript","Lisp","Lua","Mercury_(lenguaje)","ML_(lenguaje_de_programaci%C3%B3n)","Modula-3","Nim","Lenguaje_de_programaci%C3%B3n_Oberon","Lenguaje_de_programaci%C3%B3n_Oz","Objective-C#Objective-C_2.0","Pauscal","Perl","PHP","Prolog","Python","Ruby","Smalltalk","SNOBOL","SuperCollider","Visual_Basic_.NET","Conteo_de_referencias","Fuga_de_memoria","Universidad_Stanford","Control_de_autoridades","Gemeinsame_Normdatei"]}
{"url":"Go_(lenguaje_de_programaci%C3%B3n)","titulo":"Go (lenguaje de programacion)","contenido":"Go es un lenguaje de programacion concurrente y compilado con tipado estatico inspirado en la sintaxis de C, pero con seguridad de memoria y recoleccion de basura. Ha sido desarrollado por Google\u200b y sus dise\u00f1adores iniciales fueron Robert Griesemer, Rob Pike y Ken Thompson.\u200b Actualmente esta disponible en formato binario para los sistemas operativos Windows, GNU/Linux, FreeBSD  y Mac OS X, pudiendo tambien ser instalado en estos y en otros sistemas mediante el codigo fuente.\u200b\u200b Go es un lenguaje de programacion compilado, concurrente, imperativo, estructurado y orientado a objetos que de momento esta disponible para diferentes tipos de sistemas Unix-like, incluidos Linux, FreeBSD, Mac OS X y Plan 9 (puesto que parte del compilador esta basado en un trabajo previo sobre el sistema operativo Inferno). Las arquitecturas soportadas son i386, amd64 y ARM.  El dia de la publicacion del lenguaje Go, Francis McCabe, desarrollador del lenguaje de programacion Go! (anteriormente llamado Go), solicito que se le cambiase el nombre al lenguaje de Google para evitar confusiones con su lenguaje.\u200b McCabe creo Go! en el a\u00f1o 2003; sin embargo, aun no ha registrado el nombre.\u200b Go es un nuevo lenguaje de programacion para sistemas lanzado por Google en noviembre de 2009. Aunque empezo a ser desarrollado en septiembre de 2007 por Robert Griesemer, Rob Pike y Ken Thompson.  Go no utiliza excepciones.\u200b Los creadores del lenguaje han dado varios motivos para que esto sea asi. La principal es que a\u00f1adir una capa de excepciones agrega una complejidad innecesaria al lenguaje y al entorno de ejecucion. Por definicion las excepciones deberian ser excepcionales, pero al final se acaban usando como controladores del flujo de la aplicacion y dejan de tener la finalidad de excepcionalidad. Segun los creadores, las excepciones tienen que ser realmente excepcionales y el uso que se le da mayoritariamente no justifica su existencia.  Ademas, resulta en flujos con saltos no obvios. Por ejemplo, una excepcion no controlada en una funcion, que se esperaba no pudiese lanzarla, lleva la ejecucion hasta el primer catch que se encuentre. Eso puede dificultar la depuracion.  Otros lenguajes modernos como Rust tambien han prescindido de las excepciones por las mismas razones.  Aunque su sintaxis es similar, Go difiere mucho de C. Veanse algunos ejemplos.  En Go las declaraciones se realizan al reves desde la perspectiva de C (o C++ o Java). La idea principal en C es que se declara una variable como una expresion que denota su tipo. Segun los creadores, aunque la idea detras de la declaracion de tipos en C es buena, los tipos y las expresiones gramaticales no se mezclan demasiado bien y el resultado puede ser confuso. Go sin embargo, separa la expresion y la sintaxis de tipo, lo cual simplifica las cosas.  En C es necesario utilizar parentesis al evaluar expresiones dentro de estructuras de control (por ejemplo, en estructuras if-then-else y for-next). En Go es considerado poco \"idiomatico\" utilizar parentesis en estructuras de control.  En Go el uso del caracter punto y coma \u201c;\u201c al final de una instruccion es opcional.  Go no tiene aritmetica de punteros. Segun los creadores, la razon es la seguridad. Sin aritmetica de punteros es posible crear un lenguaje en el que no se puede obtener una direccion ilegal que sea usada de forma incorrecta. La falta de aritmetica de punteros simplifica la implementacion del recolector de basura. Ademas, optimizando el compilador y con el hardware actual, un bucle que utiliza los indices de un array puede ser tan eficaz como un bucle que utiliza aritmetica de punteros.  En Go, el uso de ++ y -- para incrementar y decrementar el valor de una variable es una sentencia y no una expresion. Ademas, solo puede utilizarse en su version sufija pues segun los autores, la version prefija pierde todo su sentido en la ausencia de aritmetica de punteros.  Para algunos autores, la herencia o las clases no son conceptos esenciales para el paradigma de POO, sino mas bien un medio de implementacion. Existen desde hace tiempo lenguajes orientados a objetos que no admiten clases, sino que se basan en prototipos, como Javascript o Self. Segun declaraciones de Alan Kay, creador de Smalltalk, lo esencial del paradigma es el paso de mensajes.\u200b  Go tiene tipos y metodos, y permite un estilo de programacion orientado a objetos que reemplaza el uso de clases por estructuras las cuales admiten construir jerarquias, es decir, no soporta el uso herencia y favorece en su lugar el patron de composicion. En Go, el concepto de \u201cinterfaz\u201c es similar al usado en Java: cualquier objeto (value) que cumpla el contrato especificado por una interfaz (sin necesidad de una declaracion explicita) obtiene ese tipo. Tambien existen formas de embeber estructuras dentro de otras estructuras para obtener algo analogo a las subclases. Los metodos de Go son mas generales que los de C++ o Java, y se incluyen en las estructuras declarando funciones asociadas a estas. Pueden ser definidos para cualquier tipo de datos; no solo para los registros. Por su parte las interfaces de Go a diferencia de lenguajes como Java, son de tipo implicito, es decir que se considera que la interfaz ha sido implementada cuando una estructura implementa sus metodos aun cuando esto no se especifique.  Algunas aplicaciones notables de codigo abierto escritas en Go son:\u200b  El clasico programa Hola mundo en Go es similar a como se haria en C++. Con este tipico ejemplo podemos apreciar que en cuanto a sintaxis son muy similares:  La notacion de los comentarios es exactamente la misma que la de C++  Un programa para una aplicacion web.","snippet":"Go es un lenguaje de programacion concurrente y compilado con tipado estatico inspirado en la sintaxis de C, pero con seguridad de memoria y recoleccion de basura. Ha sido desarrollado por Google\u200b y s","enlaces_salientes":["Go_(lenguaje_de_programaci%C3%B3n)","Go_(lenguaje_de_programaci%C3%B3n)","Go_(lenguaje_de_programaci%C3%B3n)","Google","Extensi%C3%B3n_de_archivo","Paradigma_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n_compilado","Computaci%C3%B3n_concurrente","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_estructurada","Rob_Pike","Ken_Thompson","Sistema_de_tipos","C_(lenguaje_de_programaci%C3%B3n)","Modula-2","Pascal_(lenguaje_de_programaci%C3%B3n)","Oberon_(lenguaje_de_programaci%C3%B3n)","Limbo_(lenguaje_de_programaci%C3%B3n)","Sistema_operativo","GNU/Linux","OS_X","Microsoft_Windows","Licencia_de_software","Licencia_BSD","Lenguaje_de_programaci%C3%B3n","Computaci%C3%B3n_concurrente","Lenguaje_de_programaci%C3%B3n_compilado","Tipado_est%C3%A1tico","C_(lenguaje_de_programaci%C3%B3n)","Seguridad_de_memoria","Recolector_de_basura","Google","Rob_Pike","Ken_Thompson","Sistema_operativo","Microsoft_Windows","GNU/Linux","FreeBSD","OS_X","Lenguaje_de_programaci%C3%B3n_compilado","Computaci%C3%B3n_concurrente","Programacion_Imperativa","Programaci%C3%B3n_estructurada","Programaci%C3%B3n_orientada_a_objetos","Unix-like","Linux","FreeBSD","Mac_OS_X","Plan_9_from_Bell_Labs","Inferno_(sistema_operativo)","I386","X86-64","Arquitectura_ARM","Google","C%C3%B3digo_abierto","Tipado_est%C3%A1tico","Lenguaje_de_programaci%C3%B3n_compilado","Recolector_de_basura","Compilador_cruzado","Duck_typing","Manejo_de_excepciones","Rust","Sentencia_condicional","Bucle_for","Programaci%C3%B3n_orientada_a_objetos","Javascript","Self","Alan_Kay","Smalltalk","Herencia_(inform%C3%A1tica)","Composite_(patr%C3%B3n_de_dise%C3%B1o)","Java_(lenguaje_de_programaci%C3%B3n)","Registro_(estructura_de_datos)","Docker_(software)","GNU/Linux","Kubernetes","Bitcoin","OpenShift","Red_Hat","Ubuntu","MySQL","YouTube","Hola_mundo","Squeak","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_Israel"]}
{"url":"Rust_(lenguaje_de_programaci%C3%B3n)","titulo":"Rust (lenguaje de programacion)","contenido":"Rust es un lenguaje de programacion compilado, de proposito general y multiparadigma (aunque no soporta las caracteristicas de los mismos en su totalidad) que esta siendo desarrollado por Fundacion Rust. Es un lenguaje de programacion multiparadigmatico que soporta programacion funcional pura, por procedimientos, imperativa y orientada a objetos.  Segun la politica de Mozilla,\u200b Rust es desarrollado de forma totalmente abierta y busca la opinion y contribucion de la comunidad. El dise\u00f1o del lenguaje se ha ido perfeccionando a traves de las experiencias en el desarrollo del motor de navegador Servo,\u200b y el propio compilador de Rust. Aunque es desarrollado y patrocinado por Mozilla y Samsung, es un proyecto comunitario. Una gran parte de las contribuciones proceden de los miembros de la comunidad.\u200b  Para el 2020 es uno de los lenguajes de programacion mas usados a la hora de trabajar con criptomonedas y crear nodos para minar criptoactivos.\u200b En 2022, Rust se convirtio en el tercer lenguaje de programacion usado en el nucleo Linux, despues de C y ensamblador.\u200b  El objetivo de Rust es ser un buen lenguaje para la creacion de grandes programas del lado del cliente y del servidor que se ejecuten en Internet. Esto ha llevado a un conjunto de caracteristicas con un enfasis en la seguridad, el control de distribucion de la memoria y la concurrencia. Se espera que el rendimiento de codigo seguro sea mas lento que C++, si el rendimiento es la unica consideracion, pero si lo comparamos con el codigo C++ hecho para que tome precauciones comparables a las que toma Rust, este ultimo puede ser incluso mas rapido.\u200b  La sintaxis de Rust es similar a la de C y C++, con bloques de codigo delimitados por llaves y estructuras de control de flujo tales como if, else, do, while y for. No todas las estructuras de C y C++ estan presentes, ademas, otras (como la palabra clave match para ramificacion multidireccional) seran menos familiares para programadores que vienen de estos lenguajes.  El sistema esta dise\u00f1ado para tener un acceso seguro a la memoria, y no permite punteros nulos o punteros colgantes.\u200b\u200b Los valores de los datos solo se pueden inicializar a traves de un conjunto fijo de formas, las cuales requieren que sus entradas hayan sido ya inicializadas.\u200b  El sistema de tipos soporta un mecanismo similar a las clases de tipos, llamado \"traits\", inspirados directamente por el lenguaje Haskell.  Esta es una facilidad para el polimorfismo que soporta distintos tipos de argumentos (polimorfismo ad-hoc), lograda mediante la adicion de restricciones para escribir declaraciones de variables. Otras caracteristicas de Haskell, como el polimorfismo de diferente tipo (higher-kinded), no estan soportadas.  Rust cuenta con inferencia de tipos, para las variables declaradas con la palabra clave let. Tales variables no requieren ser inicializadas con un valor asignado con el fin de determinar su tipo. A tiempo de compilacion produce un error si cualquier rama de codigo falla al asignar un valor a la variable.\u200b Las funciones pueden recibir parametros genericos pero deben ser delimitados expresamente por los traits, no hay manera de dejar fuera de declaraciones de tipo sin dejar de hacer uso de los metodos y operadores de los parametros.  La concurrencia es soportada a traves de tareas simples, similares a los encontrados en Erlang y otros lenguajes basado en actores. En dichos sistemas, las tareas se comunican a traves del paso de mensajes, en lugar de compartir los datos directamente. Por motivos de rendimiento, es posible enviar datos sin copiar, usar cajas unicas. Las cajas unicas son la garantia de tener un solo propietario, y puede ser liberada por la tarea de enviar para su uso por el receptor.  El sistema de objetos de Rust se basa en implementaciones, traits y tipos estructurados. Las implementaciones cumplen una funcion similar a la de las clases en otros lenguajes, y se definen con la palabra clave impl. Herencia y polimorfismo son proporcionados por los traits, permiten que los metodos se definan y se mezclen en las implementaciones. Los tipos estructurados se utilizan para definir los campos. Implementaciones y rasgos no pueden definir los campos propios, y solo los traits proporcionar herencia, con el fin de evitar el problema del diamante de C++.  El lenguaje surgio a partir de un proyecto personal iniciado en 2006 por el empleado de Mozilla, Graydon Hoare,\u200b quien afirmo que el proyecto posiblemente recibio su nombre de la familia de hongos de la roya.\u200b  Mozilla comenzo a patrocinar el proyecto en 2009\u200b y lo anuncio en 2010.\u200b\u200b El mismo a\u00f1o, el trabajo paso del compilador inicial (escrito en OCaml) al compilador autohospedado escrito en Rust.\u200b Denominado rustc, se compilo con exito en 2011.\u200b rustc usa LLVM como su back end.  La primera version pre-alfa numerada del compilador de Rust se produjo en enero de 2012.\u200b Rust 1.0, la primera version estable, se publico el 15 de mayo de 2015.\u200b\u200b Despues de 1.0, las versiones de puntos estables se entregan cada seis semanas, mientras que las funciones se desarrollan en Rust todas las noches y luego se prueban con versiones alfa y beta que duran seis semanas.\u200b  Junto con la escritura estatica convencional, antes de la version 0.4, Rust tambien admitia typestates. El sistema typestate modelo aserciones antes y despues de las sentencias del programa, mediante el uso de una checksentencia especial. Las discrepancias se pueden descubrir en el momento de la compilacion, en lugar de cuando se ejecuta un programa, como podria ser el caso de las aserciones en codigo C o C ++. El concepto typestate no era exclusivo de Rust, ya que se introdujo por primera vez en el lenguaje NIL.\u200b Los typestates se eliminaron porque en la practica se usaban poco, aunque la misma funcion aun se puede lograr con un patron de marca.\u200b  El estilo del sistema de objetos cambio considerablemente en las versiones 0.2, 0.3 y 0.4 de Rust. La version 0.2 introdujo clases por primera vez, y la version 0.3 agrego varias caracteristicas, incluidos destructores y polimorfismo mediante el uso de interfaces. En Rust 0.4, se agregaron rasgos como un medio para proporcionar herencia; las interfaces se unificaron con rasgos y se eliminaron como una caracteristica separada. Las clases tambien se eliminaron, reemplazadas por una combinacion de implementaciones y tipos estructurados.  Comenzando en Rust 0.9 y terminando en Rust 0.11, Rust tenia dos tipos de punteros incorporados: ~y @, simplificando el modelo de memoria central. Reimplemento esos tipos de puntero en la biblioteca estandar como Boxy (ahora eliminado) Gc.  En enero de 2014, antes de la primera version estable, Rust 1.0, el editor en jefe de Dr. Dobb's, Andrew Binstock, comento sobre las posibilidades de Rust de convertirse en un competidor de C ++ y de los otros lenguajes proximos D, Go y Nim (entonces Nimrod). Segun Binstock, mientras que Rust era \"ampliamente visto como un lenguaje notablemente elegante\", la adopcion se ralentizo porque cambio repetidamente entre versiones.\u200b  Rust fue el tercer lenguaje de programacion mas querido en la encuesta anual de Stack Overflow de 2015\u200b y ocupo el primer lugar en 2016-2020.\u200b\u200b\u200b\u200b\u200b  El lenguaje se menciona en El libro de Mozilla como \"metal oxidado\".\u200b  En agosto de 2020, Mozilla despidio a 250 de sus 1000 empleados en todo el mundo como parte de una reestructuracion corporativa provocada por el impacto a largo plazo de la pandemia de COVID-19. El equipo detras de Servo, un motor de navegador escrito en Rust, se disolvio por completo. El evento genero preocupaciones sobre el futuro de Rust, ya que algunos miembros del equipo eran colaboradores activos de Rust.  A la semana siguiente, el equipo central de Rust reconocio el grave impacto de los despidos y anuncio que los planes para una fundacion de Rust estaban en marcha. El primer objetivo de la fundacion seria tomar posesion de todas las marcas comerciales y nombres de dominio, y asumir la responsabilidad financiera por sus costos.\u200b  El 8 de febrero de 2021, sus cinco empresas fundadoras (AWS, Huawei, Google, Microsoft y Mozilla) anunciaron la formacion de la Fundacion Rust.\u200b\u200b  El 6 de abril de 2021, Google anuncio la compatibilidad con Rust dentro del Proyecto de codigo abierto de Android como alternativa a C/C++.\u200b  El siguiente codigo es valido para Rust 1.70.0. En versiones posteriores puede cambiar la sintaxis o las funciones.  Programa que muestra la frase \u201c\u00a1Hola, mundo!\u201d:  Dos versiones de la funcion factorial, en el estilo recursivo e iterativo:  Una simple demostracion de las capacidades de concurrencia ligera de Rust:  Ademas de los tipos estaticos convencionales, Rust tambien incluyo typestates hasta su version 0.4. El sistema typestate modela afirmaciones antes y despues de las declaraciones del programa, mediante el uso de una declaracion de verificacion especial. Las discrepancias pueden ser descubiertas durante la compilacion, en lugar de una vez que el programa se ejecuta, como podria ser el caso de las aserciones en el codigo C o C++. El concepto typestate no es exclusivo de Rust, ya que se introdujo por primera vez en el lenguaje de programacion NIL.\u200b Fueron retirados los typestates porque en la practica se encontraron poco usados, sin embargo la misma funcionalidad aun se puede lograr con los patrones del mismo lenguaje.\u200b  El estilo del sistema de objetos ha cambiado considerablemente en las versiones 0.2, 0.3 y 0.4 de Rust. La version 0.2 introdujo clases por primera vez, con la version 0.3 a\u00f1adiendo un numero de caracteristicas que incluyen destructores y polimorfismo mediante el uso de interfaces. En Rust 0.4, se a\u00f1adieron traits como un medio para proporcionar herencia, las interfaces se unificaron con los traits y eliminandose como una caracteristica independiente. Tambien se eliminaron las clases, reemplazadas por una combinacion de las implementaciones y tipos estructurados.  Rust permite la creacion de interfaces graficas mediante las APIs nativas de la plataforma anfitriona, esto gracias a que tiene caracteristicas de un lenguaje de bajo nivel. Sin embargo, esta ruta de desarrollo puede llegar a generar dificultades en proyectos que planten la admision de multiples plataformas.\u200b  Actualmente existen multiples desarrollos para crear GUIs en Rust, algunos permiten la creacion de la interfaz junto a Electron o haciendo uso de HTML, algunos otros, suministran bibliotecas nativas para el lenguaje, pero todavia se encuentran en un estado inmaduro de desarrollo. Finalmente estan los proyectos que enlazan bibliotecas bastante conocidas y con una mayor madurez en su desarrollo, como GTK o Qt, lo cuales permiten desarrollos multiplataforma.\u200b Algunos proyectos populares son los siguientes:  Es una implementacion de las bibliotecas de GTK 3 para el uso junto al lenguaje Rust. Para ello, crea funciones de Rust superpuestas a las funciones de las bibliotecas de GTK en C, haciendo uso de Foreign Function Interface que ofrece Rust.  Biblioteca de bajo nivel que hace uso de OpenGL o Vulkan.  Se estan escribiendo en Rust un navegador web y varios componentes relacionados, que incluyen:  Muchos sistemas operativos (SO) y componentes relacionados se estan escribiendo en Rust. A partir de enero de 2019, los sistemas operativos incluian: BlogOS, intermezzOS, QuiltOS, Redox, RustOS, Rux, Tefflin y Tock. ","snippet":"Rust es un lenguaje de programacion compilado, de proposito general y multiparadigma (aunque no soporta las caracteristicas de los mismos en su totalidad) que esta siendo desarrollado por Fundacion Ru","enlaces_salientes":["Rust_(lenguaje_de_programaci%C3%B3n)","Rust_(lenguaje_de_programaci%C3%B3n)","Rust_(lenguaje_de_programaci%C3%B3n)","Extensi%C3%B3n_de_archivo","Paradigma_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n#Paradigma_de_programaci\u00f3n","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_orientada_a_objetos","Programaci%C3%B3n_por_procedimientos","Programaci%C3%B3n_concurrente","Programaci%C3%B3n_funcional","Lenguaje_de_programaci%C3%B3n_compilado","Sistema_de_tipos","Sistema_de_tipificaci%C3%B3n#Tipado_est\u00e1tico","Tipado_fuerte","Inferencia_de_tipos","Alef","C_Sharp","C%2B%2B","Common_Lisp","Erlang","Haskell","Limbo_(lenguaje_de_programaci%C3%B3n)","Ruby","Standard_ML","Racket_(lenguaje_de_programaci%C3%B3n)","Swift_(lenguaje_de_programaci%C3%B3n)","C_Sharp","Swift_(lenguaje_de_programaci%C3%B3n)","Sistema_operativo","Linux","MacOS","Microsoft_Windows","FreeBSD","OpenBSD","Android_(operating_system)","IOS","Licencia_de_software","Apache_License","Licencia_MIT","Lenguaje_de_programaci%C3%B3n","Lenguaje_de_programaci%C3%B3n_compilado","Paradigma_de_programaci%C3%B3n","Programaci%C3%B3n_funcional","Programaci%C3%B3n_por_procedimientos","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_orientada_a_objetos","Servo_(software)","N%C3%BAcleo_Linux","C_(lenguaje_de_programaci%C3%B3n)","Lenguaje_ensamblador","Lado_del_cliente","Lado_del_cliente","C%2B%2B","C_(lenguaje_de_programaci%C3%B3n)","Estructuras_de_control","Puntero_(inform%C3%A1tica)","Referencia_colgante","Haskell","Haskell","Inferencia_de_tipos","Trait","Erlang","Clase_(inform%C3%A1tica)","Problema_del_diamante","Servo","Amazon_Web_Services","Huawei","Google","Microsoft","Android","Factorial","Recursivo","Iterativo","Concurrencia","Aserci%C3%B3n_(inform%C3%A1tica)","GTK","Qt_(biblioteca)","GTK","GTK","Fedora_(distribuci%C3%B3n_Linux)","OpenDNS","Tor_(red_de_anonimato)","Discord","Servo_(software)","ISSN","Twitter","Control_de_autoridades","Gemeinsame_Normdatei","Library_of_Congress_Control_Number"]}
{"url":"Vala_(lenguaje_de_programaci%C3%B3n)","titulo":"Vala (lenguaje de programacion)","contenido":"Vala es un lenguaje de programacion creado con el objetivo de acercar las caracteristicas de los lenguajes modernos a C, sin requisitos adicionales de tiempo de ejecucion y con pocos costos, centrado en los objetos de la biblioteca GObject. Ha sido desarrollado por Jurg Billeter y Raffaele Sandrini. Actualmente es desarrollado y mantenido por Rico Tzschichholz. La sintaxis se inspira en C#, con leves modificaciones para adaptarse mejor al sistema de objetos de GObject.\u200b  Para la gestion de memoria, GObject usa el sistema de conteo de referencias. En C, el programador debe gestionar la adicion y la eliminacion de referencias a mano, en cambio, en Vala, la gestion de estas referencias es automatica, siempre que el programador use los tipos referenciales incluidos en el lenguaje en lugar de usar punteros comunes. El unico detalle del que debe preocuparse es de evitar que se generen listas circulares, pues en ese caso este sistema de gestion de memoria no funcionara correctamente.  Valac, el compilador de Vala, traduce el codigo Vala en codigo C, un lenguaje intermedio (tal como hace Java a Bytecode o C# al CIL), en lugar de ser compilado directamente en ensamblador, que luego puede compilarse en cualquier plataforma soportada por GLib, con cualquier compilador de C estandar.  Ademas, Valac tambien admite otra sintaxis de entrada, es el caso de Genie, que funciona de la misma forma que Vala pero con una sintaxis inspirada en Python.\u200b De hecho, Vala y Genie pueden ser usados juntos para crear un mismo programa.  El lenguaje de programacion Vala tiene sus inicios junto a Jurg Billeter. Ya que el se\u00f1alaba que escribir y refactorizar codigo basado en GObject en C requeria mucho trabajo adicional en comparacion con los lenguajes mas modernos que ya automatizaban estas tareas. Tambien se\u00f1alo que estos lenguajes modernos no producen bibliotecas que puedan usarse facilmente en otros entornos. Por lo que propuso un lenguaje orientado a objetos con todas las funciones que pudiera producir interfaces de estilo C automaticamente.\u200b  Jurg Billeter le menciono su idea a su compa\u00f1ero de estudios Raffaele Sandrini, quien intervino para ayudar a construir el primer compilador. En mayo de 2006, valac se convirtio en un alojamiento completamente autonomo.  A diferencia de Objective-C, y con pocas excepciones C++, Vala no es una extension de C, ya que C no es un subconjunto de la sintaxis de Vala. Por lo tanto Vala no es un preprocesador de C.  La sintaxis esta fuertemente basada en C# y por lo tanto tambien en Java, pero Vala no es un subconjunto de C# ni viceversa. Por lo tanto, los programas C# no se pueden compilar con Vala, incluso si se ignoran las considerables diferencias entre las bibliotecas estandar.  Vala es estatico y fuertemente tipado y permite la inferencia de tipos (tipado implicito) para variables locales. Entre otras cosas, Vala ofrece:  Vala alivia al desarrollador de la gestion de memoria manual. En lugar de un recolector de basura como en Java o .NET/Mono , se usa el conteo automatico de referencias. El recuento de referencias tiene la ventaja de ser determinista y la capacidad en tiempo real es, pero debe, por otro lado, en el caso de los ciclos de referencia manualmente por el desarrollador utilizando una referencia debil; por ejemplo, cuando un elemento en una estructura de datos de arbol tiene una referencia a su elemento padre y este a su vez tiene una referencia al elemento hijo, es decir, ambos se refieren entre si.  Vala tambien permite la gestion manual de la memoria con punteros como opcion.  El uso de la funcionalidad de las bibliotecas de codigo nativo requiere escribir archivos vapi, definiendo la interfaz de la biblioteca. La escritura de estas definiciones de interfaz esta bien documentada para las bibliotecas de C, especialmente cuando se basan en GObject. Sin embargo, las bibliotecas de C++ no son compatibles. Los archivos Vapi se proporcionan para una gran parte de la plataforma GNOME, incluido GTK.  Las bibliotecas desarrolladas en Vala son bibliotecas C validas y pueden ser utilizadas directamente por los desarrolladores de C, ya que Vala, a diferencia de lenguajes como C++ y D, es compatible con la interfaz binaria de C (ABI).  Como biblioteca estandar, Vala utiliza GLib y sus submodulos GIO, GObject, GModule, que esta disponible para la mayoria de los sistemas y ofrece cosas como subprocesos independientes de la plataforma, entrada/salida, administracion de archivos, sockets de red, complementos, expresiones regulares y mucho mas. Tambien hay una biblioteca llamada Gee, escrita en Vala, que proporciona clases genericas de Coleccion/Contenedor .  Las interfaces graficas de usuario se pueden desarrollar con el kit de herramientas GTK + GUI y la herramienta de dise\u00f1o de superficies Glade.  Para hacer que una biblioteca C se pueda usar con Vala, no se necesitan enlaces de tiempo de ejecucion (envoltorios), solo una descripcion estatica en un llamado archivo vapi (API de Vala) con sintaxis de Vala anotada, que el compilador de Vala indica en tiempo de compilacion, como las llamadas al metodo Vala en llamadas a funciones C debe ser transformado. Estos archivos se pueden generar semiautomaticamente para bibliotecas basadas en GObject, para las bibliotecas C que no se basan en GObject, deben escribirse a mano. Los enlaces ya estan disponibles para una gran cantidad de bibliotecas, incluidas las bibliotecas C que no estan basadas en GObject, como SDL, OpenGL, etc.  Tiempo de ejecucion  Uso de memoria  Tama\u00f1o de archivo  Las bibliotecas basicas GLib / GIO y Gee de Vala estan disponibles en todas las plataformas comunes, como sistemas tipo Unix , Linux, macOS y Windows. Los unicos requisitos para Vala son GLib y un compilador de C. De manera que Vala no esta atada a GNOME. Si el desarrollador evita cosas como informacion de ruta dependiente de la plataforma y bibliotecas que no son multiplataforma y, en su lugar, utiliza las abstracciones de GLib, puede desarrollar aplicaciones multiplataforma con Vala. GTK tambien esta disponible para los distintos sistemas operativos. Un programa Vala compilado en codigo binario esta vinculado a la plataforma respectiva, ya que entonces esta en forma de codigo de maquina nativo.  Entre las aplicaciones desarrolladas con Vala y que ya han alcanzado cierto nivel de popularidad se encuentran la aplicacion de gestion de fotografias Shotwell , el cliente de Twitter Pino y la herramienta de copia de seguridad Deja-Dup. Las tres son aplicaciones estandar de la distribucion de Linux Fedora a partir de la version 13. Shotwell es tambien la gestion de fotos preinstalada en Ubuntu 10.10 y ha reemplazado a F-Spot. La interfaz Unity de Ubuntu, desarrollada originalmente para netbooks, se esta desarrollando en Vala, al igual que DLNA / UPnP-Servidor de medios Rygel, que se utiliza, entre otras cosas, en el proyecto GNOME. El compilador de Vala en si es un ejemplo de un proyecto de linea de comandos mas grande escrito en Vala.  Existen algunos otros proyectos como el entorno de escritorio Pantheon de elementary OS el cual tambien esta construido sobre Vala.  El programa mas simple \"Hola mundo\":  \"Hola mundo\" con la ayuda de la programacion orientada a objetos:  Un ejemplo mas complejo, mostrando algunas de las caracteristicas de la orientacion a objetos de Vala: ","snippet":"Vala es un lenguaje de programacion creado con el objetivo de acercar las caracteristicas de los lenguajes modernos a C, sin requisitos adicionales de tiempo de ejecucion y con pocos costos, centrado ","enlaces_salientes":["Vala_(lenguaje_de_programaci%C3%B3n)","Vala_(lenguaje_de_programaci%C3%B3n)","Vala_(lenguaje_de_programaci%C3%B3n)","Extensi%C3%B3n_de_archivo","Paradigma_de_programaci%C3%B3n","Programaci%C3%B3n_orientada_a_objetos","Programaci%C3%B3n_imperativa","Programaci%C3%B3n_estructurada","Sistema_de_tipos","Tipado_fuerte","Sistema_de_tipos#Tipado_est\u00e1tico","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","C_Sharp","Java_(lenguaje_de_programaci%C3%B3n)","D_(lenguaje_de_programaci%C3%B3n)","Pawn","Sistema_operativo","GLib","Licencia_de_software","GNU_Lesser_General_Public_License","Lenguaje_de_programaci%C3%B3n","C_(lenguaje_de_programaci%C3%B3n)","Tiempo_de_ejecuci%C3%B3n","Programaci%C3%B3n_orientada_a_objetos","Biblioteca_(inform%C3%A1tica)","GObject","C_Sharp","Conteo_de_referencias","Java_(lenguaje_de_programaci%C3%B3n)","Bytecode_Java","C_Sharp","Common_Intermediate_Language","Ensamblador","GLib","Genie_(lenguaje_de_programaci%C3%B3n)","Python","Unix-like","Linux","MacOS","Windows","GNOME","Elementary_OS#Pantheon","Elementary_OS","Hola_mundo","Hola_mundo","Programaci%C3%B3n_orientada_a_objetos","Genie_(lenguaje_de_programaci%C3%B3n)","C_Sharp","Elementary_OS","Shotwell","Visor_de_im%C3%A1genes","Control_de_autoridades","Open_Hub"]}
{"url":"A%2B%2B","titulo":"A++","contenido":"A++ es sinonimo de abstraccion mas referencia mas sintesis, que se usa como un nombre para el lenguaje de programacion minimalista que se basa en ARS. ARS es una abstraccion del calculo lambda, tiene sus tres operaciones basicas, y le da un sentido mas general, lo que proporciona una base para los tres principales paradigmas de programacion: programacion funcional, programacion orientada a objetos y la programacion imperativa.  Programacion basada en ARS es el nombre dado para la programacion que consiste principalmente en la aplicacion de patrones derivados de ARS para la programacion en cualquier lenguaje.  A++ fue desarrollado en 2002 con el proposito de servir como un instrumento de aprendizaje y no como un lenguaje de programacion utilizado para resolver problemas practicos.  Se supone que es una herramienta eficaz para familiarizarse con el nucleo de la programacion y con los patrones de programacion que se pueden aplicar en otros lenguajes necesarios para enfrentarse al mundo real.  A++ es un lenguaje similar a C++, con su interprete disponible en Scheme, Java, C, C++ y Python, y ofrece un ambiente ideal para el entrenamiento basico en la programacion, cumpliendo con la aplicacion de los fundamentos de los lenguajes de programacion.  El proposito de A++ no es ser utilizado como un lenguaje de programacion para escribir aplicaciones para las necesidades del mundo real. Sin embargo, es posible escribir programas sencillos en A++ como implementaciones orientadas a objetos para el un manejo de cuenta simple y un sistema de gestion de librerias.  Para escribir programas de aplicacion reales se ofrece el lenguaje ARS++, que extiende A++ a un lenguaje similar a Scheme. ARS se deriva de ARS mas Scheme mas Extensiones. ","snippet":"A++ es sinonimo de abstraccion mas referencia mas sintesis, que se usa como un nombre para el lenguaje de programacion minimalista que se basa en ARS. ARS es una abstraccion del calculo lambda, tiene ","enlaces_salientes":["A%2B%2B","A%2B%2B","A%2B%2B","Paradigma_de_programaci%C3%B3n","Programaci%C3%B3n_orientada_a_objetos","Lenguaje_de_programaci%C3%B3n_imperativo","Programaci%C3%B3n_funcional","Programaci%C3%B3n_l%C3%B3gica","C%C3%A1lculo_lambda","Programaci%C3%B3n_funcional","Programaci%C3%B3n_orientada_a_objetos","Programaci%C3%B3n_imperativa","Scheme","Java_(lenguaje_de_programaci%C3%B3n)","C_(lenguaje_de_programaci%C3%B3n)","C%2B%2B","Python","CAR_y_CDR","CAR_y_CDR","Control_de_autoridades"]}
{"url":"C%2B%2B/CX","titulo":"C++/CX","contenido":"C++/CX (Component eXtensions) son un conjunto de extensiones al lenguaje de programacion C++ desarrolladas por Microsoft con el objetivo de simplificar la escritura de programas para la plataforma Windows Runtime. Incorpora una nueva sintaxis similar a C++/CLI pero con la diferencia que C++/CX se compila a codigo nativo que se ejecuta directamente en la CPU, sin necesidad de utilizar el CLR.  Las extensiones para componentes de Visual C++, C++/CX, son un conjunto de extensiones del lenguaje C++ que permiten la creacion de aplicaciones de Windows Store y de componentes WinRT de una manera lo mas cercana posible a lo que ha venido a llamarse \"C++ moderno\". Representan el nuevo modelo de programacion nativa en C++ sobre Windows y su uso permite crear diferentes tipos de programas:  Aunque seria posible desarrollar aplicaciones para Windows Store programando directamente contra los interfaces COM del Windows Runtime, el uso de C++/CX permite utilizar constructores, excepciones, herencia y otras caracteristicas de C++ que no estan disponibles en un objeto COM.  En el aspecto tecnico, C++/CX es de hecho un subconjunto de C++/CLI, sin embargo, la forma en la que se implementa es totalmente distinta, no usa el CLR ni utiliza un recolector de basura, generando unicamente codigo nativo (x32, x64 o ARM). En cambio, escribir aplicaciones en C++/CX no es como escribir aplicaciones normales de C++, ademas, la interoperabilidad entre codigo C++ puro y WinRT puede llegar a ser muy costosa.  El sistema de tipos de C++/CX se compone de los siguientes elementos:  Al compilar una aplicacion o componente C++/CX, se genera un fichero con extension .winmd o Windows Metada. Estos ficheros contienen la descripcion de los tipos WinRT declarados como publicos, incluyendo clases, estructuras, enumeraciones, interfaces y delegados. Este formato es similar al usado en el .NET Framework pero con la diferencia que solo contiene metadatos, situandose el codigo ejecutable en otros ficheros.  Para que un tipo sea publicado en el fichero de metadatos debe declararse dentro de un espacio de nombres y definirse como publicos. Una ref class puede declararse privada y por lo tanto ser invisible en los metadatos (estara disponible solo internamente). Incluso dentro de una clase publica, algunos de sus miembros pueden declararse privados y otros publicos. La siguiente tabla muestra la relacion entre los especificadores de acceso de una clase en C++ y su visibilidad en los ficheros de metadatos:  Para inspeccionar el contenido de un fichero .winmd se puede utilizar el programa Object Browser. ","snippet":"C++/CX (Component eXtensions) son un conjunto de extensiones al lenguaje de programacion C++ desarrolladas por Microsoft con el objetivo de simplificar la escritura de programas para la plataforma Win","enlaces_salientes":["C%2B%2B/CX","C%2B%2B/CX","C%2B%2B/CX","C%2B%2B","Microsoft","Windows_Runtime","Common_Language_Runtime","Windows_Store","Windows_Runtime","XAML","Recolector_de_basura","Microsoft_.NET","Espacio_de_nombres","Windows_Runtime","Component_Object_Model","C%2B%2B/WinRT","Wayback_Machine","Control_de_autoridades"]}
{"url":"MIT_Technology_Review","titulo":"MIT Technology Review","contenido":"MIT Technology Review (Revista de Tecnologia del MIT) es una revista perteneciente en su totalidad al Instituto de Tecnologia de Massachusetts, y editada independientemente de la universidad.\u200b Fue fundada en 1899 como The Technology Review (\"Revista de Tecnologia\")\u200b y fue relanzada sin incluir \"The\" en su nombre el 23 de abril de 1998, bajo la direccion del entonces editor R. Bruce Journey. En septiembre de 2005, se transformo, bajo la direccion de su entonces redactor jefe y director, Jason Pontin, a un formato parecido al de la revista historica.  Antes de su relanzamiento en 1998, el editor declaro que \"no quedara nada de la antigua revista excepto el nombre\". Por lo tanto, es necesario distinguir entre la Technology Review moderna y la historica.\u200b La revista historica fue publicada por la MIT Alumni Association (\"Asociacion de Antiguos Alumnos del MIT\"), se ajustaba mas a los intereses de los antiguos alumnos del MIT y tenia un tono mas intelectual y una difusion publica mucho menor. La revista, que entre 1998 y 2005 se denomino MIT's Magazine of Innovation (\"Revista de innovacion del MIT\") y, a partir de 2005, simplemente Published by MIT (\"Publicado por el MIT\"), se centraba en la nueva tecnologia y en la forma en que esta se comercializa; se vendia al publico y estaba dirigida a altos ejecutivos, investigadores, financieros y encargados de la formulacion de politicas, asi como a los exalumnos del MIT.\u200b  En 2011, Technology Review recibio el premio de la prensa independiente Utne Reader por la mejor cobertura en ciencia y tecnologia.\u200b ","snippet":"MIT Technology Review (Revista de Tecnologia del MIT) es una revista perteneciente en su totalidad al Instituto de Tecnologia de Massachusetts, y editada independientemente de la universidad.\u200b Fue fun","enlaces_salientes":["MIT_Technology_Review","MIT_Technology_Review","MIT_Technology_Review","Estados_Unidos","Cambridge_(Massachusetts)","Idioma_ingl%C3%A9s","1899","MIT","ISSN","Instituto_de_Tecnolog%C3%ADa_de_Massachusetts","Redactor_jefe","Jason_Pontin","Control_de_autoridades","ISSN","Biblioteca_Nacional_de_Medicina_de_los_Estados_Unidos"]}
{"url":"Addison_Wesley","titulo":"Addison-Wesley","contenido":"Addison\u2013Wesley fue una editorial estadounidense de libros de texto ubicada en Reading, Massachusetts y comprada por Pearson PLC en 1988. Es conocida por sus libros de computacion. Ademas de publicar libros de texto, Addison\u2013Wesley distribuia publicaciones tecnicas a traves del servicio Safari Books Online. ","snippet":"Addison\u2013Wesley fue una editorial estadounidense de libros de texto ubicada en Reading, Massachusetts y comprada por Pearson PLC en 1988. Es conocida por sus libros de computacion. Ademas de publicar l","enlaces_salientes":["Addison-Wesley","Addison-Wesley","Addison-Wesley","Estados_Unidos","Reading_(Massachusetts)","Massachusetts","Empresa_matriz","G%C3%A9nero_literario","Edici%C3%B3n_de_libros","Estados_Unidos","Libro_de_texto","Reading_(Massachusetts)","Massachusetts","Pearson_PLC","Control_de_autoridades","Fichero_de_Autoridades_Virtual_Internacional","International_Standard_Name_Identifier","Gemeinsame_Normdatei","Library_of_Congress_Control_Number"]}
{"url":"Lista_(estructura_de_datos)","titulo":"Lista enlazada","contenido":"En ciencias de la computacion, una lista enlazada es una de las estructuras de datos fundamentales, y puede ser usada para implementar otras estructuras de datos. Consiste en una secuencia de nodos, en los que se guardan campos de datos arbitrarios y una o dos referencias, enlaces o punteros al nodo anterior o posterior. El principal beneficio de las listas enlazadas respecto a los vectores convencionales es que el orden de los elementos enlazados puede ser diferente al orden de almacenamiento en la memoria o el disco, permitiendo que el orden de recorrido de la lista sea diferente al de almacenamiento.  Una lista enlazada es un tipo de dato autorreferenciado porque contienen un puntero o enlace (en ingles link, del mismo significado) a otro dato del mismo tipo. Las listas enlazadas permiten inserciones y eliminacion de nodos en cualquier punto de la lista en tiempo constante (suponiendo que dicho punto esta previamente identificado o localizado), pero no permiten un acceso aleatorio. Existen diferentes tipos de listas enlazadas: listas enlazadas simples, listas doblemente enlazadas, listas enlazadas circulares y listas enlazadas doblemente circulares.  Las listas enlazadas pueden ser implementadas en muchos lenguajes. Lenguajes tales como Lisp, Scheme y Haskell tienen estructuras de datos ya construidas, junto con operaciones para acceder a las listas enlazadas. Lenguajes imperativos u orientados a objetos tales como C o C++ y Java, respectivamente, disponen de referencias para crear listas enlazadas.  Las listas enlazadas fueron desarrolladas en 1955-56 por Cliff Shaw y Herbert Simon en RAND Corporation, como la principal estructura de datos para su Lenguaje de Procesamiento de la Informacion (IPL). IPL fue usado por los autores para desarrollar varios programas relacionados con la inteligencia artificial, incluida la Maquina de la Teoria General, el Solucionador de Problemas Generales, y un programa informatico de ajedrez. Se publico en IRE Transactions on Information Theory en 1956, y en distintas conferencias entre 1957-1959, incluida Proceedings of the Western Joint Computer en 1957 y 1958, y en Information Processing (Procedentes de la primera conferencia internacional del procesamiento de la informacion de la Unesco) en 1959. El diagrama clasico actual, que consiste en bloques que representan nodos de la lista con flechas apuntando a los sucesivos nodos de la lista, aparecio en Programming the Logic Theory Machine, de Newell y Shaw. Newell y Simon fueron reconocidos por el ACM Turing Award en 1975 por \u201chacer contribuciones basicas a la inteligencia artificial, a la psicologia del conocimiento humano y al procesamiento de las listas\u201d.  El problema de los traductores del procesamiento natural del lenguaje condujo a Victor Yngve del Instituto Tecnologico de Massachusetts (MIT) a usar listas enlazadas como estructura de datos en su COMIT, lenguaje de programacion para computadoras, que investigo en el campo de la Linguistica computacional. Un informe de este lenguaje, titulado \u201cA programming language for mechanical translation\u201d aparecio en Mechanical Translation en 1958.  LISP, el principal procesador de listas, fue creado en 1958. Una de las principales estructuras de datos de LISP es la lista enlazada.  En torno a los 60, la utilidad de las listas enlazadas y los lenguajes que utilizaban estas estructuras como su principal representacion de datos estaba bien establecida. Bert Green, del Lincoln Laboratory del MIT, publico un estudio titulado Computer languages for symbol manipulation en IRE Transaction on Human Factors in Electronics en marzo de 1961 que resumia las ventajas de las listas enlazadas. Un posterior articulo, A Comparison of list-processing computer languages de Bobrow y Raphael, aparecia en Communications of the ACM en abril de 1964.  Muchos sistemas operativos desarrollados por la empresa Technical Systems Consultants (originalmente de West Lafayette Indiana y despues de Raleigh, Carolina del Norte) usaron listas enlazadas simples como estructuras de ficheros. Un directorio de entrada apuntaba al primer sector de un fichero y daba como resultado porciones de la localizacion del fichero mediante punteros. Los sistemas que utilizaban esta tecnica incluian Flex (para el Motorola 6800 CPU), mini-Flex (la misma CPU) y Flex9 (para el Motorola 6809 CPU). Una variante desarrollada por TSC se comercializo a Smoke Signal Broadcasting en California, usando listas doblemente enlazadas del mismo modo.  El sistema operativo TSS, desarrollado por IBM para las maquinas System 360/370, usaba una lista doblemente enlazada para su catalogo de ficheros de sistema. La estructura de directorios era similar a Unix, donde un directorio podia contener ficheros u otros directorios que se podian extender a cualquier profundidad. Una utilidad fue creada para arreglar problemas del sistema despues de un fallo desde las porciones modificadas del catalogo de ficheros que estaban a veces en memoria cuando ocurria el fallo. Los problemas eran detectados por comparacion de los enlaces posterior y anterior por consistencia. Si el siguiente de ellos era corrupto y el anterior enlace del nodo infectado era encontrado, el enlace posterior era asignado al nodo marcado con el enlace anterior.  Es una lista enlazada de nodos, donde cada nodo tiene un unico campo de enlace. Una variable de referencia contiene una referencia al primer nodo, cada nodo (excepto el ultimo) enlaza con el nodo siguiente, y el enlace del ultimo nodo contiene NULL para indicar el final de la lista. Aunque normalmente a la variable de referencia se la suele llamar top, se le podria llamar como se desee.  Un tipo de lista enlazada mas sofisticado es la lista doblemente enlazada o lista enlazadas de dos vias. Cada nodo tiene dos enlaces: uno apunta al nodo anterior, o apunta al valor NULL si es el primer nodo; y otro que apunta al nodo siguiente, o apunta al valor NULL si es el ultimo nodo.  En algun lenguaje de muy bajo nivel, XOR-Linking ofrece una via para implementar listas doblemente enlazadas, usando una sola palabra para ambos enlaces, aunque esta tecnica no se suele utilizar.  En una lista enlazada circular, el primer y el ultimo nodo estan unidos juntos. Esto se puede hacer tanto para listas enlazadas simples como para las doblemente enlazadas. Para recorrer una lista enlazada circular podemos empezar por cualquier nodo y seguir la lista en cualquier direccion hasta que se regrese hasta el nodo original. Desde otro punto de vista, las listas enlazadas circulares pueden ser vistas como listas sin comienzo ni fin. Este tipo de listas es el mas usado para dirigir buffers para \u201cingerir\u201d datos, y para visitar todos los nodos de una lista a partir de uno dado.  Cada nodo tiene un enlace, similar al de las listas enlazadas simples, excepto que el siguiente nodo del ultimo apunta al primero. Como en una lista enlazada simple, los nuevos nodos pueden ser solo eficientemente insertados despues de uno que ya tengamos referenciado. Por esta razon, es usual quedarse con una referencia solamente al ultimo elemento en una lista enlazada circular simple, esto nos permite rapidas inserciones al principio, y tambien permite accesos al primer nodo desde el puntero del ultimo nodo.\u200b  En una lista enlazada doblemente circular, cada nodo tiene dos enlaces, similares a los de la lista doblemente enlazada, excepto que el enlace anterior del primer nodo apunta al ultimo y el enlace siguiente del ultimo nodo, apunta al primero. Como en una lista doblemente enlazada, las inserciones y eliminaciones pueden ser hechas desde cualquier punto con acceso a algun nodo cercano. Aunque estructuralmente una lista circular doblemente enlazada no tiene ni principio ni fin, un puntero de acceso externo puede establecer el nodo apuntado que esta en la cabeza o al nodo cola, y asi mantener el orden tan bien como en una lista doblemente enlazada.  A veces las listas enlazadas tienen un nodo centinela (tambien llamado falso nodo o nodo ficticio) al principio o al final de la lista, el cual no es usado para guardar datos. Su proposito es simplificar o agilizar algunas operaciones, asegurando que cualquier nodo tiene otro anterior o posterior, y que toda la lista (incluso alguna que no contenga datos) siempre tenga un \u201cprimer y ultimo\u201d nodo.  Las listas enlazadas son usadas como modulos para otras muchas estructuras de datos, tales como pilas, colas y sus variaciones.  El campo de datos de un nodo puede ser otra lista enlazada. Mediante este mecanismo, podemos construir muchas estructuras de datos enlazadas con listas; esta practica tiene su origen en el lenguaje de programacion Lisp, donde las listas enlazadas son una estructura de datos primaria (aunque no la unica), y ahora es una caracteristica comun en el estilo de programacion funcional.  A veces, las listas enlazadas son usadas para implementar vectores asociativos, y estas en el contexto de las llamadas listas asociativas. Hay pocas ventajas en este uso de las listas enlazadas; hay mejores formas de implementar estas estructuras, por ejemplo con arboles binarios de busqueda equilibrados. Sin embargo, a veces una lista enlazada es dinamicamente creada fuera de un subconjunto propio de nodos semejante a un arbol, y son usadas mas eficientemente para recorrer esta serie de datos.  Como muchas opciones en programacion y desarrollo, no existe un unico metodo correcto para resolver un problema. Una estructura de lista enlazada puede trabajar bien en un caso pero causar problemas en otros. He aqui una lista con algunas de las ventajas mas comunes que implican las estructuras de tipo lista. En general, teniendo una coleccion dinamica donde los elementos estan siendo a\u00f1adidos y eliminados frecuentemente e importa la localizacion de los nuevos elementos introducidos se incrementa el beneficio de las listas enlazadas.  Las listas enlazadas poseen muchas ventajas sobre los vectores. Los elementos se pueden insertar en una lista indefinidamente mientras que un vector tarde o temprano se llenara o necesitara ser redimensionado, una costosa operacion que incluso puede no ser posible si la memoria se encuentra fragmentada.  En algunos casos se pueden lograr ahorros de memoria almacenando la misma \u2018cola\u2019 de elementos entre dos o mas listas \u2013 es decir, la lista acaba en la misma secuencia de elementos. De este modo, uno puede a\u00f1adir nuevos elementos al frente de la lista manteniendo una referencia tanto al nuevo como a los viejos elementos - un ejemplo simple de una estructura de datos persistente.  Por otra parte, los vectores permiten acceso aleatorio mientras que las listas enlazadas solo permiten acceso secuencial a los elementos. Las listas enlazadas simples, de hecho, solo pueden ser recorridas en una direccion. Esto hace que las listas sean inadecuadas para aquellos casos en los que es util buscar un elementos por su indice rapidamente, como el heapsort. El acceso secuencial en los vectores tambien es mas rapido que en las listas enlazadas.  Otra desventaja de las listas enlazadas es el almacenamiento extra necesario para las referencias, que a menudos las hacen poco practicas para listas de peque\u00f1os datos como caracteres o valores booleanos.  Tambien puede resultar lento y abusivo el asignar memoria para cada nuevo elemento. Existe una variedad de listas enlazadas que contemplan los problemas anteriores para resolver los mismos. Un buen ejemplo que muestra los pros y contras del uso de vectores sobre listas enlazadas es la implementacion de un programa que resuelva el problema de Flavio Josefo. Este problema consiste en un grupo de personas dispuestas en forma de circulo. Se empieza a partir de una persona predeterminadas y se cuenta n veces, la persona n-esima se saca del circulo y se vuelve a cerrar el grupo. Este proceso se repite hasta que queda una sola persona, que es la que gana. Este ejemplo muestra las fuerzas y debilidades de las listas enlazadas frente a los vectores, ya que viendo a la gente como nodos conectados entre si en una lista circular se observa como es mas facil suprimir estos nodos. Sin embargo, se ve como la lista perdera utilidad cuando haya que encontrar a la siguiente persona a borrar. Por otro lado, en un vector el suprimir los nodos sera costoso ya que no se puede quitar un elemento sin reorganizar el resto. Pero en la busqueda de la n-esima persona tan solo basta con indicar el indice n para acceder a el resultando mucho mas eficiente.  Las listas doblemente enlazadas requieren mas espacio por nodo y sus operaciones basicas resultan mas costosas pero ofrecen una mayor facilidad para manipular ya que permiten el acceso secuencial a lista en ambas direcciones. En particular, uno puede insertar o borrar un nodo en un numero fijo de operaciones dando unicamente la direccion de dicho nodo (Las listas simples requieren la direccion del nodo anterior para insertar o suprimir correctamente). Algunos algoritmos requieren el acceso en ambas direcciones para poder adquirir las listas enlazadas.  Las listas circulares son mas utiles para describir estructuras circulares y tienen la ventaja de poder recorrer la lista desde cualquier punto. Tambien permiten el acceso rapido al primer y ultimo elemento por medio de un puntero simple.  La busqueda comun y los algoritmos de ordenacion son menos complicados si se usan los llamados Nodos Centinelas o Nodos Ficticios, donde cada elemento apunta a otro elemento y nunca a nulo. El Nodo Centinela o Puntero Cabeza contiene, como otro, un puntero siguiente que apunta al que se considera como primer elemento de la lista. Tambien contiene un puntero previo que hace lo mismo con el ultimo elemento. El Nodo Centinela es definido como otro nodo en una lista doblemente enlazada, la asignacion del puntero frente no es necesaria y los puntero anterior y siguiente estaran apuntando a si mismo en ese momento. Si los punteros anterior y siguiente apuntan al Nodo Centinela la lista se considera vacia. En otro caso, si a la lista se le a\u00f1aden elementos ambos puntero apuntaran a otros nodos. Estos Nodos Centinelas simplifican muchos las operaciones pero hay que asegurarse de que los punteros anterior y siguiente existen en cada momento. Como ventaja eliminan la necesidad de guardar la referencia al puntero del principio de la lista y la posibilidad de asignaciones accidentales. Por el contrario, usan demasiado almacenamiento extra y resultan complicados en algunas operaciones.  Los lenguajes que no aceptan cualquier tipo de referencia pueden crear uniones reemplazando los punteros por indices de un vector. La ventaja es de mantener un vector de entradas, donde cada entrada tiene campos enteros indicando el indice del siguiente elemento del vector. Pueden haber nodos sin usarse. Si no hay suficiente espacio, pueden usarse vectores paralelos.  Entonces una lista enlazada puede ser construida, creado un vector con esta estructura, y una variable entera para almacenar el indice del primer elemento. (ver en la seccion de implementaciones).  Las utilidades de esta propuesta son:  Algunas desventajas son:  Por estas razones, la propuesta se usa principalmente para lenguajes que no soportan asignacion de memoria dinamica. Estas desventajas se atenuan tambien si el tama\u00f1o maximo de la lista se conoce en el momento en el que el vector se crea.  Muchos lenguajes de programacion tales como Lisp y Scheme tienen listas enlazadas simples ya construidas. En muchos lenguajes de programacion, estas listas estan construidas por nodos, cada uno llamado cons o celda cons. Las celdas cons tienen dos campos: el car, una referencia del dato al nodo, y el cdr, una referencia al siguiente nodo. Aunque las celdas cons pueden ser usadas para construir otras estructuras de datos, este es su principal objetivo.  En lenguajes que soportan tipos abstractos de datos o plantillas, las listas enlazadas ADTs o plantillas estan disponibles para construir listas enlazadas. En otros lenguajes, las listas enlazadas son tipicamente construidas usando referencias junto con el tipo de dato record.  En la seccion de implementaciones hay un ejemplo completo en C y en Maude  Cuando se construye una lista enlazada, nos enfrentamos a la eleccion de si almacenar los datos de la lista directamente en los nodos enlazados de la lista, llamado almacenamiento interno, o simplemente almacenar una referencia al dato, llamado almacenamiento externo. El almacenamiento interno tiene la ventaja de hacer accesos a los datos mas eficientes, requiriendo menos almacenamiento global, teniendo mejor referencia de localidad, y simplifica la gestion de memoria para la lista (los datos son alojados y desalojados al mismo tiempo que los nodos de la lista).  El almacenamiento externo, por otro lado, tiene la ventaja de ser mas generico, en la misma estructura de datos y codigo maquina puede ser usado para una lista enlazada, no importa cual sea su tama\u00f1o o los datos. Esto hace que sea mas facil colocar el mismo dato en multiples listas enlazadas. Aunque con el almacenamiento interno los mismos datos pueden ser colocados en multiples listas incluyendo multiples referencias siguientes en la estructura de datos del nodo, esto podria ser entonces necesario para crear rutinas separadas para a\u00f1adir o borrar celdas basadas en cada campo. Esto es posible creando listas enlazadas de elementos adicionales que usen almacenamiento interno usando almacenamiento externo, y teniendo las celdas de las listas enlazadas adicionales almacenadas las referencias a los nodos de las listas enlazadas que contienen los datos.  En general, si una serie de estructuras de datos necesita ser incluida en multiples listas enlazadas, el almacenamiento externo es el mejor enfoque. Si una serie de estructuras de datos necesitan ser incluidas en una sola lista enlazada, entonces el almacenamiento interno es ligeramente mejor, a no ser que un paquete generico de listas genericas que use almacenamiento externo este disponible. Asimismo, si diferentes series de datos que pueden ser almacenados en la misma estructura de datos son incluidos en una lista enlazada simple, entonces el almacenamiento interno puede ser mejor.  Otro enfoque que puede ser usado con algunos lenguajes implica tener diferentes estructuras de datos, pero todas tienen los campos iniciales, incluyendo la siguiente (y anterior si es una lista doblemente enlazada) referencia en la misma localizacion. Despues de definir estructuras distintas para cada tipo de dato, una estructura generica puede ser definida para que contenga la minima cantidad de datos compartidos por todas las estructuras y contenidos al principio de las estructuras. Entonces las rutinas genericas pueden ser creadas usando las minimas estructuras para llevar a cabo las operaciones de los tipos de las listas enlazadas, pero separando las rutinas que pueden manejar los datos especificos. Este enfoque es usado a menudo en rutinas de analisis de mensajes, donde varios tipos de mensajes son recibidos, pero todos empiezan con la misma serie de campos, generalmente incluyendo un campo para el tipo de mensaje. Las rutinas genericas son usadas para a\u00f1adir nuevos mensajes a una cola cuando son recibidos, y eliminarlos de la cola en orden para procesarlos. El campo de tipo de mensaje es usado para llamar a la rutina correcta para procesar el tipo especifico de mensaje.  En la seccion implementaciones (en este mismo articulo) se expone codigo referente a este tema.  Hay que notar que cuando usamos almacenamiento externo, se necesita dar un paso extra para extraer la informacion del nodo y hacer un casting dentro del propio tipo del dato. Esto es porque ambas listas, de familias y miembros, son almacenadas en dos listas enlazadas usando la misma estructura de datos (nodo), y este lenguaje no tiene tipos parametricos.  Si conocemos el numero de familias a las que un miembro puede pertenecer en tiempo de compilacion, el almacenamiento interno trabaja mejor. Si, sin embargo, un miembro necesita ser incluido en un numero arbitrario de familias, sabiendo el numero especifico de familias solo en tiempo de ejecucion, el almacenamiento externo sera necesario.  Buscando un elemento especifico en una lista enlazada, incluso si esta es ordenada, normalmente requieren tiempo O (n) (busqueda lineal). Esta es una de las principales desventajas de listas enlazadas respecto a otras estructuras. Ademas algunas de las variantes expuestas en la seccion anterior, hay numerosas vias simples para mejorar el tiempo de busqueda.  En una lista desordenada, una forma simple para decrementar el tiempo de busqueda medio es el mover al frente de forma heuristica, que simplemente mueve un elemento al principio de la lista una vez que es encontrado. Esta idea, util para crear caches simples, asegura que el item usado mas recientemente es tambien el mas rapido en ser encontrado otra vez.  Otro enfoque comun es indizar una lista enlazada usando una estructura de datos externa mas eficiente. Por ejemplo, podemos construir un arbol rojo-negro o una tabla hash cuyos elementos estan referenciados por los nodos de las listas enlazadas. Pueden ser construidos multiples indices en una lista simple. La desventaja es que estos indices puede necesitar ser actualizados cada vez que un nodo es a\u00f1adido o eliminado (o al menos, antes que el indice sea utilizado otra vez).  Tanto las pilas como las colas son a menudo implementadas usando listas enlazadas, y simplemente restringiendo el tipo de operaciones que son soportadas.  La skip list, o lista por saltos, es una lista enlazada aumentada con capas de punteros para saltos rapidos sobre grandes numeros de elementos, y descendiendo hacia la siguiente capa. Este proceso continua hasta llegar a la capa inferior, la cual es la lista actual.  Un arbol binario puede ser visto como un tipo de lista enlazada donde los elementos estan enlazados entre ellos mismos de la misma forma. El resultado es que cada nodo puede incluir una referencia al primer nodo de una o dos listas enlazadas, cada cual con su contenido, formando asi los subarboles bajo el nodo.  Una lista enlazada desenrollada es una lista enlazada cuyos nodos contiene un vector de datos. Esto mejora la ejecucion de la cache, siempre que las listas de elementos esten contiguas en memoria, y reducen la sobrecarga de la memoria, porque necesitas menos metadatos para guardar cada elemento de la lista.  Una tabla hash puede usar listas enlazadas para guardar cadenas de items en la misma posicion de la tabla hash.  Aqui se expone el codigo necesario para complementar el articulo a fin de poder realizar una lectura agil sobre el articulo y a su vez quien necesite el codigo pueda facilmente encontrar el mismo si esta contenido.  Cuando se manipulan listas enlazadas, hay que tener cuidado con no usar valores que hayamos invalidado en asignaciones anteriores. Esto hace que los algoritmos de insertar y borrar nodos en las listas sean algo especiales. A continuacion se expone el pseudocodigo para a\u00f1adir y borrar nodos en listas enlazadas simples, dobles y circulares.  Nuestra estructura de datos tendra dos campos. Vamos a mantener la variable firstNodo que siempre apunta al primer nodo de tal lista, o nulo para la lista vacia.  El recorrido en una lista enlazada es simple, empezamos por el primer nodo y pasamos al siguiente hasta que la lista llegue al final.  El siguiente codigo inserta un elemento a continuacion de otro en una lista simple. El diagrama muestra como funciona.  Insertar al principio de una lista requiere una funcion por separado. Se necesita actualizar firstNodo (primer nodo).  De forma similar, tambien tenemos funciones para borrar un nodo dado o para borrar un nodo del principio de la lista. Ver diagrama.  Advertimos que BorrarPrincipio pone PrimerNodo a nulo cuando se borra el ultimo elemento de la lista. Adjuntar una lista enlazada a otra puede resultar ineficiente a menos que se guarde una referencia a la cola de la lista, porque si no tendriamos que recorrer la lista en orden hasta llegar a la cola y luego a\u00f1adir la segunda lista.  Con estas listas es necesario actualizar muchos mas punteros pero tambien se necesita menos informacion porque podemos usar un puntero para recorrer hacia atras y consultar elementos. Se crean nuevas operaciones y elimina algunos casos especiales. A\u00f1adimos el campo anterior a nuestros nodos, apuntando al elemento anterior, y lastNodo a nuestra estructura, el cual siempre apunta al ultimo elemento de la lista. firstNodo y lastNodo siempre estan a nulo en la lista vacia.  Formas de recorrer la lista:  Hacia Delante  Hacia Atras  Estas funciones simetricas a\u00f1aden un nodo despues o antes de uno dado:  Tambien necesitamos una funcion para insertar un nodo al comienzo de una lista posiblemente vacia.  Una funcion simetrica que inserta al final:  Borrar un nodo es facil, solo requiere usar con cuidado firstNode y lastNode.  Una consecuencia especial de este procedimiento es que borrando el ultimo elemento de una lista se ponen PrimerNodo y UltimoNodo a nulo, habiendo entonces un problema en una lista que tenga un unico elemento.  Estas pueden ser simples o doblemente enlazadas. En una lista circular todos los nodos estan enlazados como un circulo, sin usar nulo. Para listas con frente y final (como una cola), se guarda una referencia al ultimo nodo de la lista. El siguiente nodo despues del ultimo seria el primero de la lista. Los elementos se pueden a\u00f1adir por el final y borrarse por el principio en todo momento. Ambos tipos de listas circulares tienen la ventaja de poderse recorrer completamente empezando desde cualquier nodo. Esto nos permite normalmente evitar el uso de PrimerNodo y UltimoNodo, aunque si la lista estuviera vacia necesitariamos un caso especial, como una variable UltimoNodo que apunte a algun nodo en la lista o nulo si esta vacia. Las operaciones para estas listas simplifican el insertar y borrar nodos en una lista vacia pero introducen casos especiales en la lista vacia.  Asumiendo que someNodo es algun nodo en una lista no vacia, esta lista presenta el comienzo de una lista con someNode.  Hacia Delante  Hacia Atras  Esta funcion inserta un nodo en una lista enlazada doblemente circular despues de un elemento dado:  Para hacer  \"insertBefore\", podemos simplificar \"insertAfter (node.prev, newNode)\". Insertar un elemento en una lista que puede estar vacia requiere una funcion especial.  Para insertar al principio simplificamos \"insertAfter (list.lastNode, node)\".  Como una lista doblemente enlazada, \"removeAfter\" y \"removeBefore\" puede ser implementada con \"remove (list, node.prev)\" y \"remove (list, node.next)\".  Previamente se crea una estructura que contiene los apuntadores:  Y finalmente se declara el vector: integer listHead;  Las listas enlazadas son tipicamente construidas usando referencias junto con el tipo de dato record  Listas simplemente enlazada con el empleo de punteros y direcciones de memoria. En este ejemplo empleamos dos clases una clase TElemento (nodo, item o elemento) y una clase TlistaSL (simplemente ligada, o simplemente enlazada). Cada una de ellas con sus atributos y metodos se\u00f1alando como mas importante aInfo(informacion del elemento) y aSeguinte (puntero al proximo elemento).   En este ejemplo se hace uso de dos clases, una que corresponde a los nodos, que van a ser parte de la lista y la otra clase que corresponde a la lista enlazada simple, en donde se incorporan los metodos de verificar si la lista esta vacia, es decir, no tiene nodos insertados, tambien las operaciones de insercion de nodos (por enfrente y por atras), eliminacion (por enfrente o por atras), impresion y el metodo principal.     Suponiendo que queremos crear una lista enlazada de familias y sus miembros. Usando almacenamiento interno, la estructura podria ser como la siguiente:  Para mostrar una lista completa de familias y sus miembros usando almacenamiento interno podriamos escribir algo como esto:  Usando almacenamiento externo, nosotros podriamos crear las siguientes estructuras:  Para mostrar una lista completa de familias y sus miembros usando almacenamiento externo, podriamos escribir: ","snippet":"En ciencias de la computacion, una lista enlazada es una de las estructuras de datos fundamentales, y puede ser usada para implementar otras estructuras de datos. Consiste en una secuencia de nodos, e","enlaces_salientes":["Lista_enlazada","Lista_enlazada","Lista_enlazada","Lista_(tipo_de_dato_abstracto)","Ciencias_de_la_computaci%C3%B3n","Estructura_de_datos","Nodo_(inform%C3%A1tica)","Puntero_(inform%C3%A1tica)","Vector_(inform%C3%A1tica)","Acceso_aleatorio","Lenguaje_de_programaci%C3%B3n","Lisp","Scheme","Haskell","Programaci%C3%B3n_orientada_a_objetos","Lenguaje_de_programaci%C3%B3n_C","C%2B%2B","Lenguaje_de_programaci%C3%B3n_Java","RAND","Inteligencia_artificial","Ajedrez","Unesco","Instituto_Tecnol%C3%B3gico_de_Massachusetts","COMIT","Ling%C3%BC%C3%ADstica_computacional","LISP","LISP","NULL","Lista_doblemente_enlazada","NULL","NULL","Pila_(estructura_de_datos)","Cola_(estructura_de_datos)","Persistencia_de_objetos","Persistencia_de_objetos","Heapsort","Problema_de_Flavio_Josefo","Lenguajes_de_programaci%C3%B3n","Lisp","Scheme","CAR_y_CDR","CAR_y_CDR","Lenguaje_de_programaci%C3%B3n_C","Maude_(lenguaje_de_programaci%C3%B3n)","%C3%81rbol_rojo-negro","Hash","%C3%8Dndice_(base_de_datos)","Pila_(estructura_de_datos)","Cola_(estructura_de_datos)","Skip_list","%C3%81rbol_binario","Nodo_(inform%C3%A1tica)","Hash","Hash","Pseudoc%C3%B3digo","Maude_(lenguaje_de_programaci%C3%B3n)","ISBN","National_Institute_of_Standards_and_Technology","2004","2004","MIT_Press","John_McCarthy_(cient%C3%ADfico)","Donald_Knuth","Thomas_H._Cormen","Charles_E._Leiserson","Ronald_L._Rivest","Clifford_Stein","Introduction_to_Algorithms","Allen_Newell","Maurice_Vincent_Wilkes","Maurice_Vincent_Wilkes","2005","Wayback_Machine","Control_de_autoridades","Gemeinsame_Normdatei"]}
{"url":"Permutaci%C3%B3n","titulo":"Permutacion","contenido":"En matematicas, una permutacion de un conjunto es, en terminos generales, una disposicion de sus miembros en una secuencia u orden lineal, o si el conjunto ya esta ordenado, una variacion del orden o posicion de los elementos de un conjunto ordenado o una tupla. La palabra \"permutacion\" tambien se refiere al acto o proceso de cambiar el orden lineal de un conjunto ordenado.\u200b  Las permutaciones difieren de las combinaciones, que son selecciones de algunos miembros de un conjunto sin importar el orden. Por ejemplo, escritas como tuplas, hay seis permutaciones del conjunto {1, 2, 3}, a saber (1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2) y (3, 2, 1). Estas son todas las ordenaciones posibles de este conjunto de tres elementos. Los anagramas de palabras cuyas letras son diferentes tambien son permutaciones: las letras ya estan ordenadas en la palabra original, y el anagrama es una reordenacion de las letras. El estudio de las permutaciones de conjuntos finitos es un tema importante en los campos de la combinatoria y la teoria de grupos.  Las permutaciones se utilizan en casi todas las ramas de las matematicas y en muchos otros campos de la ciencia. En informatica, se utilizan para analizar algoritmos de ordenacion; en fisica cuantica, para describir estados de particulas; y en biologia, para describir secuencias de ARN.  El numero de permutaciones de n objetos distintos es n\u00a0factorial, normalmente escrito como n!, que significa el producto de todos los enteros positivos menores o iguales a n.  Tecnicamente, una permutacion de un set S se define como una biyeccion de S a si mismo.\u200b\u200b Es decir, es una funcion de S a S para la cual cada elemento ocurre exactamente una vez como un valor de imagen. Esto esta relacionado con el reordenamiento de los elementos de S en el que cada elemento s es reemplazado por el correspondiente f(s). Por ejemplo, la permutacion (3, 1, 2) mencionada anteriormente es descrita por la funcion \u03b1 definida como  El conjunto de todas las permutaciones de un conjunto forman un grupo llamado grupo simetrico del conjunto. La operacion de grupo es la composicion (realizar dos reordenamientos dados sucesivamente), que da como resultado otro reordenamiento. Como las propiedades de las permutaciones no dependen de la naturaleza de los elementos del conjunto, suelen ser las permutaciones del conjunto { 1 , 2 , \u2026 , n } } las que se consideran para estudiar las permutaciones.  En combinatoria elemental, las k-permutaciones, o permutaciones parciales, son los arreglos ordenados de k elementos distintos seleccionados de un conjunto. Cuando k es igual al tama\u00f1o del conjunto, son las permutaciones del conjunto.  La definicion intuitiva de permutacion, como un ordenamiento de los elementos de un conjunto se formaliza con el uso del lenguaje de funciones matematicas.  Una permutacion de un conjunto X es una funcion biyectiva de dicho conjunto en si mismo.  Ejemplos:  1. En el caso de un elemento (1) solo hay una posible permutacion: ( 1 ) .  2. En el caso de dos elementos {1,2} solo hay dos posibles permutaciones (ordenamientos o posiciones de cada elemento): ( 1 , 2 ) y ( 2 , 1 ) .  3. En el caso de tres elementos {1, 2, 3} cada permutacion diferente sobre el conjunto {1, 2, 3} equivale a una forma de ordenar los elementos.  En la definicion de permutacion, no se establece condicion alguna sobre X, el cual puede incluso ser infinito. Sin embargo, es comun considerar unicamente el caso en que X es un conjunto finito al estudiar permutaciones.  La combinatoria trata del numero de diferentes maneras que existen de considerar conjuntos formados a partir de elementos de un conjunto dado, respetando ciertas reglas, como el tama\u00f1o, el orden, la repeticion,  la particion. Asi un problema combinatorio consiste usualmente en establecer una regla sobre como deben ser las agrupaciones y determinar cuantas existen que cumplan dicha regla. Basicamente, tres asuntos: permutaciones, combinaciones y variaciones.  Un tipo importante de esas agrupaciones son las llamadas permutaciones. Dada una n-tupla ordenada de los elementos de un conjunto, el numero de permutaciones es el numero de n-tuplas ordenadas posibles.  Dado un conjunto finito A de n elementos, el numero de todas sus permutaciones es igual a  factorial de n: n ! = n ( n \u2212 1 ) ( n \u2212 2 ) \u22ef 1 .  Demostracion: Dado que hay n formas de escoger el primer elemento y, una vez escogido este, solo tenemos ( n \u2212 1 ) formas de escoger el segundo elemento, y asi sucesivamente, vemos que cuando llegamos al elemento k-esimo solo tenemos [ n \u2212 ( k \u2212 1 ) ] posibles elementos para escoger, lo que nos lleva a que tenemos n ( n \u2212 1 ) ( n \u2212 2 ) \u22ef 2 \u22c5 1 formas de ordenar el conjunto, justamente lo que enunciamos anteriormente.  Ejemplo: sea el conjunto A={1,2,3} en este caso hay 6 permutaciones, en forma compacta: 123, 132, 213, 231, 312, 321. En algebra, para estudiar los grupos simetricos se presentan entre parentesis y en dos filas, en la primera siempre aparece 1 2 3.  Otro ejemplo de lo mismo: si se va a formar un comite que involucra presidente, tesorero y secretario, habiendo tres candidatos a, b, c\u00a0; cuando se elige por sorteo los cargos sucesivamente,  hay seis posibilidades u ordenaciones: abc, acb, bac, bca, cab, cba.  La primera forma de escribir una permutacion \u03c3 , aunque no es la mas compacta, consiste en escribirla en forma de matriz de dos filas, situando en la primera los elementos ordenados del dominio 1, 2, 3,...,n, y en la segunda fila las imagenes correspondientes a los elementos reordenados \u03c3 ( 1 ) , \u03c3 ( 2 ) , \u03c3 ( 3 ) , \u2026 , \u03c3 ( n ) .  Por ejemplo, dado el conjunto ordenado { 1 , . . . , 8 } } podemos expresar una permutacion \u03c3 sobre este mediante una matriz de correspondencias:  Por ser biyectiva por definicion, podemos encontrar una aplicacion inversa \u03c3 \u2212 1 } de forma que su composicion genera la aplicacion identidad. Para ello, en primer lugar intercambiamos las filas y finalmente reordenamos las columnas de modo que los elementos del dominio queden ordenados de forma natural:  Existe otra notacion mas compacta, llamada notacion de ciclos. Un ciclo es una permutacion que intercambia ciclicamente  elementos y fija los restantes. Esta notacion revela mejor la estructura interna de la permutacion. Para ello:  Siguiendo con el mismo ejemplo de antes, en notacion de ciclos, \u03c3 quedaria expresada como composicion de dos ciclos:  Un ciclo de longitud k es llamado k-ciclo.  La descomposicion realizada por el procedimiento anterior no es unica en principio, pues podrian haberse obtenido cualquiera de estos resultados equivalentes:  La descomposicion canonica de una permutacion como producto de ciclos se obtiene en dos pasos (segun Miklos Bona):  Frecuentemente, suelen omitirse los ciclos de longitud 1. Asi la permutacion (1 3)(2)(4 5) se escribe simplemente como (3 1)(5 4) en forma canonica.  Richard P. Stanley llama \u00abrepresentacion estandar\u00bb a esta forma\u200b, mientras que Martin Aigner usa el termino \u00abforma estandar\u00bb\u200b. Sergey Kitaev tambien usa el termino \u00abforma estandar\u00bb pero invierte los criterios: en cada ciclo se lista primero el elemento mas peque\u00f1o y luego los ciclos se ordenan de mayor a menor segun el primer elemento\u200b.  Como curiosidad, la forma canonica permite eliminar los parentesis sin que haya perdida de informacion, o bien recuperar la posicion de los parentesis a partir de un listado de elementos sin ellos. Por ejemplo, usando los criterios de Miklos Bona, en una forma canonica que haya \u00abperdido\u00bb los parentesis, como 3 1 2 5 4 6, el primer ciclo estara formado por el primer elemento de la lista, 3, y los siguientes que sean menores que el: (3 1 2). El siguiente elemento mayor que el primero (5 > 3) inicia un nuevo ciclo, junto con los siguientes menores que el, y asi sucesivamente. Por lo tanto, la forma canonica ha de ser (3 1 2) (5 4) (6).  Una transposicion es una permutacion que intercambia dos elementos y fija los restantes. Dicho de otro modo, es un ciclo de longitud 2. Una propiedad interesante es que cualquier permutacion se puede construir como una composicion de transposiciones, aunque no de manera unica. Dadas dos descomposiciones en transposiciones de una permutacion se cumple que ambas usaran un numero par o ambas usaran un numero impar, eso permite definir de manera univoca la signatura de una permutacion.  Las transposiciones permiten descomponer una permutacion cualquiera de una forma diferente a la descomposicion en ciclos. En particular, las transposiciones que aparezcan no tendran que ser disjuntas: Por ejemplo, el ciclo (1 2 3 4) = (1 2) (2 3) (3 4).  Notese la diferencia entre permutacion, ciclo y transposicion, dado lo similar de la notacion, la expresion anterior es equivalente a:  La composicion se\u00f1alada como: \u2218 se opera de derecha a izquierda y no es conmutativa.  Aqui el orden de aplicacion es importante: en primer lugar (3 4) deja el 4 en su sitio definitivo y el 3 descolocado. Despues (2 3) deja en su sitio definitivo el 3 y el 2 descolocado, que quedara recolocado definitivamente por (1 2).  Para ver que cualquier permutacion se descompone como producto de transposiciones bastara ver que todo ciclo lo hace. La descomposicion no es unica. Por ejemplo:  El numero de transposiciones de la descomposicion tampoco es unico. Por ejemplo:  Pero la paridad del numero de transposiciones de la descomposicion si esta determinada. Es decir, para cualquier par de descomposiciones distintas de \u03c3 con n y con m transposiciones, respectivamente, n y m tienen la misma paridad (seran simultaneamente pares o impares).  Dada una permutacion cualquiera, se define el siguiente homomorfismo de grupos:   \u03b5 : S n \u2192 ( { \u2212 1 , 1 } , \u22c5 ) \u2248 ( Z 2 , + ) , \u03b5 ( \u03c3 ) = ( \u2212 1 ) m , \\to (\\{-1,1\\},\\cdot )\\approx (\\mathbb {Z} _{2},+),\\qquad \\varepsilon (\\sigma )=(-1)^{m},}  donde S n } es el grupo simetrico de n elementos y m es un numero entero, tal que existen transposiciones \u03c4 i } tales que:   \u03c3 = \u03c4 1 \u03c4 2 \u2026 \u03c4 m \u2208 S n . \\tau _{2}\\dots \\tau _{m}\\in S_{n}.}  Llamaremos permutacion par (resp. impar) a la que se escribe como composicion de un numero par (resp. impar) de transposiciones.  Como ejemplo, dado el conjunto {1, 2, 3} de las 6=3! permutaciones posibles:  La permutacion  Escritas en notacion de ciclos:  Las transposiciones: La identidad no tiene transposiciones. El numero de transposiciones de id es 0(cero).  La permutacion  Escritas en notacion de ciclos:  Las transposiciones:  El numero de transposiciones es :1.  La permutacion  Escritas en notacion de ciclos:  Las transposiciones:  El numero de transposiciones es :1.  La permutacion  Escritas en notacion de ciclos:  Las transposiciones:  El numero de transposiciones es :2.  La permutacion  Escritas en notacion de ciclos:  Las transposiciones:  El numero de transposiciones es :2.  La permutacion  Escritas en notacion de ciclos:  Las transposiciones: La transposicion es:  El numero de transposiciones es :1.  En general, se demuestra que la mitad de las n! permutaciones de un conjunto de n elementos son pares y la otra mitad impares. Esto surge como consecuencia directa de la existencia del morfismo \u03b5 : S n \u2192 ( { \u2212 1 , 1 } , \u22c5 ) \\to (\\{-1,1\\},\\cdot )} que tiene como nucleo justamente a las permutaciones pares.  Dado un numero natural n \u2265 1 , consideramos el conjunto X = { 1 , 2 , . . . , n } } . Definimos el grupo de permutaciones de n elementos, que denotaremos por S n } , o lo que es lo mismo, el conjunto de aplicaciones biyectivas de X a X .  Las permutaciones pares forman un subgrupo normal de indice 2 del grupo Sn, al que llamaremos grupo alternado, y notaremos por A n } .  Permutacion completa o desorden es una permutacion de objetos en la que ninguno de los elementos aparece en su lugar natural.  Por ejemplo: la permutacion 23451 es un desorden o permutacion completa de un 12345 ya que ninguna cifra se encuentra en su posicion original. Pero si la permutacion fuera 15423 no se consideraria un desorden, debido a que el numero 1 se encuentra en su posicion natural.  Se puede demostrar utilizando el principio de inclusion-exclusion.  El estudio de las permutaciones de las raices de ecuaciones algebraicas le permitio a Galois elaborar los inicios de la teoria de grupos y usar este vocablo, por primera vez, en matematicas. Y empezo por los grupos no abelianos.  El concepto de permutacion aparece en la obra hebrea Sefer Yetzirah ('El libro de la creacion'), un manuscrito elaborado por un mistico entre el a\u00f1o 200 y el 600. Pero existia ya un resultado anterior de Jenocrates de Calcedonia (396-314\u00a0a.\u00a0C.)\u200b   ","snippet":"En matematicas, una permutacion de un conjunto es, en terminos generales, una disposicion de sus miembros en una secuencia u orden lineal, o si el conjunto ya esta ordenado, una variacion del orden o ","enlaces_salientes":["Permutaci%C3%B3n","Permutaci%C3%B3n","Permutaci%C3%B3n","Permuta","Matem%C3%A1ticas","Conjunto_(matem%C3%A1ticas)","Sucesi%C3%B3n_(matem%C3%A1tica)","Orden_lineal","Elemento_de_un_conjunto","Conjunto_ordenado","Tupla","Combinaciones","Tupla","Anagramas","Conjunto_finito","Combinatoria","Teor%C3%ADa_de_grupos","Inform%C3%A1tica","Algoritmos_de_ordenaci%C3%B3n","F%C3%ADsica_cu%C3%A1ntica","Biolog%C3%ADa","ARN","Factorial","Conjunto_(matem%C3%A1ticas)","Biyecci%C3%B3n","Funci%C3%B3n_(matem%C3%A1tica)","Imagen_(matem%C3%A1tica)","Grupo_(matem%C3%A1tica)","Grupo_sim%C3%A9trico","Composici%C3%B3n_de_funciones","Funciones_matem%C3%A1ticas","Funci%C3%B3n_biyectiva","Combinatoria","Combinaciones","Tupla","Factorial","Grupo_(matem%C3%A1tica)","Ciclo_(permutaci%C3%B3n)","Ciclo_(permutaci%C3%B3n)","Ciclo_(permutaci%C3%B3n)","Homomorfismo_de_grupos","Grupo_sim%C3%A9trico","Paridad_de_una_permutaci%C3%B3n","Grupo_sim%C3%A9trico","Subgrupo_normal","Grupo_alternado","Principio_de_inclusi%C3%B3n-exclusi%C3%B3n","Ra%C3%ADz_de_una_funci%C3%B3n","Ecuaci%C3%B3n_algebraica","Galois","Teor%C3%ADa_de_grupos","Ciclo_(permutaci%C3%B3n)","Matriz_permutaci%C3%B3n","Combinatoria","Combinaciones","Variaci%C3%B3n_(combinatoria)","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","ISBN","Addison-Wesley","ISBN","ISBN","ISBN","Donald_Knuth","The_Art_of_Computer_Programming","ISBN","Library_of_Congress_Control_Number","John_Wiley_%26_Sons","Library_of_Congress_Control_Number","ISBN","Control_de_autoridades","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Orden_lexicogr%C3%A1fico","titulo":"Orden lexicografico","contenido":"En matematicas, o mas particularmente en Teoria del orden, el orden lexicografico es una relacion de orden definida sobre el producto cartesiano de conjuntos ordenados. Es conocido principalmente por su aplicacion a cadenas de caracteres, por ejemplo en diccionarios o en la guia telefonica.  sean ( A , \u2264 A ) )} y ( B , \u2264 B ) )} dos conjuntos parcialmente ordenados por las relaciones \u2264 A } y \u2264 B } , respectivamente, entonces un orden lexicografico es una relacion de orden parcial \u2264 A , B } definida como sigue:  Si \u2264 A } y \u2264 B } son ordenes totales, \u2264 A , B } tambien es un orden total.  La definicion arriba mencionada, que solo define una relacion de orden en productos cartesianos de dos conjuntos ordenados, se puede extender a productos cartesianos n-arios, sacando provecho de la definicion recursiva de ellos  que solo basa en la aplicacion multiple del producto cartesiano binario.  Una aplicacion mas general del orden lexicografico es al comparar cadenas de caracteres. Distinto al caso para los productos cartesianos n-arios mencionados arriba, las cadenas de caracteres no poseen longitud fija. Usando la misma idea de definicion recursiva que para el caso anterior, ahora debemos considerar el que una secuencia puede ser mas larga que la otra, y que por lo tanto termine de recorrerse mientras que todavia quedan caracteres en la otra.  La secuencia mas corta a considerar sera la cadena vacia \u03f5 , es decir:  Asi, la definicion recursiva queda: ","snippet":"En matematicas, o mas particularmente en Teoria del orden, el orden lexicografico es una relacion de orden definida sobre el producto cartesiano de conjuntos ordenados. Es conocido principalmente por ","enlaces_salientes":["Orden_lexicogr%C3%A1fico","Orden_lexicogr%C3%A1fico","Orden_lexicogr%C3%A1fico","Teor%C3%ADa_del_orden","Relaci%C3%B3n_de_orden","Producto_cartesiano","Cadena_de_caracteres","Conjunto_parcialmente_ordenado","Relaci%C3%B3n_de_orden","Orden_total","Producto_cartesiano_n-ario","Cadena_de_caracteres","Cadena_vac%C3%ADa","Diccionario","Control_de_autoridades"]}
{"url":"Bubblesort","titulo":"Ordenamiento de burbuja","contenido":"El ordenamiento de burbuja (Bubble Sort en ingles) es un sencillo algoritmo de ordenamiento. Funciona revisando cada elemento de la lista que va a ser ordenada con el siguiente, intercambiandolos de posicion si estan en el orden equivocado. Es necesario revisar varias veces toda la lista hasta que no se necesiten mas intercambios, lo cual significa que la lista esta ordenada. Este algoritmo obtiene su nombre de la forma con la que suben por la lista los elementos durante los intercambios, como si fueran peque\u00f1as \u00abburbujas\u00bb. Tambien es conocido como el metodo del intercambio directo. Dado que solo usa comparaciones para operar elementos, se lo considera un algoritmo de comparacion, siendo uno de los mas sencillos de implementar.  Una manera simple de expresar el ordenamiento de burbuja en pseudocodigo es la siguiente:  Este algoritmo realiza el ordenamiento o reordenamiento de una lista a de n valores, en este caso de n terminos numerados del 0 al n-1; consta de dos bucles anidados, uno con el indice i, que da un tama\u00f1o menor al recorrido de la burbuja en sentido inverso de 2 a n, y un segundo bucle con el indice j, con un recorrido desde 0 hasta n-i, para cada iteracion del primer bucle, que indica el lugar de la burbuja.  La burbuja son dos terminos de la lista seguidos, j y j+1, que se comparan: si el primero es mayor que el segundo sus valores se intercambian.  Esta comparacion se repite en el centro de los dos bucles, dando lugar a una lista ordenada. Puede verse que el numero de repeticiones solo depende de n y no del orden de los terminos, esto es, si pasamos al algoritmo una lista ya ordenada, realizara todas las comparaciones exactamente igual que para una lista no ordenada. Esta es una caracteristica de este algoritmo. Luego veremos una variante que evita este inconveniente.  Para comprender el funcionamiento, veamos un ejemplo sencillo:  Tenemos una lista de numeros que hay que ordenar:  Podemos ver que la lista que tiene cinco terminos, luego:  El indice i hara un recorrido de 2 hasta n:  que en este caso sera de 2 a 5. Para cada uno de los valores de i, j tomara sucesivamente los valores de 0 hasta n-i:  Para cada valor de j, obtenido en ese orden, se compara el valor del indice j con el siguiente:  Si el termino j es mayor que el termino j+1, los valores se permutan, en caso contrario se continua con la iteracion.  Para el caso del ejemplo, tenemos que:  Para la primera iteracion del primer bucle:  y j tomara los valores de 0 hasta 3:  Cuando j vale 0, se comparan a 0 a 1 \\;a_{1}} , el 55 y el 86, dado que 55 < 86, no se permuta el orden.  Ahora j vale 1 y se comparan a 1 a 2 \\;a_{2}} el 86 y el 48. Como 86 > 48, se permutan, dando lugar a una nueva lista.  Se repite el proceso hasta que j valga 3, dando lugar a una lista parcialmente ordenada. Podemos ver que el termino de mayor valor esta en el lugar mas alto.  Ahora i vale 3, y j hara un recorrido de 0 a 2.  Primero j vale 0, se comparan a 0 a 1 \\;a_{1}} , el 55 y el 48. Como 55 > 48 se permutan dando lugar a la nueva lista.  Para j = 1 se compara el 55 con el 16 y se cambian de orden.  Para j = 2 se compara el 55 y el 82 y se dejan como estan, finalizando el bucle con una lista mejor ordenada. Puede verse que los dos valores mas altos ya ocupan su lugar. No se ha realizado ninguna comparacion con el termino cuarto, dado que ya se sabe que despues del primer ciclo es el mayor de la lista.  El algoritmo consiste en comparaciones sucesivas de dos terminos consecutivos ascendiendo de abajo arriba en cada iteracion, como la ascension de las burbujas de aire en el agua, de ahi el nombre del procedimiento. En la primera iteracion el recorrido ha sido completo, en el segundo se ha dejado el ultimo termino, al tener ya el mayor de los valores, en los sucesivos se ira dejando de realizar las ultimas comparaciones, como se puede ver.  Ahora ya i vale 4 y j recorrera los valores de 0 a 1.  Cuando j vale 0, se comparan a 0 a 1 \\;a_{1}} , esto es, el 48 y el 16. Dado que 48 es mayor que 16 se permutan los valores, dando lugar a una lista algo mas ordenada que la anterior. Desde esta nueva ordenacion, j pasa a valer 1, con lo que se comparan los terminos a 1 a 2 \\;a_{2}} el 48 y el 55 que quedan en el mismo orden.  En este caso la burbuja ha ascendido menos que en los casos anteriores, y la lista esta ya ordenada, pero el algoritmo tendra que completarse, realizando una ultima iteracion.  Hay que tener en cuenta que el bucle realiza un numero fijo de repeticiones y para finalizar tendran que completarse, aun en el caso extremo, de que la lista estuviera previamente ordenada.  Por ultimo i vale 5 y j solo puede vale 0, con lo que solo se realizara una comparacion de a 0 a 1 \\;a_{1}} el 16 y el 48, que ya estan ordenados y se dejan igual.  Los bucles finalizan y tambien el procedimiento, dejando la lista ordenada.  Una variante que finaliza en caso de que la lista este ordenada, puede ser la siguiente: como en el ejemplo anterior, empleando un centinela ordenado, que detecta que no se ha modificado la lista en un recorrido de la burbuja, y que por tanto la lista ya esta ordenada, finalizando inmediatamente.  Al algoritmo de la burbuja, para ordenar un arreglo de n terminos, tiene que realizar siempre el mismo numero de comparaciones:  Esto es, el numero de comparaciones c(n) no depende del orden de los terminos, si no del numero de terminos:  Por lo tanto la cota ajustada asintotica del numero de comparaciones pertenece al orden de n cuadrado.  El numero de intercambios i(n), que hay que realizar depende del orden de los terminos y podemos diferenciar, el caso mejor, si el arreglo esta previamente ordenado, y el caso peor, si el arreglo esta ordenado en orden inverso:  Por lo que no se puede determinar una cota ajustada asintotica del numero de intercambios, dado que este dependera del orden del arreglo en cuestion.  Si pasamos al algoritmo un arreglo ordenado en orden inverso realizara un numero de comparaciones:  Como ya hemos dicho anteriormente, y tendra que realizar un numero igual de intercambios entre los terminos del arreglo, dado que en cada comparacion los terminos estaran desordenados, y se realizara el intercambio.  Por lo tanto en el caso mas desfavorable tanto el numero de comparaciones como el de intercambios coinciden:  El numero de comparaciones o de intercambios en el caso mas desfavorable pertenece al orden de n cuadrado.  En el caso optimo, el mas favorable, es la ordenacion de un arreglo ya ordenado. En este caso el numero de comparaciones sera el mismo que en cualquier otro caso:  La cota inferior asintotica del numero de comparaciones pertenece al orden de n cuadrado, como en los demas casos, pero en todas las comparaciones el orden es el correcto y por tanto no se realiza ningun intercambio:  Por lo tanto el coste de intercambios no depende de n, y es constante:  El ordenamiento de burbuja tiene una complejidad \u03a9(n\u00b2) igual que ordenamiento por seleccion. Cuando una lista ya esta ordenada, a diferencia del ordenamiento por insercion que pasara por la lista una vez y encontrara que no hay necesidad de intercambiar las posiciones de los elementos, el metodo de ordenacion por burbuja esta forzado a pasar por dichas comparaciones, lo que hace que su complejidad sea cuadratica en el mejor de los casos. Esto lo cataloga como uno de los algoritmos de ordenacion mas ineficientes que existen, aunque para muchos programadores sea el mas sencillo de implementar.  La posicion de los elementos en el ordenamiento de burbuja juegan un papel muy importante en la determinacion del rendimiento. Los elementos mayores al principio de la lista son rapidamente movidos hacia abajo, mientras los elementos menores en el fondo de la lista se mueven a la parte superior muy lentamente. Esto llevo a nombrar estos elementos conejos y tortugas, respectivamente.  Se han realizado varios esfuerzos para eliminar las tortugas y mejorar la velocidad del ordenamiento de burbuja, la cual sera mas redonda que nunca. El Ordenamiento por sacudida es un buen ejemplo, aunque aun mantiene, en el peor de los casos, una complejidad O (n2). El ordenamiento por combinacion compara los elementos primero en pedazos grandes de la lista, moviendo tortugas extremadamente rapido, antes de proceder a pedazos cada vez mas peque\u00f1os para alisar la lista. Su velocidad promedio es comparable a algoritmos rapidos (y complejos) como el ordenamiento rapido.  A pesar de que el ordenamiento de burbuja es uno de los algoritmos mas sencillos de implementar, su orden O (n2) lo hace muy ineficiente para usar en listas que tengan mas que un numero reducido de elementos. Incluso entre los algoritmos de ordenamiento de orden O (n2), otros procedimientos como el ordenamiento por insercion son considerados mas eficientes.  Dada su simplicidad, el ordenamiento de burbuja es utilizado para introducir el concepto de algoritmo de ordenamiento para estudiantes de ciencias de la computacion. A pesar de esto, algunos investigadores como Owen Astrachan han criticado su popularidad en la ense\u00f1anza de ciencias de la computacion, llegando a recomendar su eliminacion de los planes de estudio.\u200b  Sumado a esto, Jargon File, un libro ampliamente citado en la cultura hacker, lo denomina \u00abel mal algoritmo generico\u00bb, y Donald Knuth, uno de los mayores expertos en ciencias de la computacion, afirma que el ordenamiento de burbuja \u00abno parece tener nada para recomendar su uso, a excepcion de un nombre pegadizo y el hecho de que conlleva a problemas teoricos interesantes\u00bb.\u200b  El ordenamiento de burbuja es asintoticamente equivalente en tiempos de ejecucion con el ordenamiento por insercion en el peor de los casos, pero ambos algoritmos difieren principalmente en la cantidad de intercambios que son necesarios. Resultados experimentales como los descubiertos por Astrachan han demostrado que el ordenamiento por insercion funciona considerablemente mejor incluso con listas aleatorias. Por esta razon, muchos libros de algoritmos modernos evitan usar el ordenamiento de burbuja, reemplazandolo por el ordenamiento por insercion.  El ordenamiento de burbuja interactua vagamente con el hardware de las CPU modernas. Requiere al menos el doble de escrituras que el ordenamiento por insercion, el doble de perdidas de cache, y asintoticamente mas prediccion de saltos. Varios experimentos de ordenamiento de cadenas en Java hechos por Astrachan muestran que el ordenamiento de burbuja es 5 veces mas lento que el ordenamiento por insercion, y 40% mas lento que el ordenamiento por seleccion.\u200b  .  Tomemos como ejemplo los numeros: \"9 6 5 8 2 1\", que seran ordenados de menor a mayor valor usando el metodo burbuja. Los elementos siguientes resaltados estan siendo comparados.  Primera vuelta:  ( 9 6 5 8 2 1 ) \u2192 ( 6 9 5 8 2 1 ), el algoritmo compara los primeros dos elementos y los cambia porque 9 > 6  ( 6 9 5 8 2 1 ) \u2192 ( 6 5 9 8 2 1 )  ( 6 5 9 8 2 1 ) \u2192 ( 6 5 8 9 2 1 )  ( 6 5 8 9 2 1 ) \u2192 ( 6 5 8 2 9 1 )  ( 6 5 8 2 9 1 ) \u2192 ( 6 5 8 2 1 9 )  Segunda vuelta:  ( 6 5 8 2 1 9 ) \u2192 ( 5 6 8 2 1 9 )  ( 5 6 8 2 1 9 ) \u2192 ( 5 6 8 2 1 9 ), como estos elementos ya estan en orden, el algoritmo no hace cambios.  ( 5 6 8 2 1 9 ) \u2192 ( 5 6 2 8 1 9 )  ( 5 6 2 8 1 9 ) \u2192 ( 5 6 2 1 8 9 )  ( 5 6 2 1 8 9 ) \u2192 ( 5 6 2 1 8 9 )  Tercera vuelta:  ( 5 6 2 1 8 9 ) \u2192 ( 5 6 2 1 8 9 )  ( 5 6 2 1 8 9 ) \u2192 ( 5 2 6 1 8 9 )  ( 5 2 6 1 8 9 ) \u2192 ( 5 2 1 6 8 9 )  ( 5 2 1 6 8 9 ) \u2192 ( 5 2 1 6 8 9 )  ( 5 2 1 6 8 9 ) \u2192 ( 5 2 1 6 8 9 )  Cuarta vuelta:  ( 5 2 1 6 8 9 ) \u2192 ( 2 5 1 6 8 9 )  ( 2 5 1 6 8 9 ) \u2192 ( 2 1 5 6 8 9 )  ( 2 1 5 6 8 9 ) \u2192 ( 2 1 5 6 8 9 )  ( 2 1 5 6 8 9 ) \u2192 ( 2 1 5 6 8 9 )  ( 2 1 5 6 8 9 ) \u2192 ( 2 1 5 6 8 9 )  Quinta vuelta:  ( 2 1 5 6 8 9 ) \u2192 ( 1 2 5 6 8 9 )  ( 1 2 5 6 8 9 ) \u2192 ( 1 2 5 6 8 9 )  ( 1 2 5 6 8 9 ) \u2192 ( 1 2 5 6 8 9 )  ( 1 2 5 6 8 9 ) \u2192 ( 1 2 5 6 8 9 )  ( 1 2 5 6 8 9 ) \u2192 ( 1 2 5 6 8 9 ) ","snippet":"El ordenamiento de burbuja (Bubble Sort en ingles) es un sencillo algoritmo de ordenamiento. Funciona revisando cada elemento de la lista que va a ser ordenada con el siguiente, intercambiandolos de p","enlaces_salientes":["Ordenamiento_de_burbuja","Ordenamiento_de_burbuja","Ordenamiento_de_burbuja","Algoritmo_de_ordenamiento","Algoritmo","Pseudoc%C3%B3digo","Cota_ajustada_asint%C3%B3tica","Cota_superior_asint%C3%B3tica","Cota_inferior_asint%C3%B3tica","Ordenamiento_por_selecci%C3%B3n","Ordenamiento_por_inserci%C3%B3n","Cocktail_sort","Comb_sort","Quicksort","Ordenamiento_por_inserci%C3%B3n","Ciencias_de_la_computaci%C3%B3n","Jargon_File","Hacker","Donald_Knuth","Cota_superior_asint%C3%B3tica","Ordenamiento_por_inserci%C3%B3n","Hardware","Predictor_de_saltos","Ordenamiento_por_inserci%C3%B3n","Ordenamiento_por_selecci%C3%B3n","El_arte_de_programar_ordenadores","ISBN","Algoritmo_de_ordenamiento","Control_de_autoridades","PyPI"]}
{"url":"Library_sort","titulo":"Library sort","contenido":"Library sort es un algoritmo de ordenacion que usa ordenacion por insercion, pero con espacios vacios en el arreglo para acelerar inserciones subsiguientes. El nombre proviene de una analogia: Suponga que un bibliotecario almacene sus libros alfabeticamente en una estante, empezando por la A desde la izquierda, y continuando a la derecha a lo largo del estante sin espacios entre los libros hasta que termine por la Z. Si el bibliotecario adquiere un libro nuevo que pertenece a la seccion B, una vez que encuentra el espacio correcto en la seccion B,  tiene que mover cada libro a partir de ese hasta el ultimo libro en la seccion Z para abrir espacio al libro nuevo. Esto es ordenacion por insercion. Sin embargo, si dejara un espacio vacio despues de cada letra, mientras hubiera un espacio vacio despues de B, solo tendria que mover unos cuantos libros para poder ubicar el nuevo libro. Esto es el principio basico de Library Sort.  El algoritmo estuvo propuesto por Michael Un. Bender, Martin Farach-Colton, y Miguel Mosteiro en 2004 y estuvo publicado en 2006.\u200b\u200b  Como la ordenacion por insercion, Library sort es un algoritmo de ordenamiento por comparacion estable  y puede ser corrido como un algoritmo en linea; aun asi, ha mostrado tener una probabilidad alta de correr en un tiempo O(n log n) (comparable a quicksort), mejor que el tiempo de ordenacion por insercion  O(n2). El mecanismo utilizado para esta mejora es muy similar a aquello de un skip list.No hay una implementacion completa escrita, ni los algoritmos exactos de partes importantes, como la insercion y el re-equilibrio. Seria necesaria mas informacion para discutir como la eficiencia de Library sort se compara con otros metodos de ordenamiento en realidad.  Comparado a la ordenacion por insercion basica, la desventaja de Library sort es que requiere espacio extra para los espacios vacios. La cantidad y la distribucion del espacio extra depende de la implementacion. En principio, la medida del arreglo necesitada es (1 + \u03b5)n, pero sin recomendaciones de como escoger \u03b5.\u200b  Una debilidad de ordenacion por insercion es que puede requerir un numero alto de operaciones de intercambio y ser costoso si la memoria de escritura es costosa. Library sort puede mejorar un poco en el paso de insercion, mientras necesite mover menos elementos para abrir el espacio, pero tambien esta a\u00f1adiendo un sobrecosto en el paso de re-equilibrio. Ademas, la ubicacion de las referencias sera pobre comparado a mergesort ya que cada insercion de un conjunto de datos aleatorio puede acceder a memoria que ya no esta en la cache, especialmente con conjuntos de datos grande.  Tenemos una arreglo de n elementos. Escogemos el tama\u00f1o de espacio vacio que pretendemos dar. Entonces tendriamos una arreglo de medida (1 + \u03b5)n. El algoritmo trabaja en log n rondas. En cada ronda insertamos tantos elementos como hayan, en el arreglo, antes del re-equilibrio de este. Para encontrar la posicion donde insertar,  aplicamos Busqueda Binaria en el arreglo y entonces intercambiamos los elementos siguientes hasta que damos con un espacio vacio. Una vez la ronda terminada, nosotros balanceamos el arreglo insertando espacios entre cada elemento.  Siguiendo los tres pasos importantes del algoritmo:  1. Busqueda binaria: Encontrando la posicion de insercion aplicando busqueda binaria dentro de los elementos ya insertados. Esto puede ser hecho moviendose por las partes izquierda o derecha de forma recursiva y viendo si encontramos un espacio vacio en el medio.  2. Insercion: Insertando el elemento en la posicion encontrada e intercambiando los elementos siguientes 1 por 1 hasta que choquemos con un espacio vacio.  3. Re-Equilibrando: Insertando espacios entre cada par de elementos en el arreglo. Esto toma tiempo lineal, y producto que hay log n rondas en el algoritmo, el re-equilibrio total toma O(n logn).  Aqui, binarysearch(A, k) efectua busqueda binaria en los primeros k elementos de A de la ubicacion donde se insertara el elemento A[j], saltandose los vacios. La insercion tendria que favorecer los vacios sobre los ocupados. ","snippet":"Library sort es un algoritmo de ordenacion que usa ordenacion por insercion, pero con espacios vacios en el arreglo para acelerar inserciones subsiguientes. El nombre proviene de una analogia: Suponga","enlaces_salientes":["Library_sort","Library_sort","Library_sort","Algoritmo_de_ordenaci%C3%B3n","Ordenamiento_por_inserci%C3%B3n","Algoritmo_de_ordenamiento","Quicksort","Skip_list","Ordenamiento_por_inserci%C3%B3n","Ordenamiento_por_mezcla","Digital_object_identifier","Control_de_autoridades"]}
{"url":"Casos_peor,_mejor,_y_promedio","titulo":"Casos peor, mejor y promedio","contenido":"En analisis de algoritmos, los terminos caso peor, caso mejor y caso promedio tienen los siguientes significados:  En el caso de los algoritmos de ordenamiento o clasificacion, la complejidad computacional esta determinada por el numero de comparaciones y de asignaciones entre elementos del conjunto que se realiza en una implementacion especifica del algoritmo.  Por ejemplo, en el algoritmo de Insercion directa el caso mejor se presenta cuando el conjunto de elementos a ordenar se encuentra ya ordenado. En ese caso, los valores representativos son los siguientes:   C m i n = n \u2212 1 =n-1} M m i n = 2 ( n \u2212 1 ) =2(n-1)}  donde C m i n } y M m i n } son el numero minimo de comparaciones y el numero minimo de movimientos entre elementos del conjunto de datos del algoritmo de Insercion directa. ","snippet":"En analisis de algoritmos, los terminos caso peor, caso mejor y caso promedio tienen los siguientes significados:  En el caso de los algoritmos de ordenamiento o clasificacion, la complejidad computac","enlaces_salientes":["Casos_peor,_mejor_y_promedio","Casos_peor,_mejor_y_promedio","Casos_peor,_mejor_y_promedio","An%C3%A1lisis_de_algoritmos","Complejidad_computacional","Algoritmo_de_ordenamiento","Algoritmo","Insertion_sort","Insertion_sort","ISBN","Control_de_autoridades"]}
{"url":"Ordenamiento_externo","titulo":"Ordenamiento externo","contenido":"Ordenamiento externo es un termino generico para los algoritmos de ordenamiento que pueden manejar grandes cantidades de informacion. El ordenamiento externo se requiere cuando la informacion que se tiene que ordenar no cabe en la memoria principal de una computadora (tipicamente la RAM) y un tipo de memoria mas lenta (tipicamente un disco duro) tiene que utilizarse en el proceso.  Un ejemplo de ordenamiento externo es el algoritmo de ordenamiento por mezcla. Supongamos que 900 MB de informacion deben ser ordenados utilizando unicamente 100 MB de RAM.  Otro ejemplo es el algoritmo de ordenamiento por mezcla equilibrada, que es una optimizacion del anterior. ","snippet":"Ordenamiento externo es un termino generico para los algoritmos de ordenamiento que pueden manejar grandes cantidades de informacion. El ordenamiento externo se requiere cuando la informacion que se t","enlaces_salientes":["Ordenamiento_externo","Ordenamiento_externo","Ordenamiento_externo","Algoritmo_de_ordenamiento","Informaci%C3%B3n","Memoria_RAM","Disco_duro","Ordenamiento_por_mezcla","Quicksort","Ordenamiento_por_mezcla_equilibrada","Donald_Knuth","Internet_Archive","Control_de_autoridades"]}
{"url":"Disco_duro","titulo":"Unidad de disco duro","contenido":"En informatica, unidad de disco duro o unidad de disco rigido (en ingles: hard disk drive, HDD) es un dispositivo de almacenamiento de datos que emplea un sistema de grabacion magnetica para almacenar y recuperar archivos digitales. Se compone de uno o mas platos o discos rigidos, recubiertos con material magnetico y unidos por un mismo eje que gira a gran velocidad dentro de una caja metalica sellada. Sobre cada plato, y en cada una de sus caras, se situa un cabezal de lectura/escritura que flota sobre una delgada lamina de aire generada por la rotacion de los discos.\u200b Permite el acceso aleatorio a los datos, lo que significa que los bloques de datos se pueden almacenar o recuperar en cualquier orden y no solo de forma secuencial. Las unidades de disco duro son un tipo de memoria no volatil, que retienen los datos almacenados incluso cuando estan apagados.\u200b\u200b\u200b  El primer disco duro fue inventado por IBM, en 1956.\u200b A lo largo de los a\u00f1os, han disminuido los precios de los discos duros, al mismo tiempo que han multiplicado su capacidad, siendo la principal opcion de almacenamiento secundario para computadoras personales, desde su aparicion en los a\u00f1os 1960.\u200b Los discos duros han mantenido su posicion dominante gracias a los constantes incrementos en la densidad de grabacion, que se ha mantenido a la par de las necesidades de almacenamiento secundario.\u200b  Mejorados continuamente, los discos rigidos han mantenido esta posicion en la era moderna de los servidores y las computadoras personales. Mas de 224 compa\u00f1ias han fabricado unidades de disco duro historicamente, aunque despues de una extensa consolidacion de la industria, la mayoria de las unidades son fabricadas por Seagate, Toshiba y Western Digital. Los discos duros dominan el volumen de almacenamiento producido (exabytes por a\u00f1o) para servidores. Aunque la produccion esta creciendo lentamente, los ingresos por ventas y los envios de unidades estan disminuyendo debido a que las unidades de estado solido (SSD) tienen mayores tasas de transferencia de datos, mayor densidad de almacenamiento de area, mejor confiabilidad,\u200b y tiempos de acceso y latencia mucho mas bajos.\u200b\u200b\u200b\u200b  Los ingresos por discos duros SSD, la mayoria de los cuales utilizan tecnologia flash NAND, exceden ligeramente los de los discos duros HDD.\u200b Aunque los SSD tienen un costo por bit casi 10 veces mayor, estan reemplazando a los discos duros HDD en aplicaciones donde la velocidad, el consumo de energia, el tama\u00f1o peque\u00f1o y la durabilidad son importantes.\u200b\u200b  Los tama\u00f1os tambien han variado mucho, desde los primeros discos IBM hasta los formatos estandarizados actualmente: 3,5 pulgadas para PC y servidores, y 2,5 pulgadas para dispositivos portatiles(LAPTOPS, NOTEBOOK). Todos se comunican con la computadora a traves del controlador de disco, empleando una interfaz estandarizada. Los mas comunes hasta los a\u00f1os 2000 han sido IDE (tambien llamado ATA o PATA), SCSI/SAS (generalmente usado en servidores y estaciones de trabajo). Desde el 2000 en adelante ha ido masificandose el uso de los SATA. Existe ademas los discos de canal de fibra (FC), empleados exclusivamente en servidores. Las unidades externas se conectan principalmente por USB.  Para poder utilizar un disco duro, un sistema operativo debe aplicar un formato de bajo nivel que defina una o mas particiones. La operacion de formateo requiere el uso de una fraccion del espacio disponible en el disco, que dependera del sistema de archivos o formato empleado. Ademas, los fabricantes de discos duros, unidades de estado solido y tarjetas flash miden la capacidad de los mismos usando prefijos del Sistema Internacional, que emplean multiplos de potencias de 1000 segun la normativa IEC e IEEE, en lugar de los prefijos binarios, que emplean multiplos de potencias de 1024, y son los usados por sistemas operativos de Microsoft. Esto provoca que en algunos sistemas operativos sea representado como multiplos 1024 o como 1000, y por tanto existan confusiones, por ejemplo, un disco duro de 500\u00a0GB, en algunos sistemas operativos sera representado como 465 GiB (es decir gibibytes; 1\u00a0GiB = 1024\u00a0MiB) y en otros como 500\u00a0GB.  El rendimiento de un disco duro se especifica por el tiempo requerido para mover las cabezas a una pista o cilindro (tiempo de acceso promedio) agregando el tiempo que toma para que el sector deseado se mueva debajo de la cabeza (latencia media, que es una funcion de la velocidad de rotacion fisica en las revoluciones por minuto) y, finalmente, la velocidad a la que se transmiten los datos (velocidad de datos).  Al principio los discos duros eran extraibles negros; sin embargo, hoy en dia tipicamente vienen todos sellados (a excepcion de un hueco de ventilacion para filtrar e igualar la presion del aire)..  .  El primer disco duro, aparecido en 1956, fue el Ramac I, presentado con la computadora IBM 350: pesaba una tonelada y su  capacidad era de 5 MB. Mas grande que un frigorifico actual, este disco duro trabajaba todavia con valvulas de vacio y requeria una consola separada para su manejo.  Su gran merito consistia en que el tiempo requerido para el acceso era relativamente constante entre algunas posiciones de memoria. Este tipo de acceso se conoce como acceso aleatorio. En cambio, en las cintas magneticas era necesario enrollar y desenrollar los carretes hasta encontrar el dato buscado, teniendo tiempos de acceso muy dispares para cada posicion. Este tipo de acceso se conoce como acceso secuencial.  La tecnologia inicial aplicada a los discos duros era relativamente simple. Consistia en recubrir con material magnetico un disco de metal que era formateado en pistas concentricas, que luego eran divididas en sectores. El cabezal magnetico codificaba informacion al magnetizar diminutas secciones del disco duro, empleando un codigo binario de \u00abceros\u00bb y \u00abunos\u00bb. Los bits o digitos binarios asi grabados pueden permanecer intactos durante a\u00f1os. Originalmente, cada bit tenia una disposicion horizontal en la superficie magnetica del disco, pero luego se descubrio como registrar la informacion de una manera mas compacta.  El merito del frances Albert Fert y al aleman Peter Grunberg (ambos premio Nobel de Fisica por sus contribuciones en el campo del almacenamiento magnetico) fue el descubrimiento del fenomeno conocido como magnetorresistencia gigante, que permitio construir cabezales de lectura y grabacion mas sensibles, y compactar mas los bits en la superficie del disco duro. De estos descubrimientos, realizados en forma independiente por estos investigadores, se desprendio un crecimiento espectacular en la capacidad de almacenamiento en los discos duros, que se elevo un 60\u00a0% anual en la decada de 1990.  En 1992, los discos duros de 3,5 pulgadas alojaban 250\u00a0MB, mientras que 10 a\u00f1os despues habian superado 40\u00a0GB (40\u00a0960\u00a0MB). A la fecha (2017), ya se dispone de en el uso cotidiano con discos rigidos de mas de 5\u00a0TB, esto es, 5120\u00a0GB (5\u00a0242\u00a0880\u00a0MB).  En 2005 los primeros telefonos moviles que incluian discos duros fueron presentados por Samsung y Nokia, aunque no tuvieron mucho exito ya que las memorias flash los acabaron desplazando, debido al aumento de capacidad, mayor resistencia y menor consumo de energia.  Dentro del disco se encuentran:  Dentro de la unidad de disco duro hay uno o varios discos (de aluminio o cristal) concentricos llamados platos (normalmente entre 2 y 4, aunque pueden ser hasta 6 o 7 segun el modelo), y que giran todos a la vez sobre el mismo eje, al que estan unidos. El cabezal (dispositivo de lectura y escritura) esta formado por un conjunto de brazos paralelos a los platos, alineados verticalmente y que tambien se desplazan de forma simultanea, en cuya punta estan las cabezas de lectura/escritura. Por norma general hay una cabeza de lectura/escritura para cada superficie de cada plato. Los cabezales pueden moverse hacia el interior o el exterior de los platos, lo cual combinado con la rotacion de los mismos permite que los cabezales puedan alcanzar cualquier posicion de la superficie de los platos.  Cada plato posee dos \u201cojos\u201d, y es necesaria una cabeza de lectura/escritura para cada cara. Si se observa el esquema Cilindro-Cabeza-Sector, a primera vista se ven 4 brazos, uno para cada plato. En realidad, cada uno de los brazos es doble, y contiene dos cabezas: una para leer la cara superior del plato, y otra para leer la cara inferior. Por tanto, hay ocho cabezas para leer cuatro platos, aunque por cuestiones comerciales, no siempre se usan todas las caras de los discos y existen discos duros con un numero impar de cabezas, o con cabezas deshabilitadas. Los cabezales de lectura/escritura no tocan el disco, sino que pasan muy cerca (hasta a 3 nanometros), debido a una finisima pelicula de aire que se forma entre los cabezales y los platos cuando los discos giran (algunos discos incluyen un sistema que impide que los cabezales pasen por encima de los platos hasta que alcancen una velocidad de giro que garantice la formacion de esta pelicula). Si alguna de las cabezas llega a tocar una superficie de un plato, causaria muchos da\u00f1os en el, rayandolo gravemente, debido a lo rapido que giran los platos (uno de 7200 revoluciones por minuto se mueve a 129\u00a0km/h en el borde de un disco de 3,5 pulgadas).  Hay varios conceptos para referirse a zonas del disco:  El primer sistema de direccionamiento que se uso fue el Cilindro-Cabezal-Sector (Cylinder-Head-Sector, CHS), ya que con estos tres valores se puede situar un dato cualquiera del disco. Mas adelante se creo otro sistema mas sencillo, que actualmente se usa: direccionamiento de bloques logicos (Logical Block Addressing, LBA), que consiste en dividir el disco entero en sectores y asignar a cada uno un unico numero.  La primera unidad de disco duro de IBM, la IBM 350, usaba una pila de cincuenta platos de 24 pulgadas, almacenaba 3,75 MB de datos (aproximadamente el tama\u00f1o de una imagen digital moderna) y tenia un tama\u00f1o comparable a dos refrigeradores grandes. En 1962, IBM presento el IBM 1311, que usaba seis platos de 14 pulgadas (tama\u00f1o nominal) en un paquete extraible y era aproximadamente del tama\u00f1o de una lavadora. Este se convirtio en un tama\u00f1o de plato estandar durante muchos a\u00f1os, utilizado tambien por otros fabricantes.\u200b El IBM 2314 uso platos del mismo tama\u00f1o en un paquete de once e introdujo el dise\u00f1o de \"unidad en un cajon\". a veces llamado el \"horno de pizza\", aunque el \"cajon\" no era la unidad completa. En la decada de 1970, los discos duros se ofrecian en gabinetes independientes de diferentes dimensiones que contenian de uno a cuatro discos duros.  A partir de finales de la decada de 1960, se ofrecieron unidades que encajaban completamente en un chasis que se montaba en un bastidor de 19 pulgadas. Los RK05 y RL01 de Digital Equipment Corporation fueron los primeros ejemplos que utilizaron platos individuales de 14 pulgadas en paquetes extraibles, la unidad completa encajaba en un espacio de rack de 10,5 pulgadas de alto (seis unidades de rack). A mediados y finales de la decada de 1980, el Fujitsu Eagle de tama\u00f1o similar, que usaba (casualmente) platos de 10,5 pulgadas, era un producto popular.  Con el aumento de las ventas de microcomputadoras que tienen disqueteras integradas (FDD), los HDD que encajaran en los montajes de FDD se volvieron deseables. Comenzando con el Shugart Associates SA1000, los factores de forma de HDD inicialmente siguieron a los de las unidades de disquete de 8 pulgadas, 5\u00bc pulgadas y 3\u00bd pulgadas. Aunque se hace referencia a estos tama\u00f1os nominales, los tama\u00f1os reales de esas tres unidades respectivamente son 9,5\", 5,75\" y 4\" de ancho. Debido a que no habia unidades de disquete mas peque\u00f1as, los factores de forma de HDD mas peque\u00f1os, como las unidades de 2\u00bd pulgadas (en realidad, 2,75\" ancho) se desarrollaron a partir de ofertas de productos o estandares de la industria.  El mas temprano \"factor de forma\" de los discos duros, heredo sus dimensiones de las disqueteras. Pueden ser montados en los mismos chasis y asi los discos duros con factor de forma, pasaron a llamarse coloquialmente tipos FDD floppy-disk drives (en ingles). Los factores usado actualmente son el de 3,5 pulgadas para torres, sobremesas, NAS y servidores, y el de 2,5 pulgadas para portatiles y equipos con factores cada vez mas peque\u00f1o como los Intel NUC. En los SDD es ete formato el que se ha impuesto cuando se sustituye una unidad HDD por una SDD, pero en los nuevos equipos se van imponiendo formatos que nada tienen que ver con los de la disquetera.  A partir de 2019, los discos duros de 2\u00bd pulgadas y 3\u00bd pulgadas son los tama\u00f1os mas populares. En 2009, todos los fabricantes habian interrumpido el desarrollo de nuevos productos para los factores de forma de 1,3 pulgadas, 1 pulgada y 0,85 pulgadas debido a la caida de los precios de la memoria flash,\u200b\u200b que no tiene partes moviles, aunque Samsung introdujo en el 2008 con el SpidPoint A1 otra unidad de 1,3 pulgadas. Mientras que los tama\u00f1os nominales estan en pulgadas, las dimensiones reales se especifican en milimetros.  El nombre de \u00abpulgada\u00bb para los factores de forma normalmente no identifica ningun producto actual (son especificadas en milimetros para los factores de forma mas recientes), pero estos indican el tama\u00f1o relativo del disco, para interes de la continuidad historica.  Las caracteristicas que se deben tener en cuenta en un disco duro son:  Otras caracteristicas son:  Las unidades de discos duros pueden tener distintos tipos de conexion o interfaces de datos con la placa base. Cada unidad de disco rigido puede tener una de las siguientes opciones:  Cuando se conecta indirectamente con la placa base (por ejemplo: a traves del puerto USB) se denomina disco duro portatil o externo.  La interfaz ATA (Advanced Technology Attachment) o PATA (Parallel ATA), originalmente conocido como IDE (Integrated Device Electronics o Integrated Drive Electronics), controla los dispositivos de almacenamiento masivo de datos, como los discos duros y ATAPI (Advanced Technology Attachment Packet Interface) o unidades de discos opticos como lectoras o grabadoras de CD y DVD.  Hasta el 2004, aproximadamente, fue el estandar principal por su versatilidad y asequibilidad.  Son planos, anchos y alargados.  Serial ATA o SATA es el mas comun de los estandares de conexion, utiliza un bus serie para la transmision de datos.  Notablemente mas rapido y eficiente que IDE.  Fisicamente es mucho mas peque\u00f1o y comodo que los IDE, ademas de permitir conexion en caliente (hot plug).  Existen tres versiones:  Las interfaces Small Computer System Interface (SCSI) son interfaces preparadas para discos duros de gran capacidad de almacenamiento y velocidad de rotacion.  Se presentan bajo tres especificaciones:  Su tiempo medio de acceso puede llegar a 7 milisegundos y su velocidad de transmision secuencial de informacion puede alcanzar teoricamente los 5 Mbit/s en los discos SCSI Estandares, los 10 Mbit/s en los discos SCSI Rapidos y los 20 Mbit/s en los discos SCSI Anchos-Rapidos (SCSI-2).  Un controlador SCSI puede manejar hasta 7 discos duros SCSI (o 7 perifericos SCSI) con conexion tipo margarita (daisy chain). A diferencia de los discos IDE, pueden trabajar asincronicamente con relacion al microprocesador, lo que posibilita una mayor velocidad de transferencia.  Serial Attached SCSI (SAS) es la interfaz de transferencia de datos en serie, sucesor del SCSI paralelo, aunque sigue utilizando comandos SCSI para interaccionar con los dispositivos SAS. Aumenta la velocidad y permite la conexion y desconexion rapidamente. Una de las principales caracteristicas es que aumenta la velocidad de transferencia al aumentar el numero de dispositivos conectados, es decir, puede gestionar una tasa de transferencia constante para cada dispositivo conectado, ademas de terminar con la limitacion de 16 dispositivos existente en SCSI, es por ello que se vaticina que la tecnologia SAS ira reemplazando a su predecesora SCSI.  Ademas, el conector es el mismo que en la interfaz SATA y permite utilizar estos discos rigidos, para aplicaciones con menos necesidad de velocidad, ahorrando costes. Por lo tanto, las unidades SATA pueden ser utilizadas por controladoras SAS pero no a la inversa, una controladora SATA no reconoce discos SAS.  Un disco duro suele tener:  Debido a la distancia extremadamente peque\u00f1a entre los cabezales y la superficie del disco, cualquier contaminacion de los cabezales de lectura/escritura o las fuentes puede dar lugar a un accidente en los cabezales, un fallo del disco en el que el cabezal raya la superficie de la fuente, a menudo moliendo la fina pelicula magnetica y causando la perdida de datos. Estos accidentes pueden ser causados por un fallo electronico, un repentino corte en el suministro electrico, golpes fisicos, el desgaste, la corrosion o debido a que los cabezales o las fuentes sean de pobre fabricacion. El uso continuo al que se somete el disco duro provoca que habitualmente su vida util se acorte en exceso. La vida util puede variar dependiendo de las condiciones de uso y la calidad de su fabricacion. La vida util comun estimada es de 3 a\u00f1os. Tras este periodo es necesario prestar atencion a sintomas como inestabilidad, archivos da\u00f1ados, sonidos extra\u00f1os, reduccion de rendimento, fallos de encendido entre otros sintomas.\u200b\u200b  El eje del sistema del disco duro depende de la presion del aire dentro del recinto para sostener los cabezales y su correcta altura mientras el disco gira. Un disco duro requiere un cierto rango de presiones de aire para funcionar correctamente. La conexion al entorno exterior y la presion se produce a traves de un peque\u00f1o agujero en el recinto (cerca de 0,5\u00a0mm de diametro) normalmente con un filtro en su interior (filtro de respiracion, ver abajo). Si la presion del aire es demasiado baja, entonces no hay suficiente impulso para el cabezal, que se acerca demasiado al disco, y se da el riesgo de fallos y perdidas de datos. Son necesarios discos fabricados especialmente para operaciones de gran altitud, sobre 3.000\u00a0m. Hay que tener en cuenta que los aviones modernos tienen una cabina presurizada cuya presion interior equivale normalmente a una altitud de 2600\u00a0m como maximo. Por lo tanto los discos duros ordinarios se pueden usar de manera segura en los vuelos. Los discos modernos incluyen sensores de temperatura y se ajustan a las condiciones del entorno. Los agujeros de ventilacion se pueden ver en todos los discos (normalmente tienen una pegatina a su lado que advierte al usuario de no cubrir el agujero). El aire dentro del disco operativo esta en constante movimiento siendo barrido por la friccion del plato. Este aire pasa a traves de un filtro de recirculacion interna para quitar cualquier contaminante que se hubiera quedado de su fabricacion, alguna particula o componente quimico que de alguna forma hubiera entrado en el recinto, y cualquier particula generada en una operacion normal. Una humedad muy alta durante un periodo largo puede corroer los cabezales y los platos.  Para los cabezales resistentes al magnetismo grandes (GMR) en particular, un incidente minoritario debido a la contaminacion (que no se disipa la superficie magnetica del disco) llega a dar lugar a un sobrecalentamiento temporal en el cabezal, debido a la friccion con la superficie del disco, y puede hacer que los datos no se puedan leer durante un periodo corto de tiempo hasta que la temperatura del cabezal se estabilice (tambien conocido como \u00abaspereza termica\u00bb, un problema que en parte puede ser tratado con el filtro electronico apropiado de la se\u00f1al de lectura).  Los componentes electronicos del disco duro controlan el movimiento del accionador y la rotacion del disco, y realiza lecturas y escrituras necesitadas por el controlador de disco. El firmware de los discos modernos es capaz de programar lecturas y escrituras de forma eficiente en la superficie de los discos y de reasignar sectores que hayan fallado.  Los discos duros tambien necesitan cuidados, siga las siguientes instrucciones para evitar la perdida de datos y evitar que el disco duro quede inservible:  Disco duro de un portatil.  Unidad de disco duro de 2\u00bd\" que esta abierto, exponiendo su funcionamiento interno. Disco duro Western Digital Scorpio Blue de 500 GB con conexiones SATA; es comun en computadoras portatiles.  Interior de un disco duro; se aprecia la superficie de un plato y el cabezal de lectura/escritura retraido, a la izquierda.  Interior de la unidad de disco duro; se aprecian dos platos con sus respectivos cabezales.  Vista lateral de un disco duro de 3.5 pulgadas.  Cabezal del disco duro.  Cabezal de disco duro IBM sobre el plato del disco.  Pila de cabezales de disco duro Western Digital (WD2500JS-00MHB0).  Un peine, 3 brazos, 6 cabezales, 3 platos.  Cabeza de disco duro sobre plato rayado. Rayaduras en el plato producidas por golpes mientras la unidad estaba en funcionamiento.  Cables IDE, con 40 pines (izquierda) y 80 pines (derecha).  Cable cinta para conectar la placa base con dos dispositivos IDE (p.e.: disco rigido o lectora de CD).  Comparacion de cables ATA de 40 y 80 pines y SATA.  Zocalo con canal de indexacion, conector por desplazamiento del aislante).  Partes y conexiones de un disco rigido SATA.  Cable delgado SATA utilizado para conectar una delgada unidad optica a la interfaz SATA poder obtener de la placa base, y conector Molex para fuente de alimentacion.  Actualmente la nueva generacion de discos duros utilizan la grabacion perpendicular (PMR), la cual permite mayor densidad de almacenamiento, pero con la novedosa Shingled magnetic recording (SMR) se espera llegar aun mas lejos.  Tambien existen discos llamados \"Ecologicos\" (GP \u2013 Green Power), los cuales hacen un uso mas eficiente de la energia.  Las unidades de estado solido tienen el mismo uso que los discos duros y emplean las mismas interfaces, pero no estan formadas por discos mecanicos, sino por memorias de circuitos integrados para almacenar la informacion. El uso de esta clase de dispositivos anteriormente se limitaba a las supercomputadoras, por su elevado precio, aunque ahora son mucho mas asequibles para el mercado domestico.\u200b  La unidad de estado solido o SSD (acronimo ingles de Solid-State Drive) es el dispositivo de almacenamiento de datos que puede estar construido con memoria no volatil o con memoria volatil. Las no volatiles son unidades de estado solido que como dispositivos electronicos, estan construidos en la actualidad con chips de memoria flash. No son discos, pero juegan el mismo papel a efectos practicos aportando ventajas pero tambien inconvenientes tecnologicos como la corrupcion de las celdas de memoria con cada escritura, lo que acorta la vida util de estos dispositivos y aumenta el riesgo de corrupcion de los datos.\u200b No obstante, la industria esta empezando a vislumbrar en el mercado la posibilidad de que en el futuro ese tipo de unidades de estado solido termine sustituyendo al disco duro para implementar el manejo de memorias no volatiles en el campo de la ingenieria informatica.  Esos soportes son muy rapidos ya que no tienen partes moviles o mecanicas y consumen menos energia. Todos esto les hace muy fiables y fisicamente duraderos. Sin embargo, su costo por GB es aun muy elevado respecto al mismo coste de GB en un formato de tecnologia de HDD, siendo un indice muy importante cuando hablamos de las altas necesidades de almacenamiento que hoy se miden en orden de Terabytes.\u200b  A pesar de ello, la industria apuesta por esta via de solucion tecnologica para el consumo domestico\u200b aunque se ha de considerar que estos sistemas han de ser integrados correctamente\u200b tal y como se esta realizando en el campo de la alta computacion.\u200b Unido a la reduccion progresiva de costes, quizas esa tecnologia recorra el camino de aplicarse como metodo general de archivos de datos informaticos energeticamente respetuosos con el medio natural si optimiza su funcion logica dentro de los sistemas operativos actuales.\u200b  Las unidades de estado solido han sido categorizadas repetidas veces como \"discos\", cuando es totalmente incorrecto denominarlas asi, porque a diferencia de sus predecesores, sus datos no se almacenan sobre superficies cilindricas ni platos. Esta confusion conlleva habitualmente a creer, erroneamente, que SSD significa Solid State Disk, en vez del correcto significado: Solid State Drive, es decir, unidad de estado solido o dispositivo de estado solido.  Las unidades hibridas son aquellas que combinan las ventajas de las unidades mecanicas convencionales con las de las unidades de estado solido. Consisten en acoplar un conjunto de unidades de memoria flash dentro de la unidad mecanica, utilizando el area de estado solido para el almacenamiento dinamico de datos de uso frecuente (determinado por el software de la unidad) y el area mecanica para el almacenamiento masivo de datos. Con esto se logra un rendimiento cercano al de unidades de estado solido a un costo sustancialmente menor. En 2012, Seagate ofrecio el modelo \"Momentus XT\", con esta tecnologia.\u200b  Los recursos tecnologicos y el saber hacer requeridos para el desarrollo y la produccion de discos modernos implica que desde 2007, mas del 98\u00a0% de los discos duros del mundo son fabricados por un conjunto de grandes empresas: Seagate (que ahora es propietaria de Maxtor y Quantum), Western Digital (propietaria de Hitachi, a la que a su vez fue propietaria de la antigua division de fabricacion de discos de IBM) y Fujitsu, que sigue haciendo discos portatiles y discos de servidores, pero dejo de hacer discos para computadoras de escritorio en 2001, y el resto lo vendio a Western Digital. Toshiba es uno de los fabricantes principales de discos rigidos para portatiles de 2,5 pulgadas y 1,8 pulgadas. TrekStor es un fabricante aleman que en 2009 tuvo problemas de insolvencia, pero que actualmente sigue en activo. ExcelStor es un peque\u00f1o fabricante chino de discos duros.  Decenas de exfabricantes de discos duros han terminado con sus empresas fusionadas o han cerrado sus divisiones dedicadas a estos aparatos, a medida que la capacidad de los dispositivos y la demanda de los productos aumento, los beneficios eran menores y el mercado sufrio una significativa consolidacion a finales de los a\u00f1os 1980 y finales de los a\u00f1os 1990. La primera victima en el mercado de las PC fue Computer Memories Inc.; despues de un incidente con 20\u00a0MB defectuosos en discos en 1985, la reputacion de CMI nunca se recupero, y salieron del mercado de los discos rigidos en 1987. Otro notable fracaso fue el de MiniScribe, quien quebro en 1990: despues se descubrio que tenia en marcha un fraude e inflaba el numero de ventas durante varios a\u00f1os. Otras muchas peque\u00f1as compa\u00f1ias (como Kalok, Microscience, LaPine, Areal, Priam y PrairieTek) tampoco sobrevivieron a la expulsion, y habian desaparecido para 1993; Micropolis fue capaz de aguantar hasta 1997, y JTS, un recien llegado a escena, duro solamente unos a\u00f1os y desaparecio hacia 1999, aunque despues intento fabricar discos duros en India. Su vuelta a la fama se debio a la creacion de un nuevo formato de tama\u00f1o de 3\u201d para portatiles. Quantum e Integral tambien investigaron el formato de 3\u201d, pero finalmente se dieron por vencidos. Rodime fue tambien un importante fabricante durante la decada de 1980, pero dejo de hacer discos en la decada de 1990 en medio de la reestructuracion y ahora se concentra en la tecnologia de la concesion de licencias; tienen varias patentes relacionadas con el formato de 3,5\u201c.   ","snippet":"En informatica, unidad de disco duro o unidad de disco rigido (en ingles: hard disk drive, HDD) es un dispositivo de almacenamiento de datos que emplea un sistema de grabacion magnetica para almacenar","enlaces_salientes":["Unidad_de_disco_duro","Unidad_de_disco_duro","Unidad_de_disco_duro","Dispositivo_de_almacenamiento_de_datos","Fujitsu","HGST","Hitachi,_Ltd.","Samsung","Seagate","Toshiba","Western_Digital","Controlador_de_disco","Interfaz_(electr%C3%B3nica)","Integrated_Drive_Electronics","ATA","Serial_ATA","Serial_Attached_SCSI","Small_Computer_System_Interface","Canal_de_fibra","Universal_Serial_Bus","Network-attached_storage","Red_de_computadoras","Red_inal%C3%A1mbrica","Fuente_de_alimentaci%C3%B3n","Molex","Inform%C3%A1tica","Dispositivo_de_almacenamiento_de_datos","Grabaci%C3%B3n_magn%C3%A9tica_digital","Archivo_(inform%C3%A1tica)","Plato_(disco_duro)","Eje_(disco_duro)","Acceso_aleatorio","Bloque_(inform%C3%A1tica)","Acceso_secuencial","Memoria_no_vol%C3%A1til","IBM","1956","Almacenamiento_secundario","Computadora_personal","A%C3%B1os_1960","Servidor","Computadora_personal","Seagate","Toshiba","Western_Digital","Exabyte","Unidad_de_estado_s%C3%B3lido","Primeros_discos_IBM","Pulgada","Computadora_personal","Servidor","Computadora","Controlador_de_disco","Interfaz_(electr%C3%B3nica)","A%C3%B1os_2000","Integrated_Drive_Electronics","Small_Computer_System_Interface","Serial_Attached_SCSI","Servidor","Estaci%C3%B3n_de_trabajo","2000","Serial_ATA","Canal_de_fibra","USB","Sistema_operativo","Formato_de_disco","Partici%C3%B3n_de_disco","Sistema_de_archivos","Unidad_de_estado_s%C3%B3lido","Tarjeta_de_memoria","Prefijos_del_Sistema_Internacional","IEEE","Prefijo_binario","Sistemas_operativos","Microsoft","Gigabyte","Gibibyte","Gibibyte","Mebibyte","Caracter%C3%ADsticas_de_rendimiento_de_disco_duro","Latencia","Revoluci%C3%B3n_por_minuto","IBM","Megabyte","1956","Ramac_I","IBM_350","V%C3%A1lvula_termoi%C3%B3nica","Acceso_aleatorio","Cintas_magn%C3%A9ticas","Acceso_secuencial","Francia","Albert_Fert","Alemania","Peter_Gr%C3%BCnberg","Premio_Nobel","F%C3%ADsica","Magnetorresistencia_gigante","A%C3%B1os_1990","Terabyte","Telefon%C3%ADa_m%C3%B3vil","Primeros_discos_IBM","Registro_de_arranque_principal","Bloque_de_arranque","Tabla_de_particiones","Partici%C3%B3n_de_disco","Sistema_de_archivos","Plato_(disco_duro)","Eje_(disco_duro)","Circuito_impreso","Disco_magn%C3%A9tico","Plato_(disco_duro)","Eje_(disco_duro)","Nan%C3%B3metro","Revoluci%C3%B3n_por_minuto","Kil%C3%B3metro_por_hora","Disco_magn%C3%A9tico","Pista_(unidad_de_disco)","Sector_(inform%C3%A1tica)","Cl%C3%BAster_(sistema_de_archivos)","Plato_(disco_duro)","Pista_(unidad_de_disco)","Sector_(inform%C3%A1tica)","Kibibyte","Zone_Bit_Recording","Cl%C3%BAster_(sistema_de_archivos)","Cilindro-Cabezal-Sector","Cylinder-Head-Sector","Logical_Block_Addressing","IBM_350","IBM","Bastidor_de_19_pulgadas","Digital_Equipment_Corporation","Disquetera","Shugart_Associates","NAS","Disquetera","Shugart_Associates","DVD","Disco_compacto","Reproductor_de_audio_digital","PC_Card","IBM","Microdrive","Samsung","Toshiba","Secure_Digital","MultiMediaCard","Telefon%C3%ADa_m%C3%B3vil_4G","Toshiba","Libro_Guinness_de_los_r%C3%A9cords","Memoria_flash","Samsung","Computadora","Cach%C3%A9_(inform%C3%A1tica)","Memoria_flash","Interfaz","Integrated_Drive_Electronics","Small_Computer_System_Interface","Serial_ATA","Universal_Serial_Bus","IEEE_1394","Serial_Attached_SCSI","Cable_cinta","Placa_base","Placa_base","Integrated_Drive_Electronics","Serial_ATA","Small_Computer_System_Interface","Serial_Attached_SCSI","USB","Disco_duro_port%C3%A1til","Integrated_Drive_Electronics","Conector_IDC","Cable_cinta","Advanced_Technology_Attachment","Unidad_de_disco_%C3%B3ptico","2004","Serial_ATA","Serial_ATA","Conexi%C3%B3n_en_caliente","Megabyte","Descatalogar","Small_Computer_System_Interface","Megabit","Daisy_chain","Serial_Attached_SCSI","Serial_Attached_SCSI","Serial_ATA","Fuente_de_alimentaci%C3%B3n","Molex","Motor","Electroim%C3%A1n","Circuito_integrado","Cach%C3%A9_(inform%C3%A1tica)","Gel_de_s%C3%ADlice","Corrosi%C3%B3n","Fricci%C3%B3n","Humedad","Magnetorresistencia_gigante","Firmware","Copia_de_seguridad","DVD","Blu-ray","Memoria_USB","Malware","Servicio_de_alojamiento_de_archivos","S.M.A.R.T.","Ordenador_portatil","Plato_(disco_duro)","Plato_(disco_duro)","Cable_cinta","Placa_base","Grabaci%C3%B3n_perpendicular","Unidad_de_estado_s%C3%B3lido","Unidad_de_estado_s%C3%B3lido","Memoria_(inform%C3%A1tica)","Circuito_integrado","Supercomputadora","Dispositivo_de_almacenamiento_de_datos","Memoria_no_vol%C3%A1til","Memoria_vol%C3%A1til","Unidad_de_estado_s%C3%B3lido","Memoria_flash","Unidad_de_estado_s%C3%B3lido","Memoria_no_vol%C3%A1til","Ingenier%C3%ADa_inform%C3%A1tica","Unidad_de_estado_s%C3%B3lido","2012","Western_Digital","Serial_ATA","Seagate","Serial_ATA","Seagate","Maxtor_Corporation","Quantum_Corp.","Western_Digital","Hitachi,_Ltd.","IBM","Fujitsu","Disco_duro_port%C3%A1til","Toshiba","Computadora_port%C3%A1til","2009","Computadora_personal","1990","1993","1997","1999","India","Computadora_port%C3%A1til","Quantum_Corp.","A%C3%B1os_1980","A%C3%B1os_1990","1988","Tandon_Corporation","Western_Digital","1989","Seagate","Control_Data_Corporation","Control_Data_Corporation","1990","Maxtor_Corporation","1994","Quantum_Corp.","Digital_Equipment_Corporation","Digital_Linear_Tape","1995","1996","1996","Atari","Atari","Hasbro","1998","1999","2000","2003","IBM","Hitachi,_Ltd.","Hitachi_GST","2003","Western_Digital","D%C3%B3lar_de_los_Estados_Unidos","2005","2006","2007","Western_Digital","2009","Toshiba","Fujitsu","2011","Western_Digital","Hitachi_GST","Samsung","2014","Seagate","SATA","Gbps","Fragmentaci%C3%B3n_de_un_sistema_de_ficheros","Desfragmentaci%C3%B3n","Disco_duro_port%C3%A1til","Eje_(disco_duro)","Formato_de_disco","Jumper_(inform%C3%A1tica)","Partici%C3%B3n_de_disco","Perif%C3%A9rico_(inform%C3%A1tica)","Plato_(disco_duro)","Registro_de_arranque_principal","Sistema_de_archivos","Tabla_de_particiones_GUID","Unidad_de_estado_s%C3%B3lido","Caracter%C3%ADsticas_de_rendimiento_de_disco_duro","Seagate","Toshiba","Verbatim","Western_Digital","Samsung","Maxtor","Elsevier","ISBN","Ziff_Davis","PC_Magazine","Institute_of_Electrical_and_Electronics_Engineers","IBM","McGraw-Hill","ISBN","Intel","Institute_of_Electrical_and_Electronics_Engineers","Ars_Technica","PC_Magazine","ISBN","Toshiba","Seagate","Control_de_autoridades","Biblioteca_Nacional_de_Francia","Gemeinsame_Normdatei","Library_of_Congress_Control_Number","Biblioteca_Nacional_de_la_Rep%C3%BAblica_Checa","Biblioteca_Nacional_de_Israel","Art_%26_Architecture_Thesaurus","Enciclopedia_Brit%C3%A1nica"]}
{"url":"Algoritmo_de_ordenaci%C3%B3n_natural","titulo":"Algoritmo de ordenacion natural","contenido":"Un algoritmo de ordenamiento natural, tambien llamado algoritmo de ordenacion natural, es un metodo de ordenamiento utilizado en informatica\u200b y matematicas para ordenar elementos en una secuencia de acuerdo con su orden natural, en lugar de utilizar un criterio de comparacion especifico, es decir que dandole como entrada una secuencia ya ordenada (1, 2, 3, 4, 5, 6...), tardara para esa secuencia la menor cantidad de tiempo posible, comparandolo con el tiempo de proceso de otras secuencias desordenadas.\u200b  Este algoritmo es especialmente util cuando se trabaja con datos que tienen una estructura jerarquica o semantica que puede definir un orden inherente. El algoritmo de ordenamiento natural se utiliza comunmente para ordenar cadenas de texto que representan nombres de archivos, fechas o cualquier otro tipo de datos que sigan una estructura logica.  El algoritmo de ordenamiento natural se basa en la observacion de que los elementos de la secuencia a ordenar pueden dividirse en grupos que se pueden comparar facilmente entre si. Estos grupos suelen estar delimitados por caracteres especiales, como espacios en blanco o caracteres de puntuacion, en el caso de cadenas de texto.\u200b  A continuacion, se muestra un ejemplo simple de como funciona el algoritmo de ordenamiento natural en una lista de nombres de archivos:  Este es solo un ejemplo simplificado. En aplicaciones del mundo real, el algoritmo de ordenamiento natural puede manejar estructuras de datos mas complejas y caracteres especiales adicionales.  En muchos lenguajes de programacion, se proporcionan bibliotecas o funciones que implementan este algoritmo para facilitar su uso en aplicaciones de ordenamiento de datos.\u200b ","snippet":"Un algoritmo de ordenamiento natural, tambien llamado algoritmo de ordenacion natural, es un metodo de ordenamiento utilizado en informatica\u200b y matematicas para ordenar elementos en una secuencia de a","enlaces_salientes":["Algoritmo_de_ordenaci%C3%B3n_natural","Algoritmo_de_ordenaci%C3%B3n_natural","Algoritmo_de_ordenaci%C3%B3n_natural","Algoritmo","Algoritmo","Inform%C3%A1tica","Matem%C3%A1ticas","Orden_natural","Sucesi%C3%B3n_entera","Jerarqu%C3%ADa","Caracter","Concatenaci%C3%B3n","Lenguaje_de_programaci%C3%B3n","Algoritmo_de_ordenamiento","Algoritmo_de_ordenaci%C3%B3n_no_natural","Control_de_autoridades"]}
{"url":"Algoritmo_de_ordenaci%C3%B3n_no_natural","titulo":"Algoritmo de ordenacion no natural","contenido":"Un algoritmo de ordenacion no natural es aquel que, dandole como entrada una secuencia inversamente ordenada (6, 5, 4, 3, 2, 1), tardara para esa secuencia la menor cantidad de tiempo posible, comparandolo con el tiempo de proceso de otras secuencias desordenadas.  Un algoritmo es un conjunto de operaciones matematicas que dara origen a un resultado que se podra conseguir a traves de operaciones, con variables.   ","snippet":"Un algoritmo de ordenacion no natural es aquel que, dandole como entrada una secuencia inversamente ordenada (6, 5, 4, 3, 2, 1), tardara para esa secuencia la menor cantidad de tiempo posible, compara","enlaces_salientes":["Algoritmo_de_ordenaci%C3%B3n_no_natural","Algoritmo_de_ordenaci%C3%B3n_no_natural","Algoritmo_de_ordenaci%C3%B3n_no_natural","Algoritmo","Control_de_autoridades"]}
{"url":"Preorden_total","titulo":"Preorden total","contenido":"En Teoria del Orden, una relacion binaria R se llama preorden total sobre un conjunto X si con las siguientes propiedades:  En Teoria de Eleccion Social podemos decir el orden de preferencias es un preorden total. Supongamos que tenemos cuatro candidatos a, b, c y d. Puede ocurrir que:  Es facil verificar que \u2272 es un preorden total. ","snippet":"En Teoria del Orden, una relacion binaria R se llama preorden total sobre un conjunto X si con las siguientes propiedades:  En Teoria de Eleccion Social podemos decir el orden de preferencias es un pr","enlaces_salientes":["Preorden_total","Preorden_total","Preorden_total","Teor%C3%ADa_del_orden","Relaci%C3%B3n_binaria","Conjunto","Relaci%C3%B3n_total","Relaci%C3%B3n_transitiva","Control_de_autoridades"]}
{"url":"Ordenamiento_de_burbuja_bidireccional","titulo":"Ordenamiento de burbuja bidireccional","contenido":"El ordenamiento de burbuja bidireccional (cocktail sort en ingles) es un algoritmo de ordenamiento que surge como una mejora del algoritmo ordenamiento de burbuja.  La manera de trabajar de este algoritmo es ir ordenando al mismo tiempo por los dos extremos del vector. De manera que tras la primera iteracion, tanto el menor como el mayor elemento estaran en sus posiciones finales. De esta manera se reduce el numero de comparaciones aunque la complejidad del algoritmo sigue siendo O(n\u00b2).  Hacemos un recorrido ascendente (del primer elemento al ultimo), cogemos el primer elemento y lo comparamos con el siguiente, si el siguiente es menor lo pasamos al puesto anterior, de esta forma al final de la lista nos queda el mayor. Una vez terminada la serie ascendente, hacemos un recorrido descendente (del ultimo elemento al primero) pero esta vez nos quedamos con los menores a los que vamos adelantando posiciones en vez de retrasarlas como hicimos en la serie ascendente. Repetimos las series alternativamente pero reduciendo el ambito en sus extremos pues ya tendremos alli los valores mas bajos y mas altos de la lista, hasta que no queden elementos en la serie; en el pseudocodigo de ejemplo: Hasta (izq > der).  A continuacion se muestra el pseudo-codigo del algoritmo:       ","snippet":"El ordenamiento de burbuja bidireccional (cocktail sort en ingles) es un algoritmo de ordenamiento que surge como una mejora del algoritmo ordenamiento de burbuja.  La manera de trabajar de este algor","enlaces_salientes":["Ordenamiento_de_burbuja_bidireccional","Ordenamiento_de_burbuja_bidireccional","Ordenamiento_de_burbuja_bidireccional","Algoritmo_de_ordenamiento","Ordenamiento_de_burbuja","Complejidad_computacional","Cota_superior_asint%C3%B3tica","Control_de_autoridades"]}
{"url":"Ordenamiento_por_casilleros","titulo":"Ordenamiento por casilleros","contenido":"El ordenamiento por casilleros (bucket sort o bin sort, en ingles) es un algoritmo de ordenamiento que distribuye todos los elementos a ordenar entre un numero finito de casilleros. Cada casillero solo puede contener los elementos que cumplan unas determinadas condiciones. En el ejemplo esas condiciones son intervalos de numeros. Las condiciones deben ser excluyentes entre si, para evitar que un elemento pueda ser clasificado en dos casilleros distintos. Despues cada uno de esos casilleros se ordena individualmente con otro algoritmo de ordenacion (que podria ser distinto segun el casillero), o se aplica recursivamente este algoritmo para obtener casilleros con menos elementos. Se trata de una generalizacion del algoritmo Pigeonhole sort. Cuando los elementos a ordenar estan uniformemente distribuidos la complejidad computacional de este algoritmo es de O(n).  El algoritmo contiene los siguientes pasos:    Aqui elementos es la lista de datos a ordenar y n el numero de casilleros que queremos usar. Para buscar el casillero adecuado para un elemento se puede utilizar la tecnica que mas convenga, segun como queramos ordenar los datos. La funcion ordenar puede ser cualquier funcion de ordenamiento, incluso la propia bucket-sort.  El algoritmo del cartero (ingles: postman's sort) es una variante del bucket sort utilizada cuando los elementos a ordenar disponen de varias claves y/o subclaves. El nombre de este algoritmo viene del ejemplo de las oficinas postales; alli cuando hay que clasificar una carta para que llegue a su destino primero se clasifica segun el pais de destino, luego la ciudad o la region, despues segun la calle o el barrio de destino, etc. Es decir, este algoritmo utiliza varias claves para hacer ordenamientos sucesivos. La complejidad computacional es de O(cn), siendo c el numero de claves que se utilizan para clasificar. ","snippet":"El ordenamiento por casilleros (bucket sort o bin sort, en ingles) es un algoritmo de ordenamiento que distribuye todos los elementos a ordenar entre un numero finito de casilleros. Cada casillero sol","enlaces_salientes":["Ordenamiento_por_casilleros","Ordenamiento_por_casilleros","Ordenamiento_por_casilleros","Algoritmo_de_ordenamiento","Complejidad_computacional","Cota_superior_asint%C3%B3tica","Pseudoc%C3%B3digo","Complejidad_computacional","Cota_superior_asint%C3%B3tica","Perl","CPAN","Thomas_H._Cormen","Charles_E._Leiserson","Ronald_L._Rivest","Clifford_Stein","Introduction_to_Algorithms","MIT_Press","National_Institute_of_Standards_and_Technology","Control_de_autoridades"]}
{"url":"Ordenamiento_por_cuentas","titulo":"Ordenamiento por cuentas","contenido":"El ordenamiento por cuentas (counting sort en ingles) es un algoritmo de ordenamiento en el que se cuenta el numero de elementos de cada clase para luego ordenarlos. Solo puede ser utilizado por tanto para ordenar elementos que sean contables (como los numeros enteros en un determinado intervalo, pero no los numeros reales, por ejemplo).  El primer paso consiste en averiguar cual es el intervalo dentro del que estan los datos a ordenar (valores minimo y maximo). Despues se crea un vector de numeros enteros con tantos elementos como valores haya en el intervalo [minimo, maximo], y a cada elemento se le da el valor 0 (0 apariciones). Tras esto se recorren todos los elementos a ordenar y se cuenta el numero de apariciones de cada elemento (usando el vector que hemos creado). Por ultimo, basta con recorrer este vector para tener todos los elementos ordenados.  Considerese la siguiente lista de numeros:  Para ordenarla con este algoritmo, seguimos estos pasos:  Se trata de un algoritmo estable cuya complejidad computacional es O(n+k), siendo n el numero de elementos a ordenar y k el tama\u00f1o del vector auxiliar (maximo - minimo).  La eficiencia del algoritmo es independiente de lo casi ordenado que estuviera anteriormente. Es decir no existe un mejor y peor caso, todos los casos se tratan iguales.  El algoritmo counting, no se ordena in situ, sino que requiere de una memoria adicional.  El algoritmo posee una serie de limitaciones que obliga a que solo pueda ser utilizado en determinadas circunstancias.  Solo ordena numeros enteros, no vale para ordenar cadenas y es desaconsejable para ordenar numeros decimales. Teoricamente se puede, pero deberia recrear en la matriz auxiliar tantas posiciones como decimales quepan entre 2 numeros consecutivos, si se restringe a 1 o 2 decimales podria ser asequible un numero mayor de decimales puede llegar a suponer una memoria auxiliar impracticable.  Otra limitacion (por ineficiencia) incluso con numeros enteros es cuando el rango entre el mayor y el menor es muy grande. Imaginemos una lista de 1000 elementos, donde el menor es el 0 y el mayor 123456789. Ordenar esta lista supondria crear una matriz auxiliar de 123456790 elementos. Una cantidad muy elevada de memoria para ordenar solo 1000 elementos. Tambien supondria un desperdicio de tiempo pues la matriz auxiliar para trasvasar a la lista ordenada debe recorrerse entera, aunque solo se reasignaran 1000 valores de los 123456790 elementos.  Con lenguajes de programacion que no permitan definir vectores cuyo primer indice sea un valor distinto de 0 o 1 es necesario realizar una traduccion de los valores. Por ejemplo, si el intervalo es (4,10) y el vector auxiliar comprende el rango (1-7), para cada elemento se debera incrementar el contador de la posicion en 3.  Un modo de hacer este algoritmo mas practico, es guardar varios elementos en un indice de la matriz, pero en este caso la matriz ya no es de valores enteros sino que contiene algun tipo de estructura de datos. Asi es posible por ejemplo ordenar numeros con decimales. Por ejemplo si en la matriz auxiliar en el indice 5, metemos todas las apariciones de la lista cuyo valor esta en el rango 5.0 - 5.99. Luego con cada elemento en cada indice se realiza un nuevo ordenamiento. cuando se usan este tipo de tecnicas, el algoritmo ya se considera otro, denominado: bucket sort.  Se han a\u00f1adido los comentarios pertinentes para aclarar las partes que fueren mas dudosas. ","snippet":"El ordenamiento por cuentas (counting sort en ingles) es un algoritmo de ordenamiento en el que se cuenta el numero de elementos de cada clase para luego ordenarlos. Solo puede ser utilizado por tanto","enlaces_salientes":["Ordenamiento_por_cuentas","Ordenamiento_por_cuentas","Ordenamiento_por_cuentas","Idioma_ingl%C3%A9s","Algoritmo_de_ordenamiento","Complejidad_computacional","Cota_superior_asint%C3%B3tica","Bucket_sort","Thomas_H._Cormen","Charles_E._Leiserson","Ronald_L._Rivest","Clifford_Stein","Introduction_to_Algorithms","MIT_Press","Donald_Knuth","Control_de_autoridades"]}
{"url":"Ordenamiento_por_mezcla","titulo":"Ordenamiento por mezcla","contenido":"El algoritmo de ordenamiento por mezcla (merge sort en ingles) es un algoritmo de ordenamiento externo estable basado en la tecnica divide y venceras. Es de complejidad O(n log n).  Fue desarrollado en 1945 por John Von Neumann.\u200b  Conceptualmente, el ordenamiento por mezcla funciona de la siguiente manera:  El ordenamiento por mezcla incorpora dos ideas principales para mejorar su tiempo de ejecucion:  A continuacion se describe el algoritmo en pseudocodigo (se advierte de que no se incluyen casos especiales para vectores vacios, etc.; una implementacion en un lenguaje de programacion real deberia tener en cuenta estos detalles):  Ordenamiento MergeSort Fue desarrollado en 1945 por John Von Neumman. El metodo QuickSort divide la estructura en dos y ordena cada mitad recursivamente. El caso del mergesort es el opuesto, en este metodo se unen dos estructuras ordenadas para formar una sola ordenada correctamente. Este tipo de ordenamiento es util cuando se tiene una estructura ordenada y los nuevos datos a a\u00f1adir se almacenan en una estructura temporal para despues agregarlos a la estructura original de manera que vuelva a quedar ordenada. \u2022 Conceptualmente, el ordenamiento por mezcla funciona de la siguiente manera: \u2022 Si la longitud de la lista es 0 o 1, entonces ya esta ordenada. En otro caso: \u2022 Dividir la lista desordenada en dos sublistas de aproximadamente la mitad del tama\u00f1o. \u2022 Ordenar cada sublista recursivamente aplicando el ordenamiento por mezcla. \u2022 Mezclar las dos sublistas en una sola lista ordenada. El ordenamiento por mezcla incorpora dos ideas principales para mejorar su tiempo de ejecucion: 1. Una lista peque\u00f1a necesitara menos pasos para ordenarse que una lista grande. 2. Se necesitan menos pasos para construir una lista ordenada a partir de dos listas tambien ordenadas, que a partir de dos listas desordenadas. Por ejemplo, solo sera necesario entrelazar cada lista una vez que estan ordenadas.  Aunque heapsort tiene los mismos limites de tiempo que merge sort, requiere solo \u0398(1) espacio auxiliar en lugar del \u0398(n) de merge sort, y es a menudo mas rapido en implementaciones practicas. Quicksort, sin embargo, es considerado por mucho como el mas rapido algoritmo de ordenamiento de proposito general. En el lado bueno, merge sort es un ordenamiento estable, paraleliza mejor, y es mas eficiente manejando medios secuenciales de acceso lento. Merge sort es a menudo la mejor opcion para ordenar una lista enlazada: en esta situacion es relativamente facil implementar merge sort de manera que solo requiera \u0398(1) espacio extra, y el mal rendimiento de las listas enlazadas ante el acceso aleatorio hace que otros algoritmos (como quicksort) den un bajo rendimiento, y para otros (como heapsort) sea algo imposible.  Para Perl 5.8, merge sort es el algoritmo de ordenamiento por defecto (lo era quicksort en versiones anteriores de Perl). En Java los metodos de ordenacion de Arrays usan merge sort o una modificacion de quicksort dependiendo de los tipos de datos y por cuestiones de eficiencia cambian a ordenamiento por insercion cuando se estan ordenando menos de siete elementos en el array. ","snippet":"El algoritmo de ordenamiento por mezcla (merge sort en ingles) es un algoritmo de ordenamiento externo estable basado en la tecnica divide y venceras. Es de complejidad O(n log n).  Fue desarrollado e","enlaces_salientes":["Ordenamiento_por_mezcla","Ordenamiento_por_mezcla","Ordenamiento_por_mezcla","Idioma_ingl%C3%A9s","Ordenamiento_externo","D%C4%ABvide_et_%C4%ABmpera","Complejidad_computacional","Cota_superior_asint%C3%B3tica","1945","John_Von_Neumann","Recursividad","Heapsort","Quicksort","Lista_enlazada","Perl","Plataforma_Java","Ordenamiento_por_inserci%C3%B3n","Perl","CPAN","Control_de_autoridades"]}
{"url":"Ordenamiento_con_%C3%A1rbol_binario","titulo":"Ordenamiento con arbol binario","contenido":"El ordenamiento con arbol binario es un algoritmo de ordenamiento, el cual ordena sus elementos haciendo uso de un arbol binario de busqueda. Se basa en ir construyendo poco a poco el arbol binario introduciendo cada uno de los elementos, los cuales quedaran ya ordenados. Despues, se obtiene la lista de los elementos ordenados recorriendo el arbol en inorden.  Insertar elementos en un arbol binario de busqueda tiene una complejidad O(log n). Entonces, agregar n elementos a un arbol cualquiera da como resultado una complejidad O(n log n). Ademas, recorrer los elementos del arbol en inorden tiene complejidad O(n). ","snippet":"El ordenamiento con arbol binario es un algoritmo de ordenamiento, el cual ordena sus elementos haciendo uso de un arbol binario de busqueda. Se basa en ir construyendo poco a poco el arbol binario in","enlaces_salientes":["Ordenamiento_con_%C3%A1rbol_binario","Ordenamiento_con_%C3%A1rbol_binario","Ordenamiento_con_%C3%A1rbol_binario","Algoritmo_de_ordenamiento","%C3%81rbol_binario_de_b%C3%BAsqueda","Cota_superior_asint%C3%B3tica","Cota_superior_asint%C3%B3tica","Cota_superior_asint%C3%B3tica","Control_de_autoridades"]}
{"url":"Ordenamiento_Radix","titulo":"Ordenamiento Radix","contenido":"En informatica, el ordenamiento Radix (radix sort en ingles) es un algoritmo de ordenamiento que ordena enteros procesando sus digitos de forma individual. Como los enteros pueden representar cadenas de caracteres (por ejemplo, nombres o fechas) y, especialmente, numeros en punto flotante especialmente formateados, radix sort no esta limitado solo a los enteros.    La mayor parte de los ordenadores digitales representan internamente todos sus datos como representaciones electronicas de numeros binarios, por lo que procesar los digitos de las representaciones de enteros por representaciones de grupos de digitos binarios es lo mas conveniente. Existen dos clasificaciones de radix sort: el de digito menos significativo (LSD) y el de digito mas significativo (MSD). Radix sort LSD procesa las representaciones de enteros empezando por el digito menos significativo y moviendose hacia el digito mas significativo. Radix sort MSD trabaja en sentido contrario.  Las representaciones de enteros que son procesadas por los algoritmos de ordenamiento se les llama a menudo \"claves\", que pueden existir por si mismas o asociadas a otros datos. Radix sort LSD usa tipicamente el siguiente orden: claves cortas aparecen antes que las claves largas, y claves de la misma longitud son ordenadas de forma lexica. Esto coincide con el orden normal de las representaciones de enteros, como la secuencia \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10\". Radix sorts MSD usa orden lexico, que es ideal para la ordenacion de cadenas de caracteres, como las palabras o representaciones de enteros de longitud fija. Una secuencia como \"b, c, d, e, f, g, h, i, j, ba\" sera ordenada lexicamente como \"b, ba, c, d, e, f, g, h, i, j\". Si se usa orden lexico para ordenar representaciones de enteros de longitud variable, entonces la ordenacion de las representaciones de los numeros del 1 al 10 sera \"1, 10, 2, 3, 4, 5, 6, 7, 8, 9\", como si las claves mas cortas estuvieran justificadas a la izquierda y rellenadas a la derecha con espacios en blanco, para hacerlas tan largas como la clave mas larga, para el proposito de este ordenamiento, cabe destacar que este metodo no funciona para la estructura de datos debido a que los ciclos for que se implementaran marcaran error debido a las matrices bidimensionales.  Vector original:  25 57 48 37 12 92 86 33  Asignamos los elementos en colas basadas en el digito menos significativo de cada uno de ellos.  Despues de la primera pasada, la ordenacion queda:  12 92 33 25 86 57 37 48  Colas basadas en el digito mas significativo.  Lista ordenada:  12 25 33 37 48 57 86 92 ","snippet":"En informatica, el ordenamiento Radix (radix sort en ingles) es un algoritmo de ordenamiento que ordena enteros procesando sus digitos de forma individual. Como los enteros pueden representar cadenas ","enlaces_salientes":["Ordenamiento_Radix","Ordenamiento_Radix","Ordenamiento_Radix","Inform%C3%A1tica","Algoritmo_de_ordenamiento","Perl","CPAN","Perl","CPAN","Control_de_autoridades"]}
{"url":"Gnome_sort","titulo":"Gnome sort","contenido":"El algoritmo de ordenacion conocido como gNome_sort tiene una historia de invencion cuasi paralela. Durante un tiempo existio la polemica sobre su invencion, finalmente atribuida a Hamid Sarbazi-Azad quien lo desarrollo en el a\u00f1o 2000 y al que llamo Stupid sort (Ordenamiento estupido).  Cuando Dick Grune lo invento (mas apropiadamente, lo reinvento) y documento,\u200b no hallo evidencias de que existiera y en palabras suyas, dijo de el \"the simplest sort algorithm\"\u200b (es el algoritmo mas simple) y quizas tenga razon, pues lo describio en solo cuatro lineas de codigo. Dick Grune se baso en los gnomos de jardin holandes y la manera en que se colocan dentro de los maceteros (ver la referencia anterior) y de ahi tambien el nombre que le dio.  Netamente es un algoritmo de burbuja con una clara particularidad: recorre el array a ordenar como una cremallera, en un vaiven, o bien puede ser definido como un ordenamiento de burbuja bidireccional, que a su vez son llamados tambien cocktail shaker (agitador de cocteles), por la forma en que trabaja...  Cumple estrictamente hablando con la complejidad O(n\u00b2).  El algoritmo empieza comparando la primera pareja de valores. Si estan en orden incrementa el puntero y vuelve a realizar la comparacion: si no estan en orden, se pasa el menor a la izquierda y el mayor a la derecha, y se reduce el puntero. Ahora la comparacion es con el elemento anterior, y si no hay un elemento anterior se pasa al siguiente elemento. Cuando el puntero alcanza el extremo superior del array, ya esta totalmente ordenado.  Cuando compara hacia arriba va sin hacer intercambios, es que el par bajo examen esta ordenado entre si, y cuando compara hacia abajo, va haciendo intercambios. El proceso aparece como un zigzagueo continuo a un lado y otro.  La operacion empieza por el puntero en el punto mas bajo y cuando llega al extremo superior ha terminado de ordenar el array.  Para realizar un ordenamiento inverso basta cambiar la decision de intercambio de los elementos, es decir, dejar los mayores abajo y los menores arriba. ","snippet":"El algoritmo de ordenacion conocido como gNome_sort tiene una historia de invencion cuasi paralela. Durante un tiempo existio la polemica sobre su invencion, finalmente atribuida a Hamid Sarbazi-Azad ","enlaces_salientes":["Gnome_sort","Gnome_sort","Gnome_sort","Algoritmo_de_ordenamiento","Stupid_sort","Gnomo","Ordenamiento_de_burbuja","Ordenamiento_de_burbuja_bidireccional","Complejidad_computacional","Cota_superior_asint%C3%B3tica","Array","Pseudoc%C3%B3digo","Control_de_autoridades"]}
{"url":"Ordenamiento_Shell","titulo":"Ordenamiento Shell","contenido":"El ordenamiento Shell (Shell sort en ingles) es un algoritmo de ordenamiento. El metodo se denomina Shell en honor de su inventor Donald Shell. Su implementacion original, requiere O(n2) comparaciones e intercambios en el peor caso. Un cambio menor presentado en el libro de V. Pratt produce una implementacion con un rendimiento de O(n log2 n) en el peor caso. Esto es mejor que las O(n2) comparaciones requeridas por algoritmos simples pero peor que el optimo O(n log n). Aunque es facil desarrollar un sentido intuitivo de como funciona este algoritmo, es muy dificil analizar su tiempo de ejecucion.  El Shell sort es una generalizacion del ordenamiento por insercion, teniendo en cuenta dos observaciones:  El Algoritmo Shell sort mejora el ordenamiento por insercion comparando elementos separados por un espacio de varias posiciones. Esto permite que un elemento haga \"pasos mas grandes\" hacia su posicion esperada. Los pasos multiples sobre los datos se hacen con tama\u00f1os de espacio cada vez mas peque\u00f1os. El ultimo paso del Shell sort es un simple ordenamiento por insercion, pero para entonces, ya esta garantizado que los datos del vector estan casi ordenados.  Considere un valor peque\u00f1o que esta inicialmente almacenado en el final del vector que se quiere ordenar de forma ascendente. Usando un ordenamiento O(n2) como el ordenamiento de burbuja o el ordenamiento por insercion, tomara aproximadamente n comparaciones e intercambios para mover este valor hacia el otro extremo del vector. El Shell sort primero mueve los valores usando tama\u00f1os de espacio gigantes, de manera que un valor peque\u00f1o se movera bastantes posiciones hacia su posicion final, con solo unas pocas comparaciones e intercambios.  Uno puede visualizar el algoritmo Shell sort de la siguiente manera: coloque la lista en una tabla y ordene las columnas (usando un ordenamiento por insercion). Repita este proceso, cada vez con un numero menor de columnas mas largas. Al final, la tabla tiene solo una columna. Mientras que transformar la lista en una tabla hace mas facil visualizarlo, el algoritmo propiamente hace su ordenamiento en contexto (incrementando el indice por el tama\u00f1o de paso, esto es usando i += tama\u00f1o_de_paso en vez de i++).  Por ejemplo, considere una lista de numeros como [ 13 14 94 33 82 25 59 94 65 23 45 27 73 25 39 10 ]. Si comenzamos con un tama\u00f1o de paso de 5, podriamos visualizar esto dividiendo la lista de numeros en una tabla con 5 columnas. Esto quedaria asi:  Entonces ordenamos cada columna, lo que nos da  Cuando lo leemos de nuevo como una unica lista de numeros, obtenemos [ 10 14 73 25 23 13 27 94 33 39 25 59 94 65 82 45 ]. Aqui, el 10 que estaba en el extremo final, se ha movido hasta el extremo inicial. Esta lista es entonces de nuevo ordenada usando un ordenamiento con un espacio de 3 posiciones, y despues un ordenamiento con un espacio de 1 posicion (ordenamiento por insercion simple).Seguro se te dio una inquietud respectop a las posiciones. \u00bfPor que crees que comenzamos con 5, 3 y luego 1 posicion?, la duda la resolveras tu mismo practicando los pasos anteriormente mencionados \"vamos\", no solamente  se aprende leyendo.  El Shell sort lleva este nombre en honor a su inventor, Donald Shell, que lo publico en 1959. Algunos libros de texto y referencias antiguas le llaman ordenacion \"Shell-Metzner\" por Marlene Metzner Norton, pero segun Metzner, \"No tengo nada que ver con el algoritmo de ordenamiento, y mi nombre nunca debe adjuntarse a este.\"  La secuencia de espacios es una parte integral del algoritmo Shell sort. Cualquier secuencia incremental funcionaria siempre que el ultimo elemento sea 1. El algoritmo comienza realizando un ordenamiento por insercion con espacio, siendo el espacio el primer numero en la secuencia de espacios. Continua para realizar un ordenamiento por insercion con espacio para cada numero en la secuencia, hasta que termina con un espacio de 1. Cuando el espacio es 1, el ordenamiento por insercion con espacio es simplemente un ordenamiento por insercion ordinario, garantizando que la lista final estara ordenada.  La secuencia de espacios que fue originalmente sugerida por Donald Shell debia comenzar con N / 2 y dividir por la mitad el numero hasta alcanzar 1. Aunque esta secuencia proporciona mejoras de rendimiento significativas sobre los algoritmos cuadraticos como el ordenamiento por insercion, se puede cambiar ligeramente para disminuir mas el tiempo necesario medio y el del peor caso. El libro de texto de Weiss demuestra que esta secuencia permite un ordenamiento O ( n 2 ) )} del peor caso, si los datos estan inicialmente en el vector como (peque\u00f1o_1, grande_1, peque\u00f1o_2, grande_2, ...) - es decir, la mitad alta de los numeros estan situados, de forma ordenada, en las posiciones con indice par y la mitad baja de los numeros estan situados de la misma manera en las posiciones con indice  Quizas la propiedad mas crucial del Shell sort es que los elementos permanecen k-ordenados incluso mientras el espacio disminuye. Se dice que un vector dividido en k subvectores esta k-ordenado si cada uno de esos subvectores esta ordenado en caso de considerarlo aislado. Por ejemplo, si una lista fue 5-ordenada y despues 3-ordenada, la lista esta ahora no solo 3-ordenada, sino tanto 5-ordenada como 3-ordenada. Si esto no fuera cierto, el algoritmo desharia el trabajo que habia hecho en iteraciones previas, y no conseguiria un tiempo de ejecucion tan bajo.  Dependiendo de la eleccion de la secuencia de espacios, Shell sort tiene un tiempo de ejecucion en el peor caso de O ( n 2 ) )} (usando los incrementos de Shell que comienzan con n/2, n el tama\u00f1o del vector y se dividen por 2 cada vez), O ( n 3 / 2 ) )} (usando los incrementos de Hibbard de 2 k \u2212 1 -1} ), O ( n 4 / 3 ) )} (usando los incrementos de Sedgewick O ( n log 2 \u2061 n ) n)} , y posiblemente mejores tiempos de ejecucion no comprobados. La existencia de una implementacion O ( n log \u2061 n ) en el peor caso del Shell sort permanece como una pregunta por resolver.  NOTA: Los incrementos de Sedgewick se calculan intercalando los valores de las siguientes funciones:   f ( i ) = 9 ( 4 i ) \u2212 9 ( 2 i ) + 1 ; f ( 0 ) = 1 , f ( 1 ) = 19 , f ( 2 ) = 109 , f ( 3 ) = 505 , . . . ) )-9(2^{i})+1;f(0)=1,f(1)=19,f(2)=109,f(3)=505,...)}   g ( i ) = ( 2 i + 2 ) \u2217 ( 2 i + 2 \u2212 3 ) + 1 ; g ( 0 ) = 5 , g ( 1 ) = 41 , g ( 2 ) = 209 , g ( 3 ) = 929 , . . . ) )*(2^{i+2}-3)+1;g(0)=5,g(1)=41,g(2)=209,g(3)=929,...)} ","snippet":"El ordenamiento Shell (Shell sort en ingles) es un algoritmo de ordenamiento. El metodo se denomina Shell en honor de su inventor Donald Shell. Su implementacion original, requiere O(n2) comparaciones","enlaces_salientes":["Ordenamiento_Shell","Ordenamiento_Shell","Ordenamiento_Shell","Algoritmo_de_ordenamiento","Notaci%C3%B3n_de_Landau","Notaci%C3%B3n_de_Landau","Notaci%C3%B3n_de_Landau","Notaci%C3%B3n_de_Landau","Ordenamiento_por_inserci%C3%B3n","Vector_(programaci%C3%B3n)","Ordenamiento_de_burbuja","Ordenamiento_por_inserci%C3%B3n","Ordenamiento_por_inserci%C3%B3n","Ordenamiento_por_inserci%C3%B3n","Ordenamiento_por_inserci%C3%B3n","ISBN","ISBN","Control_de_autoridades"]}
{"url":"Comb_sort","titulo":"Comb sort","contenido":"En ciencias de la computacion, el comb sort (comb=peine) es un algoritmo de ordenamiento relativamente simple dise\u00f1ado por Wlodzimierz Dobosiewicz en 1980. Posteriormente fue redescubierto y popularizado por Stephen Lacey y Richard Box en un articulo publicado por la revista Byte en abril de 1991. El algoritmo comb sort mejora el algoritmo de ordenamiento de burbuja y rivaliza en velocidad con algoritmos mas complejos como el Quicksort. La idea basica es eliminar tortugas, o peque\u00f1os valores cerca del final de la lista, ya que en el algoritmo de ordenamiento de burbuja esto reduce la velocidad de ordenamiento tremendamente. (Los conejos, grandes valores alrededor del inicio de la lista, no plantean un problema en el algoritmo de ordenamiento de burbuja.)  En el ordenamiento de burbuja, cuando dos elementos cualquiera se comparan, siempre tienen un espacio (distancia entre ellos) de 1. La idea basica del algoritmo comb sort es que el espacio pueda ser mucho mayor de uno. El ordenamiento Shell tambien se basa en esta idea, pero es una modificacion del algoritmo de ordenamiento por insercion mas que del algoritmo de ordenamiento de burbuja.  El espacio se inicia como la longitud de la lista a ordenar dividida por el factor de encogimiento (generalmente 1,3; vease debajo), y la lista se ordena con este valor (redondeado a la baja a un entero si es necesario) para el espacio. Despues el espacio se divide por el factor de encogimiento de nuevo, la lista se ordena con este nuevo espacio, y el proceso se repite hasta que el espacio es 1. En este momento, el algoritmo comb sort continua usando un espacio de 1 hasta que la lista esta completamente ordenada. La etapa final del ordenamiento es asi equivalente al algoritmo de ordenamiento de burbuja, pero en este momento la mayoria de las tortugas ya han sido tratadas, de manera que un algoritmo de ordenamiento de burbuja sera eficiente.  El factor de encogimiento tiene un gran efecto en la eficiencia del algoritmo comb sort. En el articulo original, los autores sugirieron 1,3 despues de probar algunas listas aleatorias y encontrarlo generalmente el mas efectivo. Un valor muy peque\u00f1o reduce la velocidad del algoritmo porque se deben hacer mas comparaciones, mientras que un valor demasiado grande puede que no elimine suficientes tortugas para que sea practico.  El texto describe una mejora del algoritmo comb sort usando el valor base 1 / ( 1 \u2212 1 e \u03c6 ) \u2248 1.247330950103979 {e^}})\\approx 1.247330950103979} como factor de encogimiento. Tambien contiene una implementacion en pseudocodigo con unas tablas de espacios  predefinidos.  Con un factor de encogimiento alrededor de 1,3, solo hay tres posibles maneras de que la lista de espacios acabe: (9, 6, 4, 3, 2, 1), (10, 7, 5, 3, 2, 1), o (11, 8, 6, 4, 3, 2, 1). Solo el ultimo de estos dos finales mata todas las tortugas antes de que el espacio se convierta en 1. Por lo tanto, se pueden hacer mejoras significativas en la velocidad si el espacio se establece en 11 siempre que sea 9 o 10. A esta variacion se le llama Combsort11.  Si se usa cualquiera de la secuencias que comienza por 9 o 10, el paso final con un espacio de 1 es menos probable que haya ordenado los datos completamente, necesitando otro paso con un espacio de 1. Los datos estan ordenados cuando no se hacen intercambios durante un paso con espacio = 1.     ","snippet":"En ciencias de la computacion, el comb sort (comb=peine) es un algoritmo de ordenamiento relativamente simple dise\u00f1ado por Wlodzimierz Dobosiewicz en 1980. Posteriormente fue redescubierto y populariz","enlaces_salientes":["Comb_sort","Comb_sort","Comb_sort","Ciencias_de_la_computaci%C3%B3n","Algoritmo_de_ordenamiento","Byte_(revista)","1991","Ordenamiento_de_burbuja","Quicksort","Ordenamiento_Shell","Ordenamiento_por_inserci%C3%B3n","Ordenamiento_de_burbuja","Ordenamiento_de_burbuja","Cocktail_sort","Control_de_autoridades"]}
{"url":"Ordenamiento_por_selecci%C3%B3n","titulo":"Ordenamiento por seleccion","contenido":"El ordenamiento por seleccion (Selection Sort en ingles) es un algoritmo de ordenamiento que requiere O ( n 2 ) )} operaciones para ordenar una lista de n elementos.  Su funcionamiento es el siguiente:  Y en general:  De esta manera se puede escribir el siguiente pseudocodigo para ordenar una lista de n elementos indexados desde el 0:   Ejemplo del algoritmo en C++  Este algoritmo mejora ligeramente el algoritmo de la burbuja. En el caso de tener que ordenar un vector de enteros, esta mejora no es muy sustancial, pero cuando hay que ordenar un vector de estructuras mas complejas, la operacion intercambiar() seria mas costosa en este caso. Este algoritmo realiza muchas menos operaciones intercambiar() que el de la burbuja, por lo que lo mejora en algo. Si la linea comentada con (!) se sustituyera por intercambiar(lista[i], lista[j]) tendriamos una version del algoritmo de la burbuja (naturalmente eliminando el orden intercambiar del final).  Otra desventaja de este algoritmo respecto a otros como el de burbuja o de insercion directa es que no mejora su rendimiento cuando los datos ya estan ordenados o parcialmente ordenados. Asi como, por ejemplo, en el caso de la ordenacion de burbuja se requeriria una unica pasada para detectar que el vector ya esta ordenado y finalizar, en la ordenacion por seleccion se realizarian el mismo numero de pasadas independientemente de si los datos estan ordenados o no.  Al algoritmo de ordenamiento por seleccion, para ordenar un vector de n terminos, tiene que realizar siempre el mismo numero de comparaciones:  Esto es, el numero de comparaciones c(n) no depende del orden de los terminos, sino del numero de terminos.  Por lo tanto la cota ajustada asintotica del numero de comparaciones pertenece al orden de n cuadrado.  El numero de intercambios i(n), tambien es fijo, tengase en cuenta que la instruccion:  siempre se ejecuta, aun cuando i= minimo, lo que da lugar:  sea cual sea el vector, y el orden de sus terminos, lo que implica en todos los casos un coste lineal:  la cota ajustada asintotica del numero de intercambios es lineal, del orden de n.  Asimismo, la formula que representa el rendimiento del algoritmo, viene dada por la funcion: ","snippet":"El ordenamiento por seleccion (Selection Sort en ingles) es un algoritmo de ordenamiento que requiere O ( n 2 ) )} operaciones para ordenar una lista de n elementos.  Su funcionamiento es el siguiente","enlaces_salientes":["Ordenamiento_por_selecci%C3%B3n","Ordenamiento_por_selecci%C3%B3n","Ordenamiento_por_selecci%C3%B3n","Idioma_ingl%C3%A9s","Algoritmo_de_ordenamiento","Cota_superior_asint%C3%B3tica","Ordenamiento_de_burbuja","Cota_ajustada_asint%C3%B3tica","Algoritmo_de_ordenamiento","Control_de_autoridades"]}
{"url":"Ordenamiento_por_mont%C3%ADculos","titulo":"Heapsort","contenido":"El ordenamiento por monticulos (heapsort en ingles) es un algoritmo de ordenamiento no recursivo, no estable, con complejidad computacional \u0398 ( n log \u2061 n ) .  Este algoritmo consiste en almacenar todos los elementos del vector a ordenar en un monticulo (heap), y luego extraer el nodo que queda como nodo raiz del monticulo (cima) en sucesivas iteraciones obteniendo el conjunto ordenado. Basa su funcionamiento en una propiedad de los monticulos, por la cual, la cima contiene siempre el menor elemento (o el mayor, segun se haya definido el monticulo) de todos los almacenados en el. El algoritmo, despues de cada extraccion, recoloca en el nodo raiz o cima, la ultima hoja por la derecha del ultimo nivel. Lo cual destruye la propiedad heap del arbol. Pero, a continuacion realiza un proceso de \"descenso\" del numero insertado de forma que se elige a cada movimiento el mayor de sus dos hijos, con el que se intercambia. Este intercambio, realizado sucesivamente \"hunde\" el nodo en el arbol restaurando la propiedad monticulo del arbol y dejando paso a la siguiente extraccion del nodo raiz.  El algoritmo, en su implementacion habitual, tiene dos fases. Primero una fase de construccion de un monticulo a partir del conjunto de elementos de entrada, y despues, una fase de extraccion sucesiva de la cima del monticulo. La implementacion del almacen de datos en el heap, pese a ser conceptualmente un arbol, puede realizarse en un vector de forma facil. Cada nodo tiene dos hijos y por tanto, un nodo situado en la posicion i del vector, tendra a sus hijos en las posiciones 2 x i, y 2 x i +1 suponiendo que el primer elemento del vector tiene un indice = 1. Es decir, la cima ocupa la posicion inicial del vector y sus dos hijos la posicion segunda y tercera, y asi, sucesivamente. Por tanto, en la fase de ordenacion, el intercambio ocurre entre el primer elemento del vector (la raiz o cima del arbol, que es el mayor elemento del mismo) y el ultimo elemento del vector que es la hoja mas a la derecha en el ultimo nivel. El arbol pierde una hoja y por tanto reduce su tama\u00f1o en un elemento. El vector definitivo y ordenado, empieza a construirse por el final y termina por el principio.  He aqui una descripcion en pseudocodigo del algoritmo. Se pueden encontrar descripciones de las operaciones insertar_en_monticulo y extraer_cima_del_monticulo en el articulo sobre monticulos. ","snippet":"El ordenamiento por monticulos (heapsort en ingles) es un algoritmo de ordenamiento no recursivo, no estable, con complejidad computacional \u0398 ( n log \u2061 n ) .  Este algoritmo consiste en almacenar todo","enlaces_salientes":["Heapsort","Heapsort","Heapsort","Idioma_ingl%C3%A9s","Algoritmo","Algoritmo_de_ordenamiento","Recursi%C3%B3n","Complejidad_computacional","Cota_ajustada_asint%C3%B3tica","Mont%C3%ADculo_(inform%C3%A1tica)","Mont%C3%ADculo_(inform%C3%A1tica)","Control_de_autoridades"]}
{"url":"Ordenamiento_r%C3%A1pido","titulo":"Quicksort","contenido":"El ordenamiento rapido (quicksort en ingles) es un algoritmo de ordenacion creado por el cientifico britanico en computacion C. A. R. Hoare.  El algoritmo trabaja de la siguiente forma:  Como se puede suponer, la eficiencia del algoritmo depende de la posicion en la que termine el pivote elegido.  No es extra\u00f1o, pues, que la mayoria de optimizaciones que se aplican al algoritmo se centren en la eleccion del pivote.  Supongamos que el numero de elementos a ordenar es una potencia de dos, es decir, n = 2 k } para algun natural k . Inmediatamente k = l o g 2 ( n ) (n)} , donde k es el numero de divisiones que realizara el algoritmo.  En la primera fase del algoritmo habra n comparaciones. En la segunda fase el algoritmo instanciara dos sublistas de tama\u00f1o aproximadamente n/2. El numero total de comparaciones de estas dos sublistas es: 2(n/2) = n. En la tercera fase el algoritmo procesara 4 sublistas mas, por tanto el numero total de comparaciones en esta fase es 4(n/4) = n.  En conclusion, el numero total de comparaciones que hace el algoritmo es:   n + n + n + . . . . . + n = k n , donde k = l o g 2 ( n ) (n)} , por tanto el Orden de Complejidad del algoritmo en el mejor de los casos es O ( n . l o g 2 n ) n)} .  El algoritmo basico del metodo Quicksort consiste en tomar cualquier elemento de la lista al cual denominaremos como pivote, dependiendo de la particion en que se elija, el algoritmo sera mas o menos eficiente.  Una idea preliminar para ubicar el pivote, en su posicion final seria contar la cantidad de elementos menores que el, y colocarlo un lugar mas arriba, moviendo luego todos esos elementos menores que el a su izquierda, para que pueda aplicarse la recursividad.  Existe, no obstante, un procedimiento mucho mas efectivo. Se utilizan dos indices: i, al que llamaremos indice izquierdo, y j, al que llamaremos indice derecho. El algoritmo es el siguiente:  Como se menciono anteriormente, el algoritmo quicksort ofrece un orden de ejecucion O(n\u00b2) para ciertas permutaciones \"criticas\" de los elementos de la lista, que siempre surgen cuando se elige el pivote \u00aba ciegas\u00bb. La permutacion concreta depende del pivote elegido, pero suele corresponder a secuencias ordenadas. Se tiene que la probabilidad de encontrarse con una de estas secuencias es inversamente proporcional a su tama\u00f1o.  Nota: Los tres parametros de la llamada inicial a Quicksort seran array, 0, numero_elementos -1, es decir, si es un array de 6 elementos array, 0, 5  En el siguiente ejemplo se marcan el pivote y los indices i y j con las letras p, i y j respectivamente. ","snippet":"El ordenamiento rapido (quicksort en ingles) es un algoritmo de ordenacion creado por el cientifico britanico en computacion C. A. R. Hoare.  El algoritmo trabaja de la siguiente forma:  Como se puede","enlaces_salientes":["Quicksort","Quicksort","Quicksort","Idioma_ingl%C3%A9s","Algoritmo_de_ordenacion","C._A._R._Hoare","Eficiencia_Algor%C3%ADtmica","Teor%C3%ADa_de_la_complejidad_computacional","Cota_superior_asint%C3%B3tica","Array","Insertion_sort","Heapsort","Algoritmo_de_ordenamiento","Control_de_autoridades"]}
{"url":"Bogosort","titulo":"Stupid sort","contenido":"Stupid Sort, en ingles tambien conocido como BogoSort\u200b\u200b (o como slowsort\u200b\u200b), es un algoritmo de ordenamiento particularmente inefectivo basado en el paradigma de ensayo y error. No es util para ordenar, pero puede ser utilizado con propositos educativos para contrastarlo con algoritmos mas efectivos. Tambien ha sido usado como ejemplo en programacion logica.\u200b\u200b\u200b  Si stupid sort fuera utilizado para ordenar un mazo de cartas, consistiria en verificar primero si el mazo esta en orden, y si no lo esta, entonces deberiamos mezclar las cartas de forma aleatoria, verificar de nuevo si estan ordenadas y asi sucesivamente hasta que por una mezcla al azar encontremos el mazo ordenado. El nombre bogosort proviene de la palabra bogus.\u200b  Este algoritmo de ordenamiento es probabilistico por naturaleza. Si se aplica a un arreglo donde todos los elementos son distintos, el numero esperado de comparaciones es asintoticamente equivalente a ( e \u2212 1 ) n ! , y el numero esperado de intercambios (swaps) en el caso promedio es igual a ( n \u2212 1 ) n ! .  En el peor caso el numero de comparaciones e intercambios no esta acotada. Es decir, no hay certeza de que el algoritmo termine. El mejor caso es cuando la lista original esta ordenada, entonces se realizan n \u2212 1 comparaciones y ningun intercambio. ","snippet":"Stupid Sort, en ingles tambien conocido como BogoSort\u200b\u200b (o como slowsort\u200b\u200b), es un algoritmo de ordenamiento particularmente inefectivo basado en el paradigma de ensayo y error. No es util para ordena","enlaces_salientes":["Stupid_sort","Stupid_sort","Stupid_sort","Idioma_ingl%C3%A9s","Ensayo_y_error","Programaci%C3%B3n_l%C3%B3gica","Algoritmo_de_ordenamiento","Digital_object_identifier","Digital_object_identifier","Digital_object_identifier","Algoritmo_de_ordenamiento","Control_de_autoridades"]}
{"url":"Ordenamiento_de_panqueques","titulo":"Ordenamiento de panqueques","contenido":"El ordenamiento de panqueques (crepes, panecillos, arepas...) es el termino coloquial para el problema matematico de ordenar una pila desordenada de panqueques por orden de tama\u00f1o utilizando una espatula que puede ser insertada en cualquier punto en la pila para voltear todos los panqueques encima de ella.  Un numero de panqueque es el numero maximo de volteos requeridos sin repetir para ordenar un numero dado de panqueques. Este problema fue presentado de esta forma por el geometra americano Jacob E. Goodman.\u200b Es una variacion del problema de ordenamiento en que la unica operacion permitida la de invertir los elementos de algun prefijo de la secuencia. A diferencia de un algoritmo de ordenacion tradicional, que intenta ordenar con el menor numero de comparaciones posible, su objetivo es ordenar la secuencia en el menor numero posible de inversiones.Una variante del problema se ocupa de panqueque quemados donde cada uno de estos tiene un lado quemado y todos los panqueques deben ademas, acaba con este, en la parte inferior.  El numero maximo de volteos requeridos para ordenar cualquier pila de n panqueques se ha demostrado que esta entre 15/14n y 18/11n, pero el valor exacto no es conocido.\u200b  El algoritmo de ordenamiento panqueques mas sencillo requiere a lo sumo de 2n\u2009\u2212\u20093 volteos. En este algoritmo - una variacion del ordenamiento por seleccion- ponemos el panqueque mas grande todavia sin ordenar en el tope de la pila con un volteo, y entonces volteamos una vez mas poniendolo en su posicion final. Se repite el procedimiento para los restantes panqueques.  En 1979, Bill Gates y Christos Papadimitriou\u200b dieron una cota superior de 5/3n. Treinta a\u00f1os mas tarde, esta cota fue mejorada a 18/11n por un equipo de investigadores en la Universidad de Texas en Dallas (Chitturi et al., 2009).  Se ha demostrado que el problema de determinar el numero minimo de movimientos para una pila dada es NP-hard en un articulo publicado en 2015, respondiendo de este modo una cuestion abierta durante mas de tres decadas.\u200b  En una variacion mas dificil llamada el problema del panqueque quemado, el fondo de cada panqueque en la pila esta quemado, y el ordenamiento tiene que ser completado con el lado quemado de cada panqueque en la parte inferior. En 2008, un grupo de estudiantes universitarios construyo una computadora bacteriana que puede solucionar un ejemplo sencillo del problema de los panqueques quemado por la programacion de E. coli para voltear los segmentos de ADN los cuales son analogos a panqueques quemados. A pesar de que la capacidad de procesamiento expresado por el volteo de ADN es bajo, el alto numero de bacterias en un cultivo proporciona una gran plataforma de computacion paralela. Las bacterias reportan cuando han resuelto el problema al volverse resistentes a los antibioticos.\u200b  La discusion anterior presupone que cada pancake es unico, es decir, la secuencia en la que se realizan las inversiones de prefijo es una permutacion. Sin embargo, \"las cadenas\" son secuencias en las que se puede repetir un simbolo.hitturi y Sudborough (2010) y Hurkens et al. (2007) mostraron de forma independiente que la complejidad de la transformacion de una cadena en otra con inversiones de prefijo es NP-completo. Tambien dieron cotas para el mismo. Hurkens et al. dio un algoritmo exacto para ordenar cadenas binarias y ternarias. Chitturi (2011) demostro que la complejidad de la transformacion de una cadena en otra con inversiones de prefijo, es decir,  el problema de los panqueques quemados en las cadenas, es NP-completo.  A pesar de ser visto mas a menudo como un problema educativo, el ordenamiento de panqueques tambien aparece en redes de procesamiento paralelo, en el que puede proporcionar un algoritmo de encaminamiento eficaz entre procesadores.\u200b\u200b  El problema es notable por ser el tema del unico articulo matematico conocido escrito por el fundador de Microsoft, Bill Gates (cuando William Gates), titulado \"Cotas para el ordenamiento por inversion de prefijos\", publicado en 1979 donde se describe un algoritmo eficaz para el problema de ordenamiento de panqueques.\u200b Ademas, el articulo mas notable publicado por el cocreador de Futurama, David X. Cohen (como David S. Cohen) se referia al problema de los panqueques quemados.\u200b Sus colaboradores eran Christos Papadimitriou (entonces en Harvard, ahora en Berkeley) y Manuel Blum (entonces en Berkeley, ahora en Carnegie Mellon Universidad), respectivamente. ","snippet":"El ordenamiento de panqueques (crepes, panecillos, arepas...) es el termino coloquial para el problema matematico de ordenar una pila desordenada de panqueques por orden de tama\u00f1o utilizando una espat","enlaces_salientes":["Ordenamiento_de_panqueques","Ordenamiento_de_panqueques","Ordenamiento_de_panqueques","Esp%C3%A1tula","Estados_Unidos","Ordenamiento_por_selecci%C3%B3n","Bill_Gates","Christos_Papadimitriou","NP-hard","Computaci%C3%B3n_basada_en_ADN","Escherichia_coli","Permutaci%C3%B3n","NP-completo","NP-completo","Microsoft","Bill_Gates","Futurama","David_X._Cohen","Christos_Papadimitriou","Universidad_de_Harvard","Manuel_Blum","Universidad_de_California_en_Berkeley","Universidad_Carnegie_Mellon","Bill_Gates","Christos_Papadimitriou","David_X._Cohen","Manuel_Blum","Control_de_autoridades"]}
{"url":"M%C3%A1quina_de_Von_Neumann","titulo":"Maquina de von Neumann","contenido":"La maquina de von Neumann es un concepto teorico formulado por el matematico hungaro - estadounidense John von Neumann.  Supongase un determinado problema simple, repetitivo y prolongado en el tiempo: por ejemplo, la extraccion de mineral de hierro en la superficie de Marte.  Una solucion posible es enviar maquinas robotizadas que, de forma autonoma, extraigan el mineral y lo conviertan en lingotes de hierro, bien para su envio a la Tierra, bien para su uso por colonias locales. Si una maquina extrae n toneladas en un determinado periodo de tiempo (ciclo), en m ciclos se tendra m x n toneladas.  Supongase ahora un segundo tipo de maquina: una maquina que, ademas de producir lingotes de hierro, los trabaja para autorreplicarse, construyendo una maquina igual a ella misma. El rendimiento sera menor que el de la primera maquina, pues parte del hierro lo utiliza en producir la segunda maquina, pero al cabo de un tiempo (generacion), no se tendra una sino dos maquinas trabajando. Tras dos generaciones se tendra cuatro maquinas, tras tres generaciones ocho maquinas, etcetera. Se trata de una poblacion que crece de forma exponencial.  Asi, aunque el rendimiento sea menor, la produccion tendera a crecer hasta superar la de la primera maquina. Como ejemplo, tras diez generaciones habra mas de mil maquinas de von Neumann (exactamente 1.024 = 210), de manera que, aunque su rendimiento fuera del 5% de la primera maquina, la produccion total seria mas de 50 veces mayor.  Este concepto no es solamente teorico: los virus informaticos son maquinas de von Neumann. Ante el ingente trabajo de infectar el mayor numero posible de ordenadores, los virus se autorreplican pasando de ordenador a ordenador, aumentando su poblacion de forma exponencial e infectando asi millones de ordenadores en pocas horas.  Sin embargo, no solo hay aplicaciones negativas de este concepto. Los automatas celulares tienen alto rango de aplicaciones en la ciencia, modelando y simulando gran cantidad de sistemas fisicos, como fluidos, flujo de trafico, etc.   ","snippet":"La maquina de von Neumann es un concepto teorico formulado por el matematico hungaro - estadounidense John von Neumann.  Supongase un determinado problema simple, repetitivo y prolongado en el tiempo:","enlaces_salientes":["M%C3%A1quina_de_von_Neumann","M%C3%A1quina_de_von_Neumann","M%C3%A1quina_de_von_Neumann","M%C3%A1quina_autorreplicante","Matem%C3%A1ticas","Hungr%C3%ADa","Estados_Unidos","John_von_Neumann","Mineral","Hierro","Marte_(planeta)","Tierra","Funci%C3%B3n_exponencial","Virus_inform%C3%A1ticos","Ordenador","Aut%C3%B3matas_celulares","Arquitectura_de_von_Neumann","M%C3%A1quina_autorreplicante","Control_de_autoridades"]}
{"url":"Algoritmo_Fisher-Yates","titulo":"Algoritmo de Fisher-Yates","contenido":"El algoritmo de Fisher-Yates (o alguna variante del mismo) es el que se usa tipicamente para barajar en los juegos de azar.  Tambien es el algoritmo que permite recorrer toda una seleccion (por ejemplo una lista musical), de forma aleatoria una sola vez (una reproduccion por cada elemento en la lista). Ver mas detalles en la seccion mas abajo.  El algoritmo Fisher-Yates es un algoritmo de permutaciones que tecnicamente encaja en la categoria de los algoritmos de ordenamiento, aunque en este caso, el fin perseguido es el opuesto, desordenar los items que contiene. Y por tanto deberia constar en las bibliotecas de ordenamiento como Random Sort al menos.    El algoritmo Fisher-Yates aparece documentado por primera vez por Ronald A. Fisher y Frank Yates en el libro Statistical tables for biological, agricultural and medical research.\u200b si bien su descripcion era realizada con lapiz y papel.  Posteriormente otros autores (probablemente sin conocimiento previo de dicha publicacion) elaboraron el mismo algoritmo. Lincoln E. Moses y Robert V. Oakford en Tables of Random Permutations\u200b y Durstenfeld en CACM-7\u200b (1964), a quienes Knuth cita en su libro The Art of Computer Programming\u200b y que describe como \"Algoritmo P\" (pags. 139-140 del Vol.2).  En la 'sabiduria popular' este algoritmo se conoce como el 'barajado del sombrero', ya que la descripcion que hicieron de el Fisher y Yates es la que se lleva a cabo habitualmente cuando, por ejemplo, se hace una rifa (ver los detalles mas abajo, en la descripcion del mismo).  Fue Durstenfeld quien primero hizo una transcripcion en la forma de algoritmo para usarse en un ordenador. La descripcion de Fisher y Yates exige el uso de 2 matrices (en los trabajos de campo, es simplemente anotar en dos partes de un papel, aunque bien podria reutilizarse borrando y rescribiendo en el mismo sitio), mientras que Durstenfeld usa la propia matriz para llevar a cabo todo el algoritmo, necesitando solo como memoria extra una variable temporal.  La forma mas simple de entenderlo es partir de la forma popular:  Se repiten estos 3 pasos, hasta que solo quede 1, en la linea de arriba sin tachar, entonces se toma directamente y se pasa a la de abajo.  Es un error comun pensar que la aleatoriedad de la lista depende del algoritmo de barajado (siempre que sea correcto, que para cada posicion sea elegida una posicion al azar), cuando en realidad depende del algoritmo de aleatoriedad/pseudoaleatoriedad. La lista simplemente es reordenada de otra manera: siempre contiene los mismos valores, solo cambian sus posiciones, que son dependientes del algoritmo de aleatoriedad (que no se esta implementando, en ningun caso). En cualquier caso, una vez construido el algoritmo puede o debe probarse su imparcialidad demostrando las desviaciones de probabilidad.  Esta es la descripcion del algoritmo de Durstenfeld. Debe notarse que el elemento que queda al final del recorrido (item-0) como entrada, es el primero en la salida, razon por la que no necesita ser intercambiado de posicion (es la misma).  Aunque el coste (en tiempo y memoria) sea mayor, el mismo algoritmo tendria el siguiente pseudocodigo resuelto con una estructura que permita inserciones y eliminaciones en posiciones arbitrarias:  Es interesante observar, en este caso, que los items al a\u00f1adirlos al final, lo hacen a la derecha del a\u00f1adido anterior, es decir tal como describieron Fisher y Yates. Si se prefiere conservar un a\u00f1adido a la izquierda del previo a\u00f1adido (tal como en el caso mostrado del array), debe cambiarse la linea de a\u00f1adido por la siguiente:  Puesto que el bucle hace un recorrido regresivo, k vale justo 1 mas de la posicion limite pedida a la funcion Random, y se a\u00f1ade justo antes de que sea eliminado el elemento elegido, por tanto k ira siendo siempre un valor menor en cada ciclo, por lo que en efecto se iria colocando a la izquierda del previo. Esto se puede ver mas claro, en los ejemplos paso a paso, en la seccion correspondiente (mas abajo).  Fue publicado en 1986 en IPL-22,\u200b por Sattolo en Information Processing Letters\u200b y tiene algunas particularidades que se describen:  Hay algunas variaciones que pueden ser aplicadas a todas las implementaciones comentadas hasta el momento, bien que pueda variar el codigo exacto que deba a\u00f1adirse o modificarse en cada una. Implementar estas variaciones, implica a\u00f1adir parametros en las funciones para que al invocarlas puede elegirse el valor necesario para que cumpla la mision encomendada.  Supongamos una baraja de 52 cartas y supongamos que queremos que cada 13 cartas que baraje, se salte 3. Siendo el array de 0 a 51 elementos, en las posiciones k modulo 13 (que son 0, 13, 26 y 39) al llegar a dichas posiciones aumentara k en 3 unidades, que en efecto tiene como consecuencia no barajar 3 elementos seguidos, como son 4 veces (4 grupos de 13) hay 12 barajados menos. Tambien pueden especificarse los parametros como los que se omiten y los que se barajan (en el ejemplo, serian Barajan=10 y se Omiten=3) y la suma de ambos seria el equivalente al grupo, asi se evita la necesidad de comprobar que salto sea menor que grupo.  Debe notarse que esta variacion no evita que los valores en esas posiciones se mantenga en su mismo sitio (pueden salir elegidas por la funcion Random en cualquier otro instante del recorrido del bucle), pero si tiene por efecto, que 12 elementos de los 52 no sean barajados, lo que por supuesto tendra incidencia, en una cierta similitud entre la serie a la salida y la serie de entrada.    Imaginese un mazo de 28 cartas, y bloques de 4 cartas, lo que nos daria 7 montones y seria equivalente a barajar una serie de 7 elementos (7 * 4 = 28), si los montones fueran de 6 cartas el ultimo monton solo tendria 4 cartas, luego cuando saliera este solo se intercambiarian 4 cartas con el bloque que se intercambia. Se pone una serie de resultados de 28 elementos, con un bloque de 4, para darse cuenta como el afecta a un barajado de esta manera. Observeses como las tuplas de 4 elementos (se ha coloreado un par de ellas), no cambian entre si el orden (de sus elementos):  Si el bloque produce grupos exactos entonces no generara todas las permutaciones posibles, de hecho ni aunque haya bloques no exactos, no generara todas las permutaciones posibles. Por ejemplo para una serie de 7 elementos (que permite 5040 permutaciones distintas de la serie) con un bloque de 2 genera 144 permutaciones, con un bloque de 3 genera solo 12 permutaciones, con un bloque de 4, 5 y 6 solo hay 2 permutaciones posibles (ya que solo ofrece 2 grupos). Por ello hay que considerar que el numero de permutaciones obedece mas al numero de grupos y los elementos en el ultimo grupo, que a la cantidad de elementos. Por ultimo, se\u00f1alar que si el tama\u00f1o de bloque es 1, equivale a barajar todos los items, cual si no se usara dicha funcionalidad. Hay que considerar que la entrada y la salida varian poco entre si, pero dado que tras la salida hay un nuevo juego, la siguiente entrada tendra una permutacion muy distinta de la salida previa. Si el caso es que se desea que haya una mayor posibilidad de permutaciones, podria barajarse el ultimo bloque (que antes estaba en otra posicion y se intercambio con el ultimo), de modo que en sucesivas veces cuando sea cambiado por el bloque en otra posicion, ira generando una mayor cantidad de permutaciones aunque varien poco de una a otra en el tiempo. Esto puede ir especificado con otro parametro o quedar fijo en la variacion del algoritmo. El pseudocodigo seria el siguiente y se colocaria justos donde aparece esta linea:  Fijese en las siguientes salidas como es barajado siempre el bloque que se intercambio a la ultima posicion y como desde entonces ese bloque se traslada asi (con ese nuevo orden entre sus elementos) a la siguiente entrada (sin cambios tras la salida). Para estudiar el caso, aqui la salida de una serie es la entrada de la siguiente, caso que se supone que no sera cierto una vez se traslade a una aplicacion real (que tras un barajado habra un juego tal que acaben sus elementos en otro orden). Se marca en azul el bloque que sera el ultimo en la siguiente etapa, y se observa de rojo ese bloque en la siguiente fase, posicionado el ultimo y ya barajado. Ese bloque asi barajado mantiene su nuevo orden (interno) en lo sucesivo.  Como se puede apreciar, esta variacion tambien permite generar permutaciones aptas para cuando se desea generar jugadas interesantes y entretenidas en juegos que lo necesitan, y en cambio no es aceptable en juegos con apuestas.  Como ya se ha dicho en el encabezado del articulo, es el algoritmo que se usa tipicamente para barajar en los juegos de azar (o alguna de sus variantes).  Se usa tambien en los modelos estadisticos cuando se requiere simular un origen de datos aleatorio. Un caso practico, para probar la eficiencia de los algoritmos de ordenamiento. hacer simulaciones del clima, etc...  Tambien se usa en sistemas y programas donde se desea usar una sola vez cada elemento de la serie pero de una forma aleatoria, sin recurrir a una estructura adicional de almacenamiento. Se provee un ejemplo al detalle, sobre las listas de reproduccion de canciones.  El presente algoritmo, resuelve tambien este caso, sin la necesidad de recurrir a una segunda estructura donde mover los elementos retirados de la primera.  Imaginemos el caso mas corriente, una lista de canciones de la que se desea reproducir cada cancion una sola vez, pero que lo hagan en orden aleatorio. Inicialmente se tendra una lista con las rutas de las canciones, lista que conviene dejar intacta (no intercambiar sus elementos). Se usa un array cuyo contenido (inicialmente) son los indices de las canciones en la lista. Si el orden es aleatorio, se manda barajar el array, si el orden solicitado es el original, se reasigna a cada indice el valor del indice de la lista (el orden natural correlativo). La reproduccion finalmente usara como indice, el valor de dicho array. En vez de invocar: Reproducir(Ruta(k)), se invocara: Reproducir(Ruta(Array(k))), asi la lista original, no necesita ser tocada ni duplicada para mantener el orden original (es mas rapido en memoria asignar valores numericos, que textos).  Se iran exponiendo ejemplos paso a paso de las implementaciones mas relevantes, sobre una serie de 7 elementos, en tablas con columnas, cuyo significado son:  Para el algoritmo descrito en el pseudocodigo (Durstenfeld). Notese las siguientes cuestiones para este ejemplo:  Para el algoritmo descrito en el pseudocodigo como variante de la implementacion de Durstenfeld, posicionando los elementos a la derecha del previo, tal como describieron Fisher-Yates. Notese las siguientes cuestiones para este ejemplo:  Para la descripcion del algoritmo original, empleando para ello, lapiz y papel, es decir tachando de la lista en una linea y escribiendo los resultados en una nueva linea, que sera la lista resultante. Esto supone simular 2 estructuras, una que contiene la lista original de la que se extraen y otra donde se insertan. Notese las siguientes cuestiones para este ejemplo:  Para la descripcion del algoritmo Sattolo, variante de Durstenfeld. Notese las siguientes cuestiones para este ejemplo:  En la siguiente tabla se muestran los resultados de una serie de llamadas a la funcion, para apreciar como en efecto, no se repiten (observar verticalmente la columna resultados, nunca un elemento en la misma posicion en la siguiente llamada). ","snippet":"El algoritmo de Fisher-Yates (o alguna variante del mismo) es el que se usa tipicamente para barajar en los juegos de azar.  Tambien es el algoritmo que permite recorrer toda una seleccion (por ejempl","enlaces_salientes":["Algoritmo_de_Fisher-Yates","Algoritmo_de_Fisher-Yates","Algoritmo_de_Fisher-Yates","Ronald_Fisher","Frank_Yates","Donald_Knuth","The_Art_of_Computer_Programming","Sesgo_muestral","Pruebas_de_aleatoriedad","Tiempo_de_ejecuci%C3%B3n","Pseudoc%C3%B3digo","Estructura_de_datos","%C3%81rbol_(inform%C3%A1tica)#Operaciones_de_\u00e1rboles._Representaci\u00f3n","Conjunto_(programaci%C3%B3n)","Lista_(inform%C3%A1tica)","%C3%81rbol_(inform%C3%A1tica)","Bucle_(programaci%C3%B3n)","Aleatoriedad","Combinatoria","Tute_pierde_en_medio","Congruencia_(teor%C3%ADa_de_n%C3%BAmeros)","Memoria_de_acceso_aleatorio","Tuplas","Aleatoriedad","Entrop%C3%ADa_(informaci%C3%B3n)","N%C3%BAmero_aleatorio","Pruebas_de_aleatoriedad","Secuencia_pseudoaleatoria","Teor%C3%ADa_de_probabilidad","Variable_aleatoria","Ronald_A._Fisher","Frank_Yates","OCLC","Calyampudi_Radhakrishna_Rao","Stanford_University_Press","ISBN","Identificador_de_objeto_digital","ISBN","Identificador_de_objeto_digital","Elsevier","Control_de_autoridades"]}
